dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/util/MathUtils,92,182,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,1.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,208,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,1.0,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,95,"        return addAndCheck(a, b, ""overflow: add"");",0,0,0,0,2,1,3,0,2,4,42,4,0.5,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,179,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.5,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,181,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.5,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,184,"        long result = Math.round(binomialCoefficientDouble(n, k));",1,0,0,0,4,1,5,0,1,5,58,5,0.5,1,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,185,        if (result == Long.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,31,4,0.5,1,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,111,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,113,"            ret = addAndCheck(b, a, msg);",1,0,0,0,2,0,4,0,2,4,29,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,117,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,134,                if (a <= Long.MAX_VALUE - b) {,4,2,0,1,3,1,0,0,0,5,30,8,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,135,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,141,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,170,        if (n < k) {,2,1,0,1,3,1,0,0,0,5,12,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,174,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,178,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,236,"        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",0,1,0,0,6,1,7,0,1,5,64,5,0.11111,1,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,286,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,289,        for (int i = k + 1; i <= n; i++) {,5,2,0,1,3,2,0,0,1,6,34,4,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,290,            logSum += Math.log((double)i);,2,0,0,2,4,1,2,0,1,6,30,6,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,294,        for (int i = 2; i <= n - k; i++) {,5,2,0,1,3,2,0,0,1,6,34,4,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,295,            logSum -= Math.log((double)i);,2,0,0,2,4,1,2,0,1,6,30,6,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,298,        return logSum;      ,1,0,0,0,0,1,0,0,0,2,14,4,0.06667,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,269,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,258,        if (n < k) {,2,1,0,1,3,1,0,0,0,5,12,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,262,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,266,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,350,    private static final long[] factorials = new long[] ,1,0,0,0,4,6,0,0,3,4,51,2,0.00495,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,63,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,1,1
defect4j,math,org/apache/commons/math/util/MathUtils,92,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,77,        long s = (long)x + (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,78,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,79,"            throw new ArithmeticException(""overflow: add"");",0,0,0,1,2,2,0,1,2,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,81,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,118,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,120,                    if (Long.MIN_VALUE - b <= a) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,121,                        ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,123,                        throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,127,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,137,                    throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,171,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,175,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,186,            throw new ArithmeticException(,0,0,0,0,1,2,0,1,1,4,30,6,0.0,1,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,259,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,263,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,267,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,270,            return Math.log((double) n);,1,0,0,2,4,2,2,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,309,        return (Math.exp(x) + Math.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,321,        return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);,2,3,0,3,8,1,6,0,0,6,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,335,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,336,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,338,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,339,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,341,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,342,"            if (!equals(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,343,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,346,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,379,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,380,"            throw new IllegalArgumentException(""must have n >= 0 for n!"");",0,0,0,1,2,3,0,1,2,5,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,382,        if (n > 20) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,383,            throw new ArithmeticException(,0,0,0,0,1,2,0,1,1,4,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,386,        return factorials[n];,0,0,1,0,2,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,410,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,411,"            throw new IllegalArgumentException(""must have n >= 0 for n!"");",0,0,0,1,2,3,0,1,2,5,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,413,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,414,            return factorial(n);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,416,        return Math.floor(Math.exp(factorialLog(n)) + 0.5);,0,1,0,3,6,1,6,0,1,6,51,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,433,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,434,"            throw new IllegalArgumentException(""must have n > 0 for n!"");",0,0,0,1,2,3,0,1,2,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,436,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,437,            return Math.log(factorial(n));,0,0,0,2,4,1,4,0,1,5,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,439,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,440,        for (int i = 2; i <= n; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,441,            logSum += Math.log((double)i);,2,0,0,2,4,1,2,0,1,6,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,443,        return logSum;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,460,        if ((u == 0) || (v == 0)) {,2,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,461,            return (Math.abs(u) + Math.abs(v));,0,1,0,2,6,1,6,0,0,5,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,468,        if (u > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,469,            u = -u;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,471,        if (v > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,472,            v = -v;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,475,        int k = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,476,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,3,7,0,2,7,2,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,478,            u /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,479,            v /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,480,            k++; // cast out twos.,1,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,482,        if (k == 31) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,483,"            throw new ArithmeticException(""overflow: gcd is 2^31"");",0,0,0,1,2,2,0,1,2,5,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,487,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,4,3,0,2,6,1,0,0,1,6,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,493,            while ((t & 1) == 0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,494,                t /= 2; // cast out twos,1,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,497,            if (t > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,498,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,500,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,503,            t = (v - u) / 2;,3,2,0,1,2,0,0,0,1,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,506,        } while (t != 0);,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,507,        return -u * (1 << k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,517,        return new Double(value).hashCode();,1,0,0,1,4,2,1,1,1,7,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,528,        return Arrays.hashCode(value);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,539,        return (x >= ZB) ? PB : NB;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,551,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,552,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,554,        return (x >= 0.0) ? 1.0 : -1.0;,1,1,0,1,2,1,0,0,1,6,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,565,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,566,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,568,        return (x >= 0.0F) ? 1.0F : -1.0F;,1,1,0,1,2,1,0,0,1,6,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,578,        return (x >= 0) ? 1 : -1;,1,1,0,1,2,1,0,0,1,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,588,        return (x >= 0L) ? 1L : -1L;,1,1,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,599,        return (x >= ZS) ? PS : NS;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,612,"        return Math.abs(mulAndCheck(a / gcd(a, b), b));",1,1,0,0,6,1,7,0,2,6,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,632,        return Math.log(x)/Math.log(base);,0,1,0,1,4,1,6,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,646,        long m = ((long)x) * ((long)y);,3,1,0,2,8,3,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,647,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,648,"            throw new ArithmeticException(""overflow: mul"");",0,0,0,1,2,2,0,1,2,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,650,        return (int)m;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,665,"        String msg = ""overflow: multiply"";",1,0,0,0,0,0,0,1,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,666,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,668,"            ret = mulAndCheck(b, a);",1,0,0,0,2,0,3,0,2,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,670,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,671,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,673,                    if (a >= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,674,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,676,                        throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,678,                } else if (b > 0) {,1,1,0,1,4,2,0,0,0,5,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,680,                    if (Long.MIN_VALUE / b <= a) {,4,2,0,1,3,1,0,0,0,5,30,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,681,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,683,                        throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,688,                    ret = 0;,1,0,0,0,0,0,0,0,1,2,8,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,690,            } else if (a > 0) {,1,1,0,1,4,2,0,0,0,5,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,695,                if (a <= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,696,                    ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,698,                    throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,702,                ret = 0;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,705,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,728,        if (Double.isNaN(d) || Double.isInfinite(d)) {,0,1,0,2,7,1,6,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,729,                return d;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,730,        } else if (d == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,731,                return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,5,1,0,1,2,1,0,0,1,6,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,737,        long bits     = Double.doubleToLongBits(d);,1,0,0,1,2,1,3,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,738,        long sign     = bits & 0x8000000000000000L;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,739,        long exponent = bits & 0x7ff0000000000000L;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,740,        long mantissa = bits & 0x000fffffffffffffL;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,742,        if (d * (direction - d) >= 0) {,3,3,0,2,5,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,744,                if (mantissa == 0x000fffffffffffffL) {,1,1,0,1,3,1,0,0,0,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,745,                        return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,748,                        return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,753,                if (mantissa == 0L) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,754,                        return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,758,                        return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,777,        if ((d == 0) || Double.isNaN(d) || Double.isInfinite(d)) {,1,2,0,2,9,1,6,0,0,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,778,            return d;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,782,        final long bits     = Double.doubleToLongBits(d);,1,0,0,1,2,2,3,0,1,6,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,783,        final long exponent = bits & 0x7ff0000000000000L;,2,1,0,0,0,2,0,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,784,        final long rest     = bits & 0x800fffffffffffffL;,2,1,0,0,0,2,0,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,787,        final long newBits = rest | (exponent + (((long) scaleFactor) << 52));,4,3,0,4,8,3,0,0,1,6,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,788,        return Double.longBitsToDouble(newBits);,0,0,0,1,2,1,3,0,0,4,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,812,         return a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI);,7,5,0,2,4,1,2,0,0,6,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,825,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,842,            return (new BigDecimal,0,0,0,0,1,2,0,1,1,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,846,        } catch (NumberFormatException ex) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,847,            if (Double.isInfinite(x)) {,0,0,0,2,5,1,3,0,0,4,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,848,                return x;          ,1,0,0,0,0,1,0,0,0,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,850,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,865,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,881,        float sign = indicator(x);,1,0,0,1,2,1,2,0,1,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,882,"        float factor = (float)Math.pow(10.0f, scale) * sign;",2,1,0,1,4,2,3,0,0,6,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,883,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",3,2,0,1,4,2,3,0,1,7,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,900,        switch (roundingMethod) {,1,0,0,1,3,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,902,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,903,"                unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,69,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,905,"                unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,68,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,907,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,909,"            unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,69,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,910,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,912,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,913,"                unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,68,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,915,"                unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,69,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,917,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,919,"            unscaled = nextAfter(unscaled, Double.NEGATIVE_INFINITY);",3,0,0,0,2,0,2,0,2,4,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,920,            double fraction = unscaled - Math.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,921,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,922,                unscaled = Math.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,924,                unscaled = Math.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,926,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,929,            double fraction = unscaled - Math.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,930,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,931,                unscaled = Math.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,932,            } else if (fraction < 0.5) {,1,1,0,1,4,2,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,933,                unscaled = Math.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,936,                if (Math.floor(unscaled) / 2.0 == Math.floor(Math,0,3,0,1,4,1,6,0,0,5,49,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,938,                    unscaled = Math.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,940,                    unscaled = Math.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,31,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,943,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,946,"            unscaled = nextAfter(unscaled, Double.POSITIVE_INFINITY);",3,0,0,0,2,0,2,0,2,4,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,947,            double fraction = unscaled - Math.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,948,            if (fraction >= 0.5) {,1,1,0,1,3,1,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,949,                unscaled = Math.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,951,                unscaled = Math.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,953,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,956,            if (unscaled != Math.floor(unscaled)) {,1,1,0,2,5,1,3,0,0,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,957,"                throw new ArithmeticException(""Inexact result from rounding"");",0,0,0,1,2,2,0,1,2,5,62,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,961,"            unscaled = Math.ceil(nextAfter(unscaled,  Double.POSITIVE_INFINITY));",3,0,0,0,4,0,4,0,2,4,69,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,962,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,964,"            throw new IllegalArgumentException(""Invalid rounding method."");",0,0,0,1,2,2,0,1,2,5,63,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,966,        return unscaled;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,980,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,996,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,997,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,999,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,2,2,0,1,4,1,0,0,1,6,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1014,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1015,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1017,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,2,2,0,1,4,1,0,0,1,6,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1031,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,2,2,0,1,4,1,0,0,1,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1045,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,2,2,0,1,4,1,0,0,1,6,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1060,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1071,        return (Math.exp(x) - Math.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1085,        long s = (long)x - (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1086,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1087,"            throw new ArithmeticException(""overflow: subtract"");",0,0,0,1,2,2,0,1,2,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1089,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1104,"        String msg = ""overflow: subtract"";",1,0,0,0,0,0,0,1,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1105,        if (b == Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1106,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1107,                ret = a - b;,3,1,0,0,0,0,0,0,1,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1109,                throw new ArithmeticException(msg);,1,0,0,1,2,2,0,1,1,6,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1113,"            ret = addAndCheck(a, -b, msg);",2,0,0,0,2,0,3,0,3,4,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,92,1115,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
