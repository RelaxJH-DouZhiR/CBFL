dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,239,                    return x1;,1,0,0,0,0,1,0,0,0,2,10,9,0.2,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,187,                    if (x == x1) {,2,1,0,1,3,1,0,0,0,5,14,9,0.16667,1,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,43,"        super(DEFAULT_ABSOLUTE_ACCURACY, Method.REGULA_FALSI);",3,0,0,0,2,1,0,0,1,4,54,3,0.125,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,44,    },0,0,0,0,1,0,0,0,0,1,1,2,0.125,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,124,"        return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE);",2,0,0,0,2,1,6,0,1,5,73,4,0.08333,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,237,                switch (allowed) {,1,0,0,1,3,1,0,0,0,4,18,8,0.05,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,195,"        return solve(maxEval, f, min, max, min + 0.5 * (max - min));",3,3,0,1,4,1,5,0,1,7,60,4,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,205,                switch (allowed) {,1,0,0,1,3,1,0,0,0,4,18,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,178,                switch (method) {,1,0,0,1,3,1,0,0,0,4,17,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,171,            if (f1 * fx < 0) {,2,2,0,1,3,1,0,0,0,5,18,6,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,174,                x0 = x1;,2,0,0,0,0,0,0,0,1,2,8,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,175,                f0 = f1;,2,0,0,0,0,0,0,0,1,2,8,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,176,                inverted = !inverted;,2,0,0,0,0,0,0,0,2,2,21,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,178,                switch (method) {,1,0,0,1,3,1,0,0,0,4,17,8,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,198,            x1 = x;,2,0,0,0,0,0,0,0,1,2,7,6,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,199,            f1 = fx;,2,0,0,0,0,0,0,0,1,2,8,6,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,204,            if (FastMath.abs(f1) <= ftol) {,1,1,0,2,5,1,3,0,0,6,31,6,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,235,"            if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),",3,3,0,1,6,1,7,0,0,6,65,6,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,252,        },0,0,0,0,1,0,0,0,0,1,1,2,0.04762,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,68,        super(absoluteAccuracy);,1,0,0,1,2,1,0,0,1,5,24,3,0.04167,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,69,        this.allowed = AllowedSolution.ANY_SIDE;,3,0,0,0,0,1,0,0,1,3,40,4,0.04167,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,70,        this.method = method;,2,0,0,0,0,1,0,0,1,3,21,4,0.04167,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04167,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,149,        final double ftol = getFunctionValueAccuracy();,1,0,0,1,2,2,1,0,2,6,47,4,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,150,        final double atol = getAbsoluteAccuracy();,1,0,0,1,2,2,1,0,2,6,42,4,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,151,        final double rtol = getRelativeAccuracy();,1,0,0,1,2,2,1,0,2,6,42,4,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,155,        boolean inverted = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,160,            final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));,7,5,0,3,8,2,0,0,1,6,53,6,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,161,            final double fx = computeObjectiveValue(x);,1,0,0,1,2,2,2,0,2,6,43,6,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,166,            if (fx == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.04,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,128,        return absoluteAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,0.03704,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,134,        return relativeAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,0.03704,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,140,        return functionValueAccuracy;,1,0,0,0,0,1,0,0,0,2,29,4,0.03704,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,283,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03704,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,380,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03704,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3410,        return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0,4,2,0,1,4,1,0,0,1,6,61,5,0.03704,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3925,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.03704,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3928,        if (a < b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.03704,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3929,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.03704,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,146,"        verifyBracketing(x0, x1);",0,0,0,0,2,0,3,0,1,3,25,4,0.03571,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,282,"        UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);",0,0,0,0,2,0,5,0,0,2,67,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,116,        this.allowed = allowedSolution;,2,0,0,0,0,1,0,0,1,3,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,117,"        return super.solve(maxEval, f, min, max, startValue);",6,0,0,0,2,2,0,0,0,3,53,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,130,        double x0 = getMin();,1,0,0,1,2,1,1,0,1,6,21,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,131,        double x1 = getMax();,1,0,0,1,2,1,1,0,1,6,21,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,132,        double f0 = computeObjectiveValue(x0);,1,0,0,1,2,1,2,0,1,6,38,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,133,        double f1 = computeObjectiveValue(x1);,1,0,0,1,2,1,2,0,1,6,38,5,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,138,        if (f0 == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,141,        if (f1 == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,41,public enum AllowedSolution {,1,0,0,0,1,2,0,0,1,4,29,1,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,48,"    ANY_SIDE,",1,0,0,0,0,0,0,0,0,1,9,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,55,"    LEFT_SIDE,",1,0,0,0,0,0,0,0,0,1,10,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,62,"    RIGHT_SIDE,",1,0,0,0,0,0,0,0,0,1,11,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,68,"    BELOW_SIDE,",1,0,0,0,0,0,0,0,0,1,11,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AllowedSolution,50,74,    ABOVE_SIDE;,1,0,0,0,0,0,0,0,0,1,11,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,256,    protected enum Method {,1,0,0,0,1,2,0,0,1,4,23,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,262,"        REGULA_FALSI,",1,0,0,0,0,0,0,0,0,1,13,3,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,265,"        ILLINOIS,",1,0,0,0,0,0,0,0,0,1,9,3,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,268,        PEGASUS;,1,0,0,0,0,0,0,0,0,1,8,3,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,305,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,308,        final double fLo = function.value(lower);,1,0,0,1,2,2,3,0,1,6,41,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,309,        final double fHi = function.value(upper);,1,0,0,1,2,2,3,0,1,6,41,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,310,        return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);,4,7,0,1,4,1,0,0,0,5,56,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,336,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,340,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,371,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,374,"        verifyInterval(lower, upper);",0,0,0,0,2,0,3,0,1,3,29,4,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,375,"        if (!isBracketing(function, lower, upper)) {",0,0,0,0,5,1,4,0,2,4,44,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,80,    private static final double EXP_INT_TABLE_A[] = new double[1500];,1,0,0,0,4,6,0,0,3,4,65,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,85,    private static final double EXP_INT_TABLE_B[] = new double[1500];,1,0,0,0,4,6,0,0,3,4,65,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,90,    private static final double EXP_FRAC_TABLE_A[] = new double[1025];,1,0,0,0,4,6,0,0,3,4,66,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,95,    private static final double EXP_FRAC_TABLE_B[] = new double[1025];,1,0,0,0,4,6,0,0,3,4,66,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,98,    private static final double FACT[] = new double[20];,1,0,0,0,4,6,0,0,3,4,52,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,101,    private static final double LN_MANT[][] = new double[1024][];,1,0,0,0,8,6,0,0,3,4,61,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,110,    private static final double LN_SPLIT_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,49,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,130,    private static final double LN_QUICK_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,49,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,143,    private static final double LN_HI_PREC_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,51,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,153,    private static final double SINE_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,60,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,156,    private static final double SINE_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,60,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,159,    private static final double COSINE_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,62,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,162,    private static final double COSINE_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,62,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,165,    private static final double TANGENT_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,63,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,168,    private static final double TANGENT_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,63,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,171,    private static final long RECIP_2PI[] = new long[] {,1,0,0,0,5,6,0,0,3,4,52,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,192,    private static final long PI_O_4_BITS[] = new long[] {,1,0,0,0,5,6,0,0,3,4,54,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,200,"    private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",1,0,0,0,4,4,0,0,3,4,126,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,203,"    private static final double CBRTTWO[] = { 0.6299605249474366,",1,0,0,0,3,4,0,0,3,4,61,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,233,        FACT[0] = 1.0;,0,0,1,0,2,0,0,0,1,3,14,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,234,        for (i = 1; i < FACT.length; i++) {,5,1,0,1,3,1,0,0,2,6,35,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,235,            FACT[i] = FACT[i-1] * i;,2,2,1,0,4,0,0,0,1,5,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,238,        double tmp[] = new double[2];,1,0,0,0,4,3,0,0,0,3,29,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,239,        double recip[] = new double[2];,1,0,0,0,4,3,0,0,0,3,31,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,242,        for (i = 0; i < 750; i++) {,3,1,0,1,3,1,0,0,2,6,27,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,243,"            expint(i, tmp);",0,0,0,0,2,0,3,0,1,3,15,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,244,            EXP_INT_TABLE_A[i+750] = tmp[0];,1,1,1,0,4,0,0,0,1,5,32,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,245,            EXP_INT_TABLE_B[i+750] = tmp[1];,1,1,1,0,4,0,0,0,1,5,32,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,247,            if (i != 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,249,"                splitReciprocal(tmp, recip);",0,0,0,0,2,0,3,0,1,3,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,250,                EXP_INT_TABLE_A[750-i] = recip[0];,1,1,1,0,4,0,0,0,1,5,34,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,251,                EXP_INT_TABLE_B[750-i] = recip[1];,1,1,1,0,4,0,0,0,1,5,34,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,256,        for (i = 0; i < EXP_FRAC_TABLE_A.length; i++) {,5,1,0,1,3,1,0,0,2,6,47,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,257,"            slowexp(i/1024.0, tmp);",1,1,0,0,2,0,2,0,1,5,23,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,258,            EXP_FRAC_TABLE_A[i] = tmp[0];,0,0,1,0,4,0,0,0,1,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,259,            EXP_FRAC_TABLE_B[i] = tmp[1];,0,0,1,0,4,0,0,0,1,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,263,        for (i = 0; i < LN_MANT.length; i++) {,5,1,0,1,3,1,0,0,2,6,38,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,264,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,2,2,0,4,8,2,2,0,0,6,79,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,265,            LN_MANT[i] = slowLog(d);,0,0,1,1,4,0,2,0,2,5,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,269,        buildSinCosTables();,0,0,0,1,2,0,1,0,1,4,20,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,270,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1012,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1013,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1014,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1015,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1016,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1017,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1019,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1020,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1021,            ys[0] = as[0];,0,0,1,0,4,0,0,0,1,3,14,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1022,            ys[1] = as[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1024,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1025,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1027,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1028,            ys[0] = as[0];,0,0,1,0,4,0,0,0,1,3,14,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1029,            ys[1] = as[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1032,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1033,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1034,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1037,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1046,        if (d < 8e298 && d > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1047,            final double a = d * HEX_40000000;,3,1,0,0,0,2,0,0,1,4,34,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1048,            split[0] = (d + a) - a;,3,2,1,1,4,0,0,0,1,6,23,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1049,            split[1] = d - split[0];,1,1,1,0,4,0,0,0,1,5,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1050,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1055,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1062,        final double c = a[0] + a[1];,1,1,1,0,4,2,0,0,1,6,29,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1063,        final double d = -(c - a[0] - a[1]);,2,1,1,1,6,2,0,0,2,7,36,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1065,        if (c < 8e298 && c > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1066,            double z = c * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1067,            a[0] = (c + z) - z;,3,2,1,1,4,0,0,0,1,6,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1068,            a[1] = c - a[0] + d;,2,2,1,0,4,0,0,0,1,5,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1069,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1070,            double z = c * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,42,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1071,            a[0] = (c + z - c) * HEX_40000000;,4,3,1,1,4,0,0,0,1,6,34,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1072,            a[1] = c - a[0] + d;,2,2,1,0,4,0,0,0,1,5,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1074,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1082,        ans[0] = a[0] * b[0];,0,1,1,0,6,0,0,0,1,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1083,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,0,5,1,0,14,0,0,0,1,4,49,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1086,        resplit(ans);,0,0,0,1,2,0,2,0,1,4,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1087,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1095,        ans[0] = a[0] + b[0];,0,1,1,0,6,0,0,0,1,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1096,        ans[1] = a[1] + b[1];,0,1,1,0,6,0,0,0,1,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1098,        resplit(ans);,0,0,0,1,2,0,2,0,1,4,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1099,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1120,        final double b = 1.0/4194304.0;,1,1,0,0,0,2,0,0,1,4,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1121,        final double a = 1.0 - b;,2,1,0,0,0,2,0,0,1,4,25,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1123,        if (in[0] == 0.0) {,0,1,1,1,5,1,0,0,0,5,19,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1128,        result[0] = a / in[0];,1,1,1,0,4,0,0,0,1,5,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1129,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,2,7,1,1,18,0,0,0,1,6,60,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1131,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,1,9,2,0,0,0,5,63,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1132,            result[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1136,        resplit(result);,0,0,0,1,2,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1138,        for (int i = 0; i < 2; i++) {,3,1,0,1,3,2,0,0,1,6,29,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1140,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,1,6,1,0,8,1,0,0,0,5,58,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1143,            err = err * (result[0] + result[1]);,2,2,1,1,6,0,0,0,1,6,36,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1145,            result[1] += err;,1,0,1,0,2,0,0,0,1,4,17,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1147,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1155,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1156,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1157,        final double zs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1160,"        split(a[0], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1161,"        split(b[0], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1162,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1164,        result[0] = zs[0];,0,0,1,0,4,0,0,0,1,3,18,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1165,        result[1] = zs[1];,0,0,1,0,4,0,0,0,1,3,18,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1168,"        split(b[1], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1169,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1171,        double tmp = result[0] + zs[0];,1,1,1,0,4,1,0,0,0,5,31,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1172,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1173,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1174,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1175,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1176,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1179,"        split(a[1], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1180,"        split(b[0], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1181,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1183,        tmp = result[0] + zs[0];,1,1,1,0,4,0,0,0,1,5,24,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1184,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1185,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1186,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1187,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1188,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1191,"        split(a[1], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1192,"        split(b[1], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1193,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1195,        tmp = result[0] + zs[0];,1,1,1,0,4,0,0,0,1,5,24,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1196,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1197,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1198,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1199,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1200,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1201,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1210,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1211,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1212,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1221,        xs[0] = 2.718281828459045;,0,0,1,0,2,0,0,0,1,3,26,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1222,        xs[1] = 1.4456468917292502E-16;,0,0,1,0,2,0,0,0,1,3,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1224,"        split(1.0, ys);",0,0,0,0,2,0,2,0,1,3,15,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1226,        while (p > 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1227,            if ((p & 1) != 0) {,1,2,0,2,5,1,0,0,0,5,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1228,"                quadMult(ys, xs, as);",0,0,0,0,2,0,4,0,1,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1229,                ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1232,"            quadMult(xs, xs, as);",0,0,0,0,2,0,4,0,1,3,21,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1233,            xs[0] = as[0]; xs[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1235,            p >>= 1;,1,0,0,0,0,0,0,0,1,2,8,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1238,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1239,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1240,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1242,            resplit(result);,0,0,0,1,2,0,2,0,1,4,16,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1245,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1743,        double x[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1744,        double x2[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1745,        double y[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1746,        double a[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1748,"        split(xi, x);",0,0,0,0,2,0,3,0,1,3,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1751,        x[0] += 1.0;,0,0,1,0,2,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1752,        resplit(x);,0,0,0,1,2,0,2,0,1,4,11,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1753,"        splitReciprocal(x, a);",0,0,0,0,2,0,3,0,1,3,22,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1754,        x[0] -= 2.0;,0,0,1,0,2,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1755,        resplit(x);,0,0,0,1,2,0,2,0,1,4,11,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1756,"        splitMult(x, a, y);",0,0,0,0,2,0,4,0,1,3,19,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1757,        x[0] = y[0];,0,0,1,0,4,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1758,        x[1] = y[1];,0,0,1,0,4,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1761,"        splitMult(x, x, x2);",0,0,0,0,2,0,4,0,1,3,20,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1767,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,2,1,1,0,6,0,0,0,1,5,48,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1768,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,2,1,1,0,6,0,0,0,1,5,48,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1770,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,51,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1771,"            splitMult(y, x2, a);",0,0,0,0,2,0,4,0,1,3,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1772,            y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1773,            y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1774,"            splitAdd(y, LN_SPLIT_COEF[i], a);",0,0,1,0,4,0,3,0,1,4,33,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1775,            y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1776,            y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1779,"        splitMult(y, x, a);",0,0,0,0,2,0,4,0,1,3,19,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1780,        y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1781,        y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1783,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1793,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1794,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1795,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1796,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1797,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1798,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1800,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1801,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1802,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1804,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1805,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1808,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1809,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1811,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1812,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1813,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1816,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1817,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1820,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1821,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1822,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1825,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1836,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1837,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1838,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1839,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1840,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1841,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1843,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1844,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1845,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1847,            if ( (i & 1) != 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1848,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1851,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1852,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1854,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1855,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1856,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1859,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1860,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1863,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1864,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1865,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1868,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1874,        final double result[] = new double[2];,1,0,0,0,4,4,0,0,1,4,38,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1877,        for (int i = 0; i < 7; i++) {,3,1,0,1,3,2,0,0,1,6,29,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1878,            double x = i / 8.0;,2,1,0,0,0,1,0,0,0,3,19,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1880,"            slowSin(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1881,            SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1882,            SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1884,"            slowCos(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1885,            COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1886,            COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1890,        for (int i = 7; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1891,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1892,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1893,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1894,            double bs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1895,            double temps[] = new double[2];,1,0,0,0,4,3,0,0,0,3,31,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1897,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1899,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1900,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1901,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1902,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1905,"                splitMult(xs, ys, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1906,                SINE_TABLE_A[i] = result[0] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1907,                SINE_TABLE_B[i] = result[1] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1910,"                splitMult(ys, ys, as);",0,0,0,0,2,0,4,0,1,3,22,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1911,"                splitMult(xs, xs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1912,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1913,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1914,"                splitAdd(as, temps, result);",0,0,0,0,2,0,4,0,1,3,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1915,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1916,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1918,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1919,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1920,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1921,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1922,                as[0] = SINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1923,                as[1] = SINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1924,                bs[0] = COSINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1925,                bs[1] = COSINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1928,"                splitMult(xs, bs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1929,"                splitMult(ys, as, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1930,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1931,                SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1932,                SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1935,"                splitMult(ys, bs, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1936,"                splitMult(xs, as, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1937,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1938,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1939,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1940,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1941,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1946,        for (int i = 0; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1947,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1948,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1949,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1951,            as[0] = COSINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,26,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1952,            as[1] = COSINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,26,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1954,"            splitReciprocal(as, ys);",0,0,0,0,2,0,3,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1956,            xs[0] = SINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1957,            xs[1] = SINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,24,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1959,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1961,            TANGENT_TABLE_A[i] = as[0];,0,0,1,0,4,0,0,0,1,3,27,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1962,            TANGENT_TABLE_B[i] = as[1];,0,0,1,0,4,0,0,0,1,3,27,6,0.03226,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1965,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03226,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,37,        super(absoluteAccuracy);,1,0,0,1,2,1,0,0,1,5,24,3,0.0303,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0303,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,65,"        this(DEFAULT_RELATIVE_ACCURACY,",1,0,0,0,1,1,0,0,0,3,31,4,0.0303,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0303,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,92,                                               final double functionValueAccuracy) {,1,0,0,0,2,2,0,0,1,4,37,3,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,49,    private final Incrementor evaluations = new Incrementor();,1,0,0,1,2,3,0,2,3,6,58,2,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,93,        this.absoluteAccuracy = absoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,41,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,94,        this.relativeAccuracy = relativeAccuracy;,2,0,0,0,0,1,0,0,1,3,41,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,95,        this.functionValueAccuracy = functionValueAccuracy;,2,0,0,0,0,1,0,0,1,3,51,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,96,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,110,        return searchMin;,1,0,0,0,0,1,0,0,0,2,17,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,116,        return searchMax;,1,0,0,0,0,1,0,0,0,2,17,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,153,        incrementEvaluationCount();,0,0,0,1,2,0,1,0,1,4,27,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,154,        return function.value(point);,0,0,0,1,2,1,3,0,0,4,29,5,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,173,        MathUtils.checkNotNull(f);,0,0,0,1,2,0,3,0,0,3,26,5,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,176,        searchMin = min;,2,0,0,0,0,0,0,0,1,2,16,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,177,        searchMax = max;,2,0,0,0,0,0,0,0,1,2,16,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,178,        searchStart = startValue;,2,0,0,0,0,0,0,0,1,2,25,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,179,        function = f;,2,0,0,0,0,0,0,0,1,2,13,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,180,        evaluations.setMaximalCount(maxEval);,0,0,0,1,2,0,3,0,0,3,37,5,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,181,        evaluations.resetCount();,0,0,0,1,2,0,2,0,0,3,25,5,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,182,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,187,"        setup(maxEval, f, min, max, startValue);",0,0,0,0,2,0,6,0,1,3,40,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,190,        return doSolve();,0,0,0,1,2,1,1,0,1,5,17,4,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,294,            evaluations.incrementCount();,0,0,0,1,2,0,2,0,0,3,29,7,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,297,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,298,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,85,    private static final long[] FACTORIALS = new long[] {,1,0,0,0,5,6,0,0,3,4,53,2,0.02857,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2334,        if (o == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.02857,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2337,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,28,public class Incrementor {,1,0,0,0,1,2,0,0,1,4,26,1,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,44,        maximalCount = max;,2,0,0,0,0,0,0,0,1,2,19,4,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,84,        if (++count > maximalCount) {,2,1,0,1,3,1,0,0,1,6,29,4,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,87,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,93,        count = 0;,1,0,0,0,0,0,0,0,1,2,10,4,0.02857,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,94,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,47,"        super(relativeAccuracy, absoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,59,"        super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy);",3,0,0,0,2,1,0,0,1,4,65,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver,50,60,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,78,"        this(relativeAccuracy,",1,0,0,0,1,1,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,100,        return evaluations.getMaximalCount();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,104,        return evaluations.getCount();,0,0,0,1,2,1,2,0,0,4,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,122,        return searchStart;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,200,"        return solve(maxEval, f, Double.NaN, Double.NaN, startValue);",4,0,0,0,2,1,4,0,1,5,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,226,"        return UnivariateRealSolverUtils.isBracketing(function, lower, upper);",0,0,0,0,2,1,5,0,0,3,70,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,240,"        return UnivariateRealSolverUtils.isSequence(start, mid, end);",0,0,0,0,2,1,5,0,0,3,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,253,"        UnivariateRealSolverUtils.verifyInterval(lower, upper);",0,0,0,0,2,0,4,0,0,2,55,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,254,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,268,"        UnivariateRealSolverUtils.verifySequence(lower, initial, upper);",0,0,0,0,2,0,5,0,0,2,64,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,269,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,295,        } catch (MaxCountExceededException e) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,50,296,            throw new TooManyEvaluationsException(e.getMax());,0,0,0,2,4,2,2,1,1,6,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,83,"        super(relativeAccuracy, absoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,84,        this.allowed = AllowedSolution.ANY_SIDE;,3,0,0,0,0,1,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,85,        this.method = method;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,86,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,100,"        super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy);",3,0,0,0,2,1,0,0,1,4,65,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,101,        this.allowed = AllowedSolution.ANY_SIDE;,3,0,0,0,0,1,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,102,        this.method = method;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,109,"        return solve(maxEval, f, min, max, min + 0.5 * (max - min), allowedSolution);",3,3,0,1,4,1,6,0,1,7,77,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,139,            return x0;,1,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,142,            return x1;,1,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,167,                return x;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,180,                    f0 *= 0.5;,1,0,0,0,0,0,0,0,1,2,10,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,181,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,183,                    f0 *= f1 / (f1 + fx);,4,2,0,1,2,0,0,0,1,5,21,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,184,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,188,"                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));",4,4,0,1,6,0,6,0,1,6,67,11,0.0,1,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,189,                        f0 = computeObjectiveValue(x0);,1,0,0,1,2,0,2,0,2,5,31,11,0.0,1,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,194,                    throw new MathInternalError();,0,0,0,1,2,2,0,1,1,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,205,                switch (allowed) {,1,0,0,1,3,1,0,0,0,4,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,207,                    return x1;,1,0,0,0,0,1,0,0,0,2,10,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,209,                    if (inverted) {,1,0,0,1,3,1,0,0,0,4,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,210,                        return x1;,1,0,0,0,0,1,0,0,0,2,10,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,214,                    if (!inverted) {,1,0,0,1,3,1,0,0,1,5,16,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,215,                        return x1;,1,0,0,0,0,1,0,0,0,2,10,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,219,                    if (f1 <= 0) {,1,1,0,1,3,1,0,0,0,5,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,220,                        return x1;,1,0,0,0,0,1,0,0,0,2,10,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,224,                    if (f1 >= 0) {,1,1,0,1,3,1,0,0,0,5,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,225,                        return x1;,1,0,0,0,0,1,0,0,0,2,10,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,229,                    throw new MathInternalError();,0,0,0,1,2,2,0,1,1,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,241,                    return inverted ? x1 : x0;,3,0,0,0,0,1,0,0,0,2,26,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,243,                    return inverted ? x0 : x1;,3,0,0,0,0,1,0,0,0,2,26,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,245,                    return (f1 <= 0) ? x1 : x0;,3,1,0,1,2,1,0,0,0,5,27,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,247,                    return (f1 >= 0) ? x1 : x0;,3,1,0,1,2,1,0,0,0,5,27,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,249,                    throw new MathInternalError();,0,0,0,1,2,2,0,1,1,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,36,    private UnivariateRealSolverUtils() {},1,0,0,1,4,1,0,0,1,5,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,50,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,51,            throw new NullArgumentException(LocalizedFormats.FUNCTION);,2,0,0,1,2,2,0,1,1,6,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,53,        final UnivariateRealSolver solver = new BrentSolver();,1,0,0,1,2,2,0,2,2,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,54,"        return solver.solve(Integer.MAX_VALUE, function, x0, x1);",2,0,0,0,2,1,5,0,0,4,57,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,73,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,74,            throw new NullArgumentException(LocalizedFormats.FUNCTION);,2,0,0,1,2,2,0,1,1,6,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,76,        final UnivariateRealSolver solver = new BrentSolver(absoluteAccuracy);,2,0,0,1,2,2,0,2,2,6,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,77,"        return solver.solve(Integer.MAX_VALUE, function, x0, x1);",2,0,0,0,2,1,5,0,0,4,57,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,99,        if (allowedSolution == AllowedSolution.ANY_SIDE) {,3,1,0,1,3,1,0,0,0,5,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,101,            return baseRoot;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,105,"        final double step = FastMath.max(bracketing.getAbsoluteAccuracy(),",1,0,0,1,3,2,4,0,1,6,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,107,"        double xLo        = FastMath.max(min, baseRoot - step);",3,1,0,0,2,1,3,0,0,5,55,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,108,        double fLo        = f.value(xLo);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,109,"        double xHi        = FastMath.min(max, baseRoot + step);",3,1,0,0,2,1,3,0,0,5,55,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,110,        double fHi        = f.value(xHi);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,111,        int remainingEval = maxEval - 2;,2,1,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,112,        while (remainingEval > 0) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,114,            if ((fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0)) {,4,7,0,2,7,1,0,0,0,5,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,116,"                return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution);",0,0,0,0,2,1,8,0,0,3,79,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,120,            boolean changeLo = false;,1,0,0,0,0,1,0,0,1,3,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,121,            boolean changeHi = false;,1,0,0,0,0,1,0,0,1,3,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,122,            if (fLo < fHi) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,124,                if (fLo >= 0) {,1,1,0,1,3,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,125,                    changeLo = true;,1,0,0,0,0,0,0,0,2,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,127,                    changeHi = true;,1,0,0,0,0,0,0,0,2,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,129,            } else if (fLo > fHi) {,2,1,0,1,4,2,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,131,                if (fLo <= 0) {,1,1,0,1,3,1,0,0,0,5,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,132,                    changeLo = true;,1,0,0,0,0,0,0,0,2,2,16,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,134,                    changeHi = true;,1,0,0,0,0,0,0,0,2,2,16,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,138,                changeLo = true;,1,0,0,0,0,0,0,0,2,2,16,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,139,                changeHi = true;,1,0,0,0,0,0,0,0,2,2,16,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,143,            if (changeLo) {,1,0,0,1,3,1,0,0,0,4,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,144,"                xLo = FastMath.max(min, xLo - step);",3,1,0,0,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,145,                fLo  = f.value(xLo);,1,0,0,1,2,0,3,0,1,5,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,146,                remainingEval--;,1,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,150,            if (changeHi) {,1,0,0,1,3,1,0,0,0,4,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,151,"                xHi = FastMath.min(max, xHi + step);",3,1,0,0,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,152,                fHi  = f.value(xHi);,1,0,0,1,2,0,3,0,1,5,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,153,                remainingEval--;,1,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,156,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,158,"        throw new NoBracketingException(LocalizedFormats.FAILED_BRACKETING,",2,0,0,0,1,2,0,1,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,207,"        return bracket(function, initial, lowerBound, upperBound, Integer.MAX_VALUE);",2,0,0,0,2,1,5,0,1,5,77,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,246,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,247,            throw new NullArgumentException(LocalizedFormats.FUNCTION);,2,0,0,1,2,2,0,1,1,6,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,249,        if (maximumIterations <= 0)  {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,250,"            throw new NotStrictlyPositiveException(LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);",3,0,0,0,2,2,0,1,1,5,99,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,252,"        verifySequence(lowerBound, initial, upperBound);",0,0,0,0,2,0,4,0,1,3,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,254,        double a = initial;,2,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,255,        double b = initial;,2,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,258,        int numIterations = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,261,"            a = FastMath.max(a - 1.0, lowerBound);",2,1,0,0,2,0,3,0,1,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,262,"            b = FastMath.min(b + 1.0, upperBound);",2,1,0,0,2,0,3,0,1,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,263,            fa = function.value(a);,1,0,0,1,2,0,3,0,1,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,265,            fb = function.value(b);,1,0,0,1,2,0,3,0,1,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,266,            ++numIterations;,1,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,267,        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) &&,4,4,0,1,6,1,0,0,0,5,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,270,        if (fa * fb > 0.0) {,2,2,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,271,"            throw new NoBracketingException(LocalizedFormats.FAILED_BRACKETING,",2,0,0,0,1,2,0,1,1,5,67,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,277,"        return new double[] {a, b};",2,0,0,0,4,3,0,0,0,3,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,288,        return (a + b) * 0.5;,2,2,0,1,2,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,306,            throw new NullArgumentException(LocalizedFormats.FUNCTION);,2,0,0,1,2,2,0,1,1,6,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,324,        return (start < mid) && (mid < end);,4,3,0,1,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,337,"            throw new NumberIsTooLargeException(LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,",2,0,0,0,1,2,0,1,1,5,79,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,354,"        verifyInterval(lower, initial);",0,0,0,0,2,0,3,0,1,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,355,"        verifyInterval(initial, upper);",0,0,0,0,2,0,3,0,1,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,356,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,372,            throw new NullArgumentException(LocalizedFormats.FUNCTION);,2,0,0,1,2,2,0,1,1,6,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,50,376,"            throw new NoBracketingException(lower, upper,",2,0,0,0,1,2,0,1,1,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,50,41,        this(LocalizedFormats.NULL_NOT_ALLOWED);,2,0,0,1,2,1,0,0,0,4,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,50,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,50,50,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,50,51,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,44,                                        Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,37,    private final ExceptionContext context = new ExceptionContext();,1,0,0,1,2,3,0,2,3,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,45,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,50,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,56,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,50,62,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,50,38,"        super(value, 0, false);",1,0,0,0,2,1,0,0,2,4,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,50,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,50,48,"        super(specific, value, 0, false);",2,0,0,0,2,1,0,0,2,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,50,49,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,50,        this(boundIsAllowed ?,1,0,0,0,1,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,68,"        super(specific, wrong, min);",3,0,0,0,2,1,0,0,1,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,70,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,71,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,72,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,78,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,50,85,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,50,46,"        super(pattern, wrong, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,50,47,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,50,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,50,54,        return argument;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,51,"        this(LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, lo, hi, fLo, fHi);",6,0,0,0,2,1,0,0,0,3,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,68,"        super(specific, lo, hi, fLo, fHi, args);",6,0,0,0,2,1,0,0,1,4,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,69,        this.lo = lo;,2,0,0,0,0,1,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,70,        this.hi = hi;,2,0,0,0,0,1,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,71,        this.fLo = fLo;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,72,        this.fHi = fHi;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,73,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,81,        return lo;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,89,        return hi;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,97,        return fLo;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NoBracketingException,50,105,        return fHi;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,50,        this(boundIsAllowed ?,1,0,0,0,1,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,67,"        super(specific, wrong, max);",3,0,0,0,2,1,0,0,1,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,69,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,70,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,77,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,50,84,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,52,"        super(absoluteAccuracy, Method.REGULA_FALSI);",3,0,0,0,2,1,0,0,1,4,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,63,"        super(relativeAccuracy, absoluteAccuracy, Method.REGULA_FALSI);",4,0,0,0,2,1,0,0,1,4,63,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,76,"        super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy, Method.REGULA_FALSI);",5,0,0,0,2,1,0,0,1,4,86,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,50,77,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,42,"        this(LocalizedFormats.MAX_COUNT_EXCEEDED, max);",3,0,0,0,2,1,0,0,0,3,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,43,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,53,                                     Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,54,"        getContext().addMessage(specific, max, args);",0,0,0,1,4,0,5,0,1,4,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,55,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,56,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,50,62,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,45,                                     Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,36,    private final ExceptionContext context = new ExceptionContext();,1,0,0,1,2,3,0,2,3,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,46,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,59,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,60,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,67,        this(LocalizedFormats.ILLEGAL_STATE);,2,0,0,1,2,1,0,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,72,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,78,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,50,84,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,50,37,        super(max);,1,0,0,1,2,1,0,0,1,5,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,50,38,        getContext().addMessage(LocalizedFormats.EVALUATIONS);,2,0,0,1,4,0,2,0,1,5,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,50,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathInternalError,50,36,    public MathInternalError() {,1,0,0,1,3,1,0,0,1,5,28,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathInternalError,50,37,"        getContext().addMessage(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);",2,0,0,1,4,0,3,0,1,5,69,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathInternalError,50,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathInternalError,50,45,"        super(cause, LocalizedFormats.INTERNAL_ERROR, REPORT_URL);",4,0,0,0,2,1,0,0,1,4,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathInternalError,50,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2229,"            = new Comparator<Pair<Double, double[]>>() {",0,0,0,1,5,2,0,3,1,5,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2233,                switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2235,                    val = o1.getKey().compareTo(o2.getKey());,1,0,0,2,6,0,5,0,1,5,41,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2236,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2238,                    val = o2.getKey().compareTo(o1.getKey());,1,0,0,2,6,0,5,0,1,5,41,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2239,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2242,                    throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2244,                return val;,1,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,101,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,102,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,115,        long s = (long)x + (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,116,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,117,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);",4,0,0,0,2,2,0,1,1,5,79,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,119,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,133,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);",2,0,0,0,2,1,3,0,1,5,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,149,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,151,"            ret = addAndCheck(b, a, pattern);",1,0,0,0,2,0,4,0,2,4,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,155,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,156,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,158,                    if (Long.MIN_VALUE - b <= a) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,159,                        ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,161,"                        throw new MathArithmeticException(pattern, a, b);",3,0,0,0,2,2,0,1,1,5,49,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,165,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,172,                if (a <= Long.MAX_VALUE - b) {,4,2,0,1,3,1,0,0,0,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,173,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,175,"                    throw new MathArithmeticException(pattern, a, b);",3,0,0,0,2,2,0,1,1,5,49,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,179,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,208,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,209,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,210,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,212,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,213,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,216,        if (k > n / 2) {,2,2,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,217,"            return binomialCoefficient(n, n - k);",2,1,0,0,2,1,2,0,1,6,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,225,        long result = 1;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,226,        if (n <= 61) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,228,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,229,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,230,                result = result * i / j;,4,2,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,231,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,233,        } else if (n <= 66) {,1,1,0,1,4,2,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,236,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,237,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,244,"                final long d = gcd(i, j);",1,0,0,0,2,2,3,0,2,5,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,245,                result = (result / (j / d)) * (i / d);,6,4,0,2,6,0,0,0,1,5,38,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,246,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,248,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,252,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,253,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,254,"                final long d = gcd(i, j);",1,0,0,0,2,2,3,0,2,5,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,255,"                result = mulAndCheck(result / (j / d), i / d);",6,3,0,1,4,0,1,0,2,6,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,256,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,259,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,285,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,286,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,287,            return 1d;,0,0,0,0,0,1,0,0,0,1,10,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,289,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,290,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,292,        if (k > n/2) {,2,2,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,293,"            return binomialCoefficientDouble(n, n - k);",2,1,0,0,2,1,2,0,1,6,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,295,        if (n < 67) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,296,"            return binomialCoefficient(n,k);",0,0,0,0,2,1,3,0,1,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,299,        double result = 1d;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,300,        for (int i = 1; i <= k; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,301,             result *= (double)(n - k + i) / (double)i;,5,3,0,1,6,2,0,0,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,304,        return FastMath.floor(result + 0.5);,1,1,0,1,2,1,2,0,0,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,326,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,327,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,328,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,330,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,331,            return FastMath.log(n);,0,0,0,1,2,1,3,0,0,4,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,338,        if (n < 67) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,339,"            return FastMath.log(binomialCoefficient(n,k));",0,0,0,0,4,1,5,0,1,4,46,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,346,        if (n < 1030) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,347,"            return FastMath.log(binomialCoefficientDouble(n, k));",0,0,0,0,4,1,5,0,1,4,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,350,        if (k > n / 2) {,2,2,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,351,"            return binomialCoefficientLog(n, n - k);",2,1,0,0,2,1,2,0,1,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,357,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,360,        for (int i = n - k + 1; i <= n; i++) {,6,3,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,361,            logSum += FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,365,        for (int i = 2; i <= k; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,366,            logSum -= FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,369,        return logSum;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,381,        if (n < k) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,382,"            throw new NumberIsTooLargeException(LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,385,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,386,"            throw new NotPositiveException(LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER, n);",3,0,0,0,2,2,0,1,1,5,80,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,388,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,401,"        if (equals(x, y, eps)) {",0,0,0,0,5,1,4,0,1,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,402,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,403,        } else if (x < y) {,2,1,0,1,4,2,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,404,            return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,406,        return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,427,"        if (equals(x, y, maxUlps)) {",0,0,0,0,5,1,4,0,1,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,428,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,429,        } else if (x < y) {,2,1,0,1,4,2,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,430,            return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,432,        return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,443,        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,455,"        return equals(x, y, 1);",0,0,0,0,2,1,3,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,468,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, 1);",0,2,0,2,8,1,9,0,1,6,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,482,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",3,3,0,1,4,1,5,0,1,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,497,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",3,3,0,2,6,1,5,0,1,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,519,        int xInt = Float.floatToIntBits(x);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,520,        int yInt = Float.floatToIntBits(y);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,523,        if (xInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,524,            xInt = SGN_MASK_FLOAT - xInt;,3,1,0,0,0,0,0,0,1,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,526,        if (yInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,527,            yInt = SGN_MASK_FLOAT - yInt;,3,1,0,0,0,0,0,0,1,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,530,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,4,2,0,1,2,2,2,0,1,7,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,532,        return isEqual && !Float.isNaN(x) && !Float.isNaN(y);,1,1,0,1,4,1,6,0,2,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,548,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, maxUlps);",0,2,0,2,8,1,10,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,562,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,563,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,565,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,566,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,568,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,569,"            if (!equals(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,570,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,573,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,588,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,589,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,591,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,592,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,594,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,595,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,596,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,599,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,611,"        return equals(x, y, 1);",0,0,0,0,2,1,3,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,624,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);",0,2,0,2,8,1,9,0,1,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,639,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",3,3,0,1,4,1,5,0,1,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,654,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",3,3,0,2,6,1,5,0,1,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,675,        long xInt = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,676,        long yInt = Double.doubleToLongBits(y);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,679,        if (xInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,680,            xInt = SGN_MASK - xInt;,3,1,0,0,0,0,0,0,1,3,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,682,        if (yInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,683,            yInt = SGN_MASK - yInt;,3,1,0,0,0,0,0,0,1,3,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,686,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,4,2,0,1,2,2,2,0,1,7,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,688,        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);,1,1,0,1,4,1,6,0,2,7,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,704,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);",0,2,0,2,8,1,10,0,1,6,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,718,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,719,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,721,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,722,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,724,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,725,"            if (!equals(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,726,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,729,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,744,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,745,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,747,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,748,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,750,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,751,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,752,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,755,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,783,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,784,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,787,        if (n > 20) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,788,            throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,790,        return FACTORIALS[n];,0,0,1,0,2,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,807,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,808,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,811,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,812,            return factorial(n);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,814,        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);,0,1,0,3,6,1,6,0,1,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,825,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,826,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,829,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,830,            return FastMath.log(factorial(n));,0,0,0,2,4,1,4,0,1,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,832,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,833,        for (int i = 2; i <= n; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,834,            logSum += FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,836,        return logSum;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,869,        int u = p;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,870,        int v = q;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,871,        if ((u == 0) || (v == 0)) {,2,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,872,            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {,6,3,0,2,7,1,0,0,0,5,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,873,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,876,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,1,4,1,6,0,0,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,883,        if (u > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,884,            u = -u;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,886,        if (v > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,887,            v = -v;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,890,        int k = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,891,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,3,7,0,2,7,2,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,893,            u /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,894,            v /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,895,            k++; // cast out twos.,1,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,897,        if (k == 31) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,898,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,903,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,4,3,0,2,6,1,0,0,1,6,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,909,            while ((t & 1) == 0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,910,                t /= 2; // cast out twos,1,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,913,            if (t > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,914,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,916,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,919,            t = (v - u) / 2;,3,2,0,1,2,0,0,0,1,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,922,        } while (t != 0);,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,923,        return -u * (1 << k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,956,        long u = p;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,957,        long v = q;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,958,        if ((u == 0) || (v == 0)) {,2,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,959,            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){,6,3,0,2,7,1,0,0,0,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,960,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,963,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,1,4,1,6,0,0,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,970,        if (u > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,971,            u = -u;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,973,        if (v > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,974,            v = -v;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,977,        int k = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,978,        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are,3,7,0,2,7,2,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,980,            u /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,981,            v /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,982,            k++; // cast out twos.,1,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,984,        if (k == 63) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,985,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,990,        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,4,3,0,2,6,1,0,0,1,6,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,996,            while ((t & 1) == 0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,997,                t /= 2; // cast out twos,1,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1000,            if (t > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1001,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1003,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1006,            t = (v - u) / 2;,3,2,0,1,2,0,0,0,1,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1009,        } while (t != 0);,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1010,        return -u * (1L << k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1020,        return new Double(value).hashCode();,1,0,0,1,4,2,1,1,1,7,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1031,        return Arrays.hashCode(value);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1042,        return (x >= ZB) ? PB : NB;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1054,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1055,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1057,        return (x >= 0.0) ? 1.0 : -1.0;,1,1,0,1,2,1,0,0,1,6,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1068,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1069,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1071,        return (x >= 0.0F) ? 1.0F : -1.0F;,1,1,0,1,2,1,0,0,1,6,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1081,        return (x >= 0) ? 1 : -1;,1,1,0,1,2,1,0,0,1,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1091,        return (x >= 0L) ? 1L : -1L;,1,1,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1102,        return (x >= ZS) ? PS : NS;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1128,        if (a == 0 || b == 0){,2,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1129,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1131,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",2,1,0,0,6,1,7,0,2,6,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1132,        if (lcm == Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1133,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1136,        return lcm;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1162,        if (a == 0 || b == 0){,2,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1163,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1165,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",2,1,0,0,6,1,7,0,2,6,55,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1166,        if (lcm == Long.MIN_VALUE){,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1167,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1170,        return lcm;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1190,        return FastMath.log(x)/FastMath.log(base);,0,1,0,1,4,1,6,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1204,        long m = ((long)x) * ((long)y);,3,1,0,2,8,3,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1205,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1206,            throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1208,        return (int)m;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1223,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1225,"            ret = mulAndCheck(b, a);",1,0,0,0,2,0,3,0,2,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1227,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1228,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1230,                    if (a >= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1231,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1233,                        throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1235,                } else if (b > 0) {,1,1,0,1,4,2,0,0,0,5,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1237,                    if (Long.MIN_VALUE / b <= a) {,4,2,0,1,3,1,0,0,0,5,30,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1238,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1240,                        throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1245,                    ret = 0;,1,0,0,0,0,0,0,0,1,2,8,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1247,            } else if (a > 0) {,1,1,0,1,4,2,0,0,0,5,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1252,                if (a <= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1253,                    ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1255,                    throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1259,                ret = 0;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1262,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1285,         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);,7,5,0,2,4,1,2,0,0,6,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1307,        final double p = FastMath.abs(period);,1,0,0,1,2,2,3,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1308,        return a - p * FastMath.floor((a - offset) / p) - offset;,6,5,0,2,4,1,2,0,0,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1333,         if (Double.isInfinite(normalizedSum)) {,0,0,0,2,5,1,3,0,0,4,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1334,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);,2,0,0,1,2,2,0,1,1,6,76,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1336,         if (Double.isNaN(normalizedSum)) {,0,0,0,2,5,1,3,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1337,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);,2,0,0,1,2,2,0,1,1,6,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1339,         double sum = 0d;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1340,         final int len = values.length;,3,0,0,0,0,2,0,0,1,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1341,         double[] out = new double[len];,1,0,1,0,4,3,0,0,0,4,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1342,         for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1343,             if (Double.isInfinite(values[i])) {,0,0,1,2,7,1,2,0,0,5,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1344,"                 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);",3,0,1,0,4,2,0,1,1,6,94,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1346,             if (!Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,1,6,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1347,                 sum += values[i];,1,0,1,0,2,0,0,0,1,4,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1350,         if (sum == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1351,             throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);,2,0,0,1,2,2,0,1,1,6,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1353,         for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1354,             if (Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,0,5,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1355,                 out[i] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1357,                 out[i] = values[i] * normalizedSum / sum;,2,2,1,0,4,0,0,0,1,5,41,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1360,         return out;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1373,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1397,            return (new BigDecimal,0,0,0,0,1,2,0,1,1,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1401,        } catch (NumberFormatException ex) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1402,            if (Double.isInfinite(x)) {,0,0,0,2,5,1,3,0,0,4,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1403,                return x;,1,0,0,0,0,1,0,0,0,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1405,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1420,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1436,        float sign = indicator(x);,1,0,0,1,2,1,2,0,1,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1437,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;",2,1,0,1,4,2,3,0,0,6,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1438,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",3,2,0,1,4,2,3,0,1,7,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1456,        switch (roundingMethod) {,1,0,0,1,3,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1458,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1459,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1461,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,81,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1463,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1465,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1466,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1468,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1469,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,81,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1471,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1473,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1475,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);",3,0,0,0,2,0,3,0,1,4,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1476,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1477,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1478,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1480,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1482,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1485,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1486,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1487,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1488,            } else if (fraction < 0.5) {,1,1,0,1,4,2,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1489,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1492,                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math,0,3,0,1,4,1,6,0,0,5,57,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1494,                    unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1496,                    unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1499,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1502,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);",3,0,0,0,2,0,3,0,1,4,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1503,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1504,            if (fraction >= 0.5) {,1,1,0,1,3,1,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1505,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1507,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1509,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1512,            if (unscaled != FastMath.floor(unscaled)) {,1,1,0,2,5,1,3,0,0,6,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1513,                throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1517,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1518,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1520,"            throw new MathIllegalArgumentException(LocalizedFormats.INVALID_ROUNDING_METHOD,",2,0,0,0,1,2,0,1,1,5,80,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1531,        return unscaled;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1545,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1561,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1562,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1564,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,2,2,0,1,4,1,0,0,1,6,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1579,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1580,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1582,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,2,2,0,1,4,1,0,0,1,6,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1596,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,2,2,0,1,4,1,0,0,1,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1610,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,2,2,0,1,4,1,0,0,1,6,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1621,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1632,        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1646,        long s = (long)x - (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1647,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1648,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);",4,0,0,0,2,2,0,1,1,5,82,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1650,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1665,        if (b == Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1666,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1667,                ret = a - b;,3,1,0,0,0,0,0,0,1,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1669,"                throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, a, -b);",4,0,0,0,2,2,0,1,2,5,80,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1673,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);",4,0,0,0,2,0,2,0,3,4,64,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1675,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1687,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1688,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1691,        int result = 1;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1692,        int k2p    = k;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1693,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1694,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1695,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1697,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1698,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1701,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1713,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1714,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1717,        int result = 1;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1718,        int k2p    = k;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1719,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1720,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1721,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1723,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1724,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1727,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1739,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1740,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1743,        long result = 1l;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1744,        long k2p    = k;,2,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1745,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1746,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1747,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1749,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1750,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1753,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1765,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1766,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1769,        long result = 1l;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1770,        long k2p    = k;,2,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1771,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1772,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1773,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1775,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1776,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1779,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1791,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1792,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1795,        return k.pow(e);,0,0,0,1,2,1,3,0,0,4,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1807,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1808,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1811,        BigInteger result = BigInteger.ONE;,3,0,0,0,0,0,0,1,0,2,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1812,        BigInteger k2p    = k;,2,0,0,0,0,0,0,1,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1813,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1814,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1815,                result = result.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1817,            k2p = k2p.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1818,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1821,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1834,        if (e.compareTo(BigInteger.ZERO) < 0) {,2,1,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1835,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1838,        BigInteger result = BigInteger.ONE;,3,0,0,0,0,0,0,1,0,2,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1839,        BigInteger k2p    = k;,2,0,0,0,0,0,0,1,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1840,        while (!BigInteger.ZERO.equals(e)) {,2,0,0,2,5,1,2,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1841,            if (e.testBit(0)) {,0,0,0,2,5,1,2,0,0,4,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1842,                result = result.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1844,            k2p = k2p.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1845,            e = e.shiftRight(1);,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1848,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1859,        double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1860,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1861,            sum += FastMath.abs(p1[i] - p2[i]);,1,1,1,1,6,0,2,0,1,7,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1863,        return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1874,      int sum = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1875,      for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1876,          sum += FastMath.abs(p1[i] - p2[i]);,1,1,1,1,6,0,2,0,1,7,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1878,      return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1889,        double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1890,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1891,            final double dp = p1[i] - p2[i];,1,1,1,0,4,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1892,            sum += dp * dp;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1894,        return FastMath.sqrt(sum);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1905,      double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1906,      for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1907,          final double dp = p1[i] - p2[i];,1,1,1,0,4,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1908,          sum += dp * dp;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1910,      return FastMath.sqrt(sum);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1921,        double max = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1922,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1923,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",1,1,1,1,8,0,5,0,1,7,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1925,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1936,        int max = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1937,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1938,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",1,1,1,1,8,0,5,0,1,7,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1940,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1966,        double previous = val[0];,1,0,1,0,2,1,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1967,        boolean ok = true;,1,0,0,0,0,1,0,0,1,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1969,        int max = val.length;,3,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1970,        for (int i = 1; i < max; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1971,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1973,                if (strict) {,1,0,0,1,3,1,0,0,0,4,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1974,                    if (val[i] <= previous) {,1,1,1,1,5,1,0,0,0,6,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1975,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1978,                    if (val[i] < previous) {,1,1,1,1,5,1,0,0,0,6,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1979,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1984,                if (strict) {,1,0,0,1,3,1,0,0,0,4,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1985,                    if (val[i] >= previous) {,1,1,1,1,5,1,0,0,0,6,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1986,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1989,                    if (val[i] > previous) {,1,1,1,1,5,1,0,0,0,6,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1990,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1996,                throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1999,            if (!ok &&,1,1,0,0,1,1,0,0,1,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2001,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);",4,0,1,0,4,2,0,1,1,6,75,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2003,            previous = val[i];,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2006,        return ok;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2020,"        checkOrder(val, dir, strict, true);",0,0,0,0,2,0,4,0,2,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2021,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2031,"        checkOrder(val, OrderDirection.INCREASING, true);",2,0,0,0,2,0,2,0,2,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2032,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2042,        if (Double.isInfinite(x) || Double.isNaN(x)) {,0,1,0,2,7,1,6,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2043,            throw new NotFiniteNumberException(x);,1,0,0,1,2,2,0,1,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2045,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2055,        for (int i = 0; i < val.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2056,            final double x = val[i];,1,0,1,0,2,2,0,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2057,            if (Double.isInfinite(x) || Double.isNaN(x)) {,0,1,0,2,7,1,6,0,0,5,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2058,"                throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);",4,0,0,0,2,2,0,1,1,5,73,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2061,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2124,        double rdwarf = 3.834e-20;,1,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2125,        double rgiant = 1.304e+19;,1,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2126,        double s1 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2127,        double s2 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2128,        double s3 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2129,        double x1max = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2130,        double x3max = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2131,        double floatn = (double) v.length;,3,0,0,1,2,2,0,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2132,        double agiant = rgiant / floatn;,3,1,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2133,        for (int i = 0; i < v.length; i++) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2134,            double xabs = Math.abs(v[i]);,1,0,1,1,4,1,2,0,0,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2135,            if (xabs < rdwarf || xabs > agiant) {,4,3,0,1,3,1,0,0,0,5,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2136,                if (xabs > rdwarf) {,2,1,0,1,3,1,0,0,0,5,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2137,                    if (xabs > x1max) {,2,1,0,1,3,1,0,0,0,5,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2138,                        double r = x1max / xabs;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2139,                        s1= 1 + s1 * r * r;,4,2,0,0,0,0,0,0,1,3,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2140,                        x1max = xabs;,2,0,0,0,0,0,0,0,1,2,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2141,                    } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2142,                        double r = xabs / x1max;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2143,                        s1 += r * r;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2144,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2146,                    if (xabs > x3max) {,2,1,0,1,3,1,0,0,0,5,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2147,                        double r = x3max / xabs;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2148,                        s3= 1 + s3 * r * r;,4,2,0,0,0,0,0,0,1,3,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2149,                        x3max = xabs;,2,0,0,0,0,0,0,0,1,2,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2150,                    } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2151,                        if (xabs != 0) {,1,1,0,1,3,1,0,0,0,5,16,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2152,                            double r = xabs / x3max;,3,1,0,0,0,1,0,0,0,3,24,15,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2153,                            s3 += r * r;,3,1,0,0,0,0,0,0,1,3,12,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2154,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2158,                s2 += xabs * xabs;,3,1,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2162,        if (s1 != 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2163,            norm = x1max * Math.sqrt(s1 + (s2 / x1max) / x1max);,6,4,0,2,4,0,2,0,1,6,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2165,            if (s2 == 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2166,                norm = x3max * Math.sqrt(s3);,2,1,0,1,2,0,3,0,1,6,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2168,                if (s2 >= x3max) {,2,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2169,                    norm = Math.sqrt(s2 * (1 + (x3max / s2) * (x3max * s3)));,6,5,0,3,8,0,2,0,1,6,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2171,                    norm = Math.sqrt(x3max * ((s2 / x3max) + (x3max * s3)));,6,4,0,3,8,0,2,0,1,6,56,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2175,        return norm;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2190,"        sortInPlace(x, OrderDirection.INCREASING, yList);",2,0,0,0,2,0,3,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2191,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2206,        if (x == null ||,1,2,0,0,1,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2208,            throw new NullArgumentException();,0,0,0,1,2,2,0,1,1,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2211,        final int len = x.length;,3,0,0,0,0,2,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2212,"        final List<Pair<Double, double[]>> list",1,0,0,0,2,2,0,3,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2215,        final int yListLen = yList.length;,3,0,0,0,0,2,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2216,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2217,            final double[] yValues = new double[yListLen];,1,0,1,0,4,4,0,0,1,5,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2218,            for (int j = 0; j < yListLen; j++) {,4,1,0,1,3,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2219,                double[] y = yList[j];,1,0,1,0,4,1,0,0,0,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2220,                if (y.length != len) {,3,1,0,1,3,1,0,0,0,5,22,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2221,"                    throw new DimensionMismatchException(y.length, len);",3,0,0,0,2,2,0,1,1,5,52,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2223,                yValues[j] = y[i];,0,0,1,0,4,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2225,"            list.add(new Pair<Double, double[]>(x[i], yValues));",1,0,1,0,8,2,2,2,1,7,52,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2228,"        final Comparator<Pair<Double, double[]>> comp",1,0,0,0,2,2,0,3,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2248,"        Collections.sort(list, comp);",0,0,0,0,2,0,4,0,0,2,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2250,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2251,"            final Pair<Double, double[]> e = list.get(i);",1,0,0,1,4,2,3,2,1,7,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2252,            x[i] = e.getKey();,0,0,1,1,4,0,2,0,1,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2253,            final double[] yValues = e.getValue();,1,0,0,1,4,2,2,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2254,            for (int j = 0; j < yListLen; j++) {,4,1,0,1,3,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2255,                yList[j][i] = yValues[j];,0,0,1,0,6,0,0,0,1,3,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2258,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2267,"         return copyOf(source, source.length);",2,0,0,0,2,1,2,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2277,"         return copyOf(source, source.length);",2,0,0,0,2,1,2,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2290,         final int[] output = new int[len];,1,0,1,0,4,4,0,0,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2291,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",2,0,0,0,4,0,7,0,0,3,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2292,         return output;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2305,         final double[] output = new double[len];,1,0,1,0,4,4,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2306,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",2,0,0,0,4,0,7,0,0,3,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2307,         return output;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2321,        if (o == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2322,"            throw new NullArgumentException(pattern, args);",2,0,0,0,2,2,0,1,1,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2324,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2335,            throw new NullArgumentException();,0,0,0,1,2,2,0,1,1,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2375,        final double ca1        = SPLIT_FACTOR * a1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2376,        final double a1High     = ca1 - (ca1 - a1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2377,        final double a1Low      = a1 - a1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2378,        final double cb1        = SPLIT_FACTOR * b1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2379,        final double b1High     = cb1 - (cb1 - b1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2380,        final double b1Low      = b1 - b1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2383,        final double prod1High  = a1 * b1;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2384,        final double prod1Low   = a1Low * b1Low - (((prod1High - a1High * b1High) - a1Low * b1High) - a1High * b1Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2387,        final double ca2        = SPLIT_FACTOR * a2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2388,        final double a2High     = ca2 - (ca2 - a2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2389,        final double a2Low      = a2 - a2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2390,        final double cb2        = SPLIT_FACTOR * b2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2391,        final double b2High     = cb2 - (cb2 - b2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2392,        final double b2Low      = b2 - b2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2395,        final double prod2High  = a2 * b2;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2396,        final double prod2Low   = a2Low * b2Low - (((prod2High - a2High * b2High) - a2Low * b2High) - a2High * b2Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2399,        final double s12High    = prod1High + prod2High;,3,1,0,0,0,2,0,0,1,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2400,        final double s12Prime   = s12High - prod2High;,3,1,0,0,0,2,0,0,1,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2401,        final double s12Low     = (prod2High - (s12High - s12Prime)) + (prod1High - s12Prime);,6,4,0,2,6,2,0,0,1,6,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2405,        return s12High + (prod1Low + prod2Low + s12Low);,4,2,0,1,2,1,0,0,0,5,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2448,        final double ca1        = SPLIT_FACTOR * a1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2449,        final double a1High     = ca1 - (ca1 - a1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2450,        final double a1Low      = a1 - a1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2451,        final double cb1        = SPLIT_FACTOR * b1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2452,        final double b1High     = cb1 - (cb1 - b1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2453,        final double b1Low      = b1 - b1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2456,        final double prod1High  = a1 * b1;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2457,        final double prod1Low   = a1Low * b1Low - (((prod1High - a1High * b1High) - a1Low * b1High) - a1High * b1Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2460,        final double ca2        = SPLIT_FACTOR * a2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2461,        final double a2High     = ca2 - (ca2 - a2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2462,        final double a2Low      = a2 - a2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2463,        final double cb2        = SPLIT_FACTOR * b2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2464,        final double b2High     = cb2 - (cb2 - b2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2465,        final double b2Low      = b2 - b2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2468,        final double prod2High  = a2 * b2;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2469,        final double prod2Low   = a2Low * b2Low - (((prod2High - a2High * b2High) - a2Low * b2High) - a2High * b2Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2472,        final double ca3        = SPLIT_FACTOR * a3;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2473,        final double a3High     = ca3 - (ca3 - a3);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2474,        final double a3Low      = a3 - a3High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2475,        final double cb3        = SPLIT_FACTOR * b3;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2476,        final double b3High     = cb3 - (cb3 - b3);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2477,        final double b3Low      = b3 - b3High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2480,        final double prod3High  = a3 * b3;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2481,        final double prod3Low   = a3Low * b3Low - (((prod3High - a3High * b3High) - a3Low * b3High) - a3High * b3Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2484,        final double s12High    = prod1High + prod2High;,3,1,0,0,0,2,0,0,1,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2485,        final double s12Prime   = s12High - prod2High;,3,1,0,0,0,2,0,0,1,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2486,        final double s12Low     = (prod2High - (s12High - s12Prime)) + (prod1High - s12Prime);,6,4,0,2,6,2,0,0,1,6,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2489,        final double s123High   = s12High + prod3High;,3,1,0,0,0,2,0,0,1,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2490,        final double s123Prime  = s123High - prod3High;,3,1,0,0,0,2,0,0,1,4,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2491,        final double s123Low    = (prod3High - (s123High - s123Prime)) + (s12High - s123Prime);,6,4,0,2,6,2,0,0,1,6,87,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2495,        return s123High + (prod1Low + prod2Low + prod3Low + s12Low + s123Low);,6,2,0,1,2,1,0,0,0,5,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2543,        final double ca1        = SPLIT_FACTOR * a1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2544,        final double a1High     = ca1 - (ca1 - a1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2545,        final double a1Low      = a1 - a1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2546,        final double cb1        = SPLIT_FACTOR * b1;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2547,        final double b1High     = cb1 - (cb1 - b1);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2548,        final double b1Low      = b1 - b1High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2551,        final double prod1High  = a1 * b1;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2552,        final double prod1Low   = a1Low * b1Low - (((prod1High - a1High * b1High) - a1Low * b1High) - a1High * b1Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2555,        final double ca2        = SPLIT_FACTOR * a2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2556,        final double a2High     = ca2 - (ca2 - a2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2557,        final double a2Low      = a2 - a2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2558,        final double cb2        = SPLIT_FACTOR * b2;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2559,        final double b2High     = cb2 - (cb2 - b2);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2560,        final double b2Low      = b2 - b2High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2563,        final double prod2High  = a2 * b2;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2564,        final double prod2Low   = a2Low * b2Low - (((prod2High - a2High * b2High) - a2Low * b2High) - a2High * b2Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2567,        final double ca3        = SPLIT_FACTOR * a3;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2568,        final double a3High     = ca3 - (ca3 - a3);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2569,        final double a3Low      = a3 - a3High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2570,        final double cb3        = SPLIT_FACTOR * b3;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2571,        final double b3High     = cb3 - (cb3 - b3);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2572,        final double b3Low      = b3 - b3High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2575,        final double prod3High  = a3 * b3;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2576,        final double prod3Low   = a3Low * b3Low - (((prod3High - a3High * b3High) - a3Low * b3High) - a3High * b3Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2579,        final double ca4        = SPLIT_FACTOR * a4;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2580,        final double a4High     = ca4 - (ca4 - a4);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2581,        final double a4Low      = a4 - a4High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2582,        final double cb4        = SPLIT_FACTOR * b4;,3,1,0,0,0,2,0,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2583,        final double b4High     = cb4 - (cb4 - b4);,4,2,0,1,2,2,0,0,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2584,        final double b4Low      = b4 - b4High;,3,1,0,0,0,2,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2587,        final double prod4High  = a4 * b4;,3,1,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2588,        final double prod4Low   = a4Low * b4Low - (((prod4High - a4High * b4High) - a4Low * b4High) - a4High * b4Low);,10,8,0,3,6,2,0,0,1,6,110,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2591,        final double s12High    = prod1High + prod2High;,3,1,0,0,0,2,0,0,1,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2592,        final double s12Prime   = s12High - prod2High;,3,1,0,0,0,2,0,0,1,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2593,        final double s12Low     = (prod2High - (s12High - s12Prime)) + (prod1High - s12Prime);,6,4,0,2,6,2,0,0,1,6,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2596,        final double s123High   = s12High + prod3High;,3,1,0,0,0,2,0,0,1,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2597,        final double s123Prime  = s123High - prod3High;,3,1,0,0,0,2,0,0,1,4,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2598,        final double s123Low    = (prod3High - (s123High - s123Prime)) + (s12High - s123Prime);,6,4,0,2,6,2,0,0,1,6,87,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2601,        final double s1234High  = s123High + prod4High;,3,1,0,0,0,2,0,0,1,4,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2602,        final double s1234Prime = s1234High - prod4High;,3,1,0,0,0,2,0,0,1,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2603,        final double s1234Low   = (prod4High - (s1234High - s1234Prime)) + (s123High - s1234Prime);,6,4,0,2,6,2,0,0,1,6,91,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2607,        return s1234High + (prod1Low + prod2Low + prod3Low + prod4Low + s12Low + s123Low + s1234Low);,8,2,0,1,2,1,0,0,0,5,93,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2628,        final int len = a.length;,3,0,0,0,0,2,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2629,        if (len != b.length) {,3,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2630,"            throw new DimensionMismatchException(len, b.length);",3,0,0,0,2,2,0,1,1,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2633,        final double[] prodHigh = new double[len];,1,0,1,0,4,4,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2634,        double prodLowSum = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2636,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2637,            final double ai = a[i];,1,0,1,0,2,2,0,0,1,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2638,            final double ca = SPLIT_FACTOR * ai;,3,1,0,0,0,2,0,0,1,4,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2639,            final double aHigh = ca - (ca - ai);,4,2,0,1,2,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2640,            final double aLow = ai - aHigh;,3,1,0,0,0,2,0,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2642,            final double bi = b[i];,1,0,1,0,2,2,0,0,1,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2643,            final double cb = SPLIT_FACTOR * bi;,3,1,0,0,0,2,0,0,1,4,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2644,            final double bHigh = cb - (cb - bi);,4,2,0,1,2,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2645,            final double bLow = bi - bHigh;,3,1,0,0,0,2,0,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2646,            prodHigh[i] = ai * bi;,2,1,1,0,2,0,0,0,1,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2647,            final double prodLow = aLow * bLow - (((prodHigh[i] -,3,5,1,0,5,2,0,0,1,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2651,            prodLowSum += prodLow;,2,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2655,        final double prodHighCur = prodHigh[0];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2656,        double prodHighNext = prodHigh[1];,1,0,1,0,2,1,0,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2657,        double sHighPrev = prodHighCur + prodHighNext;,3,1,0,0,0,1,0,0,0,3,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2658,        double sPrime = sHighPrev - prodHighNext;,3,1,0,0,0,1,0,0,0,3,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2659,        double sLowSum = (prodHighNext - (sHighPrev - sPrime)) + (prodHighCur - sPrime);,6,4,0,2,6,1,0,0,0,5,80,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2661,        final int lenMinusOne = len - 1;,2,1,0,0,0,2,0,0,1,4,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2662,        for (int i = 1; i < lenMinusOne; i++) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2663,            prodHighNext = prodHigh[i + 1];,2,1,1,0,2,0,0,0,1,5,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2664,            final double sHighCur = sHighPrev + prodHighNext;,3,1,0,0,0,2,0,0,1,4,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2665,            sPrime = sHighCur - prodHighNext;,3,1,0,0,0,0,0,0,1,3,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2666,            sLowSum += (prodHighNext - (sHighCur - sPrime)) + (sHighPrev - sPrime);,6,4,0,2,6,0,0,0,1,5,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2667,            sHighPrev = sHighCur;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,2670,        return sHighPrev + (prodLowSum + sLowSum);,3,2,0,1,2,1,0,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,275,    private FastMath() {,1,0,0,1,3,1,0,0,1,5,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,276,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,288,        if (d > -MathUtils.SAFE_MIN && d < MathUtils.SAFE_MIN){,6,3,0,1,3,1,0,0,1,6,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,289,            return d; // These are un-normalised - don't try to convert,1,0,0,0,0,2,0,0,0,2,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,291,        long xl = Double.doubleToLongBits(d);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,292,        xl = xl & MASK_30BITS; // Drop low order bits,3,1,0,0,0,0,0,0,1,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,293,        return Double.longBitsToDouble(xl);,0,0,0,1,2,1,3,0,0,4,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,302,        return Math.sqrt(a);,0,0,0,1,2,1,3,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,310,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,311,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,314,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,315,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,318,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,319,          return exp(-x)/2.0;,1,1,0,1,2,1,1,0,2,7,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,322,      double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,323,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,324,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,326,"      exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,328,      double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,329,      double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,331,      double temp = ya * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,332,      double yaa = ya + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,333,      double yab = ya - yaa;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,336,      double recip = 1.0/ya;,2,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,337,      temp = recip * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,338,      double recipa = recip + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,339,      double recipb = recip - recipa;,3,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,342,      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,10,9,0,1,2,0,0,0,1,5,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,344,      recipb += -yb * recip * recip;,4,1,0,0,0,0,0,0,2,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,347,      temp = ya + recipa;,3,1,0,0,0,0,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,348,      yb += -(temp - ya - recipa);,4,1,0,1,2,0,0,0,2,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,349,      ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,350,      temp = ya + recipb;,3,1,0,0,0,0,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,351,      yb += -(temp - ya - recipb);,4,1,0,1,2,0,0,0,2,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,352,      ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,354,      double result = ya + yb;,3,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,355,      result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,356,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,364,      boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,365,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,366,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,369,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,370,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,373,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,374,          return -exp(-x)/2.0;,1,1,0,1,2,1,1,0,3,7,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,377,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,378,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,381,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,382,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,383,          negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,388,      if (x > 0.25) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,389,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,390,"          exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,392,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,393,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,395,          double temp = ya * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,396,          double yaa = ya + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,397,          double yab = ya - yaa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,400,          double recip = 1.0/ya;,2,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,401,          temp = recip * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,402,          double recipa = recip + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,403,          double recipb = recip - recipa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,406,          recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,10,9,0,1,2,0,0,0,1,5,76,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,408,          recipb += -yb * recip * recip;,4,1,0,0,0,0,0,0,2,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,410,          recipa = -recipa;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,411,          recipb = -recipb;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,414,          temp = ya + recipa;,3,1,0,0,0,0,0,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,415,          yb += -(temp - ya - recipa);,4,1,0,1,2,0,0,0,2,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,416,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,417,          temp = ya + recipb;,3,1,0,0,0,0,0,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,418,          yb += -(temp - ya - recipb);,4,1,0,1,2,0,0,0,2,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,419,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,421,          result = ya + yb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,422,          result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,423,      },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,425,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,426,"          expm1(x, hiPrec);",0,0,0,0,2,0,3,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,428,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,429,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,432,          double denom = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,433,          double denomr = 1.0 / denom;,2,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,434,          double denomb = -(denom - 1.0 - ya) + yb;,4,2,0,1,2,1,0,0,1,6,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,435,          double ratio = ya * denomr;,3,1,0,0,0,1,0,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,436,          double temp = ratio * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,437,          double ra = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,438,          double rb = ratio - ra;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,440,          temp = denom * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,441,          double za = denom + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,442,          double zb = denom - za;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,444,          rb += (ya - za*ra - za*rb - zb*ra - zb*rb) * denomr;,11,9,0,1,2,0,0,0,1,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,447,          rb += yb*denomr;                        // numerator,3,1,0,0,0,0,0,0,1,3,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,448,          rb += -ya * denomb * denomr * denomr;   // denominator,5,1,0,0,0,0,0,0,2,3,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,451,          temp = ya + ra;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,452,          yb += -(temp - ya - ra);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,453,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,454,          temp = ya + rb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,455,          yb += -(temp - ya - rb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,456,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,458,          result = ya + yb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,459,          result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,462,      if (negate) {,1,0,0,1,3,1,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,463,          result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,466,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,474,      boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,476,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,477,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,480,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,481,          return 1.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,484,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,485,          return -1.0;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,488,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,489,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,492,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,493,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,494,          negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,498,      if (x >= 0.5) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,499,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,501,"          exp(x*2.0, 0.0, hiPrec);",1,1,0,0,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,503,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,504,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,507,          double na = -1.0 + ya;,2,1,0,0,0,1,0,0,1,4,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,508,          double nb = -(na + 1.0 - ya);,3,2,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,509,          double temp = na + yb;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,510,          nb += -(temp - na - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,511,          na = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,514,          double da = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,515,          double db = -(da - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,516,          temp = da + yb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,517,          db += -(temp - da - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,518,          da = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,520,          temp = da * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,521,          double daa = da + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,522,          double dab = da - daa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,525,          double ratio = na/da;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,526,          temp = ratio * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,527,          double ratioa = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,528,          double ratiob = ratio - ratioa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,531,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,11,9,0,1,2,0,0,0,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,534,          ratiob += nb / da;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,536,          ratiob += -db * na / da / da;,5,3,0,0,0,0,0,0,2,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,538,          result = ratioa + ratiob;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,539,      },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,541,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,543,"          expm1(x*2.0, hiPrec);",1,1,0,0,2,0,2,0,1,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,545,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,546,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,549,          double na = ya;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,550,          double nb = yb;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,553,          double da = 2.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,554,          double db = -(da - 2.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,555,          double temp = da + yb;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,556,          db += -(temp - da - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,557,          da = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,559,          temp = da * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,560,          double daa = da + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,561,          double dab = da - daa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,564,          double ratio = na/da;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,565,          temp = ratio * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,566,          double ratioa = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,567,          double ratiob = ratio - ratioa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,570,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,11,9,0,1,2,0,0,0,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,573,          ratiob += nb / da;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,575,          ratiob += -db * na / da / da;,5,3,0,0,0,0,0,0,2,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,577,          result = ratioa + ratiob;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,580,      if (negate) {,1,0,0,1,3,1,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,581,          result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,584,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,592,        return FastMath.log(a + FastMath.sqrt(a * a - 1));,3,3,0,2,4,1,4,0,0,6,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,601,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,602,        if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,603,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,604,            a = -a;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,608,        if (a > 0.167) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,609,            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);,4,3,0,2,4,0,4,0,1,6,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,611,            final double a2 = a * a;,3,1,0,0,0,2,0,0,1,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,612,            if (a > 0.097) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,613,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,10,33,0,9,18,0,0,0,1,5,264,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,614,            } else if (a > 0.036) {,1,1,0,1,4,2,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,615,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,8,25,0,7,14,0,0,0,1,5,196,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,616,            } else if (a > 0.0036) {,1,1,0,1,4,2,0,0,0,5,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,617,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,6,17,0,5,10,0,0,0,1,5,129,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,619,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);,4,9,0,3,6,0,0,0,1,5,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,623,        return negative ? -absAsinh : absAsinh;,3,0,0,0,0,1,0,0,1,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,633,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,634,        if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,635,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,636,            a = -a;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,640,        if (a > 0.15) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,641,            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));,3,4,0,2,6,0,2,0,1,6,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,643,            final double a2 = a * a;,3,1,0,0,0,2,0,0,1,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,644,            if (a > 0.087) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,645,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));,10,25,0,9,18,0,0,0,1,5,175,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,646,            } else if (a > 0.031) {,1,1,0,1,4,2,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,647,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));,8,19,0,7,14,0,0,0,1,5,135,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,648,            } else if (a > 0.003) {,1,1,0,1,4,2,0,0,0,5,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,649,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));,6,13,0,5,10,0,0,0,1,5,95,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,651,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));,4,7,0,3,6,0,0,0,1,5,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,655,        return negative ? -absAtanh : absAtanh;,3,0,0,0,0,1,0,0,1,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,665,        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a); // return +0.0/-0.0/NaN depending on a,3,2,0,2,6,2,0,0,1,6,87,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,674,        return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a); // return +0.0/-0.0/NaN depending on a,3,2,0,2,6,2,0,0,1,6,91,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,682,"        return nextAfter(a, Double.POSITIVE_INFINITY);",2,0,0,0,2,1,2,0,1,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,690,"        return nextAfter(a, Float.POSITIVE_INFINITY);",2,0,0,0,2,1,2,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,698,        return Math.random();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,722,"        return exp(x, 0.0, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,741,        if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,742,            intVal = (int) -x;,2,0,0,1,2,1,0,0,2,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,744,            if (intVal > 746) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,745,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,746,                    hiPrec[0] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,747,                    hiPrec[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,749,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,752,            if (intVal > 709) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,754,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;",2,2,0,0,2,2,3,0,2,6,79,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,755,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,756,                    hiPrec[0] /= 285040095144011776.0;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,757,                    hiPrec[1] /= 285040095144011776.0;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,759,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,762,            if (intVal == 709) {,1,1,0,1,3,1,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,764,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;",2,2,0,0,2,2,3,0,2,6,79,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,765,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,766,                    hiPrec[0] /= 4.455505956692756620;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,767,                    hiPrec[1] /= 4.455505956692756620;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,769,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,772,            intVal++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,774,            intPartA = EXP_INT_TABLE_A[750-intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,775,            intPartB = EXP_INT_TABLE_B[750-intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,777,            intVal = -intVal;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,779,            intVal = (int) x;,2,0,0,1,2,1,0,0,1,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,781,            if (intVal > 709) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,782,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,783,                    hiPrec[0] = Double.POSITIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,784,                    hiPrec[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,786,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,789,            intPartA = EXP_INT_TABLE_A[750+intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,790,            intPartB = EXP_INT_TABLE_B[750+intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,797,        final int intFrac = (int) ((x - intVal) * 1024.0);,3,2,0,2,6,3,0,0,1,6,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,798,        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];,1,0,1,0,2,2,0,0,1,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,799,        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];,1,0,1,0,2,2,0,0,1,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,805,        final double epsilon = x - (intVal + intFrac / 1024.0);,4,3,0,1,2,2,0,0,1,6,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,814,        double z = 0.04168701738764507;,1,0,0,0,0,1,0,0,0,2,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,815,        z = z * epsilon + 0.1666666505023083;,3,2,0,0,0,0,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,816,        z = z * epsilon + 0.5000000000042687;,3,2,0,0,0,0,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,817,        z = z * epsilon + 1.0;,3,2,0,0,0,0,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,818,        z = z * epsilon + -3.940510424527919E-20;,3,2,0,0,0,0,0,0,2,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,825,        double tempA = intPartA * fracPartA;,3,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,826,        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;,7,5,0,0,0,1,0,0,0,3,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,832,        final double tempC = tempB + tempA;,3,1,0,0,0,2,0,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,834,        if (extra != 0.0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,835,            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;,10,7,0,0,0,0,0,0,1,3,63,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,837,            result = tempC*z + tempB + tempA;,5,3,0,0,0,0,0,0,1,3,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,840,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,842,            hiPrec[0] = tempA;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,843,            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;,8,6,1,0,2,0,0,0,1,5,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,846,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,854,"      return expm1(x, null);",0,0,0,0,2,1,2,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,863,        if (x != x || x == 0.0) { // NaN or zero,3,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,864,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,867,        if (x <= -1.0 || x >= 1.0) {,2,3,0,1,3,1,0,0,1,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,870,            double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,871,"            exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,872,            if (x > 0.0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,873,                return -1.0 + hiPrec[0] + hiPrec[1];,0,1,1,0,4,1,0,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,875,                final double ra = -1.0 + hiPrec[0];,1,1,1,0,2,2,0,0,2,6,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,876,                double rb = -(ra + 1.0 - hiPrec[0]);,2,2,1,1,4,1,0,0,1,7,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,877,                rb += hiPrec[1];,1,0,1,0,2,0,0,0,1,4,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,878,                return ra + rb;,2,1,0,0,0,1,0,0,0,3,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,885,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,887,        if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,888,            x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,889,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,893,            int intFrac = (int) (x * 1024.0);,2,1,0,1,4,2,0,0,0,5,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,894,            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;,1,1,1,0,2,1,0,0,0,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,895,            double tempB = EXP_FRAC_TABLE_B[intFrac];,1,0,1,0,2,1,0,0,0,4,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,897,            double temp = tempA + tempB;,3,1,0,0,0,1,0,0,0,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,898,            tempB = -(temp - tempA - tempB);,4,1,0,1,2,0,0,0,2,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,899,            tempA = temp;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,901,            temp = tempA * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,902,            baseA = tempA + temp - temp;,4,2,0,0,0,0,0,0,1,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,903,            baseB = tempB + (tempA - baseA);,4,2,0,1,2,0,0,0,1,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,905,            epsilon = x - intFrac/1024.0;,3,2,0,0,0,0,0,0,1,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,910,        double zb = 0.008336750013465571;,1,0,0,0,0,1,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,911,        zb = zb * epsilon + 0.041666663879186654;,3,2,0,0,0,0,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,912,        zb = zb * epsilon + 0.16666666666745392;,3,2,0,0,0,0,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,913,        zb = zb * epsilon + 0.49999999999999994;,3,2,0,0,0,0,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,914,        zb = zb * epsilon;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,915,        zb = zb * epsilon;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,917,        double za = epsilon;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,918,        double temp = za + zb;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,919,        zb = -(temp - za - zb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,920,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,922,        temp = za * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,923,        temp = za + temp - temp;,4,2,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,924,        zb += za - temp;,3,1,0,0,0,0,0,0,1,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,925,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,928,        double ya = za * baseA;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,930,        temp = ya + za * baseB;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,931,        double yb = -(temp - ya - za * baseB);,5,2,0,1,2,1,0,0,1,6,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,932,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,934,        temp = ya + zb * baseA;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,935,        yb += -(temp - ya - zb * baseA);,5,2,0,1,2,0,0,0,2,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,936,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,938,        temp = ya + zb * baseB;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,939,        yb += -(temp - ya - zb*baseB);,5,2,0,1,2,0,0,0,2,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,940,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,944,        temp = ya + baseA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,945,        yb += -(temp - baseA - ya);,4,1,0,1,2,0,0,0,2,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,946,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,948,        temp = ya + za;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,950,        yb += -(temp - ya - za);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,951,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,953,        temp = ya + baseB;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,955,        yb += -(temp - ya - baseB);,4,1,0,1,2,0,0,0,2,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,956,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,958,        temp = ya + zb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,960,        yb += -(temp - ya - zb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,961,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,963,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,965,            double denom = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,966,            double denomr = 1.0 / denom;,2,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,967,            double denomb = -(denom - 1.0 - ya) + yb;,4,2,0,1,2,1,0,0,1,6,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,968,            double ratio = ya * denomr;,3,1,0,0,0,1,0,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,969,            temp = ratio * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,970,            final double ra = ratio + temp - temp;,4,2,0,0,0,2,0,0,1,4,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,971,            double rb = ratio - ra;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,973,            temp = denom * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,974,            za = denom + temp - temp;,4,2,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,975,            zb = denom - za;,3,1,0,0,0,0,0,0,1,3,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,977,            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;,11,9,0,1,2,0,0,0,1,5,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,988,            rb += yb * denomr;                      // numerator,3,1,0,0,0,0,0,0,1,3,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,989,            rb += -ya * denomb * denomr * denomr;   // denominator,5,1,0,0,0,0,0,0,2,3,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,992,            ya = -ra;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,993,            yb = -rb;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,996,        if (hiPrecOut != null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,997,            hiPrecOut[0] = ya;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,998,            hiPrecOut[1] = yb;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1001,        return ya + yb;,2,1,0,0,0,1,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1051,            final double a = d * 9.31322574615478515625E-10;,2,1,0,0,0,2,0,0,1,4,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1052,            split[0] = (d + a - d) * HEX_40000000;,4,3,1,1,4,0,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1053,            split[1] = d - split[0];,1,1,1,0,4,0,0,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1124,            in[0] = in[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1125,            in[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1256,"        return log(x, null);",0,0,0,0,2,1,2,0,1,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1266,        if (x==0) { // Handle special case of +0/-0,1,1,0,1,3,2,0,0,0,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1267,            return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1269,        long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1272,        if ((bits & 0x8000000000000000L) != 0 || x != x) {,3,4,0,2,5,1,0,0,0,5,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1273,            if (x != 0.0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1274,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1275,                    hiPrec[0] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1278,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1283,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1284,            if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1285,                hiPrec[0] = Double.POSITIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1288,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1292,        int exp = (int)(bits >> 52)-1023;,2,2,0,1,4,2,0,0,0,5,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1294,        if ((bits & 0x7ff0000000000000L) == 0) {,1,2,0,2,5,1,0,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1296,            if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1298,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1299,                    hiPrec[0] = Double.NEGATIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1302,                return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1306,            bits <<= 1;,1,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1307,            while ( (bits & 0x0010000000000000L) == 0) {,1,2,0,2,5,1,0,0,0,5,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1308,                exp--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1309,                bits <<= 1;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1314,        if (exp == -1 || exp == 0) {,2,3,0,1,3,1,0,0,1,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1315,            if (x < 1.01 && x > 0.99 && hiPrec == null) {,3,5,0,1,3,1,0,0,0,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1320,                double xa = x - 1.0;,2,1,0,0,0,1,0,0,0,3,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1321,                double xb = xa - x + 1.0;,3,2,0,0,0,1,0,0,0,3,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1322,                double tmp = xa * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1323,                double aa = xa + tmp - tmp;,4,2,0,0,0,1,0,0,0,3,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1324,                double ab = xa - aa;,3,1,0,0,0,1,0,0,0,3,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1325,                xa = aa;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1326,                xb = ab;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1328,                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];,3,1,1,0,4,1,0,0,0,5,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1329,                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];,3,1,1,0,4,1,0,0,0,5,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1331,                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,53,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1333,                    aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1334,                    ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1336,                    tmp = aa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1337,                    ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1338,                    yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1341,                    aa = ya + LN_QUICK_COEF[i][0];,2,1,1,0,4,0,0,0,1,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1342,                    ab = yb + LN_QUICK_COEF[i][1];,2,1,1,0,4,0,0,0,1,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1344,                    tmp = aa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1345,                    ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1346,                    yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1350,                aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1351,                ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1353,                tmp = aa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1354,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1355,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1357,                return ya + yb;,2,1,0,0,0,1,0,0,0,3,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1362,        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];,2,2,1,2,10,2,0,0,0,6,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1373,        double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));,4,4,0,2,6,1,0,0,0,5,89,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1375,        double lnza = 0.0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1376,        double lnzb = 0.0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1378,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1380,            double tmp = epsilon * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1381,            double aa = epsilon + tmp - tmp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1382,            double ab = epsilon - aa;,3,1,0,0,0,1,0,0,0,3,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1383,            double xa = aa;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1384,            double xb = ab;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1387,            double numer = bits & 0x3ffffffffffL;,2,1,0,0,0,1,0,0,0,3,37,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1388,            double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);,3,2,0,1,2,1,0,0,0,5,59,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1389,            aa = numer - xa*denom - xb * denom;,6,4,0,0,0,0,0,0,1,3,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1390,            xb += aa / denom;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1393,            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];,3,1,1,0,4,1,0,0,0,5,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1394,            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];,3,1,1,0,4,1,0,0,0,5,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1396,            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1398,                aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1399,                ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1401,                tmp = aa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1402,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1403,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1406,                aa = ya + LN_HI_PREC_COEF[i][0];,2,1,1,0,4,0,0,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1407,                ab = yb + LN_HI_PREC_COEF[i][1];,2,1,1,0,4,0,0,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1409,                tmp = aa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1410,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1411,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1415,            aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1416,            ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1424,            lnza = aa + ab;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1425,            lnzb = -(lnza - aa - ab);,4,1,0,1,2,0,0,0,2,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1426,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1429,            lnza = -0.16624882440418567;,1,0,0,0,0,0,0,0,2,2,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1430,            lnza = lnza * epsilon + 0.19999954120254515;,3,2,0,0,0,0,0,0,1,3,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1431,            lnza = lnza * epsilon + -0.2499999997677497;,3,2,0,0,0,0,0,0,2,3,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1432,            lnza = lnza * epsilon + 0.3333333333332802;,3,2,0,0,0,0,0,0,1,3,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1433,            lnza = lnza * epsilon + -0.5;,3,2,0,0,0,0,0,0,2,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1434,            lnza = lnza * epsilon + 1.0;,3,2,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1435,            lnza = lnza * epsilon;,3,1,0,0,0,0,0,0,1,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1452,        double a = LN_2_A*exp;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1453,        double b = 0.0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1454,        double c = a+lnm[0];,2,1,1,0,2,1,0,0,0,5,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1455,        double d = -(c-a-lnm[0]);,3,1,1,1,4,1,0,0,1,7,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1456,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1457,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1459,        c = a + lnza;,3,1,0,0,0,0,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1460,        d = -(c - a - lnza);,4,1,0,1,2,0,0,0,2,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1461,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1462,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1464,        c = a + LN_2_B*exp;,4,2,0,0,0,0,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1465,        d = -(c - a - LN_2_B*exp);,5,2,0,1,2,0,0,0,2,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1466,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1467,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1469,        c = a + lnm[1];,2,1,1,0,2,0,0,0,1,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1470,        d = -(c - a - lnm[1]);,3,1,1,1,4,0,0,0,2,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1471,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1472,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1474,        c = a + lnzb;,3,1,0,0,0,0,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1475,        d = -(c - a - lnzb);,4,1,0,1,2,0,0,0,2,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1476,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1477,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1479,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1480,            hiPrec[0] = a;,1,0,1,0,2,0,0,0,1,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1481,            hiPrec[1] = b;,1,0,1,0,2,0,0,0,1,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1484,        return a + b;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1493,        if (x == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1494,            return x/0.0;   // -Infinity,1,1,0,0,0,1,0,0,0,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1497,        if (x > 0 && 1/x == 0) { // x = Infinity,2,4,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1498,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1501,        if (x>1e-6 || x<-1e-6) {,2,3,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1502,            double xpa = 1.0 + x;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1503,            double xpb = -(xpa - 1.0 - x);,3,1,0,1,2,1,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1505,            double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1507,"            final double lores = log(xpa, hiPrec);",1,0,0,0,2,2,3,0,2,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1508,            if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,2,3,0,0,4,73,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1509,                return lores;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1514,            double fx1 = xpb/xpa;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1516,            double epsilon = 0.5 * fx1 + 1.0;,2,2,0,0,0,1,0,0,0,3,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1517,            epsilon = epsilon * fx1;,3,1,0,0,0,0,0,0,1,3,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1519,            return epsilon + hiPrec[1] + hiPrec[0];,1,1,1,0,4,1,0,0,0,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1523,        double y = x * 0.333333333333333 - 0.5;,2,2,0,0,0,1,0,0,0,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1524,        y = y * x + 1.0;,3,2,0,0,0,0,0,0,1,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1525,        y = y * x;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1527,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1535,        final double hiPrec[] = new double[2];,1,0,0,0,4,4,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1537,"        final double lores = log(x, hiPrec);",1,0,0,0,2,2,3,0,2,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1538,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,2,3,0,0,4,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1539,            return lores;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1542,        final double tmp = hiPrec[0] * HEX_40000000;,2,1,1,0,2,2,0,0,1,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1543,        final double lna = hiPrec[0] + tmp - tmp;,3,2,1,0,2,2,0,0,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1544,        final double lnb = hiPrec[0] - lna + hiPrec[1];,2,2,1,0,4,2,0,0,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1546,        final double rln10a = 0.4342944622039795;,1,0,0,0,0,2,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1547,        final double rln10b = 1.9699272335463627E-8;,1,0,0,0,0,2,0,0,1,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1549,        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;,8,7,0,0,0,1,0,0,0,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1560,        final double lns[] = new double[2];,1,0,0,0,4,4,0,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1562,        if (y == 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1563,            return 1.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1566,        if (x != x) { // X is NaN,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1567,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1571,        if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1572,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1573,            if ((bits & 0x8000000000000000L) != 0) {,1,2,0,2,5,1,0,0,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1575,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1577,                if (y < 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1578,                    return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1581,                if (y < 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1582,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1585,                if (y > 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1586,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1590,            if (y < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1591,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1593,            if (y > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1594,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1597,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1600,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1601,            if (y != y) { // y is NaN,2,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1602,                return y;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1604,            if (y < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1605,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1607,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1611,        if (y == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1612,            if (x * x == 1.0) {,2,2,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1613,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1616,            if (x * x > 1.0) {,2,2,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1617,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1619,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1623,        if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1624,            if (y != y) { // y is NaN,2,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1625,                return y;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1628,            if (y < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1629,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1630,                if (y == yi && (yi & 1) == 1) {,3,4,0,2,5,1,0,0,0,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1631,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1634,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1637,            if (y > 0)  {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1638,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1639,                if (y == yi && (yi & 1) == 1) {,3,4,0,2,5,1,0,0,0,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1640,                    return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1643,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1647,        if (y == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1649,            if (x * x == 1.0) {,2,2,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1650,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1653,            if (x * x < 1.0) {,2,2,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1654,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1656,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1661,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1663,            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {,4,3,0,1,3,1,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1664,"                return pow(-x, y);",1,0,0,0,2,1,2,0,2,5,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1667,            if (y == (long) y) {,2,1,0,2,5,2,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1669,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);",3,2,0,2,8,2,4,0,5,7,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1671,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1678,        if (y < 8e298 && y > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1679,            double tmp1 = y * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1680,            ya = y + tmp1 - tmp1;,4,2,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1681,            yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1682,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1683,            double tmp1 = y * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,45,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1684,            double tmp2 = tmp1 * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,48,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1685,            ya = (tmp1 + tmp2 - tmp1) * HEX_40000000 * HEX_40000000;,6,3,0,1,2,0,0,0,1,5,56,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1686,            yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1690,"        final double lores = log(x, lns);",1,0,0,0,2,2,3,0,2,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1691,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,2,3,0,0,4,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1692,            return lores;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1695,        double lna = lns[0];,1,0,1,0,2,1,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1696,        double lnb = lns[1];,1,0,1,0,2,1,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1699,        double tmp1 = lna * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1700,        double tmp2 = lna + tmp1 - tmp1;,4,2,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1701,        lnb += lna - tmp2;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1702,        lna = tmp2;,2,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1705,        final double aa = lna * ya;,3,1,0,0,0,2,0,0,1,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1706,        final double ab = lna * yb + lnb * ya + lnb * yb;,7,5,0,0,0,2,0,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1708,        lna = aa+ab;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1709,        lnb = -(lna - aa - ab);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1711,        double z = 1.0 / 120.0;,1,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1712,        z = z * lnb + (1.0 / 24.0);,3,3,0,1,2,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1713,        z = z * lnb + (1.0 / 6.0);,3,3,0,1,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1714,        z = z * lnb + 0.5;,3,2,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1715,        z = z * lnb + 1.0;,3,2,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1716,        z = z * lnb;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1718,"        final double result = exp(lna, z, null);",1,0,0,0,2,2,3,0,2,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1720,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1975,        double x2 = x*x;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1977,        double p = 2.7553817452272217E-6;,1,0,0,0,0,1,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1978,        p = p * x2 + -1.9841269659586505E-4;,3,2,0,0,0,0,0,0,2,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1979,        p = p * x2 + 0.008333333333329196;,3,2,0,0,0,0,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1980,        p = p * x2 + -0.16666666666666666;,3,2,0,0,0,0,0,0,2,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1983,        p = p * x2 * x;,4,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1985,        return p;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1995,        double x2 = x*x;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1997,        double p = 2.479773539153719E-5;,1,0,0,0,0,1,0,0,0,2,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1998,        p = p * x2 + -0.0013888888689039883;,3,2,0,0,0,0,0,0,2,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,1999,        p = p * x2 + 0.041666666666621166;,3,2,0,0,0,0,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2000,        p = p * x2 + -0.49999999999999994;,3,2,0,0,0,0,0,0,2,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2001,        p *= x2;,2,0,0,0,0,0,0,0,1,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2003,        return p;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2014,        int idx = (int) ((xa * 8.0) + 0.5);,2,2,0,2,6,2,0,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2015,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,2,1,1,0,2,2,0,0,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2018,        final double sintA = SINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2019,        final double sintB = SINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2020,        final double costA = COSINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2021,        final double costB = COSINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2024,        double sinEpsA = epsilon;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2025,        double sinEpsB = polySine(epsilon);,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2026,        final double cosEpsA = 1.0;,1,0,0,0,0,2,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2027,        final double cosEpsB = polyCosine(epsilon);,1,0,0,1,2,2,2,0,2,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2030,        final double temp = sinEpsA * HEX_40000000;,3,1,0,0,0,2,0,0,1,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2031,        double temp2 = (sinEpsA + temp) - temp;,4,2,0,1,2,1,0,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2032,        sinEpsB +=  sinEpsA - temp2;,3,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2033,        sinEpsA = temp2;,2,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2059,        double a = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2060,        double b = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2062,        double t = sintA;,2,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2063,        double c = a + t;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2064,        double d = -(c - a - t);,4,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2065,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2066,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2068,        t = costA * sinEpsA;,3,1,0,0,0,0,0,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2069,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2070,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2071,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2072,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2074,        b = b + sintA * cosEpsB + costA * sinEpsB;,6,4,0,0,0,0,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2089,        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;,9,6,0,0,0,0,0,0,1,3,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2116,        if (xb != 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2117,            t = ((costA + costB) * (cosEpsA + cosEpsB) -,5,5,0,1,5,0,0,0,1,5,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2119,            c = a + t;,3,1,0,0,0,0,0,0,1,3,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2120,            d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2121,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2122,            b = b + d;,3,1,0,0,0,0,0,0,1,3,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2125,        result = a + b;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2127,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2138,        final double pi2a = 1.5707963267948966;,1,0,0,0,0,2,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2139,        final double pi2b = 6.123233995736766E-17;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2141,        final double a = pi2a - xa;,3,1,0,0,0,2,0,0,1,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2142,        double b = -(a - pi2a + xa);,4,2,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2143,        b += pi2b - xb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2145,"        return sinQ(a, b);",0,0,0,0,2,1,3,0,1,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2158,        int idx = (int) ((xa * 8.0) + 0.5);,2,2,0,2,6,2,0,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2159,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,2,1,1,0,2,2,0,0,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2162,        final double sintA = SINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2163,        final double sintB = SINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2164,        final double costA = COSINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2165,        final double costB = COSINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2168,        double sinEpsA = epsilon;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2169,        double sinEpsB = polySine(epsilon);,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2170,        final double cosEpsA = 1.0;,1,0,0,0,0,2,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2171,        final double cosEpsB = polyCosine(epsilon);,1,0,0,1,2,2,2,0,2,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2174,        double temp = sinEpsA * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2175,        double temp2 = (sinEpsA + temp) - temp;,4,2,0,1,2,1,0,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2176,        sinEpsB +=  sinEpsA - temp2;,3,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2177,        sinEpsA = temp2;,2,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2202,        double a = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2203,        double b = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2206,        double t = sintA;,2,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2207,        double c = a + t;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2208,        double d = -(c - a - t);,4,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2209,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2210,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2212,        t = costA*sinEpsA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2213,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2214,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2215,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2216,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2218,        b = b + sintA*cosEpsB + costA*sinEpsB;,6,4,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2219,        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;,9,6,0,0,0,0,0,0,1,3,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2221,        double sina = a + b;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2222,        double sinb = -(sina - a - b);,4,1,0,1,2,1,0,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2226,        a = b = c = d = 0.0;,4,0,0,0,0,0,0,0,4,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2228,        t = costA*cosEpsA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2229,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2230,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2231,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2232,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2234,        t = -sintA*sinEpsA;,3,1,0,0,0,0,0,0,2,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2235,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2236,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2237,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2238,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2240,        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;,8,6,0,0,0,0,0,0,1,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2241,        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);,8,6,0,1,2,0,0,0,1,5,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2243,        double cosa = a + b;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2244,        double cosb = -(cosa - a - b);,4,1,0,1,2,1,0,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2246,        if (cotanFlag) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2248,            tmp = cosa; cosa = sina; sina = tmp;,6,0,0,0,0,0,0,0,3,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2249,            tmp = cosb; cosb = sinb; sinb = tmp;,6,0,0,0,0,0,0,0,3,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2263,        double est = sina/cosa;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2266,        temp = est * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2267,        double esta = (est + temp) - temp;,4,2,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2268,        double estb =  est - esta;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2270,        temp = cosa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2271,        double cosaa = (cosa + temp) - temp;,4,2,0,1,2,1,0,0,0,5,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2272,        double cosab =  cosa - cosaa;,3,1,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2275,        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding,11,9,0,1,2,2,0,0,0,5,114,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2276,        err += sinb/cosa;                     // Change in est due to sinb,3,1,0,0,0,0,0,0,1,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2277,        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb,5,3,0,0,0,0,0,0,2,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2279,        if (xb != 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2282,            double xbadj = xb + est*est*xb;,5,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2283,            if (cotanFlag) {,1,0,0,1,3,1,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2284,                xbadj = -xbadj;,2,0,0,0,0,0,0,0,2,2,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2287,            err += xbadj;,2,0,0,0,0,0,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2290,        return est+err;,2,1,0,0,0,1,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2307,        long inbits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2308,        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,2,0,0,0,5,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2311,        inbits &= 0x000fffffffffffffL;,1,0,0,0,0,0,0,0,1,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2312,        inbits |= 0x0010000000000000L;,1,0,0,0,0,0,0,0,1,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2315,        exponent++;,1,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2316,        inbits <<= 11;,1,0,0,0,0,0,0,0,1,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2322,        int idx = exponent >> 6;,2,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2323,        int shift = exponent - (idx << 6);,3,2,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2325,        if (shift != 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2326,            shpi0 = (idx == 0) ? 0 : (RECIP_2PI[idx-1] << shift);,4,3,1,1,6,0,0,0,1,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2327,            shpi0 |= RECIP_2PI[idx] >>> (64-shift);,2,2,1,1,4,0,0,0,1,6,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2328,            shpiA = (RECIP_2PI[idx] << shift) | (RECIP_2PI[idx+1] >>> (64-shift));,4,5,1,2,10,0,0,0,1,6,70,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2329,            shpiB = (RECIP_2PI[idx+1] << shift) | (RECIP_2PI[idx+2] >>> (64-shift));,5,6,1,2,10,0,0,0,1,6,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2331,            shpi0 = (idx == 0) ? 0 : RECIP_2PI[idx-1];,3,2,1,1,4,0,0,0,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2332,            shpiA = RECIP_2PI[idx];,1,0,1,0,2,0,0,0,1,4,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2333,            shpiB = RECIP_2PI[idx+1];,2,1,1,0,2,0,0,0,1,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2337,        long a = inbits >>> 32;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2338,        long b = inbits & 0xffffffffL;,2,1,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2340,        long c = shpiA >>> 32;,2,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2341,        long d = shpiA & 0xffffffffL;,2,1,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2343,        long ac = a * c;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2344,        long bd = b * d;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2345,        long bc = b * c;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2346,        long ad = a * d;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2348,        long prodB = bd + (ad << 32);,3,2,0,1,2,1,0,0,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2349,        long prodA = ac + (ad >>> 32);,3,2,0,1,2,1,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2351,        boolean bita = (bd & 0x8000000000000000L) != 0;,2,2,0,1,2,1,0,0,0,5,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2352,        boolean bitb = (ad & 0x80000000L ) != 0;,2,2,0,1,2,1,0,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2353,        boolean bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,1,0,0,0,5,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2356,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2358,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2361,        bita = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2362,        bitb = (bc & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2364,        prodB = prodB + (bc << 32);,3,2,0,1,2,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2365,        prodA = prodA + (bc >>> 32);,3,2,0,1,2,0,0,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2367,        bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2370,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2372,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2376,        c = shpiB >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2377,        d = shpiB & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2378,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2379,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2380,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2383,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2385,        bita = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2386,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2387,        prodB += ac;,2,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2388,        bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2390,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2392,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2396,        c = shpi0 >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2397,        d = shpi0 & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2399,        bd = b * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2400,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2401,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2403,        prodA += bd + ((bc + ad) << 32);,4,3,0,2,4,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2415,        int intPart = (int)(prodA >>> 62);,2,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2418,        prodA <<= 2;,1,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2419,        prodA |= prodB >>> 62;,2,1,0,0,0,0,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2420,        prodB <<= 2;,1,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2423,        a = prodA >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2424,        b = prodA & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2426,        c = PI_O_4_BITS[0] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2427,        d = PI_O_4_BITS[0] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2429,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2430,        bd = b * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2431,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2432,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2434,        long prod2B = bd + (ad << 32);,3,2,0,1,2,1,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2435,        long prod2A = ac + (ad >>> 32);,3,2,0,1,2,1,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2437,        bita = (bd & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2438,        bitb = (ad & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2439,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2442,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2444,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2447,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2448,        bitb = (bc & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2450,        prod2B = prod2B + (bc << 32);,3,2,0,1,2,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2451,        prod2A = prod2A + (bc >>> 32);,3,2,0,1,2,0,0,0,1,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2453,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2456,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2458,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2462,        c = PI_O_4_BITS[1] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2463,        d = PI_O_4_BITS[1] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2464,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2465,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2466,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2469,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2471,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2472,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2473,        prod2B += ac;,2,0,0,0,0,0,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2474,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2476,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2478,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2482,        a = prodB >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2483,        b = prodB & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2484,        c = PI_O_4_BITS[0] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2485,        d = PI_O_4_BITS[0] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2486,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2487,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2488,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2491,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2493,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2494,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2495,        prod2B += ac;,2,0,0,0,0,0,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2496,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2498,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2500,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2504,        double tmpA = (prod2A >>> 12) / TWO_POWER_52;  // High order 52 bits,3,2,0,1,2,1,0,0,0,5,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2505,        double tmpB = (((prod2A & 0xfffL) << 40) + (prod2B >>> 24)) / TWO_POWER_52 / TWO_POWER_52; // Low bits,5,5,0,3,8,1,0,0,0,5,102,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2507,        double sumA = tmpA + tmpB;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2508,        double sumB = -(sumA - tmpA - tmpB);,4,1,0,1,2,1,0,0,1,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2511,        result[0] = intPart;,1,0,1,0,2,0,0,0,1,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2512,        result[1] = sumA * 2.0;,1,1,1,0,2,0,0,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2513,        result[2] = sumB * 2.0;,1,1,1,0,2,0,0,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2514,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2522,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2523,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2525,        double xb = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2528,        xa = x;,2,0,0,0,0,0,0,0,1,2,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2529,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2530,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2531,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2535,        if (xa == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2536,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2537,            if (bits < 0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2538,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2540,            return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2543,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2544,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2548,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2552,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2553,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2554,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2555,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2556,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2557,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2562,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2568,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2569,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2570,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2572,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2573,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2574,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2575,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2577,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2578,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2579,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2580,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2582,                if (remA > 0.0) {,1,1,0,1,3,1,0,0,0,5,17,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2583,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2589,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2590,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2591,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2592,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2593,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2596,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2597,            quadrant ^= 2;  // Flip bit 1,1,0,0,0,0,0,0,0,1,2,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2600,        switch (quadrant) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2602,"                return sinQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2604,"                return cosQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2606,"                return -sinQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2608,"                return -cosQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2610,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2620,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2623,        double xa = x;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2624,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2625,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2628,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2629,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2633,        double xb = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2634,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2638,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2639,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2640,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2641,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2642,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2643,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2648,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2654,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2655,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2656,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2658,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2659,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2660,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2661,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2663,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2664,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2665,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2666,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2668,                if (remA > 0.0) {,1,1,0,1,3,1,0,0,0,5,17,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2669,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2675,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2676,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2677,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2678,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2679,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2685,        switch (quadrant) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2687,"                return cosQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2689,"                return -sinQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2691,"                return -cosQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2693,"                return sinQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2695,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2705,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2706,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2709,        double xa = x;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2710,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2711,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2712,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2716,        if (xa == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2717,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2718,            if (bits < 0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2719,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2721,            return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2724,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2725,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2729,        double xb = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2730,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2734,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2735,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2736,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2737,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2738,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2739,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2744,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2750,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2751,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2752,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2754,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2755,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2756,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2757,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2759,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2760,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2761,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2762,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2764,                if (remA > 0.0) {,1,1,0,1,3,1,0,0,0,5,17,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2765,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2771,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2772,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2773,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2774,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2775,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2778,        if (xa > 1.5) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2780,            final double pi2a = 1.5707963267948966;,1,0,0,0,0,2,0,0,1,3,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2781,            final double pi2b = 6.123233995736766E-17;,1,0,0,0,0,2,0,0,1,3,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2783,            final double a = pi2a - xa;,3,1,0,0,0,2,0,0,1,4,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2784,            double b = -(a - pi2a + xa);,4,2,0,1,2,1,0,0,1,6,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2785,            b += pi2b - xb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2787,            xa = a + b;,3,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2788,            xb = -(xa - a - b);,4,1,0,1,2,0,0,0,2,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2789,            quadrant ^= 1;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2790,            negative ^= true;,1,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2794,        if ((quadrant & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2795,"            result = tanQ(xa, xb, false);",1,0,0,0,2,0,3,0,3,4,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2797,"            result = -tanQ(xa, xb, true);",1,0,0,0,2,0,3,0,4,4,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2800,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2801,            result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2804,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2813,"        return atan(x, 0.0, false);",0,0,0,0,2,1,2,0,2,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2823,        boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2826,        if (xa == 0.0) { // Matches +/- 0.0; return correct sign,1,1,0,1,3,2,0,0,0,5,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2827,"            return leftPlane ? copySign(Math.PI, xa) : xa;",4,0,0,0,2,1,2,0,1,5,46,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2830,        if (xa < 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2832,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2833,            xb = -xb;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2834,            negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2837,        if (xa > 1.633123935319537E16) { // Very large input,1,1,0,1,3,1,0,0,0,5,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2838,            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);,6,3,0,1,6,1,0,0,1,6,61,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2842,        if (xa < 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2843,            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);,4,4,0,3,8,1,0,0,2,6,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2845,            double temp = 1.0/xa;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2846,            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);,4,4,0,3,8,1,0,0,3,6,74,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2848,        double epsA = xa - TANGENT_TABLE_A[idx];,2,1,1,0,2,1,0,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2849,        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);,3,2,1,1,4,1,0,0,1,7,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2850,        epsB += xb - TANGENT_TABLE_B[idx];,2,1,1,0,2,0,0,0,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2852,        double temp = epsA + epsB;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2853,        epsB = -(temp - epsA - epsB);,4,1,0,1,2,0,0,0,2,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2854,        epsA = temp;,2,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2857,        temp = xa * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2858,        double ya = xa + temp - temp;,4,2,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2859,        double yb = xb + xa - ya;,4,2,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2860,        xa = ya;,2,0,0,0,0,0,0,0,1,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2861,        xb += yb;,2,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2864,        if (idx == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2867,            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,3,5,1,2,10,1,0,0,0,6,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2869,            ya = epsA * denom;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2870,            yb = epsB * denom;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2871,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2872,            double temp2 = xa * TANGENT_TABLE_A[idx];,2,1,1,0,2,1,0,0,0,5,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2873,            double za = 1.0 + temp2;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2874,            double zb = -(za - 1.0 - temp2);,3,1,0,1,2,1,0,0,1,6,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2875,            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];,3,3,1,0,4,0,0,0,1,5,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2876,            temp = za + temp2;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2877,            zb += -(temp - za - temp2);,4,1,0,1,2,0,0,0,2,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2878,            za = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2880,            zb += xb * TANGENT_TABLE_B[idx];,2,1,1,0,2,0,0,0,1,5,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2881,            ya = epsA / za;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2883,            temp = ya * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2884,            final double yaa = (ya + temp) - temp;,4,2,0,1,2,2,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2885,            final double yab = ya - yaa;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2887,            temp = za * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2888,            final double zaa = (za + temp) - temp;,4,2,0,1,2,2,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2889,            final double zab = za - zaa;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2892,            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;,11,9,0,1,2,0,0,0,1,5,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2894,            yb += -epsA * zb / za / za;,5,3,0,0,0,0,0,0,2,3,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2895,            yb += epsB / za;,3,1,0,0,0,0,0,0,1,3,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2899,        epsA = ya;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2900,        epsB = yb;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2903,        double epsA2 = epsA*epsA;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2914,        yb = 0.07490822288864472;,1,0,0,0,0,0,0,0,1,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2915,        yb = yb * epsA2 + -0.09088450866185192;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2916,        yb = yb * epsA2 + 0.11111095942313305;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2917,        yb = yb * epsA2 + -0.1428571423679182;,3,2,0,0,0,0,0,0,2,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2918,        yb = yb * epsA2 + 0.19999999999923582;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2919,        yb = yb * epsA2 + -0.33333333333333287;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2920,        yb = yb * epsA2 * epsA;,4,1,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2923,        ya = epsA;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2925,        temp = ya + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2926,        yb = -(temp - ya - yb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2927,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2930,        yb += epsB / (1.0 + epsA * epsA);,4,3,0,1,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2936,        double za = EIGHTHS[idx] + ya;,2,1,1,0,2,1,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2937,        double zb = -(za - EIGHTHS[idx] - ya);,3,1,1,1,4,1,0,0,1,7,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2938,        temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2939,        zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2940,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2942,        result = za + zb;,3,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2943,        resultb = -(result - za - zb);,4,1,0,1,2,0,0,0,2,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2945,        if (leftPlane) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2947,            final double pia = 1.5707963267948966*2.0;,1,1,0,0,0,2,0,0,1,4,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2948,            final double pib = 6.123233995736766E-17*2.0;,1,1,0,0,0,2,0,0,1,4,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2950,            za = pia - result;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2951,            zb = -(za - pia + result);,4,2,0,1,2,0,0,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2952,            zb += pib - resultb;,3,1,0,0,0,0,0,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2954,            result = za + zb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2955,            resultb = -(result - za - zb);,4,1,0,1,2,0,0,0,2,5,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2959,        if (negate ^ leftPlane) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2960,            result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2963,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2973,        if (x !=x || y != y) {,4,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2974,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2977,        if (y == 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2978,            double result = x*y;,3,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2979,            double invx = 1.0/x;,2,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2980,            double invy = 1.0/y;,2,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2982,            if (invx == 0.0) { // X is infinite,1,1,0,1,3,1,0,0,0,5,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2983,                if (x > 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2984,                    return y; // return +/- 0.0,1,0,0,0,0,2,0,0,0,2,27,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2986,"                    return copySign(Math.PI, y);",2,0,0,0,2,1,2,0,1,5,28,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2990,            if (x < 0.0 || invx < 0.0) {,2,3,0,1,3,1,0,0,0,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2991,                if (y < 0.0 || invy < 0.0) {,2,3,0,1,3,1,0,0,0,5,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2992,                    return -Math.PI;,2,0,0,0,0,1,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2994,                    return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,2997,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3003,        if (y == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3004,            if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3005,                return Math.PI/4.0;,2,1,0,0,0,1,0,0,0,3,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3008,            if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3009,                return Math.PI*3.0/4.0;,2,2,0,0,0,1,0,0,0,3,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3012,            return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3015,        if (y == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3016,            if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3017,                return -Math.PI/4.0;,2,1,0,0,0,1,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3020,            if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3021,                return -Math.PI*3.0/4.0;,2,2,0,0,0,1,0,0,1,4,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3024,            return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3027,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3028,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3029,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3032,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3033,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3037,        if (x == Double.NEGATIVE_INFINITY),3,1,0,1,2,1,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3039,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3040,                return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3043,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3044,                return -Math.PI;,2,0,0,0,0,1,0,0,1,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3050,        if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3051,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3052,                return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3055,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3056,                return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3061,        final double r = y/x;,3,1,0,0,0,2,0,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3062,        if (Double.isInfinite(r)) { // bypass calculations that can create NaN,0,0,0,2,5,1,3,0,0,4,70,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3063,"            return atan(r, 0, x < 0);",1,1,0,0,2,1,2,0,1,6,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3066,        double ra = doubleHighPart(r);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3067,        double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3070,        final double xa = doubleHighPart(x);,1,0,0,1,2,2,2,0,2,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3071,        final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3073,        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;,11,9,0,1,2,0,0,0,1,5,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3075,        double temp = ra + rb;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3076,        rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3077,        ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3079,        if (ra == 0) { // Fix up the sign so atan works correctly,1,1,0,1,3,1,0,0,0,5,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3080,"            ra = copySign(0.0, y);",1,0,0,0,2,0,2,0,2,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3084,"        double result = atan(ra, rb, x < 0);",2,1,0,0,2,1,3,0,1,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3086,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3094,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3095,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3098,      if (x > 1.0 || x < -1.0) {,2,3,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3099,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3102,      if (x == 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3103,          return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3106,      if (x == -1.0) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3107,          return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3110,      if (x == 0.0) { // Matches +/- 0.0; return correct sign,1,1,0,1,3,2,0,0,0,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3111,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3117,      double temp = x * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3118,      final double xa = x + temp - temp;,4,2,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3119,      final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3122,      double ya = xa*xa;,3,1,0,0,0,1,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3123,      double yb = xa*xb*2.0 + xb*xb;,5,3,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3126,      ya = -ya;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3127,      yb = -yb;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3129,      double za = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3130,      double zb = -(za - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3132,      temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3133,      zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3134,      za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3138,      y = sqrt(za);,1,0,0,1,2,0,2,0,2,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3139,      temp = y * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3140,      ya = y + temp - temp;,4,2,0,0,0,0,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3141,      yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3144,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,9,8,0,1,4,0,0,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3147,      double dx = zb / (2.0*y);,3,2,0,1,2,1,0,0,0,5,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3150,      double r = x/y;,3,1,0,0,0,1,0,0,0,3,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3151,      temp = r * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3152,      double ra = r + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3153,      double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3155,      rb += (x - ra*ya - ra*yb - rb*ya - rb*yb) / y;  // Correct for rounding in division,11,9,0,1,2,1,0,0,1,6,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3156,      rb += -x * dx / y / y;  // Add in effect additional bits of sqrt.,5,3,0,0,0,0,0,0,2,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3158,      temp = ra + rb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3159,      rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3160,      ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3162,"      return atan(ra, rb, false);",0,0,0,0,2,1,3,0,2,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3170,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3171,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3174,      if (x > 1.0 || x < -1.0) {,2,3,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3175,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3178,      if (x == -1.0) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3179,          return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3182,      if (x == 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3183,          return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3186,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3187,          return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3193,      double temp = x * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3194,      final double xa = x + temp - temp;,4,2,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3195,      final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3198,      double ya = xa*xa;,3,1,0,0,0,1,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3199,      double yb = xa*xb*2.0 + xb*xb;,5,3,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3202,      ya = -ya;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3203,      yb = -yb;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3205,      double za = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3206,      double zb = -(za - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3208,      temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3209,      zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3210,      za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3213,      double y = sqrt(za);,1,0,0,1,2,1,2,0,1,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3214,      temp = y * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3215,      ya = y + temp - temp;,4,2,0,0,0,0,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3216,      yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3219,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,9,8,0,1,4,0,0,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3222,      yb += zb / (2.0*y);,3,2,0,1,2,0,0,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3223,      y = ya+yb;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3224,      yb = -(y - ya - yb);,4,1,0,1,2,0,0,0,2,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3227,      double r = y/x;,3,1,0,0,0,1,0,0,0,3,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3230,      if (Double.isInfinite(r)) { // x is effectively zero,0,0,0,2,5,1,3,0,0,4,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3231,          return Math.PI/2; // so return the appropriate value,2,1,0,0,0,2,0,0,0,3,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3234,      double ra = doubleHighPart(r);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3235,      double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3237,      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division,11,9,0,1,2,1,0,0,1,6,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3238,      rb += yb / x;  // Add in effect additional bits of sqrt.,3,1,0,0,0,0,0,0,1,3,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3240,      temp = ra + rb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3241,      rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3242,      ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3244,"      return atan(ra, rb, x<0);",1,1,0,0,2,1,3,0,1,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3253,      long inbits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3254,      int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,2,0,0,0,5,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3255,      boolean subnormal = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3257,      if (exponent == -1023) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3258,          if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3259,              return x;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3263,          subnormal = true;,1,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3264,          x *= 1.8014398509481984E16;  // 2^54,1,0,0,0,0,0,0,0,1,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3265,          inbits = Double.doubleToLongBits(x);,1,0,0,1,2,0,3,0,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3266,          exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,1,0,0,1,6,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3269,      if (exponent == 1024) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3271,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3275,      int exp3 = exponent / 3;,2,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3278,      double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) |,2,2,0,1,3,1,2,0,0,6,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3282,      final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);,2,2,0,2,4,2,2,0,1,7,98,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3285,      double est = -0.010714690733195933;,1,0,0,0,0,1,0,0,1,3,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3286,      est = est * mant + 0.0875862700108075;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3287,      est = est * mant + -0.3058015757857271;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3288,      est = est * mant + 0.7249995199969751;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3289,      est = est * mant + 0.5039018405998233;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3291,      est *= CBRTTWO[exponent % 3 + 2];,2,2,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3296,      final double xs = x / (p2*p2*p2);,5,2,0,1,2,2,0,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3297,      est += (xs - est*est*est) / (3*est*est);,7,4,0,1,4,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3298,      est += (xs - est*est*est) / (3*est*est);,7,4,0,1,4,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3301,      double temp = est * HEX_40000000;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3302,      double ya = est + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3303,      double yb = est - ya;,3,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3305,      double za = ya * ya;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3306,      double zb = ya * yb * 2.0 + yb * yb;,5,3,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3307,      temp = za * HEX_40000000;,3,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3308,      double temp2 = za + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3309,      zb += za - temp2;,3,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3310,      za = temp2;,2,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3312,      zb = za * yb + ya * zb + zb * yb;,7,5,0,0,0,0,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3313,      za = za * ya;,3,1,0,0,0,0,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3315,      double na = xs - za;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3316,      double nb = -(na - xs + za);,4,2,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3317,      nb -= zb;,2,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3319,      est += (na+nb)/(3*est*est);,5,3,0,1,4,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3322,      est *= p2;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3324,      if (subnormal) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3325,          est *= 3.814697265625E-6;  // 2^-18,1,0,0,0,0,0,0,0,1,2,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3328,      return est;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3338,        if (Double.isInfinite(x) || x == 0.0) { // Matches +/- 0.0; return correct sign,1,2,0,2,5,2,3,0,0,6,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3339,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3343,        final double facta = 0.01745329052209854;,1,0,0,0,0,2,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3344,        final double factb = 1.997844754509471E-9;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3346,        double xa = doubleHighPart(x);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3347,        double xb = x - xa;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3349,        double result = xb * factb + xb * facta + xa * factb + xa * facta;,9,7,0,0,0,1,0,0,0,3,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3350,        if (result == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3351,            result = result * x; // ensure correct sign if calculation underflows,3,1,0,0,0,1,0,0,1,4,69,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3353,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3363,        if (Double.isInfinite(x) || x == 0.0) { // Matches +/- 0.0; return correct sign,1,2,0,2,5,2,3,0,0,6,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3364,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3368,        final double facta = 57.2957763671875;,1,0,0,0,0,2,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3369,        final double factb = 3.145894820876798E-6;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3371,        double xa = doubleHighPart(x);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3372,        double xb = x - xa;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3374,        return xb * factb + xb * facta + xa * factb + xa * facta;,8,7,0,0,0,1,0,0,0,3,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3383,        return (x < 0) ? -x : x;,3,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3392,        return (x < 0l) ? -x : x;,3,1,0,1,2,1,0,0,1,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3401,        return (x < 0.0f) ? -x : (x == 0.0f) ? 0.0f : x; // -0.0 => +0.0,4,2,0,1,4,1,0,0,1,6,64,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3419,        if (Double.isInfinite(x)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3420,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3422,        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));,1,2,0,3,6,1,6,0,1,7,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3431,        if (Float.isInfinite(x)) {,0,0,0,2,5,1,3,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3432,            return Float.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3434,        return abs(x - Float.intBitsToFloat(Float.floatToIntBits(x) ^ 1));,1,2,0,3,6,1,6,0,1,7,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3446,        if ((n > -1023) && (n < 1024)) {,2,3,0,2,7,1,0,0,1,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3447,            return d * Double.longBitsToDouble(((long) (n + 1023)) << 52);,2,3,0,3,8,2,2,0,0,6,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3451,        if (Double.isNaN(d) || Double.isInfinite(d) || (d == 0)) {,1,2,0,2,9,1,6,0,0,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3452,            return d;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3454,        if (n < -2098) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3455,            return (d > 0) ? 0.0 : -0.0;,1,1,0,1,2,1,0,0,1,6,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3457,        if (n > 2097) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3458,            return (d > 0) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,69,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3462,        final long bits = Double.doubleToLongBits(d);,1,0,0,1,2,2,3,0,1,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3463,        final long sign = bits & 0x8000000000000000L;,2,1,0,0,0,2,0,0,1,4,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3464,        int  exponent   = ((int) (bits >>> 52)) & 0x7ff;,2,2,0,2,6,2,0,0,0,5,48,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3465,        long mantissa   = bits & 0x000fffffffffffffL;,2,1,0,0,0,1,0,0,0,3,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3468,        int scaledExponent = exponent + n;,3,1,0,0,0,1,0,0,0,3,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3470,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3472,            if (scaledExponent > 0) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3474,                return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,3,2,0,4,8,2,2,0,0,6,82,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3475,            } else if (scaledExponent > -53) {,1,1,0,1,4,2,0,0,1,6,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3479,                mantissa = mantissa | (1L << 52);,2,2,0,1,2,0,0,0,1,5,33,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3482,                final long mostSignificantLostBit = mantissa & (1L << (-scaledExponent));,3,2,0,2,4,2,0,0,2,6,73,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3483,                mantissa = mantissa >>> (1 - scaledExponent);,3,2,0,1,2,0,0,0,1,5,45,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3484,                if (mostSignificantLostBit != 0) {,1,1,0,1,3,1,0,0,0,5,34,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3486,                    mantissa++;,1,0,0,0,0,0,0,0,1,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3488,                return Double.longBitsToDouble(sign | mantissa);,2,1,0,1,2,1,2,0,0,6,48,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3492,                return (sign == 0L) ? 0.0 : -0.0;,1,1,0,1,2,1,0,0,1,6,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3496,            if (exponent == 0) {,1,1,0,1,3,1,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3499,                while ((mantissa >>> 52) != 1) {,1,2,0,2,5,1,0,0,0,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3500,                    mantissa = mantissa << 1;,2,1,0,0,0,0,0,0,1,3,25,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3501,                    --scaledExponent;,1,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3503,                ++scaledExponent;,1,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3504,                mantissa = mantissa & 0x000fffffffffffffL;,2,1,0,0,0,0,0,0,1,3,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3506,                if (scaledExponent < 2047) {,1,1,0,1,3,1,0,0,0,5,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3507,                    return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,3,2,0,4,8,2,2,0,0,6,82,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3509,                    return (sign == 0L) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,74,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3512,            } else if (scaledExponent < 2047) {,1,1,0,1,4,2,0,0,0,5,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3513,                return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,3,2,0,4,8,2,2,0,0,6,82,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3515,                return (sign == 0L) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,74,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3530,        if ((n > -127) && (n < 128)) {,2,3,0,2,7,1,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3531,            return f * Float.intBitsToFloat((n + 127) << 23);,2,3,0,2,4,1,2,0,0,6,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3535,        if (Float.isNaN(f) || Float.isInfinite(f) || (f == 0f)) {,1,2,0,2,9,1,6,0,0,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3536,            return f;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3538,        if (n < -277) {,1,1,0,1,3,1,0,0,1,6,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3539,            return (f > 0) ? 0.0f : -0.0f;,1,1,0,1,2,1,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3541,        if (n > 276) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3542,            return (f > 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,67,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3546,        final int bits = Float.floatToIntBits(f);,1,0,0,1,2,2,3,0,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3547,        final int sign = bits & 0x80000000;,2,1,0,0,0,2,0,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3548,        int  exponent  = (bits >>> 23) & 0xff;,2,2,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3549,        int mantissa   = bits & 0x007fffff;,2,1,0,0,0,1,0,0,0,3,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3552,        int scaledExponent = exponent + n;,3,1,0,0,0,1,0,0,0,3,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3554,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3556,            if (scaledExponent > 0) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3558,                return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,3,2,0,2,4,1,2,0,0,6,70,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3559,            } else if (scaledExponent > -24) {,1,1,0,1,4,2,0,0,1,6,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3563,                mantissa = mantissa | (1 << 23);,2,2,0,1,2,0,0,0,1,5,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3566,                final int mostSignificantLostBit = mantissa & (1 << (-scaledExponent));,3,2,0,2,4,2,0,0,2,6,71,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3567,                mantissa = mantissa >>> (1 - scaledExponent);,3,2,0,1,2,0,0,0,1,5,45,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3568,                if (mostSignificantLostBit != 0) {,1,1,0,1,3,1,0,0,0,5,34,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3570,                    mantissa++;,1,0,0,0,0,0,0,0,1,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3572,                return Float.intBitsToFloat(sign | mantissa);,2,1,0,1,2,1,2,0,0,6,45,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3576,                return (sign == 0) ? 0.0f : -0.0f;,1,1,0,1,2,1,0,0,1,6,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3580,            if (exponent == 0) {,1,1,0,1,3,1,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3583,                while ((mantissa >>> 23) != 1) {,1,2,0,2,5,1,0,0,0,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3584,                    mantissa = mantissa << 1;,2,1,0,0,0,0,0,0,1,3,25,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3585,                    --scaledExponent;,1,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3587,                ++scaledExponent;,1,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3588,                mantissa = mantissa & 0x007fffff;,2,1,0,0,0,0,0,0,1,3,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3590,                if (scaledExponent < 255) {,1,1,0,1,3,1,0,0,0,5,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3591,                    return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,3,2,0,2,4,1,2,0,0,6,70,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3593,                    return (sign == 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,71,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3596,            } else if (scaledExponent < 255) {,1,1,0,1,4,2,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3597,                return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,3,2,0,2,4,1,2,0,0,6,70,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3599,                return (sign == 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,5,1,0,1,2,1,0,0,0,5,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3639,        if (Double.isNaN(d) || Double.isNaN(direction)) {,0,1,0,2,7,1,6,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3640,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3641,        } else if (d == direction) {,2,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3642,            return direction;,1,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3643,        } else if (Double.isInfinite(d)) {,0,0,0,2,6,2,3,0,0,4,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3644,            return (d < 0) ? -Double.MAX_VALUE : Double.MAX_VALUE;,5,1,0,1,2,1,0,0,1,6,54,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3645,        } else if (d == 0) {,1,1,0,1,4,2,0,0,0,5,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3646,            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,5,1,0,1,2,1,0,0,1,6,62,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3651,        final long bits = Double.doubleToLongBits(d);,1,0,0,1,2,2,3,0,1,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3652,        final long sign = bits & 0x8000000000000000L;,2,1,0,0,0,2,0,0,1,4,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3653,        if ((direction < d) ^ (sign == 0L)) {,3,3,0,2,7,1,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3654,            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));,2,3,0,3,6,1,2,0,0,6,74,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3656,            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));,2,3,0,3,6,1,2,0,0,6,74,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3695,        if (Double.isNaN(f) || Double.isNaN(direction)) {,0,1,0,2,7,1,6,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3696,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3697,        } else if (f == direction) {,2,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3698,            return (float) direction;,1,0,0,1,2,2,0,0,0,4,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3699,        } else if (Float.isInfinite(f)) {,0,0,0,2,6,2,3,0,0,4,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3700,            return (f < 0f) ? -Float.MAX_VALUE : Float.MAX_VALUE;,5,1,0,1,2,1,0,0,1,6,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3701,        } else if (f == 0f) {,1,1,0,1,4,2,0,0,0,5,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3702,            return (direction < 0) ? -Float.MIN_VALUE : Float.MIN_VALUE;,5,1,0,1,2,1,0,0,1,6,60,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3707,        final int bits = Float.floatToIntBits(f);,1,0,0,1,2,2,3,0,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3708,        final int sign = bits & 0x80000000;,2,1,0,0,0,2,0,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3709,        if ((direction < f) ^ (sign == 0)) {,3,3,0,2,7,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3710,            return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));,2,3,0,3,6,1,2,0,0,6,62,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3712,            return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));,2,3,0,3,6,1,2,0,0,6,62,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3724,        if (x != x) { // NaN,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3725,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3728,        if (x >= TWO_POWER_52 || x <= -TWO_POWER_52) {,4,3,0,1,3,1,0,0,1,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3729,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3732,        y = (long) x;,2,0,0,1,2,1,0,0,1,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3733,        if (x < 0 && y != x) {,3,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3734,            y--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3737,        if (y == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3738,            return x*y;,2,1,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3741,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3751,        if (x != x) { // NaN,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3752,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3755,        y = floor(x);,1,0,0,1,2,0,2,0,2,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3756,        if (y == x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3757,            return y;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3760,        y += 1.0;,1,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3762,        if (y == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3763,            return x*y;,2,1,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3766,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3774,        double y = floor(x);,1,0,0,1,2,1,2,0,1,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3775,        double d = x - y;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3777,        if (d > 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3778,            if (y == -1.0) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3779,                return -0.0; // Preserve sign of operand,0,0,0,0,0,1,0,0,1,2,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3781,            return y+1.0;,1,1,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3783,        if (d < 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3784,            return y;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3788,        long z = (long) y;,2,0,0,1,2,2,0,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3789,        return (z & 1) == 0 ? y : y + 1.0;,3,3,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3797,        return (long) floor(x + 0.5);,1,1,0,1,4,2,1,0,1,7,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3805,        return (int) floor(x + 0.5f);,1,1,0,1,4,2,1,0,1,7,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3814,        return (a <= b) ? a : b;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3823,        return (a <= b) ? a : b;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3832,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3833,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3835,        if (a < b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3836,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3839,        if (a != b) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3840,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3844,        int bits = Float.floatToRawIntBits(a);,1,0,0,1,2,1,3,0,0,5,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3845,        if (bits == 0x80000000) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3846,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3848,        return b;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3857,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3858,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3860,        if (a < b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3861,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3864,        if (a != b) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3865,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3869,        long bits = Double.doubleToRawLongBits(a);,1,0,0,1,2,1,3,0,0,5,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3870,        if (bits == 0x8000000000000000L) {,1,1,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3871,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3873,        return b;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3882,        return (a <= b) ? b : a;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3891,        return (a <= b) ? b : a;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3900,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3901,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3903,        if (a < b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3904,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3907,        if (a != b) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3908,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3912,        int bits = Float.floatToRawIntBits(a);,1,0,0,1,2,1,3,0,0,5,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3913,        if (bits == 0x80000000) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3914,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3916,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3926,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3932,        if (a != b) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3933,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3937,        long bits = Double.doubleToRawLongBits(a);,1,0,0,1,2,1,3,0,0,5,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3938,        if (bits == 0x8000000000000000L) {,1,1,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3939,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3941,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3959,        if (Double.isInfinite(x) || Double.isInfinite(y)) {,0,1,0,2,7,1,6,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3960,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3961,        } else if (Double.isNaN(x) || Double.isNaN(y)) {,0,1,0,2,8,2,6,0,0,5,48,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3962,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3965,            final int expX = getExponent(x);,1,0,0,1,2,2,2,0,2,6,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3966,            final int expY = getExponent(y);,1,0,0,1,2,2,2,0,2,6,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3967,            if (expX > expY + 27) {,2,2,0,1,3,1,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3969,                return abs(x);,0,0,0,1,2,1,2,0,1,5,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3970,            } else if (expY > expX + 27) {,2,2,0,1,4,2,0,0,0,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3972,                return abs(y);,0,0,0,1,2,1,2,0,1,5,14,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3976,                final int middleExp = (expX + expY) / 2;,3,2,0,1,2,2,0,0,1,6,40,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3979,"                final double scaledX = scalb(x, -middleExp);",2,0,0,0,2,2,2,0,3,5,44,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3980,"                final double scaledY = scalb(y, -middleExp);",2,0,0,0,2,2,2,0,3,5,44,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3983,                final double scaledH = sqrt(scaledX * scaledX + scaledY * scaledY);,5,3,0,1,2,2,1,0,2,7,67,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,3986,"                return scalb(scaledH, middleExp);",0,0,0,0,2,1,3,0,1,4,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4014,"        return StrictMath.IEEEremainder(dividend, divisor); // TODO provide our own implementation",0,0,0,0,2,1,4,0,0,3,90,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4026,        long m = Double.doubleToLongBits(magnitude);,1,0,0,1,2,1,3,0,0,5,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4027,        long s = Double.doubleToLongBits(sign);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4028,        if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK,4,7,0,2,7,1,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4029,            return magnitude;,1,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4031,        return -magnitude; // flip sign,1,0,0,0,0,1,0,0,1,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4043,        int m = Float.floatToIntBits(magnitude);,1,0,0,1,2,1,3,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4044,        int s = Float.floatToIntBits(sign);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4045,        if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK,4,7,0,2,7,1,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4046,            return magnitude;,1,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4048,        return -magnitude; // flip sign,1,0,0,0,0,1,0,0,1,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4061,        return (int) ((Double.doubleToLongBits(d) >>> 52) & 0x7ff) - 1023;,0,3,0,3,8,2,3,0,0,5,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,50,4074,        return ((Float.floatToIntBits(f) >>> 23) & 0xff) - 127;,0,3,0,3,6,1,3,0,0,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,50,37,"        super(value, 0, true);",1,0,0,0,2,1,0,0,2,4,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,50,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,50,47,"        super(specific, value, 0, true);",2,0,0,0,2,1,0,0,2,4,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,50,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,44,"        super(specific, wrong, expected);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,45,        dimension = expected;,2,0,0,0,0,0,0,0,1,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,56,"        this(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, wrong, expected);",4,0,0,0,2,1,0,0,0,3,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,50,63,        return dimension;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,50,40,"        this(LocalizedFormats.NOT_FINITE_NUMBER, wrong, args);",4,0,0,0,2,1,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,50,41,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,50,53,"        super(specific, wrong, args);",3,0,0,0,2,1,0,0,1,4,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,50,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,61,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);",6,0,0,0,2,1,0,0,1,4,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,80,        super(direction == MathUtils.OrderDirection.INCREASING ?,4,1,0,0,1,1,0,0,1,5,56,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,89,        this.direction = direction;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,90,        this.strict = strict;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,91,        this.index = index;,2,0,0,0,0,1,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,92,        this.previous = previous;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,93,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,99,        return direction;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,105,        return strict;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,113,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,50,119,        return previous;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,43,    public MathArithmeticException() {,1,0,0,1,3,1,0,0,1,5,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,38,    private final ExceptionContext context = new ExceptionContext();,1,0,0,1,2,3,0,2,3,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,44,        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);,2,0,0,1,2,0,2,0,0,4,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,55,                                   Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,56,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,61,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,67,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,50,73,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1946,    public static enum OrderDirection {,1,0,0,0,1,3,0,0,2,4,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1948,"        INCREASING,",1,0,0,0,0,0,0,0,0,1,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1950,        DECREASING,1,0,0,0,0,0,0,0,0,1,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,53,        return maximalCount;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,62,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,73,        for (int i = 0; i < value; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,74,            incrementCount();,0,0,0,1,2,0,1,0,1,4,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,76,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,50,85,            throw new MaxCountExceededException(maximalCount);,1,0,0,1,2,2,0,1,1,6,50,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,50,1971,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,39,public class ExceptionContext implements Serializable {,1,0,0,0,1,3,0,1,1,5,55,1,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,45,    private List<Localizable> msgPatterns = new ArrayList<Localizable>();,1,0,0,1,2,2,0,4,2,6,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,51,    private List<Object[]> msgArguments = new ArrayList<Object[]>();,1,0,0,1,6,2,0,4,2,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,55,"    private Map<String, Object> context = new HashMap<String, Object>();",1,0,0,1,2,2,0,6,2,6,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,66,        msgPatterns.add(pattern);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,67,        msgArguments.add(ArgUtils.flatten(arguments));,0,0,0,2,4,0,5,0,0,3,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,79,"        context.put(key, value);",0,0,0,0,2,0,4,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,80,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,89,        return context.get(key);,0,0,0,1,2,1,3,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,98,        return context.keySet();,0,0,0,1,2,1,2,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,107,        return getMessage(Locale.US);,2,0,0,1,2,1,1,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,116,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,126,"        return buildMessage(locale, "": "");",0,0,0,0,2,1,2,0,2,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,138,"        return buildMessage(locale, separator);",0,0,0,0,2,1,3,0,1,4,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,150,        final StringBuilder sb = new StringBuilder();,1,0,0,1,2,2,0,2,2,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,151,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,152,        final int len = msgPatterns.size();,1,0,0,1,2,2,2,0,1,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,153,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,154,            final Localizable pat = msgPatterns.get(i);,1,0,0,1,2,1,3,1,1,7,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,155,            final Object[] args = msgArguments.get(i);,1,0,0,1,4,1,3,1,1,7,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,156,"            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),",1,0,0,1,3,2,3,2,2,7,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,158,            sb.append(fmt.format(args));,0,0,0,2,4,0,5,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,159,            if (++count < len) {,2,1,0,1,3,1,0,0,1,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,161,                sb.append(separator);,0,0,0,1,2,0,3,0,0,3,21,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,165,        return sb.toString();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,176,        serializeMessages(out);,0,0,0,1,2,0,2,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,177,        serializeContext(out);,0,0,0,1,2,0,2,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,178,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,189,        deSerializeMessages(in);,0,0,0,1,2,0,2,0,1,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,190,        deSerializeContext(in);,0,0,0,1,2,0,2,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,191,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,202,        final int len = msgPatterns.size();,1,0,0,1,2,2,2,0,1,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,203,        out.writeInt(len);,0,0,0,1,2,0,3,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,205,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,206,            final Localizable pat = msgPatterns.get(i);,1,0,0,1,2,1,3,1,1,7,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,208,            out.writeObject(pat);,0,0,0,1,2,0,3,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,209,            final Object[] args = msgArguments.get(i);,1,0,0,1,4,1,3,1,1,7,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,210,            final int aLen = args.length;,3,0,0,0,0,2,0,0,1,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,212,            out.writeInt(aLen);,0,0,0,1,2,0,3,0,0,3,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,213,            for (int j = 0; j < aLen; j++) {,4,1,0,1,3,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,214,                if (args[j] instanceof Serializable) {,0,0,1,1,5,2,0,1,0,5,38,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,216,                    out.writeObject(args[j]);,0,0,1,1,4,0,2,0,0,4,25,11,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,219,                    out.writeObject(nonSerializableReplacement(args[j]));,0,0,1,2,6,0,3,0,1,5,53,11,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,223,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,236,        final int len = in.readInt();,1,0,0,1,2,2,2,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,237,        msgPatterns = new ArrayList<Localizable>(len);,2,0,0,1,2,1,0,2,2,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,238,        msgArguments = new ArrayList<Object[]>(len);,2,0,0,1,4,1,0,2,2,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,240,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,242,            final Localizable pat = (Localizable) in.readObject();,1,0,0,1,4,1,2,2,1,7,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,243,            msgPatterns.add(pat);,0,0,0,1,2,0,3,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,245,            final int aLen = in.readInt();,1,0,0,1,2,2,2,0,1,6,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,246,            final Object[] args = new Object[aLen];,1,0,1,0,4,2,0,2,1,6,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,247,            for (int j = 0; j < aLen; j++) {,4,1,0,1,3,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,249,                args[j] = in.readObject();,0,0,1,1,4,0,2,0,1,5,26,8,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,251,            msgArguments.add(args);,0,0,0,1,2,0,3,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,253,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,264,        final int len = context.keySet().size();,1,0,0,1,4,2,3,0,1,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,265,        out.writeInt(len);,0,0,0,1,2,0,3,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,266,        for (String key : context.keySet()) {,1,0,0,2,5,1,2,1,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,268,            out.writeObject(key);,0,0,0,1,2,0,3,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,269,            final Object value = context.get(key);,1,0,0,1,2,1,3,1,1,7,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,270,            if (value instanceof Serializable) {,1,0,0,1,3,2,0,1,0,5,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,272,                out.writeObject(value);,0,0,0,1,2,0,3,0,0,3,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,275,                out.writeObject(nonSerializableReplacement(value));,0,0,0,2,4,0,4,0,1,4,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,277,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,278,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,291,        final int len = in.readInt();,1,0,0,1,2,2,2,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,292,"        context = new HashMap<String, Object>();",1,0,0,1,2,1,0,3,2,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,293,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,295,            final String key = (String) in.readObject();,1,0,0,1,4,1,2,2,1,7,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,297,            final Object value = in.readObject();,1,0,0,1,2,1,2,1,1,7,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,298,"            context.put(key, value);",0,0,0,0,2,0,4,0,0,2,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,300,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,50,310,"        return ""[Object could not be serialized: "" + obj.getClass().getName() + ""]"";",0,1,0,1,6,1,3,0,2,6,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,32,    private ArgUtils() {},1,0,0,1,4,1,0,0,1,5,21,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,42,        final List<Object> list = new ArrayList<Object>();,1,0,0,1,2,2,0,4,2,6,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,43,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,44,            for (Object o : array) {,2,0,0,1,3,1,0,1,0,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,45,                if (o instanceof Object[]) {,1,0,0,1,5,2,0,1,0,5,28,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,46,                    for (Object oR : flatten((Object[]) o)) {,2,0,0,3,9,1,1,2,1,7,41,10,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,47,                        list.add(oR);,0,0,0,1,2,0,3,0,0,3,13,13,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,50,                    list.add(o);,0,0,0,1,2,0,3,0,0,3,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,50,54,        return list.toArray();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,355,    private LocalizedFormats(final String sourceFormat) {,2,0,0,1,3,2,0,1,2,6,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,356,        this.sourceFormat = sourceFormat;,2,0,0,0,0,1,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,357,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,44,"    ARGUMENT_OUTSIDE_DOMAIN(""Argument {0} outside domain [{1} ; {2}]""),",1,0,0,1,10,0,0,0,1,4,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,45,"    ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1(""array sizes should have difference 1 ({0} != {1} + 1)""),",1,0,0,2,8,0,0,0,1,4,94,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,46,"    ARRAY_SUMS_TO_ZERO(""array sums to zero""),",1,0,0,1,2,0,0,0,1,4,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,47,"    ASSYMETRIC_EIGEN_NOT_SUPPORTED(""eigen decomposition of assymetric matrices not supported yet""),",1,0,0,1,2,0,0,0,1,4,95,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,48,"    AT_LEAST_ONE_COLUMN(""matrix must have at least one column""),",1,0,0,1,2,0,0,0,1,4,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,49,"    AT_LEAST_ONE_ROW(""matrix must have at least one row""),",1,0,0,1,2,0,0,0,1,4,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,50,"    BANDWIDTH(""bandwidth ({0})""),",1,0,0,2,6,0,0,0,1,4,29,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,51,"    BINOMIAL_INVALID_PARAMETERS_ORDER(""must have n >= k for binomial coefficient (n, k), got k = {0}, n = {1}""),",1,0,0,0,8,1,0,0,1,4,108,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,52,"    BINOMIAL_NEGATIVE_PARAMETER(""must have n >= 0 for binomial coefficient (n, k), got n = {0}""),",1,0,0,0,6,1,0,0,1,4,93,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,53,"    CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be cleared""),",1,0,0,1,2,0,0,0,1,4,123,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,54,"    CANNOT_COMPUTE_0TH_ROOT_OF_UNITY(""cannot compute 0-th root of unity, indefinite result""),",1,0,0,0,2,0,0,0,1,3,89,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,55,"    CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA(""cannot compute beta density at 0 when alpha = {0,number}""),",1,0,0,0,4,0,0,0,1,3,108,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,56,"    CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA(""cannot compute beta density at 1 when beta = %.3g""),",1,0,0,1,2,0,0,0,1,4,100,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,57,"    CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N(""cannot compute nth root for null or negative n: {0}""),",1,0,0,1,4,1,0,0,1,5,94,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,58,"    CANNOT_CONVERT_OBJECT_TO_FRACTION(""cannot convert given object to a fraction number: {0}""),",1,0,0,1,4,0,0,0,1,4,91,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,59,"    CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS(""cannot discard a negative number of elements ({0})""),",1,0,0,2,6,0,0,0,1,4,97,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,60,"    CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR(""cannot format a {0} instance as a 3D vector""),",1,0,0,1,4,0,0,0,1,4,83,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,61,"    CANNOT_FORMAT_INSTANCE_AS_COMPLEX(""cannot format a {0} instance as a complex number""),",1,0,0,1,4,0,0,0,1,4,86,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,62,"    CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR(""cannot format a {0} instance as a real vector""),",1,0,0,1,4,0,0,0,1,4,87,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,63,"    CANNOT_FORMAT_OBJECT_TO_FRACTION(""cannot format given object as a fraction number""),",1,0,0,1,2,0,0,0,1,4,84,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,64,"    CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be incremented""),",1,0,0,1,2,0,0,0,1,4,131,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,65,"    CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR(""cannot normalize a zero norm vector""),",1,0,0,1,2,0,0,0,1,4,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,66,"    CANNOT_RETRIEVE_AT_NEGATIVE_INDEX(""elements cannot be retrieved from a negative array index {0}""),",1,0,0,1,4,0,0,0,1,4,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,67,"    CANNOT_SET_AT_NEGATIVE_INDEX(""cannot set an element at a negative index {0}""),",1,0,0,1,4,0,0,0,1,4,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,68,"    CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY(""cannot substitute an element from an empty array""),",1,0,0,1,2,0,0,0,1,4,95,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,69,"    CANNOT_TRANSFORM_TO_DOUBLE(""Conversion Exception in Transformation: {0}""),",1,0,0,1,4,0,0,0,1,4,74,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,70,"    CARDAN_ANGLES_SINGULARITY(""Cardan angles singularity""),",1,0,0,1,2,0,0,0,1,4,55,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,71,"    CLASS_DOESNT_IMPLEMENT_COMPARABLE(""class ({0}) does not implement Comparable""),",1,0,0,2,6,1,0,0,1,5,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,72,"    CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT(""the closest orthogonal matrix has a negative determinant {0}""),",1,0,0,1,4,0,0,0,1,4,115,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,73,"    COLUMN_INDEX_OUT_OF_RANGE(""column index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,74,"    COLUMN_INDEX(""column index ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,46,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,75,"    CONTINUED_FRACTION_INFINITY_DIVERGENCE(""Continued fraction convergents diverged to +/- infinity for value {0}""),",1,0,0,1,4,1,0,0,1,5,112,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,76,"    CONTINUED_FRACTION_NAN_DIVERGENCE(""Continued fraction diverged to NaN for value {0}""),",1,0,0,1,4,1,0,0,1,5,86,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,77,"    CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR(""contraction criteria ({0}) smaller than the expansion factor ({1}).  This would lead to a never ending loop of expansion and contraction as a newly expanded internal storage array would immediately satisfy the criteria for contraction.""),",1,0,0,2,10,1,0,0,1,5,290,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,78,"    CONTRACTION_CRITERIA_SMALLER_THAN_ONE(""contraction criteria smaller than one ({0}).  This would lead to a never ending loop of expansion and contraction as an internal storage array length equal to the number of elements would satisfy the contraction criteria.""),",1,0,0,2,6,0,0,0,1,4,263,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,79,"    CONVERGENCE_FAILED(""convergence failed""), /* keep */",1,0,0,1,2,0,0,0,1,4,52,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,80,"    CROSSING_BOUNDARY_LOOPS(""some outline boundary loops cross each other""),",1,0,0,1,2,0,0,0,1,4,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,81,"    CUMULATIVE_PROBABILITY_RETURNED_NAN(""Cumulative probability function returned NaN for argument {0} p = {1}""),",1,0,0,1,6,1,0,0,1,5,109,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,82,"    DIFFERENT_ROWS_LENGTHS(""some rows have length {0} while others have length {1}""),",1,0,0,1,6,1,0,0,1,5,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,83,"    DIGEST_NOT_INITIALIZED(""digest not initialized""),",1,0,0,1,2,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,84,"    DIMENSIONS_MISMATCH_2x2(""got {0}x{1} but expected {2}x{3}""), /* keep */",1,0,0,1,10,0,0,0,1,4,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,85,"    DIMENSIONS_MISMATCH_SIMPLE(""{0} != {1}""), /* keep */",1,0,0,1,6,0,0,0,1,4,52,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,86,"    DIMENSIONS_MISMATCH(""dimensions mismatch""), /* keep */",1,0,0,1,2,0,0,0,1,4,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,87,"    DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN(""Discrete cumulative probability function returned NaN for argument {0}""),",1,0,0,1,4,1,0,0,1,5,119,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,88,"    DISTRIBUTION_NOT_LOADED(""distribution not loaded""),",1,0,0,1,2,0,0,0,1,4,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,89,"    DUPLICATED_ABSCISSA(""Abscissa {0} is duplicated at both indices {1} and {2}""),",1,0,0,1,8,0,0,0,1,4,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,90,"    EMPTY_CLUSTER_IN_K_MEANS(""empty cluster in k-means""),",1,0,0,1,2,0,0,0,1,4,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,91,"    EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY(""empty polynomials coefficients array""), /* keep */",1,0,0,1,2,0,0,0,1,4,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,92,"    EMPTY_SELECTED_COLUMN_INDEX_ARRAY(""empty selected column index array""),",1,0,0,1,2,0,0,0,1,4,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,93,"    EMPTY_SELECTED_ROW_INDEX_ARRAY(""empty selected row index array""),",1,0,0,1,2,0,0,0,1,4,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,94,"    EMPTY_STRING_FOR_IMAGINARY_CHARACTER(""empty string for imaginary character""),",1,0,0,1,2,1,0,0,1,5,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,95,"    ENDPOINTS_NOT_AN_INTERVAL(""endpoints do not specify an interval: [{0}, {1}]""),",1,0,0,0,8,1,0,0,1,4,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,96,"    EQUAL_VERTICES_IN_SIMPLEX(""equal vertices {0} and {1} in simplex configuration""),",1,0,0,1,6,0,0,0,1,4,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,97,"    EULER_ANGLES_SINGULARITY(""Euler angles singularity""),",1,0,0,1,2,0,0,0,1,4,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,98,"    EVALUATION_FAILED(""evaluation failed for argument = {0}""),",1,0,0,1,4,1,0,0,1,5,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,99,"    EVALUATION(""evaluation""), /* keep */",1,0,0,1,2,0,0,0,1,4,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,100,"    EXPANSION_FACTOR_SMALLER_THAN_ONE(""expansion factor smaller than one ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,101,"    FACTORIAL_NEGATIVE_PARAMETER(""must have n >= 0 for n!, got n = {0}""),",1,0,0,0,4,1,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,102,"    FAILED_BRACKETING(""number of iterations={4}, maximum iterations={5}, initial={6}, lower bound={7}, upper bound={8}, final a value={0}, final b value={1}, f(a)={2}, f(b)={3}""),",1,0,0,1,24,2,0,0,1,5,175,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,103,"    FAILED_FRACTION_CONVERSION(""Unable to convert {0} to fraction after {1} iterations""),",1,0,0,1,6,0,0,0,1,4,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,104,"    FIRST_COLUMNS_NOT_INITIALIZED_YET(""first {0} columns are not initialized yet""),",1,0,0,1,4,0,0,0,1,4,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,105,"    FIRST_ELEMENT_NOT_ZERO(""first element is not 0: {0}""),",1,0,0,1,4,0,0,0,1,4,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,106,"    FIRST_ROWS_NOT_INITIALIZED_YET(""first {0} rows are not initialized yet""),",1,0,0,1,4,0,0,0,1,4,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,107,"    FRACTION_CONVERSION_OVERFLOW(""Overflow trying to convert {0} to fraction ({1}/{2})""),",1,0,0,2,10,0,0,0,1,4,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,108,"    FUNCTION_NOT_DIFFERENTIABLE(""function is not differentiable""),",1,0,0,1,2,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,109,"    FUNCTION_NOT_POLYNOMIAL(""function is not polynomial""),",1,0,0,1,2,0,0,0,1,4,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,110,"    GCD_OVERFLOW_32_BITS(""overflow: gcd({0}, {1}) is 2^31""),",1,0,0,0,8,0,0,0,1,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,111,"    GCD_OVERFLOW_64_BITS(""overflow: gcd({0}, {1}) is 2^63""),",1,0,0,0,8,0,0,0,1,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,112,"    HOLE_BETWEEN_MODELS_TIME_RANGES(""{0} wide hole between models time ranges""),",1,0,0,1,4,0,0,0,1,4,76,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,113,"    IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero""),",1,0,0,1,12,0,0,0,1,4,107,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,114,"    INDEX_LARGER_THAN_MAX(""the index specified: {0} is larger than the current maximal index {1}""),",1,0,0,1,6,0,0,0,1,4,95,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,115,"    INDEX_NOT_POSITIVE(""index ({0}) is not positive""),",1,0,0,2,6,0,0,0,1,4,50,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,116,"    INDEX_OUT_OF_RANGE(""index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,117,"    INDEX(""index ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,118,"    NOT_FINITE_NUMBER(""{0} is not a finite number""), /* keep */",1,0,0,1,4,0,0,0,1,4,59,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,119,"    ARRAY_ELEMENT(""value {0} at index {1}""), /* keep */",1,0,0,1,6,0,0,0,1,4,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,120,"    INFINITE_ARRAY_ELEMENT(""Array contains an infinite element, {0} at index {1}""),",1,0,0,0,6,0,0,0,1,3,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,121,"    INFINITE_VALUE_CONVERSION(""cannot convert infinite value""),",1,0,0,1,2,0,0,0,1,4,59,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,122,"    INITIAL_CAPACITY_NOT_POSITIVE(""initial capacity ({0}) is not positive""),",1,0,0,2,6,0,0,0,1,4,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,123,"    INITIAL_COLUMN_AFTER_FINAL_COLUMN(""initial column {1} after final column {0}""),",1,0,0,1,6,1,0,0,1,5,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,124,"    INITIAL_ROW_AFTER_FINAL_ROW(""initial row {1} after final row {0}""),",1,0,0,1,6,1,0,0,1,5,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,125,"    INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE(""input data comes from unsupported datasource: {0}, supported sources: {1}, {2}""),",1,0,0,0,8,0,0,0,1,3,121,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,126,"    INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES(""instance of class {0} not comparable to existing values""),",1,0,0,1,4,1,0,0,1,5,103,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,127,"    INSUFFICIENT_DATA_FOR_T_STATISTIC(""insufficient data for t statistic, needs at least 2, got {0}""),",1,0,0,0,4,1,0,0,1,4,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,128,"    INSUFFICIENT_DIMENSION(""insufficient dimension {0}, must be at least {1}""),",1,0,0,0,6,0,0,0,1,3,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,129,"    DIMENSION(""dimension ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,130,"    INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE(""sample contains {0} observed points, at least {1} are required""),",1,0,0,0,6,0,0,0,1,3,105,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,131,"    INSUFFICIENT_ROWS_AND_COLUMNS(""insufficient data: only {0} rows and {1} columns.""),",1,0,0,1,6,0,0,0,1,4,83,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,132,"    INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS(""{0} method needs at least two previous points""),",1,0,0,1,4,0,0,0,1,4,103,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,133,"    INTERNAL_ERROR(""internal error, please fill a bug report at {0}""),",1,0,0,0,4,0,0,0,1,3,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,134,"    INVALID_BINARY_DIGIT(""invalid binary digit: {0}""),",1,0,0,1,4,0,0,0,1,4,50,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,135,"    INVALID_BRACKETING_PARAMETERS(""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}""),",1,0,0,0,8,0,0,0,1,3,112,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,136,"    INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS(""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}""),",1,0,0,0,8,0,0,0,1,3,124,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,137,"    INVALID_ITERATIONS_LIMITS(""invalid iteration limits: min={0}, max={1}""),",1,0,0,0,6,0,0,0,1,3,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,138,"    INVALID_MAX_ITERATIONS(""bad value for maximum iterations number: {0}""),",1,0,0,1,4,1,0,0,1,5,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,139,"    INVALID_REGRESSION_ARRAY(""input data array length = {0} does not match the number of observations = {1} and the number of regressors = {2}""),",1,0,0,1,8,0,0,0,1,4,141,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,140,"    INVALID_REGRESSION_OBSERVATION(""length of regressor array = {0} does not match the number of variables = {1} in the model""),",1,0,0,1,6,0,0,0,1,4,124,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,141,"    INVALID_ROUNDING_METHOD(""invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})""),",1,0,0,1,52,0,0,0,1,4,165,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,142,"    ITERATOR_EXHAUSTED(""iterator exhausted""),",1,0,0,1,2,0,0,0,1,4,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,143,"    LCM_OVERFLOW_32_BITS(""overflow: lcm({0}, {1}) is 2^31""),",1,0,0,0,8,0,0,0,1,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,144,"    LCM_OVERFLOW_64_BITS(""overflow: lcm({0}, {1}) is 2^63""),",1,0,0,0,8,0,0,0,1,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,145,"    LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE(""list of chromosomes bigger than maxPopulationSize""),",1,0,0,1,2,0,0,0,1,4,101,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,146,"    LOESS_EXPECTS_AT_LEAST_ONE_POINT(""Loess expects at least 1 point""),",1,0,0,1,2,0,0,0,1,4,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,147,"    LOWER_BOUND_NOT_BELOW_UPPER_BOUND(""lower bound ({0}) must be strictly less than upper bound ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,111,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,148,"    LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT(""lower endpoint ({0}) must be less than or equal to upper endpoint ({1})""),",1,0,0,2,10,0,0,0,1,4,111,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,149,"    MAP_MODIFIED_WHILE_ITERATING(""map has been modified while iterating""),",1,0,0,1,2,1,0,0,1,5,70,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,150,"    EVALUATIONS(""evaluations""), /* keep */",1,0,0,1,2,0,0,0,1,4,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,151,"    MAX_COUNT_EXCEEDED(""maximal count ({0}) exceeded""), /* keep */",1,0,0,2,6,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,152,"    MAX_EVALUATIONS_EXCEEDED(""maximal number of evaluations ({0}) exceeded""),",1,0,0,2,6,0,0,0,1,4,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,153,"    MAX_ITERATIONS_EXCEEDED(""maximal number of iterations ({0}) exceeded""),",1,0,0,2,6,0,0,0,1,4,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,154,"    MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}""),",1,0,0,0,8,0,0,0,1,3,132,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,155,"    MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS(""Loess expects the abscissa and ordinate arrays to be of the same size, but got {0} abscissae and {1} ordinatae""),",1,0,0,0,6,0,0,0,1,3,156,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,156,"    NAN_ELEMENT_AT_INDEX(""element {0} is NaN""),",1,0,0,1,4,0,0,0,1,4,43,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,157,"    NAN_VALUE_CONVERSION(""cannot convert NaN value""),",1,0,0,1,2,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,158,"    NEGATIVE_BRIGHTNESS_EXPONENT(""brightness exponent should be positive or null, but got {0}""),",1,0,0,0,4,0,0,0,1,3,92,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,159,"    NEGATIVE_COMPLEX_MODULE(""negative complex module {0}""),",1,0,0,1,4,0,0,0,1,4,55,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,160,"    NEGATIVE_ELEMENT_AT_2D_INDEX(""element ({0}, {1}) is negative: {2}""),",1,0,0,0,10,0,0,0,1,3,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,161,"    NEGATIVE_ELEMENT_AT_INDEX(""element {0} is negative: {1}""),",1,0,0,1,6,0,0,0,1,4,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,162,"    NEGATIVE_NUMBER_OF_SUCCESSES(""number of successes must be non-negative ({0})""),",1,0,0,2,6,0,0,0,1,4,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,163,"    NUMBER_OF_SUCCESSES(""number of successes ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,164,"    NEGATIVE_NUMBER_OF_TRIALS(""number of trials must be non-negative ({0})""),",1,0,0,2,6,0,0,0,1,4,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,165,"    NUMBER_OF_INTERPOLATION_POINTS(""number of interpolation points ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,82,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,166,"    NUMBER_OF_TRIALS(""number of trials ({0})""),",1,0,0,2,6,0,0,0,1,4,43,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,167,"    ROBUSTNESS_ITERATIONS(""number of robustness iterations ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,168,"    START_POSITION(""start position ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,50,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,169,"    NON_CONVERGENT_CONTINUED_FRACTION(""Continued fraction convergents failed to converge (in less than {0} iterations) for value {1}""),",1,0,0,2,8,1,0,0,1,5,131,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,170,"    NON_INVERTIBLE_TRANSFORM(""non-invertible affine transform collapses some lines into single points""),",1,0,0,1,2,0,0,0,1,4,100,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,171,"    NON_POSITIVE_MICROSPHERE_ELEMENTS(""number of microsphere elements must be positive, but got {0}""),",1,0,0,0,4,0,0,0,1,3,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,172,"    NON_POSITIVE_POLYNOMIAL_DEGREE(""polynomial degree must be positive: degree={0}""),",1,0,0,1,4,0,0,0,1,4,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,173,"    NON_REAL_FINITE_ABSCISSA(""all abscissae must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,89,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,174,"    NON_REAL_FINITE_ORDINATE(""all ordinatae must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,89,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,175,"    NON_REAL_FINITE_WEIGHT(""all weights must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,176,"    NON_SQUARE_MATRIX(""non square ({0}x{1}) matrix""),",1,0,0,2,8,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,177,"    NORMALIZE_INFINITE(""Cannot normalize to an infinite value""),",1,0,0,1,2,0,0,0,1,4,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,178,"    NORMALIZE_NAN(""Cannot normalize to NaN""),",1,0,0,1,2,0,0,0,1,4,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,179,"    NOT_ADDITION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not addition compatible""),",1,0,0,1,10,0,0,0,1,4,93,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,180,"    NOT_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not decreasing ({2} < {3})""),",1,0,0,2,12,0,0,0,1,4,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,181,"    NOT_DECREASING_SEQUENCE(""points {3} and {2} are not decreasing ({1} < {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,182,"    NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS(""not enough data ({0} rows) for this many predictors ({1} predictors)""),",1,0,0,2,10,2,0,0,1,5,113,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,183,"    NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION(""spline partition must have at least {0} points, got {1}""),",1,0,0,0,6,0,0,0,1,3,97,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,184,"    NOT_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not increasing ({2} > {3})""),",1,0,0,2,12,0,0,0,1,4,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,185,"    NOT_INCREASING_SEQUENCE(""points {3} and {2} are not increasing ({1} > {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,186,"    NOT_MULTIPLICATION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not multiplication compatible""),",1,0,0,1,10,0,0,0,1,4,105,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,187,"    ALPHA(""alpha""), /* keep */",1,0,0,1,2,0,0,0,1,4,26,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,188,"    BETA(""beta""), /* keep */",1,0,0,1,2,0,0,0,1,4,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,189,"    NOT_POSITIVE_COLUMNDIMENSION(""invalid column dimension: {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,190,"    NOT_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix""),",1,0,0,1,2,0,0,0,1,4,61,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,191,"    NON_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix: diagonal element at ({0},{0}) is larger than {2}""), /* keep */",1,0,0,0,10,0,0,0,1,3,122,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,192,"    NON_POSITIVE_DEFINITE_LINEAR_OPERATOR(""non positive definite linear operator""), /* keep */",1,0,0,1,2,0,0,0,1,4,90,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,193,"    NON_SELF_ADJOINT_LINEAR_OPERATOR(""non self-adjoint linear operator""), /* keep */",1,0,0,1,2,0,0,0,1,4,80,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,194,"    NON_SQUARE_LINEAR_OPERATOR(""non square ({0}x{1}) linear operator""), /* keep */",1,0,0,2,8,0,0,0,1,4,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,195,"    DEGREES_OF_FREEDOM(""degrees of freedom ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,196,"    NOT_POSITIVE_DEGREES_OF_FREEDOM(""degrees of freedom must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,197,"    NOT_POSITIVE_ELEMENT_AT_INDEX(""element {0} is not positive: {1}""),",1,0,0,1,6,0,0,0,1,4,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,198,"    NOT_POSITIVE_EXPONENT(""invalid exponent {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,199,"    EXPONENT(""exponent ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,200,"    NOT_POSITIVE_LENGTH(""length must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,201,"    LENGTH(""length ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,202,"    NOT_POSITIVE_MEAN(""mean must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,203,"    MEAN(""mean ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,30,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,204,"    NOT_POSITIVE_NUMBER_OF_SAMPLES(""number of sample is not positive: {0}""),",1,0,0,1,4,0,0,0,1,4,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,205,"    NUMBER_OF_SAMPLES(""number of samples ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,206,"    NOT_POSITIVE_PERMUTATION(""permutation k ({0}) must be positive""),",1,0,0,2,6,0,0,0,1,4,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,207,"    PERMUTATION_SIZE(""permutation size ({0}""), /* keep */",1,0,0,1,5,0,0,0,1,4,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,208,"    NOT_POSITIVE_POISSON_MEAN(""the Poisson mean must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,209,"    NOT_POSITIVE_POPULATION_SIZE(""population size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,210,"    POPULATION_SIZE(""population size ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,52,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,211,"    NOT_POSITIVE_ROW_DIMENSION(""invalid row dimension: {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,76,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,212,"    NOT_POSITIVE_SAMPLE_SIZE(""sample size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,213,"    NOT_POSITIVE_SCALE(""scale must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,214,"    SCALE(""scale ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,215,"    NOT_POSITIVE_SHAPE(""shape must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,216,"    SHAPE(""shape ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,217,"    NOT_POSITIVE_STANDARD_DEVIATION(""standard deviation must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,218,"    STANDARD_DEVIATION(""standard deviation ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,219,"    NOT_POSITIVE_UPPER_BOUND(""upper bound must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,220,"    NOT_POSITIVE_WINDOW_SIZE(""window size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,221,"    NOT_POWER_OF_TWO(""{0} is not a power of 2""),",1,0,0,1,4,0,0,0,1,4,44,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,222,"    NOT_POWER_OF_TWO_CONSIDER_PADDING(""{0} is not a power of 2, consider padding for fix""),",1,0,0,0,4,1,0,0,1,4,87,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,223,"    NOT_POWER_OF_TWO_PLUS_ONE(""{0} is not a power of 2 plus one""),",1,0,0,1,4,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,224,"    NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly decreasing ({2} <= {3})""),",1,0,0,2,12,0,0,0,1,4,104,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,225,"    NOT_STRICTLY_DECREASING_SEQUENCE(""points {3} and {2} are not strictly decreasing ({1} <= {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,107,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,226,"    NOT_STRICTLY_INCREASING_KNOT_VALUES(""knot values must be strictly increasing""),",1,0,0,1,2,0,0,0,1,4,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,227,"    NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly increasing ({2} >= {3})""),",1,0,0,2,12,0,0,0,1,4,104,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,228,"    NOT_STRICTLY_INCREASING_SEQUENCE(""points {3} and {2} are not strictly increasing ({1} >= {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,107,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,229,"    NOT_SUBTRACTION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not subtraction compatible""),",1,0,0,1,10,0,0,0,1,4,99,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,230,"    NOT_SUPPORTED_IN_DIMENSION_N(""method not supported in dimension {0}""),",1,0,0,1,4,0,0,0,1,4,70,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,231,"    NOT_SYMMETRIC_MATRIX(""not symmetric matrix""),",1,0,0,1,2,0,0,0,1,4,45,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,232,"    NON_SYMMETRIC_MATRIX(""non symmetric matrix: the difference between entries at ({0},{1}) and ({1},{0}) is larger than {2}""), /* keep */",1,0,0,0,16,0,0,0,1,3,134,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,233,"    NO_BIN_SELECTED(""no bin selected""),",1,0,0,1,2,0,0,0,1,4,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,234,"    NO_CONVERGENCE_WITH_ANY_START_POINT(""none of the {0} start points lead to convergence""), /* keep */",1,0,0,1,4,0,0,0,1,4,99,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,235,"    NO_DATA(""no data""), /* keep */",1,0,0,1,2,0,0,0,1,4,30,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,236,"    NO_DEGREES_OF_FREEDOM(""no degrees of freedom ({0} measurements, {1} parameters)""),",1,0,0,0,8,0,0,0,1,3,82,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,237,"    NO_DENSITY_FOR_THIS_DISTRIBUTION(""This distribution does not have a density function implemented""),",1,0,0,1,2,0,0,0,1,4,99,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,238,"    NO_FEASIBLE_SOLUTION(""no feasible solution""),",1,0,0,1,2,0,0,0,1,4,45,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,239,"    NO_OPTIMUM_COMPUTED_YET(""no optimum computed yet""), /* keep */",1,0,0,1,2,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,240,"    NO_REGRESSORS(""Regression model must include at least one regressor""),",1,0,0,1,2,0,0,0,1,4,70,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,241,"    NO_RESULT_AVAILABLE(""no result available""),",1,0,0,1,2,0,0,0,1,4,43,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,242,"    NO_SUCH_MATRIX_ENTRY(""no entry at indices ({0}, {1}) in a {2}x{3} matrix""),",1,0,0,0,12,0,0,0,1,3,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,243,"    NULL_NOT_ALLOWED(""null is not allowed""), /* keep */",1,0,0,1,2,0,0,0,1,4,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,244,"    COVARIANCE_MATRIX(""covariance matrix""), /* keep */",1,0,0,1,2,0,0,0,1,4,50,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,245,"    DENOMINATOR(""denominator""), /* keep */",1,0,0,1,2,0,0,0,1,4,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,246,"    DENOMINATOR_FORMAT(""denominator format""), /* keep */",1,0,0,1,2,0,0,0,1,4,52,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,247,"    FRACTION(""fraction""), /* keep */",1,0,0,1,2,0,0,0,1,4,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,248,"    FUNCTION(""function""), /* keep */",1,0,0,1,2,0,0,0,1,4,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,249,"    IMAGINARY_FORMAT(""imaginary format""), /* keep */",1,0,0,1,2,0,0,0,1,4,48,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,250,"    INPUT_ARRAY(""input array""), /* keep */",1,0,0,1,2,0,0,0,1,4,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,251,"    NUMERATOR(""numerator""), /* keep */",1,0,0,1,2,0,0,0,1,4,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,252,"    NUMERATOR_FORMAT(""numerator format""), /* keep */",1,0,0,1,2,0,0,0,1,4,48,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,253,"    OBJECT_TRANSFORMATION(""conversion exception in transformation""), /* keep */",1,0,0,1,2,0,0,0,1,4,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,254,"    REAL_FORMAT(""real format""), /* keep */",1,0,0,1,2,0,0,0,1,4,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,255,"    WHOLE_FORMAT(""whole format""), /* keep */",1,0,0,1,2,0,0,0,1,4,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,256,"    NUMBER_TOO_LARGE(""{0} is larger than the maximum ({1})""), /* keep */",1,0,0,2,8,0,0,0,1,4,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,257,"    NUMBER_TOO_SMALL(""{0} is smaller than the minimum ({1})""), /* keep */",1,0,0,2,8,0,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,258,"    NUMBER_TOO_LARGE_BOUND_EXCLUDED(""{0} is larger than, or equal to, the maximum ({1})""), /* keep */",1,0,0,1,8,0,0,0,1,4,97,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,259,"    NUMBER_TOO_SMALL_BOUND_EXCLUDED(""{0} is smaller than, or equal to, the minimum ({1})""), /* keep */",1,0,0,1,8,0,0,0,1,4,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,260,"    NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE(""number of successes ({0}) must be less than or equal to population size ({1})""),",1,0,0,2,10,0,0,0,1,4,127,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,261,"    NUMERATOR_OVERFLOW_AFTER_MULTIPLY(""overflow, numerator too large after multiply: {0}""),",1,0,0,0,4,0,0,0,1,3,87,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,262,"    N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED(""{0} points Legendre-Gauss integrator not supported, number of points must be in the {1}-{2} range""),",1,0,0,0,8,0,0,0,1,3,150,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,263,"    OBSERVED_COUNTS_ALL_ZERO(""observed counts are all 0 in observed array {0}""),",1,0,0,1,4,0,0,0,1,4,76,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,264,"    OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY(""observed counts are both zero for entry {0}""),",1,0,0,1,4,1,0,0,1,5,84,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,265,"    BOBYQA_BOUND_DIFFERENCE_CONDITION(""the difference between the upper and lower bound must be larger than twice the initial trust region radius ({0})""),",1,0,0,2,6,0,0,0,1,4,150,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,266,"    OUT_OF_BOUNDS_QUANTILE_VALUE(""out of bounds quantile value: {0}, must be in (0, 100]""),",1,0,0,0,6,0,0,0,1,3,87,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,267,"    OUT_OF_BOUND_SIGNIFICANCE_LEVEL(""out of bounds significance level {0}, must be between {1} and {2}""),",1,0,0,0,8,0,0,0,1,3,101,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,268,"    SIGNIFICANCE_LEVEL(""significance level ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,269,"    OUT_OF_ORDER_ABSCISSA_ARRAY(""the abscissae array must be sorted in a strictly increasing order, but the {0}-th element is {1} whereas {2}-th is {3}""),",1,0,0,0,10,0,0,0,1,3,150,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,270,"    OUT_OF_RANGE_ROOT_OF_UNITY_INDEX(""out of range root of unity index {0} (must be in [{1};{2}])""),",1,0,0,2,12,0,0,0,1,4,96,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,271,"    OUT_OF_RANGE(""out of range""), /* keep */",1,0,0,1,2,0,0,0,1,4,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,272,"    OUT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""), /* keep */",1,0,0,0,10,0,0,0,1,3,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,273,"    OUTLINE_BOUNDARY_LOOP_OPEN(""an outline boundary loop is open""),",1,0,0,1,2,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,274,"    OVERFLOW_IN_FRACTION(""overflow in fraction {0}/{1}, cannot negate""),",1,0,0,0,6,0,0,0,1,3,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,275,"    OVERFLOW_IN_ADDITION(""overflow in addition: {0} + {1}""),",1,0,0,1,6,0,0,0,1,4,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,276,"    OVERFLOW_IN_SUBTRACTION(""overflow in subtraction: {0} - {1}""),",1,0,0,1,6,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,277,"    PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD(""cannot access {0} method in percentile implementation {1}""),",1,0,0,1,6,0,0,0,1,4,108,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,278,"    PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD(""percentile implementation {0} does not support {1}""),",1,0,0,1,6,0,0,0,1,4,99,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,279,"    PERMUTATION_EXCEEDS_N(""permutation size ({0}) exceeds permuation domain ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,91,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,280,"    POLYNOMIAL(""polynomial""), /* keep */",1,0,0,1,2,0,0,0,1,4,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,281,"    POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS(""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)""),",1,0,0,2,8,0,0,0,1,4,130,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,282,"    POPULATION_LIMIT_NOT_POSITIVE(""population limit has to be positive""),",1,0,0,1,2,0,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,283,"    POSITION_SIZE_MISMATCH_INPUT_ARRAY(""position {0} and size {1} don't fit to the size of the input array {2}""),",1,0,0,1,8,0,0,0,1,4,109,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,284,"    POWER_NEGATIVE_PARAMETERS(""cannot raise an integral value to a negative power ({0}^{1})""),",1,0,0,2,8,0,0,0,1,4,90,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,285,"    PROPAGATION_DIRECTION_MISMATCH(""propagation direction mismatch""),",1,0,0,1,2,0,0,0,1,4,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,286,"    RANDOMKEY_MUTATION_WRONG_CLASS(""RandomKeyMutation works only with RandomKeys, not {0}""),",1,0,0,0,4,0,0,0,1,3,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,287,"    ROOTS_OF_UNITY_NOT_COMPUTED_YET(""roots of unity have not been computed yet""),",1,0,0,1,2,0,0,0,1,4,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,288,"    ROTATION_MATRIX_DIMENSIONS(""a {0}x{1} matrix cannot be a rotation matrix""),",1,0,0,1,6,0,0,0,1,4,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,289,"    ROW_INDEX_OUT_OF_RANGE(""row index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,290,"    ROW_INDEX(""row index ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,291,"    SAME_SIGN_AT_ENDPOINTS(""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]""),",1,0,0,0,14,1,0,0,1,4,126,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,292,"    SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE(""sample size ({0}) exceeds collection size ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,293,"    SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE(""sample size ({0}) must be less than or equal to population size ({1})""),",1,0,0,2,10,0,0,0,1,4,113,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,294,"    SIMPLEX_NEED_ONE_POINT(""simplex must contain at least one point""),",1,0,0,1,2,0,0,0,1,4,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,295,"    SIMPLE_MESSAGE(""{0}""),",1,0,0,1,4,0,0,0,1,4,22,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,296,"    SINGULAR_MATRIX(""matrix is singular""), /* keep */",1,0,0,1,2,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,297,"    SUBARRAY_ENDS_AFTER_ARRAY_END(""subarray ends after array end""),",1,0,0,1,2,0,0,0,1,4,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,298,"    TOO_LARGE_CUTOFF_SINGULAR_VALUE(""cutoff singular value is {0}, should be at most {1}""),",1,0,0,0,6,0,0,0,1,3,87,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,299,"    TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY(""cannot discard {0} elements from a {1} elements array""),",1,0,0,1,6,0,0,0,1,4,97,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,300,"    TOO_MUCH_CANCELLATION(""too much cancellation in a denominator""),",1,0,0,1,2,0,0,0,1,4,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,301,"    TOO_MANY_REGRESSORS(""too many regressors ({0}) specified, only {1} in the model""),",1,0,0,1,8,0,0,0,1,4,82,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,302,"    TOO_SMALL_COST_RELATIVE_TOLERANCE(""cost relative tolerance is too small ({0}), no further reduction in the sum of squares is possible""),",1,0,0,1,6,0,0,0,1,4,136,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,303,"    TOO_SMALL_INTEGRATION_INTERVAL(""too small integration interval: length = {0}""),",1,0,0,1,4,0,0,0,1,4,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,304,"    TOO_SMALL_ORTHOGONALITY_TOLERANCE(""orthogonality tolerance is too small ({0}), solution is orthogonal to the jacobian""),",1,0,0,1,6,0,0,0,1,4,120,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,305,"    TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE(""parameters relative tolerance is too small ({0}), no further improvement in the approximate solution is possible""),",1,0,0,1,6,0,0,0,1,4,156,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,306,"    TRUST_REGION_STEP_FAILED(""trust region step has failed to reduce Q""),",1,0,0,1,2,0,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,307,"    TWO_OR_MORE_CATEGORIES_REQUIRED(""two or more categories required, got {0}""),",1,0,0,0,4,0,0,0,1,3,76,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,308,"    TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED(""two or more values required in each category, one has {0}""),",1,0,0,0,4,0,0,0,1,3,101,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,309,"    UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH(""unable to bracket optimum in line search""),",1,0,0,1,2,0,0,0,1,4,85,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,310,"    UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM(""unable to compute covariances: singular problem""),",1,0,0,1,2,0,0,0,1,4,97,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,311,"    UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS(""unable to first guess the harmonic coefficients""),",1,0,0,1,2,0,0,0,1,4,95,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,312,"    UNABLE_TO_ORTHOGONOLIZE_MATRIX(""unable to orthogonalize matrix in {0} iterations""),",1,0,0,1,4,0,0,0,1,4,83,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,313,"    UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN(""unable to perform Q.R decomposition on the {0}x{1} jacobian matrix""),",1,0,0,1,6,0,0,0,1,4,117,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,314,"    UNABLE_TO_SOLVE_SINGULAR_PROBLEM(""unable to solve: singular problem""),",1,0,0,1,2,0,0,0,1,4,70,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,315,"    UNBOUNDED_SOLUTION(""unbounded solution""),",1,0,0,1,2,0,0,0,1,4,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,316,"    UNKNOWN_MODE(""unknown mode {0}, known modes: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})""),",1,0,0,1,40,0,0,0,1,4,118,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,317,"    CANNOT_PARSE_AS_TYPE(""string {0} unparseable (from position {1}) as an object of type {2}""), /* keep */",1,0,0,2,10,0,0,0,1,4,103,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,318,"    CANNOT_PARSE(""string {0} unparseable (from position {1})""), /* keep */",1,0,0,2,8,0,0,0,1,4,70,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,319,"    UNPARSEABLE_3D_VECTOR(""unparseable 3D vector: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,320,"    UNPARSEABLE_COMPLEX_NUMBER(""unparseable complex number: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,321,"    UNPARSEABLE_FRACTION_NUMBER(""unparseable fraction number: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,322,"    UNPARSEABLE_REAL_VECTOR(""unparseable real vector: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,323,"    UNSUPPORTED_EXPANSION_MODE(""unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})""),",1,0,0,1,16,0,0,0,1,4,106,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,324,"    UNSUPPORTED_OPERATION(""unsupported operation""), /* keep */",1,0,0,1,2,0,0,0,1,4,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,325,"    ARITHMETIC_EXCEPTION(""arithmetic exception""), /* keep */",1,0,0,1,2,0,0,0,1,4,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,326,"    ILLEGAL_STATE(""illegal state""), /* keep */",1,0,0,1,2,0,0,0,1,4,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,327,"    USER_EXCEPTION(""exception generated in user code""), /* keep */",1,0,0,1,2,0,0,0,1,4,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,328,"    URL_CONTAINS_NO_DATA(""URL {0} contains no data""),",1,0,0,1,4,0,0,0,1,4,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,329,"    VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC(""{0} values have been added before statistic is configured""),",1,0,0,1,4,0,0,0,1,4,103,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,330,"    VECTOR_LENGTH_MISMATCH(""vector length mismatch: got {0} but expected {1}""),",1,0,0,1,6,0,0,0,1,4,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,331,"    VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT(""vector must have at least one element""),",1,0,0,1,2,0,0,0,1,4,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,332,"    WEIGHT_AT_LEAST_ONE_NON_ZERO(""weigth array must contain at least one non-zero value""),",1,0,0,1,2,0,0,0,1,4,86,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,333,"    WRONG_BLOCK_LENGTH(""wrong array shape (block length = {0}, expected {1})""),",1,0,0,0,8,0,0,0,1,3,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,334,"    WRONG_NUMBER_OF_POINTS(""{0} points are required, got only {1}""),",1,0,0,0,6,0,0,0,1,3,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,335,"    NUMBER_OF_POINTS(""number of points ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,336,"    ZERO_DENOMINATOR(""denominator must be different from 0""),",1,0,0,1,2,0,0,0,1,4,57,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,337,"    ZERO_DENOMINATOR_IN_FRACTION(""zero denominator in fraction {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,338,"    ZERO_FRACTION_TO_DIVIDE_BY(""the fraction to divide by must not be zero: {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,82,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,339,"    ZERO_NORM(""zero norm""),",1,0,0,1,2,0,0,0,1,4,23,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,340,"    ZERO_NORM_FOR_ROTATION_AXIS(""zero norm for rotation axis""),",1,0,0,1,2,1,0,0,1,5,59,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,341,"    ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector""),",1,0,0,1,2,1,0,0,1,5,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,342,"    ZERO_NOT_ALLOWED(""zero not allowed here"");",1,0,0,1,2,0,0,0,1,4,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,39,public enum LocalizedFormats implements Localizable {,1,0,0,0,1,3,0,1,1,5,53,1,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,361,        return sourceFormat;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,367,            ResourceBundle bundle =,1,0,0,0,0,0,0,1,0,2,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,369,            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {,0,0,0,3,11,1,6,0,0,4,68,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,371,                return bundle.getString(toString());,0,0,0,2,4,1,3,0,1,5,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,376,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,374,        } catch (MissingResourceException mre) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,50,380,        return sourceFormat;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
