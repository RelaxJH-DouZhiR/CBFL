dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,152,        return evaluations;,1,0,0,0,0,1,0,0,0,2,19,4,9.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,82,        return iterationCount;,1,0,0,0,0,1,0,0,0,2,22,4,4.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,107,            a = lo;,2,0,0,0,0,0,0,0,1,2,7,6,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,108,            b = hi;,2,0,0,0,0,0,0,0,1,2,7,6,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,158,                        d = p / q;,3,1,0,0,0,0,0,0,1,3,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,159,                        u = x + d;,3,1,0,0,0,0,0,0,1,3,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,162,                        if (u - a < tol2,3,3,0,0,1,1,0,0,0,4,16,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,175,                            e = a - x;,3,1,0,0,0,0,0,0,1,3,10,14,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,182,                        e = b - x;,3,1,0,0,0,0,0,0,1,3,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,27,public enum GoalType implements Serializable {,1,0,0,0,1,3,0,1,1,5,46,1,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,30,"    MAXIMIZE,",1,0,0,0,0,0,0,0,0,1,9,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,33,    MINIMIZE,1,0,0,0,0,0,0,0,0,1,8,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,43,    public BrentOptimizer() {,1,0,0,1,3,1,0,0,1,5,25,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,44,        setMaxEvaluations(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,37,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,45,        setMaximalIterationCount(100);,0,0,0,1,2,0,1,0,1,4,30,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,46,        setAbsoluteAccuracy(1E-10);,0,0,0,1,2,0,1,0,1,4,27,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,47,        setRelativeAccuracy(1.0e-14);,0,0,0,1,2,0,1,0,1,4,29,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,48,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,38,    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));,1,2,0,2,4,4,2,0,3,7,70,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,60,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,61,"        return localMin(getGoalType() == GoalType.MINIMIZE,",2,1,0,1,3,1,2,0,2,7,51,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,99,        if (eps <= 0) {,1,1,0,1,3,1,0,0,0,5,15,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,102,        if (t <= 0) {,1,1,0,1,3,1,0,0,0,5,13,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,106,        if (lo < hi) {,2,1,0,1,3,1,0,0,0,5,14,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,114,        double x = mid;,2,0,0,0,0,1,0,0,0,2,15,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,115,        double v = x;,2,0,0,0,0,1,0,0,0,2,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,116,        double w = x;,2,0,0,0,0,1,0,0,0,2,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,117,        double d = 0;,1,0,0,0,0,1,0,0,0,2,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,118,        double e = 0;,1,0,0,0,0,1,0,0,0,2,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,119,"        double fx = computeObjectiveValue(f, x);",1,0,0,0,2,1,3,0,1,5,40,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,120,        if (goalType == GoalType.MAXIMIZE) {,3,1,0,1,3,1,0,0,0,5,36,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,123,        double fv = fx;,2,0,0,0,0,1,0,0,0,2,15,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,124,        double fw = fx;,2,0,0,0,0,1,0,0,0,2,15,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,126,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,127,        while (count < maximalIterationCount) {,2,1,0,1,3,1,0,0,0,5,39,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,128,            double m = 0.5 * (a + b);,3,2,0,1,2,1,0,0,0,5,25,7,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,129,            final double tol1 = eps * Math.abs(x) + t;,3,2,0,1,2,2,3,0,1,7,42,6,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,130,            final double tol2 = 2 * tol1;,2,1,0,0,0,2,0,0,1,4,29,6,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,133,            if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) {,5,5,0,2,7,1,2,0,0,6,45,6,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,134,                double p = 0;,1,0,0,0,0,1,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,135,                double q = 0;,1,0,0,0,0,1,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,136,                double r = 0;,1,0,0,0,0,1,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,137,                double u = 0;,1,0,0,0,0,1,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,139,                if (Math.abs(e) > tol1) { // Fit parabola.,1,1,0,2,5,1,3,0,0,6,42,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,140,                    r = (x - w) * (fx - fv);,5,3,0,1,4,0,0,0,1,5,24,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,141,                    q = (x - v) * (fx - fw);,5,3,0,1,4,0,0,0,1,5,24,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,142,                    p = (x - v) * q - (x - w) * r;,7,5,0,1,4,0,0,0,1,5,30,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,143,                    q = 2 * (q - r);,3,2,0,1,2,0,0,0,1,5,16,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,145,                    if (q > 0) {,1,1,0,1,3,1,0,0,0,5,12,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,146,                        p = -p;,2,0,0,0,0,0,0,0,2,2,7,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,148,                        q = -q;,2,0,0,0,0,0,0,0,2,2,7,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,151,                    r = e;,2,0,0,0,0,0,0,0,1,2,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,152,                    e = d;,2,0,0,0,0,0,0,0,1,2,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,154,                    if (p > q * (a - x),4,5,0,1,3,1,0,0,0,5,19,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,172,                        if (x < m) {,2,1,0,1,3,1,0,0,0,5,12,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,173,                            e = b - x;,3,1,0,0,0,0,0,0,1,3,10,14,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,177,                        d = GOLDEN_SECTION * e;,3,1,0,0,0,0,0,0,1,3,23,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,181,                    if (x < m) {,2,1,0,1,3,1,0,0,0,5,12,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,186,                    d = GOLDEN_SECTION * e;,3,1,0,0,0,0,0,0,1,3,23,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,190,                if (Math.abs(d) < tol1) {,1,1,0,2,5,1,3,0,0,6,25,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,197,                    u = x + d;,3,1,0,0,0,0,0,0,1,3,10,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,200,"                double fu = computeObjectiveValue(f, u);",1,0,0,0,2,1,3,0,1,5,40,9,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,201,                if (goalType == GoalType.MAXIMIZE) {,3,1,0,1,3,1,0,0,0,5,36,8,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,206,                if (fu <= fx) {,2,1,0,1,3,1,0,0,0,5,15,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,207,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,208,                        b = x;,2,0,0,0,0,0,0,0,1,2,6,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,210,                        a = x;,2,0,0,0,0,0,0,0,1,2,6,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,212,                    v = w;,2,0,0,0,0,0,0,0,1,2,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,213,                    fv = fw;,2,0,0,0,0,0,0,0,1,2,8,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,214,                    w = x;,2,0,0,0,0,0,0,0,1,2,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,215,                    fw = fx;,2,0,0,0,0,0,0,0,1,2,8,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,216,                    x = u;,2,0,0,0,0,0,0,0,1,2,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,217,                    fx = fu;,2,0,0,0,0,0,0,0,1,2,8,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,237,            } else { // termination,0,0,0,0,2,1,0,0,0,2,23,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,238,"                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);",5,1,0,1,4,0,3,0,2,6,64,8,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,239,                return x;,1,0,0,0,0,1,0,0,0,2,9,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,241,            ++count;,1,0,0,0,0,0,0,0,1,2,8,6,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,242,        },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,82,    protected AbstractUnivariateRealOptimizer() {},1,0,0,1,4,1,0,0,1,5,46,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,126,        this.result         = x;,2,0,0,0,0,1,0,0,1,3,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,127,        this.functionValue  = fx;,2,0,0,0,0,1,0,0,1,3,25,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,128,        this.iterationCount = iterationCount;,2,0,0,0,0,1,0,0,1,3,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,129,        this.resultComputed = true;,1,0,0,0,0,1,0,0,2,3,27,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,130,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,137,        this.resultComputed = false;,1,0,0,0,0,1,0,0,2,3,28,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,138,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,142,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,143,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,159,        return goal;,1,0,0,0,0,1,0,0,0,2,12,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,193,        if (++evaluations > maxEvaluations) {,2,1,0,1,3,1,0,0,1,6,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,197,        return f.value(point);,0,0,0,1,2,1,3,0,0,4,22,5,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,78,    protected ConvergingAlgorithmImpl() {},1,0,0,1,4,1,0,0,1,5,38,2,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,87,        absoluteAccuracy = accuracy;,2,0,0,0,0,0,0,0,1,2,28,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,88,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,92,        return absoluteAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,102,        maximalIterationCount = count;,2,0,0,0,0,0,0,0,1,2,30,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,103,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,117,        relativeAccuracy = accuracy;,2,0,0,0,0,0,0,0,1,2,28,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,118,    },0,0,0,0,1,0,0,0,0,1,1,2,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,122,        return relativeAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,66,"        return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));",4,3,0,1,4,1,5,0,1,7,75,4,2.25,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,233,                        v = u;,2,0,0,0,0,0,0,0,1,2,6,13,2.25,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,234,                        fv = fu;,2,0,0,0,0,0,0,0,1,2,8,13,2.25,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,105,        if (functionValue == Double.NaN) {,3,1,0,1,3,1,0,0,0,5,34,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,113,        return functionValue;,1,0,0,0,0,1,0,0,0,2,21,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,80,                                             final RandomGenerator generator) {,1,0,0,0,2,1,0,1,1,5,34,3,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,81,        this.optimizer        = optimizer;,2,0,0,0,0,1,0,0,1,3,34,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,82,        this.totalIterations  = 0;,1,0,0,0,0,1,0,0,1,3,26,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,83,        this.starts           = starts;,2,0,0,0,0,1,0,0,1,3,31,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,84,        this.generator        = generator;,2,0,0,0,0,1,0,0,1,3,34,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,85,        this.optima           = null;,1,0,0,0,0,1,0,0,1,3,29,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,86,        setMaximalIterationCount(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,44,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,87,        setMaxEvaluations(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,37,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,88,    },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,152,        this.maxIterations = count;,2,0,0,0,0,1,0,0,1,3,27,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,153,    },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,157,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,158,    },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,193,        if (optima == null) {,1,1,0,1,3,1,0,0,0,5,21,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,219,        if (optimaValues == null) {,1,1,0,1,3,1,0,0,0,5,27,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,231,        optima           = new double[starts];,1,0,1,0,2,2,0,0,1,5,38,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,232,        optimaValues     = new double[starts];,1,0,1,0,2,2,0,0,1,5,38,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,233,        totalIterations  = 0;,1,0,0,0,0,0,0,0,1,2,21,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,234,        totalEvaluations = 0;,1,0,0,0,0,0,0,0,1,2,21,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,237,        for (int i = 0; i < starts; ++i) {,4,1,0,1,3,2,0,0,1,6,34,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,240,                optimizer.setMaximalIterationCount(maxIterations - totalIterations);,2,1,0,1,2,0,2,0,0,5,68,9,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,241,                optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);,2,1,0,1,2,0,2,0,0,5,63,9,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,242,                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,243,                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,244,"                optima[i]       = optimizer.optimize(f, goalType,",0,0,1,0,3,0,4,0,1,4,49,8,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,247,                optimaValues[i] = optimizer.getFunctionValue();,0,0,1,1,4,0,2,0,1,5,47,8,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,254,            },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,256,            totalIterations  += optimizer.getIterationCount();,1,0,0,1,2,0,2,0,1,5,50,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,257,            totalEvaluations += optimizer.getEvaluations();,1,0,0,1,2,0,2,0,1,5,47,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,262,        int lastNaN = optima.length;,3,0,0,0,0,1,0,0,0,2,28,5,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,263,        for (int i = 0; i < lastNaN; ++i) {,4,1,0,1,3,2,0,0,1,6,35,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,264,            if (Double.isNaN(optima[i])) {,0,0,1,2,7,1,2,0,0,5,30,7,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,272,        double currX = optima[0];,1,0,1,0,2,1,0,0,0,4,25,5,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,273,        double currY = optimaValues[0];,1,0,1,0,2,1,0,0,0,4,31,5,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,274,        for (int j = 1; j < lastNaN; ++j) {,4,1,0,1,3,2,0,0,1,6,35,4,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,275,            final double prevY = currY;,2,0,0,0,0,2,0,0,1,3,27,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,276,            currX = optima[j];,1,0,1,0,2,0,0,0,1,4,18,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,277,            currY = optimaValues[j];,1,0,1,0,2,0,0,0,1,4,24,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,278,            if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {,5,3,0,2,7,1,0,0,0,5,56,6,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,301,        if (Double.isNaN(optima[0])) {,0,0,1,2,7,1,2,0,0,5,30,5,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,308,        return optima[0];,0,0,1,0,2,1,0,0,0,3,17,5,2.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,28,public class JDKRandomGenerator extends Random implements RandomGenerator {,1,0,0,0,1,4,0,2,1,5,75,1,2.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,165,                                d = tol1;,2,0,0,0,0,0,0,0,1,2,9,16,1.8,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,164,                            if (x <= m) {,2,1,0,1,3,1,0,0,0,5,13,14,1.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,191,                    if (d >= 0) {,1,1,0,1,3,1,0,0,0,5,13,10,1.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,194,                        u = x - tol1;,3,1,0,0,0,0,0,0,1,3,13,12,1.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,220,                        a = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,230,                    } else if (fu <= fv,2,3,0,0,2,2,0,0,0,4,19,11,1.5,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,305,    private LocalizedFormats(final String sourceFormat) {,2,0,0,1,3,2,0,1,2,6,53,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,306,        this.sourceFormat = sourceFormat;,2,0,0,0,0,1,0,0,1,3,33,4,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,307,    },0,0,0,0,1,0,0,0,0,1,1,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,44,"    ARGUMENT_OUTSIDE_DOMAIN(""Argument {0} outside domain [{1} ; {2}]""),",1,0,0,1,10,0,0,0,1,4,67,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,45,"    ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1(""array sizes should have difference 1 ({0} != {1} + 1)""),",1,0,0,2,8,0,0,0,1,4,94,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,46,"    ARRAY_SUMS_TO_ZERO(""array sums to zero""),",1,0,0,1,2,0,0,0,1,4,41,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,47,"    ASSYMETRIC_EIGEN_NOT_SUPPORTED(""eigen decomposition of assymetric matrices not supported yet""),",1,0,0,1,2,0,0,0,1,4,95,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,48,"    AT_LEAST_ONE_COLUMN(""matrix must have at least one column""),",1,0,0,1,2,0,0,0,1,4,60,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,49,"    AT_LEAST_ONE_ROW(""matrix must have at least one row""),",1,0,0,1,2,0,0,0,1,4,54,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,50,"    BANDWIDTH_OUT_OF_INTERVAL(""bandwidth must be in the interval [0,1], but got {0}""),",1,0,0,0,6,0,0,0,1,3,82,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,51,"    BINOMIAL_INVALID_PARAMETERS_ORDER(""must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}""),",1,0,0,0,8,1,0,0,1,4,107,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,52,"    BINOMIAL_NEGATIVE_PARAMETER(""must have n >= 0 for binomial coefficient (n,k), got n = {0}""),",1,0,0,0,6,1,0,0,1,4,92,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,53,"    CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be cleared""),",1,0,0,1,2,0,0,0,1,4,123,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,54,"    CANNOT_COMPUTE_0TH_ROOT_OF_UNITY(""cannot compute 0-th root of unity, indefinite result""),",1,0,0,0,2,0,0,0,1,3,89,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,55,"    CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA(""cannot compute beta density at 0 when alpha = {0,number}""),",1,0,0,0,4,0,0,0,1,3,108,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,56,"    CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA(""cannot compute beta density at 1 when beta = %.3g""),",1,0,0,1,2,0,0,0,1,4,100,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,57,"    CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N(""cannot compute nth root for null or negative n: {0}""),",1,0,0,1,4,1,0,0,1,5,94,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,58,"    CANNOT_CONVERT_OBJECT_TO_FRACTION(""cannot convert given object to a fraction number: {0}""),",1,0,0,1,4,0,0,0,1,4,91,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,59,"    CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS(""cannot discard a negative number of elements ({0})""),",1,0,0,2,6,0,0,0,1,4,97,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,60,"    CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR(""cannot format a {0} instance as a 3D vector""),",1,0,0,1,4,0,0,0,1,4,83,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,61,"    CANNOT_FORMAT_INSTANCE_AS_COMPLEX(""cannot format a {0} instance as a complex number""),",1,0,0,1,4,0,0,0,1,4,86,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,62,"    CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR(""cannot format a {0} instance as a real vector""),",1,0,0,1,4,0,0,0,1,4,87,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,63,"    CANNOT_FORMAT_OBJECT_TO_FRACTION(""cannot format given object as a fraction number""),",1,0,0,1,2,0,0,0,1,4,84,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,64,"    CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be incremented""),",1,0,0,1,2,0,0,0,1,4,131,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,65,"    CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR(""cannot normalize a zero norm vector""),",1,0,0,1,2,0,0,0,1,4,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,66,"    CANNOT_RETRIEVE_AT_NEGATIVE_INDEX(""elements cannot be retrieved from a negative array index {0}""),",1,0,0,1,4,0,0,0,1,4,98,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,67,"    CANNOT_SET_AT_NEGATIVE_INDEX(""cannot set an element at a negative index {0}""),",1,0,0,1,4,0,0,0,1,4,78,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,68,"    CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY(""cannot substitute an element from an empty array""),",1,0,0,1,2,0,0,0,1,4,95,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,69,"    CANNOT_TRANSFORM_TO_DOUBLE(""Conversion Exception in Transformation: {0}""),",1,0,0,1,4,0,0,0,1,4,74,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,70,"    CARDAN_ANGLES_SINGULARITY(""Cardan angles singularity""),",1,0,0,1,2,0,0,0,1,4,55,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,71,"    CLASS_DOESNT_IMPLEMENT_COMPARABLE(""class ({0}) does not implement Comparable""),",1,0,0,2,6,1,0,0,1,5,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,72,"    CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT(""the closest orthogonal matrix has a negative determinant {0}""),",1,0,0,1,4,0,0,0,1,4,115,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,73,"    COLUMN_INDEX_OUT_OF_RANGE(""column index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,78,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,74,"    CONTINUED_FRACTION_INFINITY_DIVERGENCE(""Continued fraction convergents diverged to +/- infinity for value {0}""),",1,0,0,1,4,1,0,0,1,5,112,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,75,"    CONTINUED_FRACTION_NAN_DIVERGENCE(""Continued fraction diverged to NaN for value {0}""),",1,0,0,1,4,1,0,0,1,5,86,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,76,"    CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR(""contraction criteria ({0}) smaller than the expansion factor ({1}).  This would lead to a never ending loop of expansion and contraction as a newly expanded internal storage array would immediately satisfy the criteria for contraction.""),",1,0,0,2,10,1,0,0,1,5,290,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,77,"    CONTRACTION_CRITERIA_SMALLER_THAN_ONE(""contraction criteria smaller than one ({0}).  This would lead to a never ending loop of expansion and contraction as an internal storage array length equal to the number of elements would satisfy the contraction criteria.""),",1,0,0,2,6,0,0,0,1,4,263,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,78,"    CONVERGENCE_FAILED(""convergence failed""),",1,0,0,1,2,0,0,0,1,4,41,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,79,"    CUMULATIVE_PROBABILITY_RETURNED_NAN(""Cumulative probability function returned NaN for argument {0} p = {1}""),",1,0,0,1,6,1,0,0,1,5,109,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,80,"    DIFFERENT_ROWS_LENGTHS(""some rows have length {0} while others have length {1}""),",1,0,0,1,6,1,0,0,1,5,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,81,"    DIGEST_NOT_INITIALIZED(""digest not initialized""),",1,0,0,1,2,0,0,0,1,4,49,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,82,"    DIMENSIONS_MISMATCH_2x2(""dimensions mismatch: got {0}x{1} but expected {2}x{3}""),",1,0,0,1,10,0,0,0,1,4,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,83,"    DIMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""), /* keep */",1,0,0,1,6,0,0,0,1,4,72,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,84,"    DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN(""Discrete cumulative probability function returned NaN for argument {0}""),",1,0,0,1,4,1,0,0,1,5,119,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,85,"    DISTRIBUTION_NOT_LOADED(""distribution not loaded""),",1,0,0,1,2,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,86,"    DUPLICATED_ABSCISSA(""Abscissa {0} is duplicated at both indices {1} and {2}""),",1,0,0,1,8,0,0,0,1,4,78,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,87,"    EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY(""empty polynomials coefficients array""), /* keep */",1,0,0,1,2,0,0,0,1,4,88,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,88,"    EMPTY_SELECTED_COLUMN_INDEX_ARRAY(""empty selected column index array""),",1,0,0,1,2,0,0,0,1,4,71,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,89,"    EMPTY_SELECTED_ROW_INDEX_ARRAY(""empty selected row index array""),",1,0,0,1,2,0,0,0,1,4,65,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,90,"    EMPTY_STRING_FOR_IMAGINARY_CHARACTER(""empty string for imaginary character""),",1,0,0,1,2,1,0,0,1,5,77,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,91,"    ENDPOINTS_NOT_AN_INTERVAL(""endpoints do not specify an interval: [{0}, {1}]""),",1,0,0,0,8,1,0,0,1,4,78,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,92,"    EQUAL_VERTICES_IN_SIMPLEX(""equal vertices {0} and {1} in simplex configuration""),",1,0,0,1,6,0,0,0,1,4,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,93,"    EULER_ANGLES_SINGULARITY(""Euler angles singularity""),",1,0,0,1,2,0,0,0,1,4,53,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,94,"    EVALUATION_FAILED(""evaluation failed for argument = {0}""),",1,0,0,1,4,1,0,0,1,5,58,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,95,"    EXPANSION_FACTOR_SMALLER_THAN_ONE(""expansion factor smaller than one ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,96,"    FACTORIAL_NEGATIVE_PARAMETER(""must have n >= 0 for n!, got n = {0}""),",1,0,0,0,4,1,0,0,1,4,69,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,97,"    FAILED_BRACKETING(""number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4}, final a value={5}, final b value={6}, f(a)={7}, f(b)={8}""),",1,0,0,1,24,2,0,0,1,5,175,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,98,"    FAILED_FRACTION_CONVERSION(""Unable to convert {0} to fraction after {1} iterations""),",1,0,0,1,6,0,0,0,1,4,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,99,"    FIRST_COLUMNS_NOT_INITIALIZED_YET(""first {0} columns are not initialized yet""),",1,0,0,1,4,0,0,0,1,4,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,100,"    FIRST_ELEMENT_NOT_ZERO(""first element is not 0: {0}""),",1,0,0,1,4,0,0,0,1,4,54,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,101,"    FIRST_ROWS_NOT_INITIALIZED_YET(""first {0} rows are not initialized yet""),",1,0,0,1,4,0,0,0,1,4,73,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,102,"    FRACTION_CONVERSION_OVERFLOW(""Overflow trying to convert {0} to fraction ({1}/{2})""),",1,0,0,2,10,0,0,0,1,4,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,103,"    FUNCTION_NOT_DIFFERENTIABLE(""function is not differentiable""),",1,0,0,1,2,0,0,0,1,4,62,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,104,"    FUNCTION_NOT_POLYNOMIAL(""function is not polynomial""),",1,0,0,1,2,0,0,0,1,4,54,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,105,"    GCD_OVERFLOW_32_BITS(""overflow: gcd({0}, {1}) is 2^31""),",1,0,0,0,8,0,0,0,1,3,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,106,"    GCD_OVERFLOW_64_BITS(""overflow: gcd({0}, {1}) is 2^63""),",1,0,0,0,8,0,0,0,1,3,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,107,"    HOLE_BETWEEN_MODELS_TIME_RANGES(""{0} wide hole between models time ranges""),",1,0,0,1,4,0,0,0,1,4,76,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,108,"    IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero""),",1,0,0,1,12,0,0,0,1,4,107,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,109,"    INDEX_LARGER_THAN_MAX(""the index specified: {0} is larger than the current maximal index {1}""),",1,0,0,1,6,0,0,0,1,4,95,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,110,"    INDEX_NOT_POSITIVE(""index ({0}) is not positive""),",1,0,0,2,6,0,0,0,1,4,50,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,111,"    INDEX_OUT_OF_RANGE(""index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,64,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,112,"    INFINITE_ARRAY_ELEMENT(""Array contains an infinite element, {0} at index {1}""),",1,0,0,0,6,0,0,0,1,3,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,113,"    INFINITE_VALUE_CONVERSION(""cannot convert infinite value""),",1,0,0,1,2,0,0,0,1,4,59,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,114,"    INITIAL_CAPACITY_NOT_POSITIVE(""initial capacity ({0}) is not positive""),",1,0,0,2,6,0,0,0,1,4,72,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,115,"    INITIAL_COLUMN_AFTER_FINAL_COLUMN(""initial column {0} after final column {1}""),",1,0,0,1,6,1,0,0,1,5,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,116,"    INITIAL_ROW_AFTER_FINAL_ROW(""initial row {0} after final row {1}""),",1,0,0,1,6,1,0,0,1,5,67,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,117,"    INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE(""input data comes from unsupported datasource: {0}, supported sources: {1}, {2}""),",1,0,0,0,8,0,0,0,1,3,121,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,118,"    INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES(""instance of class {0} not comparable to existing values""),",1,0,0,1,4,1,0,0,1,5,103,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,119,"    INSUFFICIENT_DATA_FOR_T_STATISTIC(""insufficient data for t statistic, needs at least 2, got {0}""),",1,0,0,0,4,1,0,0,1,4,98,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,120,"    INSUFFICIENT_DIMENSION(""insufficient dimension {0}, must be at least {1}""),",1,0,0,0,6,0,0,0,1,3,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,121,"    INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE(""sample contains {0} observed points, at least {1} are required""),",1,0,0,0,6,0,0,0,1,3,105,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,122,"    INSUFFICIENT_ROWS_AND_COLUMNS(""insufficient data: only {0} rows and {1} columns.""),",1,0,0,1,6,0,0,0,1,4,83,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,123,"    INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT(""{0} method needs at least one previous point""),",1,0,0,1,4,0,0,0,1,4,101,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,124,"    INTERNAL_ERROR(""internal error, please fill a bug report at {0}""),",1,0,0,0,4,0,0,0,1,3,66,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,125,"    INVALID_BRACKETING_PARAMETERS(""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}""),",1,0,0,0,8,0,0,0,1,3,112,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,126,"    INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS(""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}""),",1,0,0,0,8,0,0,0,1,3,124,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,127,"    INVALID_ITERATIONS_LIMITS(""invalid iteration limits: min={0}, max={1}""),",1,0,0,0,6,0,0,0,1,3,72,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,128,"    INVALID_MAX_ITERATIONS(""bad value for maximum iterations number: {0}""),",1,0,0,1,4,1,0,0,1,5,71,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,129,"    INVALID_ROUNDING_METHOD(""invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})""),",1,0,0,1,52,0,0,0,1,4,165,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,130,"    ITERATOR_EXHAUSTED(""iterator exhausted""),",1,0,0,1,2,0,0,0,1,4,41,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,131,"    LCM_OVERFLOW_32_BITS(""overflow: lcm({0}, {1}) is 2^31""),",1,0,0,0,8,0,0,0,1,3,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,132,"    LCM_OVERFLOW_64_BITS(""overflow: lcm({0}, {1}) is 2^63""),",1,0,0,0,8,0,0,0,1,3,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,133,"    LOESS_EXPECTS_AT_LEAST_ONE_POINT(""Loess expects at least 1 point""),",1,0,0,1,2,0,0,0,1,4,67,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,134,"    LOWER_BOUND_NOT_BELOW_UPPER_BOUND(""lower bound ({0}) must be strictly less than upper bound ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,111,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,135,"    LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT(""lower endpoint ({0}) must be less than or equal to upper endpoint ({1})""),",1,0,0,2,10,0,0,0,1,4,111,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,136,"    MAP_MODIFIED_WHILE_ITERATING(""map has been modified while iterating""),",1,0,0,1,2,1,0,0,1,5,70,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,137,"    MAX_EVALUATIONS_EXCEEDED(""maximal number of evaluations ({0}) exceeded""),",1,0,0,2,6,0,0,0,1,4,73,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,138,"    MAX_ITERATIONS_EXCEEDED(""maximal number of iterations ({0}) exceeded""),",1,0,0,2,6,0,0,0,1,4,71,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,139,"    MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}""),",1,0,0,0,8,0,0,0,1,3,132,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,140,"    MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS(""Loess expects the abscissa and ordinate arrays to be of the same size, but got {0} abscissae and {1} ordinatae""),",1,0,0,0,6,0,0,0,1,3,156,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,141,"    NAN_ELEMENT_AT_INDEX(""element {0} is NaN""),",1,0,0,1,4,0,0,0,1,4,43,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,142,"    NAN_VALUE_CONVERSION(""cannot convert NaN value""),",1,0,0,1,2,0,0,0,1,4,49,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,143,"    NEGATIVE_BRIGHTNESS_EXPONENT(""brightness exponent should be positive or null, but got {0}""),",1,0,0,0,4,0,0,0,1,3,92,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,144,"    NEGATIVE_COMPLEX_MODULE(""negative complex module {0}""),",1,0,0,1,4,0,0,0,1,4,55,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,145,"    NEGATIVE_ELEMENT_AT_2D_INDEX(""element ({0}, {1}) is negative: {2}""),",1,0,0,0,10,0,0,0,1,3,68,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,146,"    NEGATIVE_ELEMENT_AT_INDEX(""element {0} is negative: {1}""),",1,0,0,1,6,0,0,0,1,4,58,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,147,"    NEGATIVE_LENGTH(""length cannot be negative ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,148,"    NEGATIVE_NUMBER_OF_SUCCESSES(""number of successes must be non-negative ({0})""),",1,0,0,2,6,0,0,0,1,4,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,149,"    NEGATIVE_NUMBER_OF_TRIALS(""number of trials must be non-negative ({0})""),",1,0,0,2,6,0,0,0,1,4,73,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,150,"    NEGATIVE_ROBUSTNESS_ITERATIONS(""the number of robustness iterations must be non-negative, but got {0}""),",1,0,0,0,4,0,0,0,1,3,104,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,151,"    NEGATIVE_START_POSITION(""start position cannot be negative ({0})""),",1,0,0,2,6,0,0,0,1,4,67,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,152,"    NON_CONVERGENT_CONTINUED_FRACTION(""Continued fraction convergents failed to converge for value {0}""),",1,0,0,1,4,1,0,0,1,5,101,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,153,"    NON_POSITIVE_MICROSPHERE_ELEMENTS(""number of microsphere elements must be positive, but got {0}""),",1,0,0,0,4,0,0,0,1,3,98,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,154,"    NON_POSITIVE_POLYNOMIAL_DEGREE(""polynomial degree must be positive: degree={0}""),",1,0,0,1,4,0,0,0,1,4,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,155,"    NON_REAL_FINITE_ABSCISSA(""all abscissae must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,89,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,156,"    NON_REAL_FINITE_ORDINATE(""all ordinatae must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,89,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,157,"    NON_REAL_FINITE_WEIGHT(""all weights must be finite real numbers, but {0}-th is {1}""),",1,0,0,0,6,0,0,0,1,3,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,158,"    NON_SQUARE_MATRIX(""a {0}x{1} matrix was provided instead of a square matrix""),",1,0,0,1,6,0,0,0,1,4,78,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,159,"    NORMALIZE_INFINITE(""Cannot normalize to an infinite value""),",1,0,0,1,2,0,0,0,1,4,60,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,160,"    NORMALIZE_NAN(""Cannot normalize to NaN""),",1,0,0,1,2,0,0,0,1,4,41,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,161,"    NOT_ADDITION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not addition compatible""),",1,0,0,1,10,0,0,0,1,4,93,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,162,"    NOT_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not decreasing ({2} < {3})""),",1,0,0,2,12,0,0,0,1,4,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,163,"    NOT_DECREASING_SEQUENCE(""points {3} and {2} are not decreasing ({1} < {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,88,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,164,"    NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS(""not enough data ({0} rows) for this many predictors ({1} predictors)""),",1,0,0,2,10,2,0,0,1,5,113,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,165,"    NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION(""spline partition must have at least {0} points, got {1}""),",1,0,0,0,6,0,0,0,1,3,97,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,166,"    NOT_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not increasing ({2} > {3})""),",1,0,0,2,12,0,0,0,1,4,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,167,"    NOT_INCREASING_SEQUENCE(""points {3} and {2} are not increasing ({1} > {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,88,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,168,"    NOT_MULTIPLICATION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not multiplication compatible""),",1,0,0,1,10,0,0,0,1,4,105,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,169,"    NOT_POSITIVE_ALPHA(""alpha must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,170,"    NOT_POSITIVE_BETA(""beta must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,49,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,171,"    NOT_POSITIVE_COLUMNDIMENSION(""invalid column dimension: {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,172,"    NOT_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix""),",1,0,0,1,2,0,0,0,1,4,61,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,173,"    NOT_POSITIVE_DEGREES_OF_FREEDOM(""degrees of freedom must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,174,"    NOT_POSITIVE_ELEMENT_AT_INDEX(""element {0} is not positive: {1}""),",1,0,0,1,6,0,0,0,1,4,66,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,175,"    NOT_POSITIVE_EXPONENT(""invalid exponent {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,65,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,176,"    NOT_POSITIVE_LENGTH(""length must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,53,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,177,"    LENGTH(""length ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,34,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,178,"    NOT_POSITIVE_MEAN(""mean must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,49,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,179,"    MEAN(""mean ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,30,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,180,"    NOT_POSITIVE_NUMBER_OF_SAMPLES(""number of sample is not positive: {0}""),",1,0,0,1,4,0,0,0,1,4,72,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,181,"    NUMBER_OF_SAMPLES(""number of samples ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,182,"    NOT_POSITIVE_PERMUTATION(""permutation k ({0}) must be positive""),",1,0,0,2,6,0,0,0,1,4,65,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,183,"    PERMUTATION_SIZE(""permutation size ({0}""), /* keep */",1,0,0,1,5,0,0,0,1,4,53,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,184,"    NOT_POSITIVE_POISSON_MEAN(""the Poisson mean must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,69,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,185,"    NOT_POSITIVE_POPULATION_SIZE(""population size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,71,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,186,"    NOT_POSITIVE_ROW_DIMENSION(""invalid row dimension: {0} (must be positive)""),",1,0,0,2,6,0,0,0,1,4,76,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,187,"    NOT_POSITIVE_SAMPLE_SIZE(""sample size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,188,"    NOT_POSITIVE_SCALE(""scale must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,189,"    NOT_POSITIVE_SHAPE(""shape must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,190,"    NOT_POSITIVE_STANDARD_DEVIATION(""standard deviation must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,77,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,191,"    STANDARD_DEVIATION(""standard deviation ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,58,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,192,"    NOT_POSITIVE_UPPER_BOUND(""upper bound must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,193,"    NOT_POSITIVE_WINDOW_SIZE(""window size must be positive ({0})""),",1,0,0,2,6,0,0,0,1,4,63,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,194,"    NOT_POWER_OF_TWO(""{0} is not a power of 2""),",1,0,0,1,4,0,0,0,1,4,44,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,195,"    NOT_POWER_OF_TWO_CONSIDER_PADDING(""{0} is not a power of 2, consider padding for fix""),",1,0,0,0,4,1,0,0,1,4,87,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,196,"    NOT_POWER_OF_TWO_PLUS_ONE(""{0} is not a power of 2 plus one""),",1,0,0,1,4,0,0,0,1,4,62,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,197,"    NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly decreasing ({2} <= {3})""),",1,0,0,2,12,0,0,0,1,4,104,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,198,"    NOT_STRICTLY_DECREASING_SEQUENCE(""points {3} and {2} are not strictly decreasing ({1} <= {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,107,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,199,"    NOT_STRICTLY_INCREASING_KNOT_VALUES(""knot values must be strictly increasing""),",1,0,0,1,2,0,0,0,1,4,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,200,"    NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly increasing ({2} >= {3})""),",1,0,0,2,12,0,0,0,1,4,104,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,201,"    NOT_STRICTLY_INCREASING_SEQUENCE(""points {3} and {2} are not strictly increasing ({1} >= {0})""), /* keep */",1,0,0,2,12,0,0,0,1,4,107,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,202,"    NOT_SUBTRACTION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not subtraction compatible""),",1,0,0,1,10,0,0,0,1,4,99,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,203,"    NOT_SYMMETRIC_MATRIX(""not symmetric matrix""),",1,0,0,1,2,0,0,0,1,4,45,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,204,"    NO_BIN_SELECTED(""no bin selected""),",1,0,0,1,2,0,0,0,1,4,35,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,205,"    NO_CONVERGENCE_WITH_ANY_START_POINT(""none of the {0} start points lead to convergence""),",1,0,0,1,4,0,0,0,1,4,88,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,206,"    NO_DATA(""no data""), /* keep */",1,0,0,1,2,0,0,0,1,4,30,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,207,"    NO_DEGREES_OF_FREEDOM(""no degrees of freedom ({0} measurements, {1} parameters)""),",1,0,0,0,8,0,0,0,1,3,82,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,208,"    NO_DENSITY_FOR_THIS_DISTRIBUTION(""This distribution does not have a density function implemented""),",1,0,0,1,2,0,0,0,1,4,99,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,209,"    NO_FEASIBLE_SOLUTION(""no feasible solution""),",1,0,0,1,2,0,0,0,1,4,45,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,210,"    NO_OPTIMUM_COMPUTED_YET(""no optimum computed yet""),",1,0,0,1,2,0,0,0,1,4,51,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,211,"    NO_RESULT_AVAILABLE(""no result available""),",1,0,0,1,2,0,0,0,1,4,43,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,212,"    NO_SUCH_MATRIX_ENTRY(""no entry at indices ({0}, {1}) in a {2}x{3} matrix""),",1,0,0,0,12,0,0,0,1,3,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,213,"    NULL_COVARIANCE_MATRIX(""covariance matrix is null""),",1,0,0,1,2,0,0,0,1,4,52,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,214,"    NULL_DENOMINATOR(""denominator is null""),",1,0,0,1,2,0,0,0,1,4,40,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,215,"    NULL_DENOMINATOR_FORMAT(""denominator format can not be null""),",1,0,0,1,2,0,0,0,1,4,62,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,216,"    NULL_FRACTION(""null fraction""),",1,0,0,1,2,0,0,0,1,4,31,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,217,"    NULL_FUNCTION(""function is null""),",1,0,0,1,2,0,0,0,1,4,34,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,218,"    NULL_IMAGINARY_FORMAT(""null imaginary format""),",1,0,0,1,2,0,0,0,1,4,47,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,219,"    NULL_INPUT_ARRAY(""input array is null""),",1,0,0,1,2,0,0,0,1,4,40,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,220,"    NULL_NUMERATOR(""numerator is null""),",1,0,0,1,2,0,0,0,1,4,36,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,221,"    NULL_NUMERATOR_FORMAT(""numerator format can not be null""),",1,0,0,1,2,0,0,0,1,4,58,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,222,"    NULL_OBJECT_TRANSFORMATION(""Conversion Exception in Transformation, Object is null""),",1,0,0,0,2,0,0,0,1,3,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,223,"    NULL_REAL_FORMAT(""null real format""),",1,0,0,1,2,0,0,0,1,4,37,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,224,"    NULL_WHOLE_FORMAT(""whole format can not be null""),",1,0,0,1,2,0,0,0,1,4,50,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,225,"    NUMBER_TOO_LARGE(""{0} is larger than the maximum ({1})""), /* keep */",1,0,0,2,8,0,0,0,1,4,68,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,226,"    NUMBER_TOO_SMALL(""{0} is smaller than the minimum ({1})""), /* keep */",1,0,0,2,8,0,0,0,1,4,69,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,227,"    NUMBER_TOO_LARGE_BOUND_EXCLUDED(""{0} is larger than, or equal to, the maximum ({1})""), /* keep */",1,0,0,1,8,0,0,0,1,4,97,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,228,"    NUMBER_TOO_SMALL_BOUND_EXCLUDED(""{0} is smaller than, or equal to, the minimum ({1})""), /* keep */",1,0,0,1,8,0,0,0,1,4,98,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,229,"    NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE(""number of successes ({0}) must be less than or equal to population size ({1})""),",1,0,0,2,10,0,0,0,1,4,127,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,230,"    NUMERATOR_OVERFLOW_AFTER_MULTIPLY(""overflow, numerator too large after multiply: {0}""),",1,0,0,0,4,0,0,0,1,3,87,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,231,"    N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED(""{0} points Legendre-Gauss integrator not supported, number of points must be in the {1}-{2} range""),",1,0,0,0,8,0,0,0,1,3,150,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,232,"    OBSERVED_COUNTS_ALL_ZERO(""observed counts are all 0 in observed array {0}""),",1,0,0,1,4,0,0,0,1,4,76,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,233,"    OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY(""observed counts are both zero for entry {0}""),",1,0,0,1,4,1,0,0,1,5,84,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,234,"    OUT_OF_BOUNDS_QUANTILE_VALUE(""out of bounds quantile value: {0}, must be in (0, 100]""),",1,0,0,0,6,0,0,0,1,3,87,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,235,"    OUT_OF_BOUND_SIGNIFICANCE_LEVEL(""out of bounds significance level {0}, must be between {1} and {2}""),",1,0,0,0,8,0,0,0,1,3,101,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,236,"    OUT_OF_ORDER_ABSCISSA_ARRAY(""the abscissae array must be sorted in a strictly increasing order, but the {0}-th element is {1} whereas {2}-th is {3}""),",1,0,0,0,10,0,0,0,1,3,150,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,237,"    OUT_OF_RANGE_ROOT_OF_UNITY_INDEX(""out of range root of unity index {0} (must be in [{1};{2}])""),",1,0,0,2,12,0,0,0,1,4,96,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,238,"    OUT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""), /* keep */",1,0,0,0,10,0,0,0,1,3,62,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,239,"    OVERFLOW_IN_FRACTION(""overflow in fraction {0}/{1}, cannot negate""),",1,0,0,0,6,0,0,0,1,3,68,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,240,"    PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD(""cannot access {0} method in percentile implementation {1}""),",1,0,0,1,6,0,0,0,1,4,108,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,241,"    PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD(""percentile implementation {0} does not support {1}""),",1,0,0,1,6,0,0,0,1,4,99,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,242,"    PERMUTATION_EXCEEDS_N(""permutation size ({0}) exceeds permuation domain ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,91,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,243,"    POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS(""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)""),",1,0,0,2,8,0,0,0,1,4,130,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,244,"    POSITION_SIZE_MISMATCH_INPUT_ARRAY(""position {0} and size {1} don't fit to the size of the input array {2}""),",1,0,0,1,8,0,0,0,1,4,109,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,245,"    POWER_NEGATIVE_PARAMETERS(""cannot raise an integral value to a negative power ({0}^{1})""),",1,0,0,2,8,0,0,0,1,4,90,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,246,"    PROPAGATION_DIRECTION_MISMATCH(""propagation direction mismatch""),",1,0,0,1,2,0,0,0,1,4,65,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,247,"    RANDOMKEY_MUTATION_WRONG_CLASS(""RandomKeyMutation works only with RandomKeys, not {0}""),",1,0,0,0,4,0,0,0,1,3,88,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,248,"    ROOTS_OF_UNITY_NOT_COMPUTED_YET(""roots of unity have not been computed yet""),",1,0,0,1,2,0,0,0,1,4,77,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,249,"    ROTATION_MATRIX_DIMENSIONS(""a {0}x{1} matrix cannot be a rotation matrix""),",1,0,0,1,6,0,0,0,1,4,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,250,"    ROW_INDEX_OUT_OF_RANGE(""row index {0} out of allowed range [{1}, {2}]""),",1,0,0,0,10,0,0,0,1,3,72,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,251,"    SAME_SIGN_AT_ENDPOINTS(""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]""),",1,0,0,0,14,1,0,0,1,4,126,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,252,"    SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE(""sample size ({0}) exceeds collection size ({1})""), /* keep */",1,0,0,2,10,0,0,0,1,4,98,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,253,"    SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE(""sample size ({0}) must be less than or equal to population size ({1})""),",1,0,0,2,10,0,0,0,1,4,113,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,254,"    SIMPLEX_NEED_ONE_POINT(""simplex must contain at least one point""),",1,0,0,1,2,0,0,0,1,4,66,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,255,"    SIMPLE_MESSAGE(""{0}""),",1,0,0,1,4,0,0,0,1,4,22,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,256,"    SINGULAR_MATRIX(""matrix is singular""),",1,0,0,1,2,0,0,0,1,4,38,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,257,"    SUBARRAY_ENDS_AFTER_ARRAY_END(""subarray ends after array end""),",1,0,0,1,2,0,0,0,1,4,63,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,258,"    TOO_LARGE_CUTOFF_SINGULAR_VALUE(""cutoff singular value is {0}, should be at most {1}""),",1,0,0,0,6,0,0,0,1,3,87,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,259,"    TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY(""cannot discard {0} elements from a {1} elements array""),",1,0,0,1,6,0,0,0,1,4,97,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,260,"    TOO_SMALL_BANDWIDTH(""the bandwidth must be large enough to accomodate at least 2 points. There are {0}  data points, and bandwidth must be at least {1}  but it is only {2}""),",1,0,0,0,8,0,0,0,1,3,174,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,261,"    TOO_SMALL_COST_RELATIVE_TOLERANCE(""cost relative tolerance is too small ({0}), no further reduction in the sum of squares is possible""),",1,0,0,1,6,0,0,0,1,4,136,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,262,"    TOO_SMALL_INTEGRATION_INTERVAL(""too small integration interval: length = {0}""),",1,0,0,1,4,0,0,0,1,4,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,263,"    TOO_SMALL_ORTHOGONALITY_TOLERANCE(""orthogonality tolerance is too small ({0}), solution is orthogonal to the jacobian""),",1,0,0,1,6,0,0,0,1,4,120,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,264,"    TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE(""parameters relative tolerance is too small ({0}), no further improvement in the approximate solution is possible""),",1,0,0,1,6,0,0,0,1,4,156,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,265,"    TWO_OR_MORE_CATEGORIES_REQUIRED(""two or more categories required, got {0}""),",1,0,0,0,4,0,0,0,1,3,76,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,266,"    TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED(""two or more values required in each category, one has {0}""),",1,0,0,0,4,0,0,0,1,3,101,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,267,"    UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH(""unable to bracket optimum in line search""),",1,0,0,1,2,0,0,0,1,4,85,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,268,"    UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM(""unable to compute covariances: singular problem""),",1,0,0,1,2,0,0,0,1,4,97,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,269,"    UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS(""unable to first guess the harmonic coefficients""),",1,0,0,1,2,0,0,0,1,4,95,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,270,"    UNABLE_TO_ORTHOGONOLIZE_MATRIX(""unable to orthogonalize matrix in {0} iterations""),",1,0,0,1,4,0,0,0,1,4,83,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,271,"    UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN(""unable to perform Q.R decomposition on the {0}x{1} jacobian matrix""),",1,0,0,1,6,0,0,0,1,4,117,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,272,"    UNABLE_TO_SOLVE_SINGULAR_PROBLEM(""unable to solve: singular problem""),",1,0,0,1,2,0,0,0,1,4,70,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,273,"    UNBOUNDED_SOLUTION(""unbounded solution""),",1,0,0,1,2,0,0,0,1,4,41,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,274,"    UNKNOWN_MODE(""unknown mode {0}, known modes: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})""),",1,0,0,1,40,0,0,0,1,4,118,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,275,"    UNPARSEABLE_3D_VECTOR(""unparseable 3D vector: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,56,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,276,"    UNPARSEABLE_COMPLEX_NUMBER(""unparseable complex number: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,66,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,277,"    UNPARSEABLE_FRACTION_NUMBER(""unparseable fraction number: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,68,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,278,"    UNPARSEABLE_REAL_VECTOR(""unparseable real vector: \""{0}\""""),",1,0,0,1,4,0,0,0,1,4,60,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,279,"    UNSUPPORTED_EXPANSION_MODE(""unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})""),",1,0,0,1,16,0,0,0,1,4,106,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,280,"    URL_CONTAINS_NO_DATA(""URL {0} contains no data""),",1,0,0,1,4,0,0,0,1,4,49,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,281,"    VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC(""{0} values have been added before statistic is configured""),",1,0,0,1,4,0,0,0,1,4,103,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,282,"    VECTOR_LENGTH_MISMATCH(""vector length mismatch: got {0} but expected {1}""),",1,0,0,1,6,0,0,0,1,4,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,283,"    VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT(""vector must have at least one element""),",1,0,0,1,2,0,0,0,1,4,79,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,284,"    WEIGHT_AT_LEAST_ONE_NON_ZERO(""weigth array must contain at least one non-zero value""),",1,0,0,1,2,0,0,0,1,4,86,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,285,"    WRONG_BLOCK_LENGTH(""wrong array shape (block length = {0}, expected {1})""),",1,0,0,0,8,0,0,0,1,3,75,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,286,"    WRONG_NUMBER_OF_POINTS(""{0} points are required, got only {1}""),",1,0,0,0,6,0,0,0,1,3,64,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,287,"    NUMBER_OF_POINTS(""number of points ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,54,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,288,"    ZERO_DENOMINATOR(""denominator must be different from 0""),",1,0,0,1,2,0,0,0,1,4,57,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,289,"    ZERO_DENOMINATOR_IN_FRACTION(""zero denominator in fraction {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,69,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,290,"    ZERO_FRACTION_TO_DIVIDE_BY(""the fraction to divide by must not be zero: {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,82,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,291,"    ZERO_NORM(""zero norm""),",1,0,0,1,2,0,0,0,1,4,23,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,292,"    ZERO_NORM_FOR_ROTATION_AXIS(""zero norm for rotation axis""),",1,0,0,1,2,1,0,0,1,5,59,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,293,"    ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector"");",1,0,0,1,2,1,0,0,1,5,81,2,1.33333,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,40,public enum LocalizedFormats implements Localizable {,1,0,0,0,1,3,0,1,1,5,53,1,1.33333,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,219,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,222,                        b = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,224,                    if (fu <= fw,2,2,0,0,1,1,0,0,0,4,12,10,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,226,                        v = w;,2,0,0,0,0,0,0,0,1,2,6,12,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,227,                        fv = fw;,2,0,0,0,0,0,0,0,1,2,8,12,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,228,                        w = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,229,                        fw = fu;,2,0,0,0,0,0,0,0,1,2,8,12,1.28571,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,192,                        u = x + tol1;,3,1,0,0,0,0,0,0,1,3,13,12,0.8,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,167,                                d = -tol1;,2,0,0,0,0,0,0,0,2,2,10,16,0.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,184,                        e = a - x;,3,1,0,0,0,0,0,0,1,3,10,12,0.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,97,        if (!resultComputed) {,1,0,0,1,3,1,0,0,1,5,22,4,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,98,            throw new NoDataException();,0,0,0,1,2,2,0,1,1,5,28,6,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,147,        return maxEvaluations;,1,0,0,0,0,1,0,0,0,2,22,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/NoDataException,66,33,        this(null);,0,0,0,1,2,1,0,0,0,3,11,2,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/NoDataException,66,34,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/NoDataException,66,41,"        super(specific, LocalizedFormats.NO_DATA, null);",3,0,0,0,2,1,0,0,1,4,48,3,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/NoDataException,66,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,56,                                           Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,57,        this.specific = specific;,2,0,0,0,0,1,0,0,1,3,25,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,58,        this.general = general;,2,0,0,0,0,1,0,0,1,3,23,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,59,        arguments = flatten(args).toArray();,1,0,0,1,4,0,3,0,2,5,36,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,60,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,106,        final List<Object> list = new ArrayList<Object>();,1,0,0,1,2,2,0,4,2,6,50,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,107,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.33333,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,116,        return list;,1,0,0,0,0,1,0,0,0,2,12,4,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,102,        return optimizer.getAbsoluteAccuracy();,0,0,0,1,2,1,2,0,0,4,39,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,122,        return totalEvaluations;,1,0,0,0,0,1,0,0,0,2,24,4,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,127,        return optimizer.getRelativeAccuracy();,0,0,0,1,2,1,2,0,0,4,39,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,147,        optimizer.setAbsoluteAccuracy(accuracy);,0,0,0,1,2,0,3,0,0,3,40,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,148,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,162,        optimizer.setRelativeAccuracy(accuracy);,0,0,0,1,2,0,3,0,0,3,40,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,163,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,194,            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);,2,0,0,1,2,1,2,0,0,5,97,7,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,196,        return optima.clone();,0,0,0,1,2,1,2,0,0,4,22,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,220,            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);,2,0,0,1,2,1,2,0,0,5,97,7,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,222,        return optimaValues.clone();,0,0,0,1,2,1,2,0,0,4,28,5,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,280,                int i = j - 1;,2,1,0,0,0,1,0,0,0,3,14,9,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,281,                double mIX = optima[i];,1,0,1,0,2,1,0,0,0,4,23,9,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,282,                double mIY = optimaValues[i];,1,0,1,0,2,1,0,0,0,4,29,9,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,283,                while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) {,6,5,0,3,11,1,0,0,0,5,71,8,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,284,                    optima[i + 1]       = mIX;,2,1,1,0,2,0,0,0,1,5,26,10,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,285,                    optimaValues[i + 1] = mIY;,2,1,1,0,2,0,0,0,1,5,26,10,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,286,                    if (i-- != 0) {,1,1,0,1,3,1,0,0,1,6,15,10,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,287,                        mIX = optima[i];,1,0,1,0,2,0,0,0,1,4,16,12,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,288,                        mIY = optimaValues[i];,1,0,1,0,2,0,0,0,1,4,22,12,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,294,                optima[i + 1]       = currX;,2,1,1,0,2,0,0,0,1,5,28,8,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,295,                optimaValues[i + 1] = currY;,2,1,1,0,2,0,0,0,1,5,28,8,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,296,                currX = optima[j];,1,0,1,0,2,0,0,0,1,4,18,8,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,297,                currY = optimaValues[j];,1,0,1,0,2,0,0,0,1,4,24,8,0.33333,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,444,        return new IllegalStateException() {,0,0,0,1,3,2,0,1,1,5,36,4,0.33333,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,444,        return new IllegalStateException() {,0,0,0,1,3,2,0,1,1,5,36,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,54,    public Max() {,1,0,0,1,3,1,0,0,1,5,14,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,55,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,56,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,34,public abstract class AbstractStorelessUnivariateStatistic,1,0,0,0,0,3,0,0,2,3,58,1,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,35,public abstract class AbstractUnivariateStatistic,1,0,0,0,0,3,0,0,2,3,49,1,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,80,        if (values == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,84,        if (begin < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,89,        if (length < 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,94,        if (begin + length > values.length) {,4,2,0,1,3,1,0,0,0,5,37,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,99,        if (length == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,103,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,83,        this(50.0);,0,0,0,1,2,1,0,0,0,3,11,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,84,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,92,    public Percentile(final double p) {,2,0,0,1,3,3,0,0,2,5,35,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,76,    private double quantile = 0.0;,1,0,0,0,0,2,0,0,1,3,30,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,93,        setQuantile(p);,0,0,0,1,2,0,2,0,1,4,15,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,94,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,163,"        return evaluate(values, start, length, quantile);",0,0,0,0,2,1,5,0,1,4,49,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,199,"        test(values, begin, length);",0,0,0,0,2,0,4,0,1,3,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,201,        if ((p > 100) || (p <= 0)) {,2,3,0,2,7,1,0,0,0,5,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,205,        if (length == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,208,        if (length == 1) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,211,        double n = length;,2,0,0,0,0,1,0,0,0,2,18,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,212,        double pos = p * (n + 1) / 100;,3,3,0,1,2,1,0,0,0,5,31,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,213,        double fpos = Math.floor(pos);,1,0,0,1,2,1,3,0,0,5,30,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,214,        int intPos = (int) fpos;,2,0,0,1,2,2,0,0,0,4,24,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,215,        double dif = pos - fpos;,3,1,0,0,0,1,0,0,0,3,24,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,216,        double[] sorted = new double[length];,1,0,1,0,4,3,0,0,0,4,37,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,217,"        System.arraycopy(values, begin, sorted, 0, length);",0,0,0,0,2,0,6,0,0,2,51,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,218,        Arrays.sort(sorted);,0,0,0,1,2,0,3,0,0,3,20,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,220,        if (pos < 1) {,1,1,0,1,3,1,0,0,0,5,14,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,223,        if (pos >= n) {,2,1,0,1,3,1,0,0,0,5,15,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,226,        double lower = sorted[intPos - 1];,2,1,1,0,2,1,0,0,0,5,34,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,227,        double upper = sorted[intPos];,1,0,1,0,2,1,0,0,0,4,30,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,228,        return lower + dif * (upper - lower);,4,3,0,1,2,1,0,0,0,5,37,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,250,        if (p <= 0 || p > 100) {,2,3,0,1,3,1,0,0,0,5,24,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,254,        quantile = p;,2,0,0,0,0,0,0,0,1,2,13,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,255,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,54,    public Min() {,1,0,0,1,3,1,0,0,1,5,14,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,55,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,56,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,77,    public Mean() {,1,0,0,1,3,1,0,0,1,5,15,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,78,        incMoment = true;,1,0,0,0,0,0,0,0,2,2,17,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,79,        moment = new FirstMoment();,1,0,0,1,2,1,0,1,2,6,27,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,80,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,155,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,156,            Sum sum = new Sum();,1,0,0,1,2,1,0,2,1,6,20,6,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,157,            double sampleSize = length;,2,0,0,0,0,1,0,0,0,2,27,7,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,160,"            double xbar = sum.evaluate(values, begin, length) / sampleSize;",2,1,0,0,2,1,5,0,0,5,63,7,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,163,            double correction = 0;,1,0,0,0,0,1,0,0,0,2,22,7,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,164,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,165,                correction += values[i] - xbar;,2,1,1,0,2,0,0,0,1,5,31,8,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,167,            return xbar + (correction/sampleSize);,3,2,0,1,2,1,0,0,0,5,38,6,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,76,    public FirstMoment() {,1,0,0,1,3,1,0,0,1,5,22,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,77,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,78,        m1 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,79,        dev = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,80,        nDev = Double.NaN;,3,0,0,0,0,0,0,0,1,2,18,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,94,    public Variance() {,1,0,0,1,3,1,0,0,1,5,19,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,74,    protected SecondMoment moment = null;,1,0,0,0,0,1,0,1,1,4,37,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,81,    protected boolean incMoment = true;,1,0,0,0,0,2,0,0,2,3,35,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,88,    private boolean isBiasCorrected = true;,1,0,0,0,0,2,0,0,2,3,39,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,95,        moment = new SecondMoment();,1,0,0,1,2,1,0,1,2,6,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,96,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,57,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,58,        m2 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,59,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,62,    public GeometricMean() {,1,0,0,1,3,1,0,0,1,5,24,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,63,        sumOfLogs = new SumOfLogs();,1,0,0,1,2,1,0,1,2,6,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,60,    public SumOfLogs() {,1,0,0,1,3,1,0,0,1,5,20,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,61,       value = 0d;,1,0,0,0,0,0,0,0,1,2,11,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,62,       n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,63,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,66,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,67,        m3 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,68,        nDevSq = Double.NaN;,3,0,0,0,0,0,0,0,1,2,20,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,69,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,65,    public Kurtosis() {,1,0,0,1,3,1,0,0,1,5,19,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,66,        incMoment = true;,1,0,0,0,0,0,0,0,2,2,17,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,67,        moment = new FourthMoment();,1,0,0,1,2,1,0,1,2,6,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,65,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,66,        m4 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,67,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,59,    public Skewness() {,1,0,0,1,3,1,0,0,1,5,19,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,46,    protected ThirdMoment moment = null;,1,0,0,0,0,1,0,1,1,4,36,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,60,        incMoment = true;,1,0,0,0,0,0,0,0,2,2,17,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,61,        moment = new ThirdMoment();,1,0,0,1,2,1,0,1,2,6,27,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,113,    public DescriptiveStatistics() {,1,0,0,1,3,1,0,0,1,5,32,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,73,    protected int windowSize = INFINITE_WINDOW;,2,0,0,0,0,2,0,0,1,3,43,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,78,    protected ResizableDoubleArray eDA = new ResizableDoubleArray();,1,0,0,1,2,2,0,2,2,6,64,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,81,    private UnivariateStatistic meanImpl = new Mean();,1,0,0,1,2,2,0,2,2,6,50,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,84,    private UnivariateStatistic geometricMeanImpl = new GeometricMean();,1,0,0,1,2,2,0,2,2,6,68,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,87,    private UnivariateStatistic kurtosisImpl = new Kurtosis();,1,0,0,1,2,2,0,2,2,6,58,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,90,    private UnivariateStatistic maxImpl = new Max();,1,0,0,1,2,2,0,2,2,6,48,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,93,    private UnivariateStatistic minImpl = new Min();,1,0,0,1,2,2,0,2,2,6,48,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,96,    private UnivariateStatistic percentileImpl = new Percentile();,1,0,0,1,2,2,0,2,2,6,62,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,99,    private UnivariateStatistic skewnessImpl = new Skewness();,1,0,0,1,2,2,0,2,2,6,58,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,102,    private UnivariateStatistic varianceImpl = new Variance();,1,0,0,1,2,2,0,2,2,6,58,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,105,    private UnivariateStatistic sumsqImpl = new SumOfSquares();,1,0,0,1,2,2,0,2,2,6,59,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,108,    private UnivariateStatistic sumImpl = new Sum();,1,0,0,1,2,2,0,2,2,6,48,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,114,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,144,        if (windowSize != INFINITE_WINDOW) {,2,1,0,1,3,1,0,0,0,5,36,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,151,            eDA.addElement(v);,0,0,0,1,2,0,3,0,0,3,18,7,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,153,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,179,        return apply(meanImpl);,0,0,0,1,2,1,2,0,1,5,23,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,380,        if (percentileImpl instanceof Percentile) {,1,0,0,1,3,2,0,1,0,5,43,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,381,            ((Percentile) percentileImpl).setQuantile(p);,1,0,0,2,6,0,2,1,0,5,45,7,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,399,        return apply(percentileImpl);,0,0,0,1,2,1,2,0,1,5,29,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,432,"        return stat.evaluate(eDA.getInternalValues(), eDA.start(), eDA.getNumElements());",0,0,0,1,8,1,8,0,0,4,81,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,52,    public SumOfSquares() {,1,0,0,1,3,1,0,0,1,5,23,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,53,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,54,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,55,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,53,    public Sum() {,1,0,0,1,3,1,0,0,1,5,14,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,54,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,55,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,56,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,121,        double sum = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,122,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,123,            sum = 0.0;,1,0,0,0,0,0,0,0,1,2,10,6,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,124,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,125,                sum += values[i];,1,0,1,0,2,0,0,0,1,4,17,8,0.33333,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,128,        return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,142,    public ResizableDoubleArray() {,1,0,0,1,3,1,0,0,1,5,31,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,90,    protected float contractionCriteria = 2.5f;,1,0,0,0,0,2,0,0,1,3,43,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,100,    protected float expansionFactor = 2.0f;,1,0,0,0,0,2,0,0,1,3,39,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,106,    protected int expansionMode = MULTIPLICATIVE_MODE;,2,0,0,0,0,2,0,0,1,3,50,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,112,    protected int initialCapacity = 16;,1,0,0,0,0,2,0,0,1,3,35,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,123,    protected int numElements = 0;,1,0,0,0,0,2,0,0,1,3,30,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,131,    protected int startIndex = 0;,1,0,0,0,0,2,0,0,1,3,29,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,143,        internalArray = new double[initialCapacity];,1,0,1,0,2,2,0,0,1,5,44,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,267,        numElements++;,1,0,0,0,0,0,0,0,1,2,14,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,268,        if ((startIndex + numElements) > internalArray.length) {,4,2,0,2,5,1,0,0,0,5,56,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,269,            expand();,0,0,0,1,2,0,1,0,1,4,9,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,271,        internalArray[startIndex + (numElements - 1)] = value;,3,2,1,1,4,0,0,0,1,6,54,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,272,        if (shouldContract()) {,0,0,0,2,5,1,1,0,1,5,23,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,273,            contract();,0,0,0,1,2,0,1,0,1,4,11,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,275,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,382,        double[] tempArray = new double[numElements + 1];,2,1,0,0,4,3,0,0,0,4,49,5,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,385,"        System.arraycopy(internalArray, startIndex, tempArray, 0, numElements);",0,0,0,0,2,0,6,0,0,2,71,5,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,386,        internalArray = tempArray;,2,0,0,0,0,0,0,0,1,2,26,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,389,        startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,390,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,480,        int newSize = 0;,1,0,0,0,0,1,0,0,0,2,16,5,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,481,        if (expansionMode == MULTIPLICATIVE_MODE) {,2,1,0,1,3,1,0,0,0,5,43,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,482,            newSize = (int) Math.ceil(internalArray.length * expansionFactor);,4,1,0,1,4,1,2,0,1,7,66,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,486,        double[] tempArray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,41,5,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,489,"        System.arraycopy(internalArray, 0, tempArray, 0, internalArray.length);",2,0,0,0,2,0,4,0,0,3,71,5,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,490,        internalArray = tempArray;,2,0,0,0,0,0,0,0,1,2,26,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,491,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,603,        return numElements;,1,0,0,0,0,1,0,0,0,2,19,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,636,        return internalArray;,1,0,0,0,0,1,0,0,0,2,21,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,771,        if (expansionMode == MULTIPLICATIVE_MODE) {,2,1,0,1,3,1,0,0,0,5,43,4,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,772,            return (internalArray.length / ((float) numElements)) > contractionCriteria;,4,2,0,3,6,2,0,0,0,5,76,6,0.33333,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,788,        return startIndex;,1,0,0,0,0,1,0,0,0,2,18,4,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,46,"        this(new DummyLocalizable(specifier), parts);",2,0,0,1,4,2,0,1,1,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,57,"        super(specifier, parts);",2,0,0,0,2,1,0,0,1,4,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,58,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,65,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,66,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,38,        super(LocalizedFormats.CONVERGENCE_FAILED);,2,0,0,1,2,1,0,0,1,5,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,51,"        this(new DummyLocalizable(pattern), arguments);",2,0,0,1,4,2,0,1,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,62,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,63,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,70,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,84,"        this(cause, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,85,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,96,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,66,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,57,    public MathException() {,1,0,0,1,3,1,0,0,1,5,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,58,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,3,0,0,0,0,1,0,0,1,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,59,"        this.arguments = new Object[] { """" };",1,0,0,0,4,2,0,1,2,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,60,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,72,"      this(new DummyLocalizable(pattern), arguments);",2,0,0,1,4,2,0,1,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,73,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,83,"    public MathException(Localizable pattern, Object ... arguments) {",3,0,0,0,3,1,0,2,1,5,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,84,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,85,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,86,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,96,        super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,97,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,3,0,0,0,0,1,0,0,1,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,98,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",2,1,0,1,8,2,2,1,2,8,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,99,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,114,"        this(rootCause, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,115,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,128,      super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,129,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,130,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,131,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,141,        return pattern.getSourceString();,0,0,0,1,2,1,2,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,150,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,159,        return arguments.clone();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,170,        if (pattern != null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,171,"            return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",1,0,0,1,6,2,5,1,1,7,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,173,"        return """";",0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,179,        return getMessage(Locale.US);,2,0,0,1,2,1,1,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,185,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,193,        printStackTrace(System.err);,2,0,0,1,2,0,1,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,194,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,203,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,204,"            PrintWriter pw = new PrintWriter(out, false);",2,0,0,0,2,1,0,2,2,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,205,            printStackTrace(pw);,0,0,0,1,2,0,2,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,207,            pw.flush();,0,0,0,1,2,0,2,0,0,3,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,208,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,66,209,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,57,        throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,4,0.0,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,100,            throw new NotStrictlyPositiveException(eps);,1,0,0,1,2,2,0,1,1,6,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,103,            throw new NotStrictlyPositiveException(t);,1,0,0,1,2,2,0,1,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,110,            a = hi;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,111,            b = lo;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,121,            fx = -fx;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,202,                    fu = -fu;,2,0,0,0,0,0,0,0,2,2,9,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,243,        throw new MaxIterationsExceededException(maximalIterationCount);,1,0,0,1,2,2,0,1,1,6,64,4,0.0,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,73,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,74,        resultComputed = false;,1,0,0,0,0,0,0,0,2,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,75,        setMaxEvaluations(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,76,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,90,        if (!resultComputed) {,1,0,0,1,3,1,0,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,91,            throw new NoDataException();,0,0,0,1,2,2,0,1,1,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,93,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,100,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,106,            final double opt = getResult();,1,0,0,1,2,2,1,0,2,6,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,108,                functionValue = function.value(opt);,1,0,0,1,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,111,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,109,            } catch (FunctionEvaluationException e) {,1,0,0,1,4,1,0,1,0,5,41,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,110,                throw new RuntimeException(e);,1,0,0,1,2,2,0,1,1,6,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,165,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,171,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,177,        return startValue;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,194,"            throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),",1,0,0,1,3,3,0,2,2,6,90,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,210,        if (++evaluations > maxEvaluations) {,2,1,0,1,3,1,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,211,            resultComputed = false;,1,0,0,0,0,0,0,0,2,2,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,212,"            throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),",1,0,0,1,3,3,0,2,2,6,90,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,215,        return function.value(point);,0,0,0,1,2,1,3,0,0,4,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,223,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,224,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,225,        this.startValue = startValue;,2,0,0,0,0,1,0,0,1,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,226,        this.goal = goal;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,227,        this.function = function;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,230,        functionValue = Double.NaN;,3,0,0,0,0,0,0,0,1,2,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,231,        evaluations = 0;,1,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,232,        resetIterationsCounter();,0,0,0,1,2,0,1,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,235,        result = doOptimize();,1,0,0,1,2,0,1,0,2,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,236,        resultComputed = true;,1,0,0,0,0,0,0,0,2,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,238,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,247,        this.functionValue = functionValue;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,248,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,254,"        return optimize(f, goal, min, max, min + 0.5 * (max - min));",3,3,0,1,4,1,5,0,1,7,60,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,61,                                      final double defaultAbsoluteAccuracy) {,1,0,0,0,2,2,0,0,1,4,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,63,        this.defaultRelativeAccuracy = 1.0e-14;,1,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,65,        this.relativeAccuracy = defaultRelativeAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,67,        this.maximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,68,        this.iterationCount = 0;,1,0,0,0,0,1,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,69,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,97,        absoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,0,0,0,1,2,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,98,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,107,        return maximalIterationCount;,1,0,0,0,0,1,0,0,0,2,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,112,        maximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,0,0,0,1,2,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,113,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,127,        relativeAccuracy = defaultRelativeAccuracy;,2,0,0,0,0,0,0,0,1,2,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,128,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,136,        iterationCount = 0;,1,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,137,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,148,        if (++iterationCount > maximalIterationCount) {,2,1,0,1,3,1,0,0,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,149,            throw new MaxIterationsExceededException(maximalIterationCount);,1,0,0,1,2,2,0,1,1,6,64,6,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,151,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,45,"        super(LocalizedFormats.MAX_ITERATIONS_EXCEEDED, maxIterations);",3,0,0,0,2,1,0,0,1,4,63,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,46,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,60,"        this(maxIterations, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,73,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,74,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,66,81,        return maxIterations;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,67,"        this(null, general, args);",2,0,0,0,2,1,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,73,        final StringBuilder sb = new StringBuilder();,1,0,0,1,2,2,0,2,2,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,75,        if (specific != null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,76,"            sb.append(MessageFactory.buildMessage(Locale.US, specific, arguments));",2,0,0,0,4,0,6,0,0,3,71,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,77,"            sb.append("": "");",0,0,0,1,2,0,2,0,1,4,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,79,"        sb.append(MessageFactory.buildMessage(Locale.US, general, arguments));",2,0,0,0,4,0,6,0,0,3,70,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,81,        return sb.toString();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,87,        final StringBuilder sb = new StringBuilder();,1,0,0,1,2,2,0,2,2,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,89,        if (specific != null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,90,"            sb.append(MessageFactory.buildMessage(Locale.getDefault(), specific, arguments));",0,0,0,1,6,0,8,0,0,3,81,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,91,"            sb.append("": "");",0,0,0,1,2,0,2,0,1,4,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,93,"        sb.append(MessageFactory.buildMessage(Locale.getDefault(), general, arguments));",0,0,0,1,6,0,8,0,0,3,80,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,95,        return sb.toString();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,108,            for (Object o : array) {,2,0,0,1,3,1,0,1,0,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,109,                if (o instanceof Object[]) {,1,0,0,1,5,2,0,1,0,5,28,9,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,110,                    list.addAll(flatten((Object[]) o));,1,0,0,3,8,0,3,1,1,6,35,11,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,66,112,                    list.add(o);,0,0,0,1,2,0,3,0,0,3,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,45,"        super(LocalizedFormats.MAX_EVALUATIONS_EXCEEDED, maxEvaluations);",3,0,0,0,2,1,0,0,1,4,65,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,46,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,60,"        this(maxEvaluations, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,73,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,74,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,66,81,        return maxEvaluations;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,47,"        super(LocalizedFormats.EVALUATION_FAILED, argument);",3,0,0,0,2,1,0,0,1,4,52,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,48,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,49,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,59,"        super(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));",3,0,0,1,4,2,0,1,2,6,73,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,60,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,73,"        this(argument, new DummyLocalizable(pattern), argument);",3,0,0,1,4,2,0,1,1,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,74,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,86,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,87,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,88,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,100,"        this(argument, new DummyLocalizable(pattern), argument);",3,0,0,1,4,2,0,1,1,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,101,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,113,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,114,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,115,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,125,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,126,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,127,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,137,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,138,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,139,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,153,"        this(cause, argument, new DummyLocalizable(pattern), argument);",4,0,0,1,4,2,0,1,1,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,154,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,168,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,169,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,170,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,184,"        this(cause, argument, new DummyLocalizable(pattern), argument);",4,0,0,1,4,2,0,1,1,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,185,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,199,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,200,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,201,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,66,209,        return argument.clone();,0,0,0,1,2,1,2,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,66,34,"        super(value, 0, false);",1,0,0,0,2,1,0,0,2,4,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,66,35,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,66,44,"        super(specific, value, 0, false);",2,0,0,0,2,1,0,0,2,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,66,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,48,"        this(null, wrong, min, boundIsAllowed);",3,0,0,0,2,1,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,49,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,63,"        super(specific,",1,0,0,0,1,1,0,0,1,4,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,69,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,70,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,77,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,66,84,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,46,"        super(specific, general, wrong, arguments);",4,0,0,0,2,1,0,0,1,4,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,47,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,60,"        super(general, wrong, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,61,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,66,68,        return argument;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,92,        return optimaValues[0];,0,0,1,0,2,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,97,        return optima[0];,0,0,1,0,2,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,107,        return totalIterations;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,112,        return maxIterations;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,117,        return maxEvaluations;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,132,        optimizer.resetAbsoluteAccuracy();,0,0,0,1,2,0,2,0,0,3,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,133,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,137,        optimizer.resetMaximalIterationCount();,0,0,0,1,2,0,2,0,0,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,138,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,142,        optimizer.resetRelativeAccuracy();,0,0,0,1,2,0,2,0,0,3,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,143,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,248,            } catch (FunctionEvaluationException fee) {,1,0,0,1,4,1,0,1,0,5,43,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,249,                optima[i]       = Double.NaN;,2,0,1,0,2,0,0,0,1,4,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,250,                optimaValues[i] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,251,            } catch (ConvergenceException ce) {,1,0,0,1,4,1,0,1,0,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,252,                optima[i]       = Double.NaN;,2,0,1,0,2,0,0,0,1,4,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,253,                optimaValues[i] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,265,                optima[i] = optima[--lastNaN];,1,0,1,0,4,0,0,0,2,4,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,266,                optima[lastNaN + 1] = Double.NaN;,3,1,1,0,2,0,0,0,1,5,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,267,                optimaValues[i] = optimaValues[--lastNaN];,1,0,1,0,4,0,0,0,2,4,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,268,                optimaValues[lastNaN + 1] = Double.NaN;,3,1,1,0,2,0,0,0,1,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,290,                        mIX = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,291,                        mIY = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,302,            throw new OptimizationException(,0,0,0,0,1,2,0,1,1,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,66,316,"        return optimize(f, goalType, min, max);",0,0,0,0,2,1,5,0,1,4,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,452,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,458,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,64,"        this(new DummyLocalizable(pattern), arguments);",2,0,0,1,4,2,0,1,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,65,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,75,"    public MathRuntimeException(final Localizable pattern, final Object ... arguments) {",3,0,0,0,3,3,0,2,3,5,84,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,76,        this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,77,        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,88,        super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,89,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,3,0,0,0,0,1,0,0,1,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,90,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",2,1,0,1,8,2,2,1,2,8,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,91,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,106,"        this(rootCause, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,107,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,121,        super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,122,        this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,123,        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,124,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,136,"        return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",1,0,0,1,6,2,5,1,1,7,87,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,146,        return pattern.getSourceString();,0,0,0,1,2,1,2,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,155,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,163,        return arguments.clone();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,173,        if (pattern != null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,174,"            return buildMessage(locale, pattern, arguments);",0,0,0,0,2,1,4,0,1,4,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,176,"        return """";",0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,182,        return getMessage(Locale.US);,2,0,0,1,2,1,1,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,188,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,196,        printStackTrace(System.err);,2,0,0,1,2,0,1,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,197,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,206,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,207,"            PrintWriter pw = new PrintWriter(out, false);",2,0,0,0,2,1,0,2,2,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,208,            printStackTrace(pw);,0,0,0,1,2,0,2,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,210,            pw.flush();,0,0,0,1,2,0,2,0,0,3,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,211,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,212,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,225,"        return createArithmeticException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,75,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,238,        return new ArithmeticException() {,0,0,0,1,3,2,0,1,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,269,"        return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,282,        return new ArrayIndexOutOfBoundsException() {,0,0,0,1,3,2,0,1,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,313,"        return createEOFException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,326,        return new EOFException() {,0,0,0,1,3,2,0,1,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,358,        IOException ioe = new IOException(rootCause.getLocalizedMessage());,1,0,0,2,4,1,2,2,1,7,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,359,        ioe.initCause(rootCause);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,360,        return ioe;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,374,"        return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,80,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,387,        return new IllegalArgumentException() {,0,0,0,1,3,2,0,1,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,415,        IllegalArgumentException iae = new IllegalArgumentException(rootCause.getLocalizedMessage());,1,0,0,2,4,1,2,2,1,7,93,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,416,        iae.initCause(rootCause);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,417,        return iae;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,431,"        return createIllegalStateException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,77,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,475,"        return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,87,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,488,        return new ConcurrentModificationException() {,0,0,0,1,3,2,0,1,1,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,519,"        return createNoSuchElementException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,532,        return new NoSuchElementException() {,0,0,0,1,3,2,0,1,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,563,"        return createNullPointerException(new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,2,1,2,7,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,576,        return new NullPointerException() {,0,0,0,1,3,2,0,1,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,610,"        return createParseException(offset, new DummyLocalizable(pattern), arguments);",1,0,0,1,4,2,3,1,2,7,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,626,"        return new ParseException(null, offset) {",1,0,0,0,3,2,0,1,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,652,"        final String argument = ""https://issues.apache.org/jira/browse/MATH"";",1,0,0,0,0,1,0,1,2,4,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,654,        return new RuntimeException() {,0,0,0,1,3,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,39,public class MathRuntimeException extends RuntimeException {,1,0,0,0,1,3,0,1,1,5,60,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,576,        return new NullPointerException() {,0,0,0,1,3,2,0,1,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,584,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,590,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,532,        return new NoSuchElementException() {,0,0,0,1,3,2,0,1,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,540,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,546,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,626,"        return new ParseException(null, offset) {",1,0,0,0,3,2,0,1,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,634,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,640,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,65,    public Max(Max original) {,2,0,0,1,3,1,0,1,1,6,26,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,66,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,67,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,74,        if (d > value || Double.isNaN(value)) {,2,2,0,2,5,1,3,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,75,            value = d;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,77,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,85,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,86,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,87,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,94,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,101,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,128,        double max = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,129,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,130,            max = values[begin];,1,0,1,0,2,0,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,131,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,132,                if (!Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,1,6,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,133,                    max = (max > values[i]) ? max : values[i];,3,1,1,1,6,0,0,0,1,6,42,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,137,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,145,        Max result = new Max();,1,0,0,1,2,1,0,2,1,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,146,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,147,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,159,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,160,        dest.value = source.value;,4,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,161,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Max,66,40,public class Max extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,87,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,58,        if (values == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,59,            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);,2,0,0,1,2,1,2,0,0,5,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,61,"        return evaluate(values, 0, values.length);",2,0,0,0,2,1,2,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,87,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,88,            clear();,0,0,0,1,2,0,1,0,1,4,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,89,"            incrementAll(values, begin, length);",0,0,0,0,2,0,4,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,91,        return getResult();,0,0,0,1,2,1,1,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,126,        if (values == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,127,            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);,2,0,0,1,2,1,2,0,0,5,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,129,"        incrementAll(values, 0, values.length);",2,0,0,0,2,0,2,0,1,4,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,130,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,145,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,146,            int k = begin + length;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,147,            for (int i = begin; i < k; i++) {,5,1,0,1,3,2,0,0,1,6,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,148,                increment(values[i]);,0,0,1,1,4,0,1,0,1,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,151,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,162,        if (object == this ) {,1,1,0,1,3,2,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,163,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,165,       if (object instanceof AbstractStorelessUnivariateStatistic == false) {,1,1,0,1,3,2,0,1,1,7,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,166,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,168,        AbstractStorelessUnivariateStatistic stat = (AbstractStorelessUnivariateStatistic) object;,2,0,0,1,2,0,0,2,0,4,90,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,169,"        return MathUtils.equalsIncludingNaN(stat.getResult(), this.getResult()) &&",0,1,0,1,6,2,5,0,0,5,74,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic,66,180,        return 31* (31 + MathUtils.hash(getResult())) + MathUtils.hash(getN());,0,3,0,3,10,1,6,0,2,6,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,42,"        test(values, 0, 0);",0,0,0,0,2,0,2,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,43,"        return evaluate(values, 0, values.length);",2,0,0,0,2,1,2,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,81,            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);,2,0,0,1,2,1,2,0,0,5,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,85,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,90,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,95,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,100,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,142,        if (weights == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,143,            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);,2,0,0,1,2,1,2,0,0,5,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,146,        if (weights.length !=  values.length) {,4,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,147,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,151,        boolean containsPositiveWeight = false;,1,0,0,0,0,1,0,0,1,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,152,        for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,153,            if (Double.isNaN(weights[i])) {,0,0,1,2,7,1,2,0,0,5,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,154,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,157,            if (Double.isInfinite(weights[i])) {,0,0,1,2,7,1,2,0,0,5,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,158,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,161,            if (weights[i] < 0) {,0,1,1,1,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,162,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,165,            if (!containsPositiveWeight && weights[i] > 0.0) {,1,2,1,1,5,1,0,0,1,7,50,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,166,                containsPositiveWeight = true;,1,0,0,0,0,0,0,0,2,2,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,170,        if (!containsPositiveWeight) {,1,0,0,1,3,1,0,0,1,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,171,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic,66,175,"        return test(values, begin, length);",0,0,0,0,2,1,4,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,102,    public Percentile(Percentile original) {,2,0,0,1,3,1,0,1,1,6,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,103,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,104,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,133,"        test(values, 0, 0);",0,0,0,0,2,0,2,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,134,"        return evaluate(values, 0, values.length, p);",2,0,0,0,2,1,3,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,202,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,206,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,209,            return values[begin]; // always return single value for n = 1,0,0,1,0,2,3,0,0,0,3,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,221,            return sorted[0];,0,0,1,0,2,1,0,0,0,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,224,            return sorted[length - 1];,1,1,1,0,2,1,0,0,0,5,26,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,238,        return quantile;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,251,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,262,        Percentile result = new Percentile();,1,0,0,1,2,1,0,2,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,263,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,264,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,276,        dest.quantile = source.quantile;,4,0,0,0,0,0,0,0,1,2,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,277,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Percentile,66,69,public class Percentile extends AbstractUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,85,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,65,    public Min(Min original) {,2,0,0,1,3,1,0,1,1,6,26,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,66,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,67,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,74,        if (d < value || Double.isNaN(value)) {,2,2,0,2,5,1,3,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,75,            value = d;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,77,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,85,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,86,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,87,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,94,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,101,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,128,        double min = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,129,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,130,            min = values[begin];,1,0,1,0,2,0,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,131,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,132,                if (!Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,1,6,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,133,                    min = (min < values[i]) ? min : values[i];,3,1,1,1,6,0,0,0,1,6,42,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,137,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,145,        Min result = new Min();,1,0,0,1,2,1,0,2,1,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,146,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,147,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,159,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,160,        dest.value = source.value;,4,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,161,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/rank/Min,66,40,public class Min extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,87,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,87,    public Mean(final FirstMoment m1) {,2,0,0,1,3,2,0,1,2,6,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,88,        this.moment = m1;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,89,        incMoment = false;,1,0,0,0,0,0,0,0,2,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,90,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,98,    public Mean(Mean original) {,2,0,0,1,3,1,0,1,1,6,28,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,99,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,100,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,107,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,108,            moment.increment(d);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,110,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,117,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,118,            moment.clear();,0,0,0,1,2,0,2,0,0,3,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,120,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,127,        return moment.m1;,2,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,134,        return moment.getN();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,169,        return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,203,"        if (test(values, weights, begin, length)) {",0,0,0,0,5,1,5,0,1,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,204,            Sum sum = new Sum();,1,0,0,1,2,1,0,2,1,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,207,"            double sumw = sum.evaluate(weights,begin,length);",1,0,0,0,2,1,5,0,0,4,49,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,208,"            double xbarw = sum.evaluate(values, weights, begin, length) / sumw;",2,1,0,0,2,1,6,0,0,5,67,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,211,            double correction = 0;,1,0,0,0,0,1,0,0,0,2,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,212,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,213,                correction += weights[i] * (values[i] - xbarw);,2,2,1,1,6,0,0,0,1,6,47,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,215,            return xbarw + (correction/sumw);,3,2,0,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,217,        return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,245,"        return evaluate(values, weights, 0, values.length);",2,0,0,0,2,1,3,0,1,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,253,        Mean result = new Mean();,1,0,0,1,2,1,0,2,1,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,254,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,255,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,268,        dest.incMoment = source.incMoment;,4,0,0,0,0,0,0,0,1,2,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,269,        dest.moment = source.moment.copy();,4,0,0,1,2,0,1,0,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,270,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Mean,66,59,public class Mean extends AbstractStorelessUnivariateStatistic,1,0,0,0,0,3,0,1,1,4,62,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,90,         super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,91,"         copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,92,     },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,99,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,100,            m1 = 0.0;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,102,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,103,        double n0 = n;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,104,        dev = d - m1;,3,1,0,0,0,0,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,105,        nDev = dev / n0;,3,1,0,0,0,0,0,0,1,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,106,        m1 += nDev;,2,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,107,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,114,        m1 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,115,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,116,        dev = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,117,        nDev = Double.NaN;,3,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,118,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,125,        return m1;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,132,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,140,        FirstMoment result = new FirstMoment();,1,0,0,1,2,1,0,2,1,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,141,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,142,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,154,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,155,        dest.m1 = source.m1;,4,0,0,0,0,0,0,0,1,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,156,        dest.dev = source.dev;,4,0,0,0,0,0,0,0,1,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,157,        dest.nDev = source.nDev;,4,0,0,0,0,0,0,0,1,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,158,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FirstMoment,66,47,public class FirstMoment extends AbstractStorelessUnivariateStatistic,1,0,0,0,0,3,0,1,1,4,69,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,104,    public Variance(final SecondMoment m2) {,2,0,0,1,3,2,0,1,2,6,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,105,        incMoment = false;,1,0,0,0,0,0,0,0,2,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,106,        this.moment = m2;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,107,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,117,    public Variance(boolean isBiasCorrected) {,2,0,0,1,3,2,0,0,1,5,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,118,        moment = new SecondMoment();,1,0,0,1,2,1,0,1,2,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,119,        this.isBiasCorrected = isBiasCorrected;,2,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,120,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,131,"    public Variance(boolean isBiasCorrected, SecondMoment m2) {",3,0,0,0,3,2,0,1,1,5,59,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,132,        incMoment = false;,1,0,0,0,0,0,0,0,2,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,133,        this.moment = m2;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,134,        this.isBiasCorrected = isBiasCorrected;,2,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,135,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,143,    public Variance(Variance original) {,2,0,0,1,3,1,0,1,1,6,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,144,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,145,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,158,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,159,            moment.increment(d);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,161,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,168,            if (moment.n == 0) {,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,169,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,170,            } else if (moment.n == 1) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,171,                return 0d;,0,0,0,0,0,1,0,0,0,1,10,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,173,                if (isBiasCorrected) {,1,0,0,1,3,1,0,0,0,4,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,174,                    return moment.m2 / (moment.n - 1d);,4,2,0,1,2,1,0,0,0,5,35,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,176,                    return moment.m2 / (moment.n);,4,1,0,1,2,1,0,0,0,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,185,        return moment.getN();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,193,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,194,            moment.clear();,0,0,0,1,2,0,2,0,0,3,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,196,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,216,        if (values == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,217,            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);,2,0,0,1,2,1,2,0,0,5,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,219,"        return evaluate(values, 0, values.length);",2,0,0,0,2,1,2,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,245,        double var = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,247,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,248,            clear();,0,0,0,1,2,0,1,0,1,4,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,249,            if (length == 1) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,250,                var = 0.0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,251,            } else if (length > 1) {,1,1,0,1,4,2,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,252,                Mean mean = new Mean();,1,0,0,1,2,1,0,2,1,6,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,253,"                double m = mean.evaluate(values, begin, length);",1,0,0,0,2,1,5,0,0,4,48,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,254,"                var = evaluate(values, m, begin, length);",1,0,0,0,2,0,5,0,2,4,41,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,257,        return var;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,305,        double var = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,307,"        if (test(values, weights,begin, length)) {",0,0,0,0,5,1,5,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,308,            clear();,0,0,0,1,2,0,1,0,1,4,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,309,            if (length == 1) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,310,                var = 0.0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,311,            } else if (length > 1) {,1,1,0,1,4,2,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,312,                Mean mean = new Mean();,1,0,0,1,2,1,0,2,1,6,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,313,"                double m = mean.evaluate(values, weights, begin, length);",1,0,0,0,2,1,6,0,0,4,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,314,"                var = evaluate(values, weights, m, begin, length);",1,0,0,0,2,0,6,0,2,4,50,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,317,        return var;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,359,"        return evaluate(values, weights, 0, values.length);",2,0,0,0,2,1,3,0,1,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,391,        double var = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,393,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,394,            if (length == 1) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,395,                var = 0.0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,396,            } else if (length > 1) {,1,1,0,1,4,2,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,397,                double accum = 0.0;,1,0,0,0,0,1,0,0,0,2,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,398,                double dev = 0.0;,1,0,0,0,0,1,0,0,0,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,399,                double accum2 = 0.0;,1,0,0,0,0,1,0,0,0,2,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,400,                for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,401,                    dev = values[i] - mean;,2,1,1,0,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,402,                    accum += dev * dev;,3,1,0,0,0,0,0,0,1,3,19,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,403,                    accum2 += dev;,2,0,0,0,0,0,0,0,1,2,14,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,405,                double len = length;,2,0,0,0,0,1,0,0,0,2,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,406,                if (isBiasCorrected) {,1,0,0,1,3,1,0,0,0,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,407,                    var = (accum - (accum2 * accum2 / len)) / (len - 1.0);,6,5,0,2,6,0,0,0,1,5,54,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,409,                    var = (accum - (accum2 * accum2 / len)) / len;,6,4,0,2,4,0,0,0,1,5,46,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,413,        return var;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,442,"        return evaluate(values, mean, 0, values.length);",2,0,0,0,2,1,3,0,1,5,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,493,        double var = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,495,"        if (test(values, weights, begin, length)) {",0,0,0,0,5,1,5,0,1,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,496,            if (length == 1) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,497,                var = 0.0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,498,            } else if (length > 1) {,1,1,0,1,4,2,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,499,                double accum = 0.0;,1,0,0,0,0,1,0,0,0,2,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,500,                double dev = 0.0;,1,0,0,0,0,1,0,0,0,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,501,                double accum2 = 0.0;,1,0,0,0,0,1,0,0,0,2,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,502,                for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,503,                    dev = values[i] - mean;,2,1,1,0,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,504,                    accum += weights[i] * (dev * dev);,3,2,1,1,4,0,0,0,1,6,34,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,505,                    accum2 += weights[i] * dev;,2,1,1,0,2,0,0,0,1,5,27,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,508,                double sumWts = 0;,1,0,0,0,0,1,0,0,0,2,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,509,                for (int i = 0; i < weights.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,510,                    sumWts += weights[i];,1,0,1,0,2,0,0,0,1,4,21,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,513,                if (isBiasCorrected) {,1,0,0,1,3,1,0,0,0,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,514,                    var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);,6,5,0,2,6,0,0,0,1,5,60,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,516,                    var = (accum - (accum2 * accum2 / sumWts)) / sumWts;,6,4,0,2,4,0,0,0,1,5,52,11,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,520,        return var;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,565,"        return evaluate(values, weights, mean, 0, values.length);",2,0,0,0,2,1,4,0,1,5,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,572,        return isBiasCorrected;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,579,        this.isBiasCorrected = biasCorrected;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,580,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,587,        Variance result = new Variance();,1,0,0,1,2,1,0,2,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,588,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,589,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,602,        dest.moment = source.moment.copy();,4,0,0,1,2,0,1,0,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,603,        dest.isBiasCorrected = source.isBiasCorrected;,4,0,0,0,0,0,0,0,1,2,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,604,        dest.incMoment = source.incMoment;,4,0,0,0,0,0,0,0,1,2,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,605,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,66,68,"public class Variance extends AbstractStorelessUnivariateStatistic implements Serializable, WeightedEvaluation {",1,0,0,0,1,4,0,3,1,5,112,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,68,        super(original);,1,0,0,1,2,1,0,0,1,5,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,69,        this.m2 = original.m2;,3,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,70,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,77,        if (n < 1) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,78,            m1 = m2 = 0.0;,2,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,80,        super.increment(d);,2,0,0,1,2,1,0,0,0,4,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,81,        m2 += ((double) n - 1) * dev * nDev;,4,2,0,2,4,1,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,82,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,89,        super.clear();,1,0,0,1,2,1,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,90,        m2 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,91,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,98,        return m2;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,106,        SecondMoment result = new SecondMoment();,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,107,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,108,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,120,"        FirstMoment.copy(source, dest);",0,0,0,0,2,0,4,0,0,2,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,121,        dest.m2 = source.m2;,4,0,0,0,0,0,0,0,1,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,122,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/SecondMoment,66,45,public class SecondMoment extends FirstMoment implements Serializable {,1,0,0,0,1,4,0,2,1,5,71,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,73,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,74,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,81,    public GeometricMean(SumOfLogs sumOfLogs) {,2,0,0,1,3,1,0,1,1,6,43,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,82,        this.sumOfLogs = sumOfLogs;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,83,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,90,        GeometricMean result = new GeometricMean();,1,0,0,1,2,1,0,2,1,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,91,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,92,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,100,        sumOfLogs.increment(d);,0,0,0,1,2,0,3,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,101,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,108,        if (sumOfLogs.getN() > 0) {,0,1,0,2,5,1,2,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,109,            return Math.exp(sumOfLogs.getResult() / sumOfLogs.getN());,0,1,0,2,6,1,6,0,0,5,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,111,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,120,        sumOfLogs.clear();,0,0,0,1,2,0,2,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,121,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,142,        return Math.exp(,0,0,0,0,1,1,2,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,150,        return sumOfLogs.getN();,0,0,0,1,2,1,2,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,166,        checkEmpty();,0,0,0,1,2,0,1,0,1,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,167,        this.sumOfLogs = sumLogImpl;,2,0,0,0,0,1,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,168,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,176,        return sumOfLogs;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,188,        dest.sumOfLogs = source.sumOfLogs.copy();,4,0,0,1,2,0,1,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,189,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,196,        if (getN() > 0) {,0,1,0,2,5,1,1,0,1,6,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,197,            throw MathRuntimeException.createIllegalStateException(,0,0,0,0,1,1,2,0,0,3,55,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,201,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/GeometricMean,66,51,public class GeometricMean extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,97,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,71,    public SumOfLogs(SumOfLogs original) {,2,0,0,1,3,1,0,1,1,6,38,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,72,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,73,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,80,        value += Math.log(d);,1,0,0,1,2,0,3,0,1,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,81,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,82,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,89,        if (n > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,90,            return value;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,92,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,100,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,108,        value = 0d;,1,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,109,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,110,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,131,        double sumLog = Double.NaN;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,132,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,133,            sumLog = 0.0;,1,0,0,0,0,0,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,134,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,135,                sumLog += Math.log(values[i]);,1,0,1,1,4,0,2,0,1,6,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,138,        return sumLog;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,146,        SumOfLogs result = new SumOfLogs();,1,0,0,1,2,1,0,2,1,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,147,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,148,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,160,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,161,        dest.value = source.value;,4,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,162,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfLogs,66,44,public class SumOfLogs extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,93,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,77,    public ThirdMoment(ThirdMoment original) {,2,0,0,1,3,1,0,1,1,6,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,78,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,79,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,86,        if (n < 1) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,87,            m3 = m2 = m1 = 0.0;,3,0,0,0,0,0,0,0,3,2,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,90,        double prevM2 = m2;,2,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,91,        super.increment(d);,2,0,0,1,2,1,0,0,0,4,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,92,        nDevSq = nDev * nDev;,3,1,0,0,0,0,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,93,        double n0 = n;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,94,        m3 = m3 - 3.0 * nDev * prevM2 + (n0 - 1) * (n0 - 2) * nDevSq * dev;,8,6,0,1,4,0,0,0,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,95,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,102,        return m3;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,110,        super.clear();,1,0,0,1,2,1,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,111,        m3 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,112,        nDevSq = Double.NaN;,3,0,0,0,0,0,0,0,1,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,113,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,120,        ThirdMoment result = new ThirdMoment();,1,0,0,1,2,1,0,2,1,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,121,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,122,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,134,"        SecondMoment.copy(source, dest);",0,0,0,0,2,0,4,0,0,2,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,135,        dest.m3 = source.m3;,4,0,0,0,0,0,0,0,1,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,136,        dest.nDevSq = source.nDevSq;,4,0,0,0,0,0,0,0,1,2,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,137,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/ThirdMoment,66,47,public class ThirdMoment extends SecondMoment implements Serializable {,1,0,0,0,1,4,0,2,1,5,71,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,75,    public Kurtosis(final FourthMoment m4) {,2,0,0,1,3,2,0,1,2,6,40,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,76,        incMoment = false;,1,0,0,0,0,0,0,0,2,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,77,        this.moment = m4;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,86,    public Kurtosis(Kurtosis original) {,2,0,0,1,3,1,0,1,1,6,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,87,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,88,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,95,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,96,            moment.increment(d);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,98,            throw MathRuntimeException.createIllegalStateException(,0,0,0,0,1,1,2,0,0,3,55,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,101,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,108,        double kurtosis = Double.NaN;,3,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,109,        if (moment.getN() > 3) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,110,            double variance = moment.m2 / (moment.n - 1);,5,2,0,1,2,1,0,0,0,5,45,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,111,                if (moment.n <= 3 || variance < 10E-20) {,3,3,0,1,3,1,0,0,0,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,112,                    kurtosis = 0.0;,1,0,0,0,0,0,0,0,1,2,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,114,                    double n = moment.n;,3,0,0,0,0,1,0,0,0,2,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,115,                    kurtosis =,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,121,        return kurtosis;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,129,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,130,            moment.clear();,0,0,0,1,2,0,2,0,0,3,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,132,            throw MathRuntimeException.createIllegalStateException(,0,0,0,0,1,1,2,0,0,3,55,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,135,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,141,        return moment.getN();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,165,        double kurt = Double.NaN;,3,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,167,"        if (test(values, begin, length) && length > 3) {",1,2,0,0,5,1,4,0,1,6,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,170,            Variance variance = new Variance();,1,0,0,1,2,1,0,2,1,6,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,171,"            variance.incrementAll(values, begin, length);",0,0,0,0,2,0,5,0,0,2,45,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,172,            double mean = variance.moment.m1;,4,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,173,            double stdDev = Math.sqrt(variance.getResult());,1,0,0,2,4,1,4,0,0,5,48,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,177,            double accum3 = 0.0;,1,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,178,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,179,"                accum3 += Math.pow(values[i] - mean, 4.0);",2,1,1,0,4,0,2,0,1,6,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,181,"            accum3 /= Math.pow(stdDev, 4.0d);",1,0,0,0,2,0,3,0,1,4,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,184,            double n0 = length;,2,0,0,0,0,1,0,0,0,2,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,186,            double coefficientOne =,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,188,            double termTwo =,1,0,0,0,0,1,0,0,0,2,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,192,            kurt = (coefficientOne * accum3) - termTwo;,4,2,0,1,2,0,0,0,1,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,194,        return kurt;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,202,        Kurtosis result = new Kurtosis();,1,0,0,1,2,1,0,2,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,203,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,204,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,216,        dest.moment = source.moment.copy();,4,0,0,1,2,0,1,0,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,217,        dest.incMoment = source.incMoment;,4,0,0,0,0,0,0,0,1,2,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,218,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Kurtosis,66,46,public class Kurtosis extends AbstractStorelessUnivariateStatistic  implements Serializable {,1,0,0,0,1,4,0,2,1,5,93,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,76,         super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,77,"         copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,78,     },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,85,        if (n < 1) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,86,            m4 = 0.0;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,87,            m3 = 0.0;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,88,            m2 = 0.0;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,89,            m1 = 0.0;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,92,        double prevM3 = m3;,2,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,93,        double prevM2 = m2;,2,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,95,        super.increment(d);,2,0,0,1,2,1,0,0,0,4,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,97,        double n0 = n;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,99,        m4 = m4 - 4.0 * nDev * prevM3 + 6.0 * nDevSq * prevM2 +,6,5,0,0,0,0,0,0,1,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,101,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,108,        return m4;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,116,        super.clear();,1,0,0,1,2,1,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,117,        m4 = Double.NaN;,3,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,118,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,125,        FourthMoment result = new FourthMoment();,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,126,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,127,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,139,"        ThirdMoment.copy(source, dest);",0,0,0,0,2,0,4,0,0,2,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,140,        dest.m4 = source.m4;,4,0,0,0,0,0,0,0,1,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,141,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/FourthMoment,66,53,public class FourthMoment extends ThirdMoment implements Serializable{,1,0,0,0,1,4,0,2,1,5,70,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,68,    public Skewness(final ThirdMoment m3) {,2,0,0,1,3,2,0,1,2,6,39,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,69,        incMoment = false;,1,0,0,0,0,0,0,0,2,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,70,        this.moment = m3;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,79,    public Skewness(Skewness original) {,2,0,0,1,3,1,0,1,1,6,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,80,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,88,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,89,            moment.increment(d);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,91,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,103,        if (moment.n < 3) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,104,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,106,        double variance = moment.m2 / (moment.n - 1);,5,2,0,1,2,1,0,0,0,5,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,107,        if (variance < 10E-20) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,108,            return 0.0d;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,110,            double n0 = moment.getN();,1,0,0,1,2,1,2,0,0,5,26,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,111,            return  (n0 * moment.m3) /,3,2,0,1,2,1,0,0,0,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,120,        return moment.getN();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,128,        if (incMoment) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,129,            moment.clear();,0,0,0,1,2,0,2,0,0,3,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,131,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,154,        double skew = Double.NaN;,3,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,156,"        if (test(values, begin, length) && length > 2 ){",1,2,0,0,5,1,4,0,1,6,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,157,            Mean mean = new Mean();,1,0,0,1,2,1,0,2,1,6,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,159,"            double m = mean.evaluate(values, begin, length);",1,0,0,0,2,1,5,0,0,4,48,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,164,            double accum = 0.0;,1,0,0,0,0,1,0,0,0,2,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,165,            double accum2 = 0.0;,1,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,166,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,167,                final double d = values[i] - m;,2,1,1,0,2,2,0,0,1,6,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,168,                accum  += d * d;,3,1,0,0,0,0,0,0,1,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,169,                accum2 += d;,2,0,0,0,0,0,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,171,            final double variance = (accum - (accum2 * accum2 / length)) / (length - 1);,6,5,0,2,6,2,0,0,1,6,76,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,173,            double accum3 = 0.0;,1,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,174,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,175,                final double d = values[i] - m;,2,1,1,0,2,2,0,0,1,6,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,176,                accum3 += d * d * d;,4,1,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,178,            accum3 /= variance * Math.sqrt(variance);,2,1,0,1,2,0,3,0,1,6,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,181,            double n0 = length;,2,0,0,0,0,1,0,0,0,2,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,184,            skew = (n0 / ((n0 - 1) * (n0 - 2))) * accum3;,5,5,0,3,8,0,0,0,1,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,186,        return skew;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,194,        Skewness result = new Skewness();,1,0,0,1,2,1,0,2,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,195,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,196,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,208,        dest.moment = new ThirdMoment(source.moment.copy());,4,0,0,2,4,1,1,1,2,7,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,209,        dest.incMoment = source.incMoment;,4,0,0,0,0,0,0,0,1,2,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,210,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Skewness,66,40,public class Skewness extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,92,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,121,    public DescriptiveStatistics(int window) {,2,0,0,1,3,2,0,0,1,5,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,122,        setWindowSize(window);,0,0,0,1,2,0,2,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,123,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,131,    public DescriptiveStatistics(DescriptiveStatistics original) {,2,0,0,1,3,1,0,1,1,6,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,132,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,133,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,145,            if (getN() == windowSize) {,1,1,0,2,5,1,1,0,1,7,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,146,                eDA.addElementRolling(v);,0,0,0,1,2,0,3,0,0,3,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,147,            } else if (getN() < windowSize) {,1,1,0,2,6,2,1,0,1,7,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,148,                eDA.addElement(v);,0,0,0,1,2,0,3,0,0,3,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,159,        eDA.discardMostRecentElements(1);,0,0,0,1,2,0,2,0,0,3,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,160,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,170,        return eDA.substituteMostRecentElement(v);,0,0,0,1,2,1,3,0,0,4,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,189,        return apply(geometricMeanImpl);,0,0,0,1,2,1,2,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,198,        return apply(varianceImpl);,0,0,0,1,2,1,2,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,207,        double stdDev = Double.NaN;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,208,        if (getN() > 0) {,0,1,0,2,5,1,1,0,1,6,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,209,            if (getN() > 1) {,0,1,0,2,5,1,1,0,1,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,210,                stdDev = Math.sqrt(getVariance());,1,0,0,2,4,0,3,0,2,5,34,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,212,                stdDev = 0.0;,1,0,0,0,0,0,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,215,        return stdDev;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,225,        return apply(skewnessImpl);,0,0,0,1,2,1,2,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,235,        return apply(kurtosisImpl);,0,0,0,1,2,1,2,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,243,        return apply(maxImpl);,0,0,0,1,2,1,2,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,251,        return apply(minImpl);,0,0,0,1,2,1,2,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,259,        return eDA.getNumElements();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,267,        return apply(sumImpl);,0,0,0,1,2,1,2,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,276,        return apply(sumsqImpl);,0,0,0,1,2,1,2,0,1,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,283,        eDA.clear();,0,0,0,1,2,0,2,0,0,3,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,284,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,294,        return windowSize;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,307,        if (windowSize < 1) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,308,            if (windowSize != INFINITE_WINDOW) {,2,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,309,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,9,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,314,        this.windowSize = windowSize;,2,0,0,0,0,1,0,0,1,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,319,        if (windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements()) {,3,3,0,2,5,1,2,0,0,6,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,320,            eDA.discardFrontElements(eDA.getNumElements() - windowSize);,1,1,0,2,4,0,4,0,0,5,60,7,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,322,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,334,        return eDA.getElements();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,346,        double[] sort = getValues();,1,0,0,1,4,1,1,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,347,        Arrays.sort(sort);,0,0,0,1,2,0,3,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,348,        return sort;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,357,        return eDA.getElement(index);,0,0,0,1,2,1,3,0,0,4,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,384,"                percentileImpl.getClass().getMethod(SET_QUANTILE_METHOD_NAME,",0,0,0,1,3,0,4,0,0,3,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,397,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,387,            } catch (NoSuchMethodException e1) { // Setter guard should prevent,1,0,0,1,4,1,0,1,0,5,67,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,388,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,391,            } catch (IllegalAccessException e2) {,1,0,0,1,4,1,0,1,0,5,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,392,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,395,            } catch (InvocationTargetException e3) {,1,0,0,1,4,1,0,1,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,396,                throw MathRuntimeException.createIllegalArgumentException(e3.getCause());,0,0,0,2,4,1,4,0,0,4,73,10,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,411,        StringBuffer outBuffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,412,"        String endl = ""\n"";",1,0,0,0,0,0,0,1,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,413,"        outBuffer.append(""DescriptiveStatistics:"").append(endl);",0,0,0,1,4,0,4,0,1,4,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,414,"        outBuffer.append(""n: "").append(getN()).append(endl);",0,0,0,2,8,0,6,0,2,4,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,415,"        outBuffer.append(""min: "").append(getMin()).append(endl);",0,0,0,2,8,0,6,0,2,4,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,416,"        outBuffer.append(""max: "").append(getMax()).append(endl);",0,0,0,2,8,0,6,0,2,4,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,417,"        outBuffer.append(""mean: "").append(getMean()).append(endl);",0,0,0,2,8,0,6,0,2,4,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,418,"        outBuffer.append(""std dev: "").append(getStandardDeviation())",0,0,0,2,6,0,4,0,2,4,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,420,"        outBuffer.append(""median: "").append(getPercentile(50)).append(endl);",0,0,0,2,8,0,6,0,2,4,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,421,"        outBuffer.append(""skewness: "").append(getSkewness()).append(endl);",0,0,0,2,8,0,6,0,2,4,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,422,"        outBuffer.append(""kurtosis: "").append(getKurtosis()).append(endl);",0,0,0,2,8,0,6,0,2,4,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,423,        return outBuffer.toString();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,444,        return meanImpl;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,455,        this.meanImpl = meanImpl;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,456,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,465,        return geometricMeanImpl;,1,0,0,0,0,1,0,0,0,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,477,        this.geometricMeanImpl = geometricMeanImpl;,2,0,0,0,0,1,0,0,1,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,478,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,487,        return kurtosisImpl;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,498,        this.kurtosisImpl = kurtosisImpl;,2,0,0,0,0,1,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,499,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,508,        return maxImpl;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,519,        this.maxImpl = maxImpl;,2,0,0,0,0,1,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,520,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,529,        return minImpl;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,540,        this.minImpl = minImpl;,2,0,0,0,0,1,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,541,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,550,        return percentileImpl;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,567,"            percentileImpl.getClass().getMethod(SET_QUANTILE_METHOD_NAME,",0,0,0,1,3,0,4,0,0,3,61,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,580,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,570,        } catch (NoSuchMethodException e1) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,571,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,574,        } catch (IllegalAccessException e2) {,1,0,0,1,4,1,0,1,0,5,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,575,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,578,        } catch (InvocationTargetException e3) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,579,            throw MathRuntimeException.createIllegalArgumentException(e3.getCause());,0,0,0,2,4,1,4,0,0,4,73,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,581,        this.percentileImpl = percentileImpl;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,582,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,591,        return skewnessImpl;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,603,        this.skewnessImpl = skewnessImpl;,2,0,0,0,0,1,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,604,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,613,        return varianceImpl;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,625,        this.varianceImpl = varianceImpl;,2,0,0,0,0,1,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,626,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,635,        return sumsqImpl;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,646,        this.sumsqImpl = sumsqImpl;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,647,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,656,        return sumImpl;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,667,        this.sumImpl = sumImpl;,2,0,0,0,0,1,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,668,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,676,        DescriptiveStatistics result = new DescriptiveStatistics();,1,0,0,1,2,1,0,2,1,6,59,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,677,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,678,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,691,        dest.eDA = source.eDA.copy();,4,0,0,1,2,0,1,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,692,        dest.windowSize = source.windowSize;,4,0,0,0,0,0,0,0,1,2,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,695,        dest.maxImpl = source.maxImpl.copy();,4,0,0,1,2,0,1,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,696,        dest.meanImpl = source.meanImpl.copy();,4,0,0,1,2,0,1,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,697,        dest.minImpl = source.minImpl.copy();,4,0,0,1,2,0,1,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,698,        dest.sumImpl = source.sumImpl.copy();,4,0,0,1,2,0,1,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,699,        dest.varianceImpl = source.varianceImpl.copy();,4,0,0,1,2,0,1,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,700,        dest.sumsqImpl = source.sumsqImpl.copy();,4,0,0,1,2,0,1,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,701,        dest.geometricMeanImpl = source.geometricMeanImpl.copy();,4,0,0,1,2,0,1,0,1,5,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,702,        dest.kurtosisImpl = source.kurtosisImpl;,4,0,0,0,0,0,0,0,1,2,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,703,        dest.skewnessImpl = source.skewnessImpl;,4,0,0,0,0,0,0,0,1,2,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,704,        dest.percentileImpl = source.percentileImpl;,4,0,0,0,0,0,0,0,1,2,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/DescriptiveStatistics,66,705,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,63,    public SumOfSquares(SumOfSquares original) {,2,0,0,1,3,1,0,1,1,6,44,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,64,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,65,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,72,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,73,            value = d * d;,3,1,0,0,0,0,0,0,1,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,75,            value += d * d;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,77,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,85,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,92,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,100,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,101,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,102,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,120,        double sumSq = Double.NaN;,3,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,121,"        if (test(values, begin, length)) {",0,0,0,0,5,1,4,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,122,            sumSq = 0.0;,1,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,123,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,124,                sumSq += values[i] * values[i];,1,1,1,0,4,0,0,0,1,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,127,        return sumSq;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,135,        SumOfSquares result = new SumOfSquares();,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,136,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,137,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,149,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,150,        dest.value = source.value;,4,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,151,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/SumOfSquares,66,36,public class SumOfSquares extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,96,1,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,64,    public Sum(Sum original) {,2,0,0,1,3,1,0,1,1,6,26,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,65,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,73,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,74,            value = d;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,76,            value += d;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,78,        n++;,1,0,0,0,0,0,0,0,1,2,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,79,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,86,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,93,        return n;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,101,        value = Double.NaN;,3,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,102,        n = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,160,        double sum = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,161,"        if (test(values, weights, begin, length)) {",0,0,0,0,5,1,5,0,1,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,162,            sum = 0.0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,163,            for (int i = begin; i < begin + length; i++) {,6,2,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,164,                sum += values[i] * weights[i];,1,1,1,0,4,0,0,0,1,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,167,        return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,193,"        return evaluate(values, weights, 0, values.length);",2,0,0,0,2,1,3,0,1,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,201,        Sum result = new Sum();,1,0,0,1,2,1,0,2,1,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,202,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,203,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,215,        dest.n = source.n;,4,0,0,0,0,0,0,0,1,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,216,        dest.value = source.value;,4,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,217,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/stat/descriptive/summary/Sum,66,37,public class Sum extends AbstractStorelessUnivariateStatistic implements Serializable {,1,0,0,0,1,4,0,2,1,5,87,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,157,    public ResizableDoubleArray(int initialCapacity) {,2,0,0,1,3,2,0,0,1,5,50,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,158,        setInitialCapacity(initialCapacity);,0,0,0,1,2,0,2,0,1,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,159,        internalArray = new double[this.initialCapacity];,2,0,0,0,2,3,0,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,160,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,184,"    public ResizableDoubleArray(int initialCapacity, float expansionFactor) {",3,0,0,0,3,3,0,0,1,4,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,185,        this.expansionFactor = expansionFactor;,2,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,186,        setInitialCapacity(initialCapacity);,0,0,0,1,2,0,2,0,1,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,187,        internalArray = new double[initialCapacity];,1,0,1,0,2,2,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,188,        setContractionCriteria(expansionFactor +0.5f);,1,1,0,1,2,0,1,0,1,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,189,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,211,        float contractionCriteria) {,1,0,0,0,2,1,0,0,0,3,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,212,        this.expansionFactor = expansionFactor;,2,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,213,        setContractionCriteria(contractionCriteria);,0,0,0,1,2,0,2,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,214,        setInitialCapacity(initialCapacity);,0,0,0,1,2,0,2,0,1,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,215,        internalArray = new double[initialCapacity];,1,0,1,0,2,2,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,216,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,240,"            float contractionCriteria, int expansionMode) {",2,0,0,0,2,2,0,0,0,3,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,241,        this.expansionFactor = expansionFactor;,2,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,242,        setContractionCriteria(contractionCriteria);,0,0,0,1,2,0,2,0,1,4,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,243,        setInitialCapacity(initialCapacity);,0,0,0,1,2,0,2,0,1,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,244,        setExpansionMode(expansionMode);,0,0,0,1,2,0,2,0,1,4,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,245,        internalArray = new double[initialCapacity];,1,0,1,0,2,2,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,246,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,257,    public ResizableDoubleArray(ResizableDoubleArray original) {,2,0,0,1,3,1,0,1,1,6,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,258,"        copy(original, this);",0,0,0,0,2,1,2,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,259,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,294,        double discarded = internalArray[startIndex];,1,0,1,0,2,1,0,0,0,4,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,296,        if ((startIndex + (numElements + 1)) > internalArray.length) {,4,3,0,3,7,1,0,0,0,5,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,297,            expand();,0,0,0,1,2,0,1,0,1,4,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,300,        startIndex += 1;,1,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,303,        internalArray[startIndex + (numElements - 1)] = value;,3,2,1,1,4,0,0,0,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,306,        if (shouldContract()) {,0,0,0,2,5,1,1,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,307,            contract();,0,0,0,1,2,0,1,0,1,4,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,309,        return discarded;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,322,        if (numElements < 1) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,323,            throw MathRuntimeException.createArrayIndexOutOfBoundsException(,0,0,0,0,1,1,2,0,0,3,64,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,327,        double discarded = internalArray[startIndex + (numElements - 1)];,3,2,1,1,4,1,0,0,0,6,65,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,329,        internalArray[startIndex + (numElements - 1)] = value;,3,2,1,1,4,0,0,0,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,331,        return discarded;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,347,        if (contraction < expansion) {,2,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,348,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,353,        if (contraction <= 1.0) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,354,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,359,        if (expansion <= 1.0) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,360,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,364,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,371,        numElements = 0;,1,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,372,        startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,373,        internalArray = new double[initialCapacity];,1,0,1,0,2,2,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,374,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,405,"        discardExtremeElements(i,true);",0,0,0,0,2,0,2,0,2,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,407,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,422,"        discardExtremeElements(i,false);",0,0,0,0,2,0,2,0,2,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,424,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,446,        if (i > numElements) {,2,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,447,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,450,       } else if (i < 0) {,1,1,0,1,4,2,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,451,           throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,456,            numElements -= i;,2,0,0,0,0,0,0,0,1,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,457,            if (front) startIndex += i;,3,0,0,1,2,1,0,0,1,5,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,459,        if (shouldContract()) {,0,0,0,2,5,1,1,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,460,            contract();,0,0,0,1,2,0,1,0,1,4,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,462,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,484,            newSize = internalArray.length + Math.round(expansionFactor);,3,1,0,1,2,0,3,0,1,6,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,499,        double[] tempArray = new double[size];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,501,"        System.arraycopy(internalArray, 0, tempArray, 0, internalArray.length);",2,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,502,        internalArray = tempArray;,2,0,0,0,0,0,0,0,1,2,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,503,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,518,        return contractionCriteria;,1,0,0,0,0,1,0,0,0,2,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,530,        if (index >= numElements) {,2,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,531,            throw MathRuntimeException.createArrayIndexOutOfBoundsException(,0,0,0,0,1,1,2,0,0,3,64,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,534,        } else if (index >= 0) {,1,1,0,1,4,2,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,535,            return internalArray[startIndex + index];,2,1,1,0,2,1,0,0,0,5,41,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,537,            throw MathRuntimeException.createArrayIndexOutOfBoundsException(,0,0,0,0,1,1,2,0,0,3,64,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,551,        double[] elementArray = new double[numElements];,1,0,1,0,4,3,0,0,0,4,48,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,552,"        System.arraycopy( internalArray, startIndex, elementArray, 0,",0,0,0,0,1,0,5,0,0,2,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,554,        return elementArray;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,570,        return expansionFactor;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,581,        return expansionMode;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,593,        return internalArray.length;,2,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,620,        return internalArray;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,645,"        checkContractExpand(contractionCriteria, getExpansionFactor());",0,0,0,1,4,0,3,0,2,4,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,646,        synchronized(this) {,0,0,0,1,3,2,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,647,            this.contractionCriteria = contractionCriteria;,2,0,0,0,0,1,0,0,1,3,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,648,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,649,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,665,        if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,666,            throw MathRuntimeException.createArrayIndexOutOfBoundsException(,0,0,0,0,1,1,2,0,0,3,64,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,670,        if (index + 1 > numElements) {,2,2,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,671,            numElements = index + 1;,2,1,0,0,0,0,0,0,1,3,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,673,        if ((startIndex + index) >= internalArray.length) {,4,2,0,2,5,1,0,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,674,            expandTo(startIndex + (index + 1));,2,2,0,2,4,0,1,0,1,6,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,676,        internalArray[startIndex + index] = value;,3,1,1,0,2,0,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,677,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,691,"        checkContractExpand(getContractionCriteria(), expansionFactor);",0,0,0,1,4,0,3,0,2,4,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,693,        synchronized(this) {,0,0,0,1,3,2,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,694,            this.expansionFactor = expansionFactor;,2,0,0,0,0,1,0,0,1,3,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,695,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,696,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,706,        if (expansionMode != MULTIPLICATIVE_MODE &&,2,2,0,0,1,1,0,0,0,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,708,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,713,        synchronized(this) {,0,0,0,1,3,2,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,714,            this.expansionMode = expansionMode;,2,0,0,0,0,1,0,0,1,3,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,715,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,716,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,726,        if (initialCapacity > 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,727,            synchronized(this) {,0,0,0,1,3,2,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,728,                this.initialCapacity = initialCapacity;,2,0,0,0,0,1,0,0,1,3,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,729,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,731,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,735,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,748,        if (i < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,749,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,756,        if ((startIndex + i) > internalArray.length) {,4,2,0,2,5,1,0,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,757,            expandTo(startIndex + i);,2,1,0,1,2,0,1,0,1,6,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,761,        numElements = i;,2,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,762,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,774,            return (internalArray.length - numElements) > contractionCriteria;,4,2,0,1,2,1,0,0,0,5,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,808,       synchronized(source) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,809,           synchronized(dest) {,1,0,0,1,3,1,0,0,0,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,810,               dest.initialCapacity = source.initialCapacity;,4,0,0,0,0,0,0,0,1,2,46,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,811,               dest.contractionCriteria = source.contractionCriteria;,4,0,0,0,0,0,0,0,1,2,54,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,812,               dest.expansionFactor = source.expansionFactor;,4,0,0,0,0,0,0,0,1,2,46,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,813,               dest.expansionMode = source.expansionMode;,4,0,0,0,0,0,0,0,1,2,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,814,               dest.internalArray = new double[source.internalArray.length];,5,0,0,0,2,2,0,0,1,4,61,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,815,"               System.arraycopy(source.internalArray, 0, dest.internalArray,",4,0,0,0,1,0,2,0,0,3,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,817,               dest.numElements = source.numElements;,4,0,0,0,0,0,0,0,1,2,38,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,818,               dest.startIndex = source.startIndex;,4,0,0,0,0,0,0,0,1,2,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,819,           },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,820,       },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,821,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,832,        ResizableDoubleArray result = new ResizableDoubleArray();,1,0,0,1,2,1,0,2,1,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,833,"        copy(this, result);",0,0,0,0,2,1,2,0,1,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,834,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,848,        if (object == this ) {,1,1,0,1,3,2,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,849,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,851,       if (object instanceof ResizableDoubleArray == false) {,1,1,0,1,3,2,0,1,1,7,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,852,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,854,       synchronized(this) {,0,0,0,1,3,2,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,855,           synchronized(object) {,1,0,0,1,3,1,0,0,0,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,856,               boolean result = true;,1,0,0,0,0,1,0,0,1,3,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,857,               ResizableDoubleArray other = (ResizableDoubleArray) object;,2,0,0,1,2,0,0,2,0,4,59,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,858,               result = result && (other.initialCapacity == initialCapacity);,5,2,0,1,2,0,0,0,1,5,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,859,               result = result && (other.contractionCriteria == contractionCriteria);,5,2,0,1,2,0,0,0,1,5,70,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,860,               result = result && (other.expansionFactor == expansionFactor);,5,2,0,1,2,0,0,0,1,5,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,861,               result = result && (other.expansionMode == expansionMode);,5,2,0,1,2,0,0,0,1,5,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,862,               result = result && (other.numElements == numElements);,5,2,0,1,2,0,0,0,1,5,54,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,863,               result = result && (other.startIndex == startIndex);,5,2,0,1,2,0,0,0,1,5,52,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,864,               if (!result) {,1,0,0,1,3,1,0,0,1,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,865,                   return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,867,"                   return Arrays.equals(internalArray, other.internalArray);",2,0,0,0,2,1,3,0,0,4,57,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,869,           },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,870,       },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,881,        int[] hashData = new int[7];,1,0,0,0,4,3,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,882,        hashData[0] = new Float(expansionFactor).hashCode();,1,0,1,1,6,1,1,1,2,8,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,883,        hashData[1] = new Float(contractionCriteria).hashCode();,1,0,1,1,6,1,1,1,2,8,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,884,        hashData[2] = expansionMode;,1,0,1,0,2,0,0,0,1,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,885,            hashData[3] = Arrays.hashCode(internalArray);,0,0,1,1,4,0,3,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,886,            hashData[4] = initialCapacity;,1,0,1,0,2,0,0,0,1,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,887,            hashData[5] = numElements;,1,0,1,0,2,0,0,0,1,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,888,            hashData[6] = startIndex;,1,0,1,0,2,0,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ResizableDoubleArray,66,889,        return Arrays.hashCode(hashData);,0,0,0,1,2,1,3,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,311,        return sourceFormat;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,317,            ResourceBundle bundle =,1,0,0,0,0,0,0,1,0,2,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,319,            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {,0,0,0,3,11,1,6,0,0,4,68,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,321,                return bundle.getString(toString());,0,0,0,2,4,1,3,0,1,5,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,326,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,324,        } catch (MissingResourceException mre) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,66,330,        return sourceFormat;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,282,        return new ArrayIndexOutOfBoundsException() {,0,0,0,1,3,2,0,1,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,290,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,296,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,488,        return new ConcurrentModificationException() {,0,0,0,1,3,2,0,1,1,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,496,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,502,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,654,        return new RuntimeException() {,0,0,0,1,3,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,662,"                return buildMessage(Locale.US, LocalizedFormats.INTERNAL_ERROR, argument);",4,0,0,0,2,1,2,0,1,5,74,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,668,"                return buildMessage(Locale.getDefault(), LocalizedFormats.INTERNAL_ERROR, argument);",2,0,0,1,4,1,4,0,1,6,84,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,387,        return new IllegalArgumentException() {,0,0,0,1,3,2,0,1,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,395,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,401,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,326,        return new EOFException() {,0,0,0,1,3,2,0,1,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,334,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,340,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,238,        return new ArithmeticException() {,0,0,0,1,3,2,0,1,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,246,"                return buildMessage(Locale.US, pattern, arguments);",2,0,0,0,2,1,3,0,1,5,51,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,66,252,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,1,4,1,5,0,1,5,61,9,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,35,        setSeed((long) seed);,1,0,0,2,4,1,1,0,1,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,36,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,41,        final long prime = 4294967291l;,1,0,0,0,0,2,0,0,1,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,43,        long combined = 0l;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,44,        for (int s : seed) {,2,0,0,1,3,2,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,45,            combined = combined * prime + s;,4,2,0,0,0,0,0,0,1,3,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,47,        setSeed(combined);,0,0,0,1,2,0,2,0,1,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,66,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
