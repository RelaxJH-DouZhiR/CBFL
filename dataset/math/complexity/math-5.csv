dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math3/complex/Complex,5,304,        if (real == 0.0 && imaginary == 0.0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.25,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,300,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.2,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,348,                return (real == c.real) && (imaginary == c.imaginary);,6,3,0,1,4,1,0,0,0,5,54,8,0.02439,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,344,            Complex c = (Complex)other;,2,0,0,1,2,0,0,2,0,4,27,6,0.02273,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,345,            if (c.isNaN) {,2,0,0,1,3,1,0,0,0,4,14,7,0.02273,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,343,        if (other instanceof Complex){,1,0,0,1,3,2,0,1,0,5,30,5,0.02174,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,340,        if (this == other) {,1,1,0,1,3,2,0,0,0,5,20,4,0.01613,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,98,"    public Complex(double real, double imaginary) {",3,0,0,0,3,3,0,0,1,4,47,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,99,        this.real = real;,2,0,0,0,0,1,0,0,1,3,17,4,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,100,        this.imaginary = imaginary;,2,0,0,0,0,1,0,0,1,3,27,4,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,102,        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);,1,1,0,1,4,0,6,0,1,6,54,4,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,103,        isInfinite = !isNaN &&,2,1,0,0,0,0,0,0,2,3,22,4,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,105,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,59,"    public static final Complex I = new Complex(0.0, 1.0);",1,0,0,0,2,4,0,2,4,5,54,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,62,"    public static final Complex NaN = new Complex(Double.NaN, Double.NaN);",5,0,0,0,2,4,0,2,4,5,70,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,65,"    public static final Complex INF = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);",5,0,0,0,2,4,0,2,4,5,98,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,67,"    public static final Complex ONE = new Complex(1.0, 0.0);",1,0,0,0,2,4,0,2,4,5,56,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,69,"    public static final Complex ZERO = new Complex(0.0, 0.0);",1,0,0,0,2,4,0,2,4,5,57,2,0.00469,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,89,"        this(real, 0.0);",1,0,0,0,2,1,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,90,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,116,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,117,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,119,        if (isInfinite()) {,0,0,0,2,5,1,1,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,120,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,122,        if (FastMath.abs(real) < FastMath.abs(imaginary)) {,0,1,0,2,7,1,6,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,123,            if (imaginary == 0.0) {,1,1,0,1,3,1,0,0,0,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,124,                return FastMath.abs(real);,0,0,0,1,2,1,3,0,0,4,26,9,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,126,            double q = real / imaginary;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,127,            return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);,2,3,0,1,4,1,5,0,0,6,58,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,129,            if (real == 0.0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,130,                return FastMath.abs(imaginary);,0,0,0,1,2,1,3,0,0,4,31,9,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,132,            double q = imaginary / real;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,133,            return FastMath.abs(real) * FastMath.sqrt(1 + q * q);,2,3,0,1,4,1,5,0,0,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,157,        MathUtils.checkNotNull(addend);,0,0,0,1,2,0,3,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,158,        if (isNaN || addend.isNaN) {,3,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,159,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,162,"        return createComplex(real + addend.getReal(),",1,1,0,1,3,1,3,0,1,7,45,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,175,        if (isNaN || Double.isNaN(addend)) {,1,1,0,2,5,1,3,0,0,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,176,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,179,"        return createComplex(real + addend, imaginary);",2,1,0,0,2,1,2,0,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,197,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,198,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,201,"        return createComplex(real, -imaginary);",1,0,0,0,2,1,2,0,2,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,248,        MathUtils.checkNotNull(divisor);,0,0,0,1,2,0,3,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,249,        if (isNaN || divisor.isNaN) {,3,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,250,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,253,        final double c = divisor.getReal();,1,0,0,1,2,2,2,0,1,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,254,        final double d = divisor.getImaginary();,1,0,0,1,2,2,2,0,1,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,255,        if (c == 0.0 && d == 0.0) {,2,3,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,256,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,259,        if (divisor.isInfinite() && !isInfinite()) {,0,1,0,2,7,1,3,0,2,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,260,            return ZERO;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,263,        if (FastMath.abs(c) < FastMath.abs(d)) {,0,1,0,2,7,1,6,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,264,            double q = c / d;,3,1,0,0,0,1,0,0,0,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,265,            double denominator = c * q + d;,4,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,266,"            return createComplex((real * q + imaginary) / denominator,",4,3,0,1,3,1,1,0,1,7,58,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,269,            double q = d / c;,3,1,0,0,0,1,0,0,0,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,270,            double denominator = d * q + c;,4,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,271,"            return createComplex((imaginary * q + real) / denominator,",4,3,0,1,3,1,1,0,1,7,58,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,285,        if (isNaN || Double.isNaN(divisor)) {,1,1,0,2,5,1,3,0,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,286,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,288,        if (divisor == 0d) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,289,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,291,        if (Double.isInfinite(divisor)) {,0,0,0,2,5,1,3,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,292,            return !isInfinite() ? ZERO : NaN;,2,0,0,1,2,1,1,0,2,6,34,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,294,"        return createComplex(real / divisor,",2,1,0,0,1,1,1,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,301,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,305,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,1,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,308,        if (isInfinite) {,1,0,0,1,3,1,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,309,            return ZERO;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,312,        if (FastMath.abs(real) < FastMath.abs(imaginary)) {,0,1,0,2,7,1,6,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,313,            double q = real / imaginary;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,314,            double scale = 1. / (real * q + imaginary);,4,3,0,1,2,1,0,0,0,5,43,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,315,"            return createComplex(scale * q, -scale);",3,1,0,0,2,1,1,0,2,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,317,            double q = imaginary / real;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,318,            double scale = 1. / (imaginary * q + real);,4,3,0,1,2,1,0,0,0,5,43,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,319,"            return createComplex(scale, -scale * q);",2,1,0,0,2,1,2,0,2,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,341,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,346,                return isNaN;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,351,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,363,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,364,            return 7;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,366,        return 37 * (17 * MathUtils.hash(imaginary) +,0,3,0,1,3,1,3,0,0,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,376,        return imaginary;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,385,        return real;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,396,        return isNaN;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,409,        return isInfinite;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,438,        MathUtils.checkNotNull(factor);,0,0,0,1,2,0,3,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,439,        if (isNaN || factor.isNaN) {,3,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,440,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,442,        if (Double.isInfinite(real) ||,0,1,0,1,3,1,3,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,447,            return INF;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,449,"        return createComplex(real * factor.real - imaginary * factor.imaginary,",6,3,0,0,1,1,1,0,1,6,71,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,462,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,463,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,465,        if (Double.isInfinite(real) ||,0,1,0,1,3,1,3,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,467,            return INF;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,469,"        return createComplex(real * factor, imaginary * factor);",4,2,0,0,2,1,1,0,1,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,481,        if (isNaN || Double.isNaN(factor)) {,1,1,0,2,5,1,3,0,0,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,482,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,484,        if (Double.isInfinite(real) ||,0,1,0,1,3,1,3,0,0,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,488,            return INF;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,490,"        return createComplex(real * factor, imaginary * factor);",4,2,0,0,2,1,1,0,1,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,501,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,502,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,505,"        return createComplex(-real, -imaginary);",2,0,0,0,2,1,1,0,3,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,528,        MathUtils.checkNotNull(subtrahend);,0,0,0,1,2,0,3,0,0,3,35,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,529,        if (isNaN || subtrahend.isNaN) {,3,1,0,1,3,1,0,0,0,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,530,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,533,"        return createComplex(real - subtrahend.getReal(),",1,1,0,1,3,1,3,0,1,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,546,        if (isNaN || Double.isNaN(subtrahend)) {,1,1,0,2,5,1,3,0,0,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,547,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,549,"        return createComplex(real - subtrahend, imaginary);",2,1,0,0,2,1,2,0,1,6,51,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,569,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,570,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,573,        return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());,0,0,0,2,12,3,8,0,0,4,70,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,593,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,594,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,597,        return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());,0,0,0,2,12,2,8,0,1,5,65,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,617,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,618,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,621,        return this.add(I).divide(I.subtract(this)).log(),0,0,0,2,8,3,6,0,0,4,49,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,658,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,659,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,662,"        return createComplex(FastMath.cos(real) * FastMath.cosh(imaginary),",0,1,0,1,5,1,7,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,698,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,699,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,702,"        return createComplex(FastMath.cosh(real) * FastMath.cos(imaginary),",0,1,0,1,5,1,7,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,739,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,740,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,743,        double expReal = FastMath.exp(real);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,744,"        return createComplex(expReal *  FastMath.cos(imaginary),",1,1,0,1,3,1,4,0,1,7,56,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,784,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,785,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,788,"        return createComplex(FastMath.log(abs()),",0,0,0,2,5,1,4,0,2,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,814,        MathUtils.checkNotNull(x);,0,0,0,1,2,0,3,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,815,        return this.log().multiply(x).exp();,0,0,0,1,6,2,4,0,0,4,36,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,826,        return this.log().multiply(x).exp();,0,0,0,1,6,2,4,0,0,4,36,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,862,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,863,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,866,"        return createComplex(FastMath.sin(real) * FastMath.cosh(imaginary),",0,1,0,1,5,1,7,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,902,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,903,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,906,"        return createComplex(FastMath.sinh(real) * FastMath.cos(imaginary),",0,1,0,1,5,1,7,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,945,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,946,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,949,        if (real == 0.0 && imaginary == 0.0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,950,"            return createComplex(0.0, 0.0);",0,0,0,0,2,1,1,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,953,        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);,1,2,0,3,8,1,6,0,1,7,61,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,954,        if (real >= 0.0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,955,"            return createComplex(t, imaginary / (2.0 * t));",2,2,0,1,4,1,2,0,1,7,47,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,957,"            return createComplex(FastMath.abs(imaginary) / (2.0 * t),",1,2,0,1,5,1,4,0,1,7,57,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,980,"        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();",0,0,0,2,8,3,4,0,1,5,68,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1016,        if (isNaN || Double.isInfinite(real)) {,1,1,0,2,5,1,3,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1017,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1019,        if (imaginary > 20.0) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1020,"            return createComplex(0.0, 1.0);",0,0,0,0,2,1,1,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1022,        if (imaginary < -20.0) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1023,"            return createComplex(0.0, -1.0);",0,0,0,0,2,1,1,0,2,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1026,        double real2 = 2.0 * real;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1027,        double imaginary2 = 2.0 * imaginary;,2,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1028,        double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);,1,1,0,1,4,1,6,0,0,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1030,"        return createComplex(FastMath.sin(real2) / d,",1,1,0,1,3,1,4,0,1,7,45,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1067,        if (isNaN || Double.isInfinite(imaginary)) {,1,1,0,2,5,1,3,0,0,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1068,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1070,        if (real > 20.0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1071,"            return createComplex(1.0, 0.0);",0,0,0,0,2,1,1,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1073,        if (real < -20.0) {,1,1,0,1,3,1,0,0,1,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1074,"            return createComplex(-1.0, 0.0);",0,0,0,0,2,1,1,0,2,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1076,        double real2 = 2.0 * real;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1077,        double imaginary2 = 2.0 * imaginary;,2,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1078,        double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);,1,1,0,1,4,1,6,0,0,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1080,"        return createComplex(FastMath.sinh(real2) / d,",1,1,0,1,3,1,4,0,1,7,46,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1104,"        return FastMath.atan2(getImaginary(), getReal());",0,0,0,1,6,1,4,0,2,5,49,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1131,        if (n <= 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1132,"            throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1136,        final List<Complex> result = new ArrayList<Complex>();,1,0,0,1,2,2,0,4,2,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1138,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1139,            result.add(NaN);,0,0,0,1,2,0,3,0,0,3,16,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1140,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1142,        if (isInfinite()) {,0,0,0,2,5,1,1,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1143,            result.add(INF);,0,0,0,1,2,0,3,0,0,3,16,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1144,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1148,"        final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);",2,1,0,1,4,2,3,0,2,7,57,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1151,        final double nthPhi = getArgument() / n;,2,1,0,1,2,2,1,0,2,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1152,        final double slice = 2 * FastMath.PI / n;,4,2,0,0,0,2,0,0,1,4,41,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1153,        double innerPart = nthPhi;,2,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1154,        for (int k = 0; k < n ; k++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1156,            final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);,2,1,0,1,2,2,3,0,1,7,64,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1157,            final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);,2,1,0,1,2,2,3,0,1,7,69,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1158,"            result.add(createComplex(realPart, imaginaryPart));",0,0,0,0,4,0,5,0,1,3,51,7,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1159,            innerPart += slice;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1162,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1176,"        return new Complex(realPart, imaginaryPart);",2,0,0,0,2,2,0,1,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1188,        if (Double.isNaN(realPart) ||,0,1,0,1,3,1,3,0,0,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1190,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1192,"        return new Complex(realPart, imaginaryPart);",2,0,0,0,2,2,0,1,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1202,        if (Double.isNaN(realPart)) {,0,0,0,2,5,1,3,0,0,4,29,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1203,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1205,        return new Complex(realPart);,1,0,0,1,2,2,0,1,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1217,"        return createComplex(real, imaginary);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1222,        return ComplexField.getInstance();,0,0,0,1,2,1,2,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1228,"        return ""("" + real + "", "" + imaginary + "")"";",2,1,0,0,2,1,0,0,3,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,57,"public class Complex implements FieldElement<Complex>, Serializable  {",1,0,0,0,1,3,0,3,1,5,70,1,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,37,"        super(value, 0, true);",1,0,0,0,2,1,0,0,2,4,22,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,47,"        super(specific, value, 0, true);",2,0,0,0,2,1,0,0,2,4,32,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,50,        this(boundIsAllowed ?,1,0,0,0,1,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,68,"        super(specific, wrong, min);",3,0,0,0,2,1,0,0,1,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,70,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,71,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,72,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,78,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,85,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,46,"        super(pattern, wrong, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,47,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,54,        return argument;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,44,                                        Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,45,        context = new ExceptionContext(this);,1,0,0,1,2,2,0,1,2,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,46,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,51,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,57,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,63,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,41,        this(LocalizedFormats.NULL_NOT_ALLOWED);,2,0,0,1,2,1,0,0,0,4,40,5,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,50,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,51,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
