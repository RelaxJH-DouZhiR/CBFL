dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/complex/Complex,53,152,        MathUtils.checkNotNull(rhs);,0,0,0,1,2,0,3,0,0,3,28,5,0.05263,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,153,"        return createComplex(real + rhs.getReal(),",1,1,0,1,3,1,3,0,1,7,42,4,0.05263,1,1
defect4j,math,org/apache/commons/math/complex/Complex,53,319,        return isNaN;,1,0,0,0,0,1,0,0,0,2,13,4,0.04348,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2334,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02381,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2331,        if (o == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.02326,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,85,    private static final long[] FACTORIALS = new long[] {,1,0,0,0,5,6,0,0,3,4,53,2,0.01587,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,997,"        return new Complex(realPart, imaginaryPart);",2,0,0,0,2,2,0,1,1,5,44,4,0.01449,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,308,        return real;,1,0,0,0,0,1,0,0,0,2,12,4,0.0098,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,299,        return imaginary;,1,0,0,0,0,1,0,0,0,2,17,4,0.00971,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,90,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,91,        this.real = real;,2,0,0,0,0,1,0,0,1,3,17,4,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,92,        this.imaginary = imaginary;,2,0,0,0,0,1,0,0,1,3,27,4,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,94,        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);,1,1,0,1,4,0,6,0,1,6,54,4,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,95,        isInfinite = !isNaN &&,2,1,0,0,0,0,0,0,2,3,22,4,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,52,"    public static final Complex I = new Complex(0.0, 1.0);",1,0,0,0,2,4,0,2,4,5,54,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,56,"    public static final Complex NaN = new Complex(Double.NaN, Double.NaN);",5,0,0,0,2,4,0,2,4,5,70,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,60,"    public static final Complex INF = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);",5,0,0,0,2,4,0,2,4,5,98,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,63,"    public static final Complex ONE = new Complex(1.0, 0.0);",1,0,0,0,2,4,0,2,4,5,56,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,66,"    public static final Complex ZERO = new Complex(0.0, 0.0);",1,0,0,0,2,4,0,2,4,5,57,2,0.00606,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,110,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,111,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,114,        if (isInfinite()) {,0,0,0,2,5,1,1,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,115,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,118,        if (FastMath.abs(real) < FastMath.abs(imaginary)) {,0,1,0,2,7,1,6,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,119,            if (imaginary == 0.0) {,1,1,0,1,3,1,0,0,0,5,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,120,                return FastMath.abs(real);,0,0,0,1,2,1,3,0,0,4,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,122,            double q = real / imaginary;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,123,            return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);,2,3,0,1,4,1,5,0,0,6,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,125,            if (real == 0.0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,126,                return FastMath.abs(imaginary);,0,0,0,1,2,1,3,0,0,4,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,128,            double q = imaginary / real;,3,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,129,            return FastMath.abs(real) * FastMath.sqrt(1 + q * q);,2,3,0,1,4,1,5,0,0,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,172,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,173,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,175,"        return createComplex(real, -imaginary);",1,0,0,0,2,1,2,0,2,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,215,        MathUtils.checkNotNull(rhs);,0,0,0,1,2,0,3,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,216,        if (isNaN || rhs.isNaN) {,3,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,217,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,220,        double c = rhs.getReal();,1,0,0,1,2,1,2,0,0,5,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,221,        double d = rhs.getImaginary();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,222,        if (c == 0.0 && d == 0.0) {,2,3,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,223,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,226,        if (rhs.isInfinite() && !isInfinite()) {,0,1,0,2,7,1,3,0,2,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,227,            return ZERO;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,230,        if (FastMath.abs(c) < FastMath.abs(d)) {,0,1,0,2,7,1,6,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,231,            double q = c / d;,3,1,0,0,0,1,0,0,0,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,232,            double denominator = c * q + d;,4,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,233,"            return createComplex((real * q + imaginary) / denominator,",4,3,0,1,3,1,1,0,1,7,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,236,            double q = d / c;,3,1,0,0,0,1,0,0,0,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,237,            double denominator = d * q + c;,4,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,238,"            return createComplex((imaginary * q + real) / denominator,",4,3,0,1,3,1,1,0,1,7,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,263,        if (this == other) {,1,1,0,1,3,2,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,264,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,266,        if (other instanceof Complex){,1,0,0,1,3,2,0,1,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,267,            Complex rhs = (Complex)other;,2,0,0,1,2,0,0,2,0,4,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,268,            if (rhs.isNaN) {,2,0,0,1,3,1,0,0,0,4,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,269,                return isNaN;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,271,                return (real == rhs.real) && (imaginary == rhs.imaginary);,6,3,0,1,4,1,0,0,0,5,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,274,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,286,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,287,            return 7;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,289,        return 37 * (17 * MathUtils.hash(imaginary) +,0,3,0,1,3,1,3,0,0,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,332,        return isInfinite;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,364,        MathUtils.checkNotNull(rhs);,0,0,0,1,2,0,3,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,365,        if (isNaN || rhs.isNaN) {,3,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,366,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,368,        if (Double.isInfinite(real) || Double.isInfinite(imaginary) ||,0,1,0,1,5,1,6,0,0,5,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,371,            return INF;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,373,"        return createComplex(real * rhs.real - imaginary * rhs.imaginary,",6,3,0,0,1,1,1,0,1,6,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,404,        if (isNaN || Double.isNaN(rhs)) {,1,1,0,2,5,1,3,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,405,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,407,        if (Double.isInfinite(real) || Double.isInfinite(imaginary) ||,0,1,0,1,5,1,6,0,0,5,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,410,            return INF;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,412,"        return createComplex(real * rhs, imaginary * rhs);",4,2,0,0,2,1,1,0,1,6,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,424,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,425,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,428,"        return createComplex(-real, -imaginary);",2,0,0,0,2,1,1,0,3,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,451,        MathUtils.checkNotNull(rhs);,0,0,0,1,2,0,3,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,452,        if (isNaN || rhs.isNaN) {,3,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,453,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,456,"        return createComplex(real - rhs.getReal(),",1,1,0,1,3,1,3,0,1,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,475,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,476,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,479,        return this.add(this.sqrt1z().multiply(Complex.I)).log(),2,0,0,2,8,3,4,0,0,5,56,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,498,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,499,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,502,        return sqrt1z().add(this.multiply(Complex.I)).log(),2,0,0,2,8,2,4,0,1,6,51,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,521,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,522,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,525,        return this.add(Complex.I).divide(Complex.I.subtract(this)).log(),4,0,0,2,8,3,4,0,0,5,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,556,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,557,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,560,"        return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),",0,1,0,1,5,1,7,0,1,6,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,590,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,591,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,594,"        return createComplex(MathUtils.cosh(real) * FastMath.cos(imaginary),",0,1,0,1,5,1,7,0,1,6,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,625,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,626,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,629,        double expReal = FastMath.exp(real);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,630,"        return createComplex(expReal *  FastMath.cos(imaginary), expReal * FastMath.sin(imaginary));",2,2,0,1,6,1,7,0,1,7,92,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,663,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,664,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,667,"        return createComplex(FastMath.log(abs()),",0,0,0,2,5,1,4,0,2,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,690,        MathUtils.checkNotNull(x);,0,0,0,1,2,0,3,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,691,        return this.log().multiply(x).exp();,0,0,0,1,6,2,4,0,0,4,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,721,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,722,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,725,"        return createComplex(FastMath.sin(real) * MathUtils.cosh(imaginary),",0,1,0,1,5,1,7,0,1,6,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,755,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,756,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,759,"        return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),",0,1,0,1,5,1,7,0,1,6,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,797,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,798,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,801,        if (real == 0.0 && imaginary == 0.0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,802,"            return createComplex(0.0, 0.0);",0,0,0,0,2,1,1,0,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,805,        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);,1,2,0,3,8,1,6,0,1,7,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,806,        if (real >= 0.0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,807,"            return createComplex(t, imaginary / (2.0 * t));",2,2,0,1,4,1,2,0,1,7,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,809,"            return createComplex(FastMath.abs(imaginary) / (2.0 * t),",1,2,0,1,5,1,4,0,1,7,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,833,"        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();",0,0,0,2,8,3,4,0,1,5,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,863,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,864,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,867,        double real2 = 2.0 * real;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,868,        double imaginary2 = 2.0 * imaginary;,2,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,869,        double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);,1,1,0,1,4,1,6,0,0,6,60,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,871,"        return createComplex(FastMath.sin(real2) / d, MathUtils.sinh(imaginary2) / d);",2,2,0,1,6,1,7,0,1,7,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,901,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,902,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,905,        double real2 = 2.0 * real;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,906,        double imaginary2 = 2.0 * imaginary;,2,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,907,        double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);,1,1,0,1,4,1,6,0,0,6,60,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,909,"        return createComplex(MathUtils.sinh(real2) / d, FastMath.sin(imaginary2) / d);",2,2,0,1,6,1,7,0,1,7,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,929,"        return FastMath.atan2(getImaginary(), getReal());",0,0,0,1,6,1,4,0,2,5,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,952,        if (n <= 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,953,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,958,        List<Complex> result = new ArrayList<Complex>();,1,0,0,1,2,1,0,4,1,6,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,960,        if (isNaN) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,961,            result.add(NaN);,0,0,0,1,2,0,3,0,0,3,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,962,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,965,        if (isInfinite()) {,0,0,0,2,5,1,1,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,966,            result.add(INF);,0,0,0,1,2,0,3,0,0,3,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,967,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,971,"        final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);",2,1,0,1,4,2,3,0,2,7,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,974,        final double nthPhi = getArgument()/n;,2,1,0,1,2,2,1,0,2,7,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,975,        final double slice = 2 * FastMath.PI / n;,4,2,0,0,0,2,0,0,1,4,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,976,        double innerPart = nthPhi;,2,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,977,        for (int k = 0; k < n ; k++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,979,            final double realPart      = nthRootOfAbs *  FastMath.cos(innerPart);,2,1,0,1,2,2,3,0,1,7,69,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,980,            final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);,2,1,0,1,2,2,3,0,1,7,69,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,981,"            result.add(createComplex(realPart, imaginaryPart));",0,0,0,0,4,0,5,0,1,3,51,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,982,            innerPart += slice;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,985,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,1007,"        return createComplex(real, imaginary);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,1012,        return ComplexField.getInstance();,0,0,0,1,2,1,2,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,1018,"        return ""("" + real + "", "" + imaginary + "")"";",2,1,0,0,2,1,0,0,3,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/Complex,53,49,"public class Complex implements FieldElement<Complex>, Serializable  {",1,0,0,0,1,3,0,3,1,5,70,1,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,53,41,        this(LocalizedFormats.NULL_NOT_ALLOWED);,2,0,0,1,2,1,0,0,0,4,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,53,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,53,50,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,53,51,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,44,                                        Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,37,    private final ExceptionContext context = new ExceptionContext();,1,0,0,1,2,3,0,2,3,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,45,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,50,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,56,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,53,62,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,43,    public MathArithmeticException() {,1,0,0,1,3,1,0,0,1,5,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,38,    private final ExceptionContext context = new ExceptionContext();,1,0,0,1,2,3,0,2,3,6,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,44,        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);,2,0,0,1,2,0,2,0,0,4,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,55,                                   Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,56,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,61,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,67,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,53,73,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,61,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);",6,0,0,0,2,1,0,0,1,4,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,80,        super(direction == MathUtils.OrderDirection.INCREASING ?,4,1,0,0,1,1,0,0,1,5,56,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,89,        this.direction = direction;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,90,        this.strict = strict;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,91,        this.index = index;,2,0,0,0,0,1,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,92,        this.previous = previous;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,93,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,99,        return direction;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,105,        return strict;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,113,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,53,119,        return previous;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,53,46,"        super(pattern, wrong, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,53,47,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,53,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,53,54,        return argument;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1943,    public static enum OrderDirection {,1,0,0,0,1,3,0,0,2,4,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1945,"        INCREASING,",1,0,0,0,0,0,0,0,0,1,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1947,        DECREASING,1,0,0,0,0,0,0,0,0,1,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,50,        this(boundIsAllowed ?,1,0,0,0,1,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,67,"        super(specific, wrong, max);",3,0,0,0,2,1,0,0,1,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,69,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,70,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,77,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,53,84,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,44,"        super(specific, wrong, expected);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,45,        dimension = expected;,2,0,0,0,0,0,0,0,1,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,56,"        this(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, wrong, expected);",4,0,0,0,2,1,0,0,0,3,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,53,63,        return dimension;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,50,        this(boundIsAllowed ?,1,0,0,0,1,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,68,"        super(specific, wrong, min);",3,0,0,0,2,1,0,0,1,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,70,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,71,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,72,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,78,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,53,85,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,53,40,"        this(LocalizedFormats.NOT_FINITE_NUMBER, wrong, args);",4,0,0,0,2,1,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,53,41,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,53,53,"        super(specific, wrong, args);",3,0,0,0,2,1,0,0,1,4,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,53,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,53,37,"        super(value, 0, true);",1,0,0,0,2,1,0,0,2,4,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,53,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,53,47,"        super(specific, value, 0, true);",2,0,0,0,2,1,0,0,2,4,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,53,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,98,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,99,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,112,        long s = (long)x + (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,113,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,114,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);",4,0,0,0,2,2,0,1,1,5,79,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,116,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,130,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);",2,0,0,0,2,1,3,0,1,5,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,146,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,148,"            ret = addAndCheck(b, a, pattern);",1,0,0,0,2,0,4,0,2,4,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,152,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,153,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,155,                    if (Long.MIN_VALUE - b <= a) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,156,                        ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,158,"                        throw new MathArithmeticException(pattern, a, b);",3,0,0,0,2,2,0,1,1,5,49,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,162,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,169,                if (a <= Long.MAX_VALUE - b) {,4,2,0,1,3,1,0,0,0,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,170,                    ret = a + b;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,172,"                    throw new MathArithmeticException(pattern, a, b);",3,0,0,0,2,2,0,1,1,5,49,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,176,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,205,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,206,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,207,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,209,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,210,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,213,        if (k > n / 2) {,2,2,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,214,"            return binomialCoefficient(n, n - k);",2,1,0,0,2,1,2,0,1,6,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,222,        long result = 1;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,223,        if (n <= 61) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,225,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,226,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,227,                result = result * i / j;,4,2,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,228,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,230,        } else if (n <= 66) {,1,1,0,1,4,2,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,233,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,234,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,241,"                final long d = gcd(i, j);",1,0,0,0,2,2,3,0,2,5,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,242,                result = (result / (j / d)) * (i / d);,6,4,0,2,6,0,0,0,1,5,38,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,243,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,245,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,249,            int i = n - k + 1;,3,2,0,0,0,1,0,0,0,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,250,            for (int j = 1; j <= k; j++) {,4,1,0,1,3,2,0,0,1,6,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,251,"                final long d = gcd(i, j);",1,0,0,0,2,2,3,0,2,5,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,252,"                result = mulAndCheck(result / (j / d), i / d);",6,3,0,1,4,0,1,0,2,6,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,253,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,256,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,282,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,283,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,284,            return 1d;,0,0,0,0,0,1,0,0,0,1,10,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,286,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,287,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,289,        if (k > n/2) {,2,2,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,290,"            return binomialCoefficientDouble(n, n - k);",2,1,0,0,2,1,2,0,1,6,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,292,        if (n < 67) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,293,"            return binomialCoefficient(n,k);",0,0,0,0,2,1,3,0,1,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,296,        double result = 1d;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,297,        for (int i = 1; i <= k; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,298,             result *= (double)(n - k + i) / (double)i;,5,3,0,1,6,2,0,0,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,301,        return FastMath.floor(result + 0.5);,1,1,0,1,2,1,2,0,0,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,323,"        checkBinomial(n, k);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,324,        if ((n == k) || (k == 0)) {,3,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,325,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,327,        if ((k == 1) || (k == n - 1)) {,3,4,0,2,7,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,328,            return FastMath.log(n);,0,0,0,1,2,1,3,0,0,4,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,335,        if (n < 67) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,336,"            return FastMath.log(binomialCoefficient(n,k));",0,0,0,0,4,1,5,0,1,4,46,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,343,        if (n < 1030) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,344,"            return FastMath.log(binomialCoefficientDouble(n, k));",0,0,0,0,4,1,5,0,1,4,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,347,        if (k > n / 2) {,2,2,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,348,"            return binomialCoefficientLog(n, n - k);",2,1,0,0,2,1,2,0,1,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,354,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,357,        for (int i = n - k + 1; i <= n; i++) {,6,3,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,358,            logSum += FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,362,        for (int i = 2; i <= k; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,363,            logSum -= FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,366,        return logSum;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,378,        if (n < k) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,379,"            throw new NumberIsTooLargeException(LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,382,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,383,"            throw new NotPositiveException(LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER, n);",3,0,0,0,2,2,0,1,1,5,80,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,385,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,398,"        if (equals(x, y, eps)) {",0,0,0,0,5,1,4,0,1,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,399,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,400,        } else if (x < y) {,2,1,0,1,4,2,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,401,            return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,403,        return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,424,"        if (equals(x, y, maxUlps)) {",0,0,0,0,5,1,4,0,1,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,425,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,426,        } else if (x < y) {,2,1,0,1,4,2,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,427,            return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,429,        return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,440,        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,452,"        return equals(x, y, 1);",0,0,0,0,2,1,3,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,465,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, 1);",0,2,0,2,8,1,9,0,1,6,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,479,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",3,3,0,1,4,1,5,0,1,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,494,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",3,3,0,2,6,1,5,0,1,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,516,        int xInt = Float.floatToIntBits(x);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,517,        int yInt = Float.floatToIntBits(y);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,520,        if (xInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,521,            xInt = SGN_MASK_FLOAT - xInt;,3,1,0,0,0,0,0,0,1,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,523,        if (yInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,524,            yInt = SGN_MASK_FLOAT - yInt;,3,1,0,0,0,0,0,0,1,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,527,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,4,2,0,1,2,2,2,0,1,7,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,529,        return isEqual && !Float.isNaN(x) && !Float.isNaN(y);,1,1,0,1,4,1,6,0,2,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,545,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, maxUlps);",0,2,0,2,8,1,10,0,1,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,559,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,560,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,562,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,563,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,565,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,566,"            if (!equals(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,567,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,570,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,585,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,586,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,588,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,589,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,591,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,592,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,593,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,596,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,608,"        return equals(x, y, 1);",0,0,0,0,2,1,3,0,1,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,621,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);",0,2,0,2,8,1,9,0,1,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,636,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",3,3,0,1,4,1,5,0,1,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,651,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",3,3,0,2,6,1,5,0,1,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,672,        long xInt = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,673,        long yInt = Double.doubleToLongBits(y);,1,0,0,1,2,1,3,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,676,        if (xInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,677,            xInt = SGN_MASK - xInt;,3,1,0,0,0,0,0,0,1,3,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,679,        if (yInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,680,            yInt = SGN_MASK - yInt;,3,1,0,0,0,0,0,0,1,3,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,683,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,4,2,0,1,2,2,2,0,1,7,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,685,        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);,1,1,0,1,4,1,6,0,2,7,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,701,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);",0,2,0,2,8,1,10,0,1,6,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,715,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,716,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,718,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,719,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,721,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,722,"            if (!equals(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,723,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,726,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,741,        if ((x == null) || (y == null)) {,2,3,0,2,7,1,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,742,            return !((x == null) ^ (y == null));,2,3,0,2,6,1,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,744,        if (x.length != y.length) {,4,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,745,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,747,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,748,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,0,9,1,1,0,2,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,749,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,752,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,780,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,781,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,784,        if (n > 20) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,785,            throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,787,        return FACTORIALS[n];,0,0,1,0,2,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,804,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,805,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,808,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,809,            return factorial(n);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,811,        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);,0,1,0,3,6,1,6,0,1,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,822,        if (n < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,823,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",2,0,0,0,1,2,0,1,1,5,77,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,826,        if (n < 21) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,827,            return FastMath.log(factorial(n));,0,0,0,2,4,1,4,0,1,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,829,        double logSum = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,830,        for (int i = 2; i <= n; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,831,            logSum += FastMath.log(i);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,833,        return logSum;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,866,        int u = p;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,867,        int v = q;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,868,        if ((u == 0) || (v == 0)) {,2,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,869,            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {,6,3,0,2,7,1,0,0,0,5,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,870,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,873,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,1,4,1,6,0,0,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,880,        if (u > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,881,            u = -u;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,883,        if (v > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,884,            v = -v;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,887,        int k = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,888,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,3,7,0,2,7,2,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,890,            u /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,891,            v /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,892,            k++; // cast out twos.,1,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,894,        if (k == 31) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,895,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,900,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,4,3,0,2,6,1,0,0,1,6,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,906,            while ((t & 1) == 0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,907,                t /= 2; // cast out twos,1,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,910,            if (t > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,911,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,913,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,916,            t = (v - u) / 2;,3,2,0,1,2,0,0,0,1,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,919,        } while (t != 0);,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,920,        return -u * (1 << k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,953,        long u = p;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,954,        long v = q;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,955,        if ((u == 0) || (v == 0)) {,2,3,0,2,7,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,956,            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){,6,3,0,2,7,1,0,0,0,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,957,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,960,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,1,4,1,6,0,0,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,967,        if (u > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,968,            u = -u;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,970,        if (v > 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,971,            v = -v;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,974,        int k = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,975,        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are,3,7,0,2,7,2,0,0,0,5,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,977,            u /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,978,            v /= 2;,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,979,            k++; // cast out twos.,1,0,0,0,0,0,0,0,1,2,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,981,        if (k == 63) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,982,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,987,        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,4,3,0,2,6,1,0,0,1,6,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,993,            while ((t & 1) == 0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,994,                t /= 2; // cast out twos,1,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,997,            if (t > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,998,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1000,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1003,            t = (v - u) / 2;,3,2,0,1,2,0,0,0,1,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1006,        } while (t != 0);,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1007,        return -u * (1L << k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1017,        return new Double(value).hashCode();,1,0,0,1,4,2,1,1,1,7,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1028,        return Arrays.hashCode(value);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1039,        return (x >= ZB) ? PB : NB;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1051,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1052,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1054,        return (x >= 0.0) ? 1.0 : -1.0;,1,1,0,1,2,1,0,0,1,6,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1065,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1066,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1068,        return (x >= 0.0F) ? 1.0F : -1.0F;,1,1,0,1,2,1,0,0,1,6,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1078,        return (x >= 0) ? 1 : -1;,1,1,0,1,2,1,0,0,1,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1088,        return (x >= 0L) ? 1L : -1L;,1,1,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1099,        return (x >= ZS) ? PS : NS;,4,1,0,1,2,1,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1125,        if (a == 0 || b == 0){,2,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1126,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1128,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",2,1,0,0,6,1,7,0,2,6,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1129,        if (lcm == Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1130,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1133,        return lcm;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1159,        if (a == 0 || b == 0){,2,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1160,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1162,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",2,1,0,0,6,1,7,0,2,6,55,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1163,        if (lcm == Long.MIN_VALUE){,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1164,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,",2,0,0,0,1,2,0,1,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1167,        return lcm;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1187,        return FastMath.log(x)/FastMath.log(base);,0,1,0,1,4,1,6,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1201,        long m = ((long)x) * ((long)y);,3,1,0,2,8,3,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1202,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1203,            throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1205,        return (int)m;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1220,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1222,"            ret = mulAndCheck(b, a);",1,0,0,0,2,0,3,0,2,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1224,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1225,                if (b < 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1227,                    if (a >= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1228,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1230,                        throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1232,                } else if (b > 0) {,1,1,0,1,4,2,0,0,0,5,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1234,                    if (Long.MIN_VALUE / b <= a) {,4,2,0,1,3,1,0,0,0,5,30,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1235,                        ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1237,                        throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1242,                    ret = 0;,1,0,0,0,0,0,0,0,1,2,8,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1244,            } else if (a > 0) {,1,1,0,1,4,2,0,0,0,5,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1249,                if (a <= Long.MAX_VALUE / b) {,4,2,0,1,3,1,0,0,0,5,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1250,                    ret = a * b;,3,1,0,0,0,0,0,0,1,3,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1252,                    throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1256,                ret = 0;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1259,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1282,         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);,7,5,0,2,4,1,2,0,0,6,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1304,        final double p = FastMath.abs(period);,1,0,0,1,2,2,3,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1305,        return a - p * FastMath.floor((a - offset) / p) - offset;,6,5,0,2,4,1,2,0,0,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1330,         if (Double.isInfinite(normalizedSum)) {,0,0,0,2,5,1,3,0,0,4,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1331,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);,2,0,0,1,2,2,0,1,1,6,76,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1333,         if (Double.isNaN(normalizedSum)) {,0,0,0,2,5,1,3,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1334,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);,2,0,0,1,2,2,0,1,1,6,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1336,         double sum = 0d;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1337,         final int len = values.length;,3,0,0,0,0,2,0,0,1,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1338,         double[] out = new double[len];,1,0,1,0,4,3,0,0,0,4,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1339,         for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1340,             if (Double.isInfinite(values[i])) {,0,0,1,2,7,1,2,0,0,5,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1341,"                 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);",3,0,1,0,4,2,0,1,1,6,94,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1343,             if (!Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,1,6,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1344,                 sum += values[i];,1,0,1,0,2,0,0,0,1,4,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1347,         if (sum == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1348,             throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);,2,0,0,1,2,2,0,1,1,6,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1350,         for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1351,             if (Double.isNaN(values[i])) {,0,0,1,2,7,1,2,0,0,5,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1352,                 out[i] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1354,                 out[i] = values[i] * normalizedSum / sum;,2,2,1,0,4,0,0,0,1,5,41,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1357,         return out;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1370,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1394,            return (new BigDecimal,0,0,0,0,1,2,0,1,1,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1398,        } catch (NumberFormatException ex) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1399,            if (Double.isInfinite(x)) {,0,0,0,2,5,1,3,0,0,4,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1400,                return x;,1,0,0,0,0,1,0,0,0,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1402,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1417,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",2,0,0,0,2,1,3,0,1,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1433,        float sign = indicator(x);,1,0,0,1,2,1,2,0,1,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1434,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;",2,1,0,1,4,2,3,0,0,6,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1435,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",3,2,0,1,4,2,3,0,1,7,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1453,        switch (roundingMethod) {,1,0,0,1,3,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1455,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1456,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1458,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,81,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1460,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1462,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1463,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1465,            if (sign == -1) {,1,1,0,1,3,1,0,0,1,6,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1466,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,81,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1468,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1470,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1472,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);",3,0,0,0,2,0,3,0,1,4,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1473,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1474,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1475,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1477,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1479,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1482,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1483,            if (fraction > 0.5) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1484,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1485,            } else if (fraction < 0.5) {,1,1,0,1,4,2,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1486,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1489,                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math,0,3,0,1,4,1,6,0,0,5,57,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1491,                    unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1493,                    unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1496,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1499,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);",3,0,0,0,2,0,3,0,1,4,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1500,            double fraction = unscaled - FastMath.floor(unscaled);,2,1,0,1,2,1,3,0,0,6,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1501,            if (fraction >= 0.5) {,1,1,0,1,3,1,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1502,                unscaled = FastMath.ceil(unscaled);,1,0,0,1,2,0,3,0,1,5,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1504,                unscaled = FastMath.floor(unscaled);,1,0,0,1,2,0,3,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1506,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1509,            if (unscaled != FastMath.floor(unscaled)) {,1,1,0,2,5,1,3,0,0,6,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1510,                throw new MathArithmeticException();,0,0,0,1,2,2,0,1,1,5,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1514,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));",3,0,0,0,4,0,5,0,1,4,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1515,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1517,"            throw new MathIllegalArgumentException(LocalizedFormats.INVALID_ROUNDING_METHOD,",2,0,0,0,1,2,0,1,1,5,80,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1528,        return unscaled;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1542,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1558,        if (Double.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1559,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1561,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,2,2,0,1,4,1,0,0,1,6,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1576,        if (Float.isNaN(x)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1577,            return Float.NaN;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1579,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,2,2,0,1,4,1,0,0,1,6,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1593,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,2,2,0,1,4,1,0,0,1,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1607,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,2,2,0,1,4,1,0,0,1,6,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1618,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,7,2,0,1,4,1,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1629,        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;,1,2,0,2,6,1,5,0,1,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1643,        long s = (long)x - (long)y;,3,1,0,1,4,3,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1644,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,6,3,0,1,3,1,0,0,0,5,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1645,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);",4,0,0,0,2,2,0,1,1,5,82,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1647,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1662,        if (b == Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1663,            if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1664,                ret = a - b;,3,1,0,0,0,0,0,0,1,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1666,"                throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, a, -b);",4,0,0,0,2,2,0,1,2,5,80,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1670,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);",4,0,0,0,2,0,2,0,3,4,64,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1672,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1684,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1685,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1688,        int result = 1;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1689,        int k2p    = k;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1690,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1691,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1692,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1694,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1695,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1698,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1710,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1711,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1714,        int result = 1;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1715,        int k2p    = k;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1716,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1717,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1718,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1720,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1721,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1724,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1736,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1737,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1740,        long result = 1l;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1741,        long k2p    = k;,2,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1742,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1743,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1744,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1746,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1747,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1750,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1762,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1763,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1766,        long result = 1l;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1767,        long k2p    = k;,2,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1768,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1769,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1770,                result *= k2p;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1772,            k2p *= k2p;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1773,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1776,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1788,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1789,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1792,        return k.pow(e);,0,0,0,1,2,1,3,0,0,4,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1804,        if (e < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1805,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1808,        BigInteger result = BigInteger.ONE;,3,0,0,0,0,0,0,1,0,2,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1809,        BigInteger k2p    = k;,2,0,0,0,0,0,0,1,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1810,        while (e != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1811,            if ((e & 0x1) != 0) {,1,2,0,2,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1812,                result = result.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1814,            k2p = k2p.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1815,            e = e >> 1;,2,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1818,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1831,        if (e.compareTo(BigInteger.ZERO) < 0) {,2,1,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1832,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",3,0,0,0,2,2,0,1,1,5,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1835,        BigInteger result = BigInteger.ONE;,3,0,0,0,0,0,0,1,0,2,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1836,        BigInteger k2p    = k;,2,0,0,0,0,0,0,1,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1837,        while (!BigInteger.ZERO.equals(e)) {,2,0,0,2,5,1,2,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1838,            if (e.testBit(0)) {,0,0,0,2,5,1,2,0,0,4,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1839,                result = result.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1841,            k2p = k2p.multiply(k2p);,1,0,0,1,2,0,3,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1842,            e = e.shiftRight(1);,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1845,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1856,        double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1857,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1858,            sum += FastMath.abs(p1[i] - p2[i]);,1,1,1,1,6,0,2,0,1,7,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1860,        return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1871,      int sum = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1872,      for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1873,          sum += FastMath.abs(p1[i] - p2[i]);,1,1,1,1,6,0,2,0,1,7,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1875,      return sum;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1886,        double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1887,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1888,            final double dp = p1[i] - p2[i];,1,1,1,0,4,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1889,            sum += dp * dp;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1891,        return FastMath.sqrt(sum);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1902,      double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1903,      for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1904,          final double dp = p1[i] - p2[i];,1,1,1,0,4,2,0,0,1,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1905,          sum += dp * dp;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1907,      return FastMath.sqrt(sum);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1918,        double max = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1919,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1920,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",1,1,1,1,8,0,5,0,1,7,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1922,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1933,        int max = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1934,        for (int i = 0; i < p1.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1935,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",1,1,1,1,8,0,5,0,1,7,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1937,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1963,        double previous = val[0];,1,0,1,0,2,1,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1964,        boolean ok = true;,1,0,0,0,0,1,0,0,1,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1966,        int max = val.length;,3,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1967,        for (int i = 1; i < max; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1968,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1970,                if (strict) {,1,0,0,1,3,1,0,0,0,4,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1971,                    if (val[i] <= previous) {,1,1,1,1,5,1,0,0,0,6,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1972,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1975,                    if (val[i] < previous) {,1,1,1,1,5,1,0,0,0,6,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1976,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1981,                if (strict) {,1,0,0,1,3,1,0,0,0,4,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1982,                    if (val[i] >= previous) {,1,1,1,1,5,1,0,0,0,6,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1983,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1986,                    if (val[i] > previous) {,1,1,1,1,5,1,0,0,0,6,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1987,                        ok = false;,1,0,0,0,0,0,0,0,2,2,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1993,                throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1996,            if (!ok &&,1,1,0,0,1,1,0,0,1,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1998,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);",4,0,1,0,4,2,0,1,1,6,75,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2000,            previous = val[i];,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2003,        return ok;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2017,"        checkOrder(val, dir, strict, true);",0,0,0,0,2,0,4,0,2,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2018,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2028,"        checkOrder(val, OrderDirection.INCREASING, true);",2,0,0,0,2,0,2,0,2,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2029,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2039,        if (Double.isInfinite(x) || Double.isNaN(x)) {,0,1,0,2,7,1,6,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2040,            throw new NotFiniteNumberException(x);,1,0,0,1,2,2,0,1,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2042,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2052,        for (int i = 0; i < val.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2053,            final double x = val[i];,1,0,1,0,2,2,0,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2054,            if (Double.isInfinite(x) || Double.isNaN(x)) {,0,1,0,2,7,1,6,0,0,5,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2055,"                throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);",4,0,0,0,2,2,0,1,1,5,73,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2058,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2121,        double rdwarf = 3.834e-20;,1,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2122,        double rgiant = 1.304e+19;,1,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2123,        double s1 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2124,        double s2 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2125,        double s3 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2126,        double x1max = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2127,        double x3max = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2128,        double floatn = (double) v.length;,3,0,0,1,2,2,0,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2129,        double agiant = rgiant / floatn;,3,1,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2130,        for (int i = 0; i < v.length; i++) {,5,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2131,            double xabs = Math.abs(v[i]);,1,0,1,1,4,1,2,0,0,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2132,            if (xabs < rdwarf || xabs > agiant) {,4,3,0,1,3,1,0,0,0,5,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2133,                if (xabs > rdwarf) {,2,1,0,1,3,1,0,0,0,5,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2134,                    if (xabs > x1max) {,2,1,0,1,3,1,0,0,0,5,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2135,                        double r = x1max / xabs;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2136,                        s1= 1 + s1 * r * r;,4,2,0,0,0,0,0,0,1,3,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2137,                        x1max = xabs;,2,0,0,0,0,0,0,0,1,2,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2138,                    } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2139,                        double r = xabs / x1max;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2140,                        s1 += r * r;,3,1,0,0,0,0,0,0,1,3,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2141,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2143,                    if (xabs > x3max) {,2,1,0,1,3,1,0,0,0,5,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2144,                        double r = x3max / xabs;,3,1,0,0,0,1,0,0,0,3,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2145,                        s3= 1 + s3 * r * r;,4,2,0,0,0,0,0,0,1,3,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2146,                        x3max = xabs;,2,0,0,0,0,0,0,0,1,2,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2147,                    } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2148,                        if (xabs != 0) {,1,1,0,1,3,1,0,0,0,5,16,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2149,                            double r = xabs / x3max;,3,1,0,0,0,1,0,0,0,3,24,15,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2150,                            s3 += r * r;,3,1,0,0,0,0,0,0,1,3,12,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2151,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2155,                s2 += xabs * xabs;,3,1,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2159,        if (s1 != 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2160,            norm = x1max * Math.sqrt(s1 + (s2 / x1max) / x1max);,6,4,0,2,4,0,2,0,1,6,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2162,            if (s2 == 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2163,                norm = x3max * Math.sqrt(s3);,2,1,0,1,2,0,3,0,1,6,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2165,                if (s2 >= x3max) {,2,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2166,                    norm = Math.sqrt(s2 * (1 + (x3max / s2) * (x3max * s3)));,6,5,0,3,8,0,2,0,1,6,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2168,                    norm = Math.sqrt(x3max * ((s2 / x3max) + (x3max * s3)));,6,4,0,3,8,0,2,0,1,6,56,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2172,        return norm;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2187,"        sortInPlace(x, OrderDirection.INCREASING, yList);",2,0,0,0,2,0,3,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2188,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2203,        if (x == null ||,1,2,0,0,1,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2205,            throw new NullArgumentException();,0,0,0,1,2,2,0,1,1,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2208,        final int len = x.length;,3,0,0,0,0,2,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2209,"        final List<Pair<Double, double[]>> list",1,0,0,0,2,2,0,3,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2212,        final int yListLen = yList.length;,3,0,0,0,0,2,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2213,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2214,            final double[] yValues = new double[yListLen];,1,0,1,0,4,4,0,0,1,5,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2215,            for (int j = 0; j < yListLen; j++) {,4,1,0,1,3,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2216,                double[] y = yList[j];,1,0,1,0,4,1,0,0,0,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2217,                if (y.length != len) {,3,1,0,1,3,1,0,0,0,5,22,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2218,"                    throw new DimensionMismatchException(y.length, len);",3,0,0,0,2,2,0,1,1,5,52,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2220,                yValues[j] = y[i];,0,0,1,0,4,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2222,"            list.add(new Pair<Double, double[]>(x[i], yValues));",1,0,1,0,8,2,2,2,1,7,52,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2225,"        final Comparator<Pair<Double, double[]>> comp",1,0,0,0,2,2,0,3,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2245,"        Collections.sort(list, comp);",0,0,0,0,2,0,4,0,0,2,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2247,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2248,"            final Pair<Double, double[]> e = list.get(i);",1,0,0,1,4,2,3,2,1,7,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2249,            x[i] = e.getKey();,0,0,1,1,4,0,2,0,1,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2250,            final double[] yValues = e.getValue();,1,0,0,1,4,2,2,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2251,            for (int j = 0; j < yListLen; j++) {,4,1,0,1,3,2,0,0,1,6,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2252,                yList[j][i] = yValues[j];,0,0,1,0,6,0,0,0,1,3,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2255,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2264,"         return copyOf(source, source.length);",2,0,0,0,2,1,2,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2274,"         return copyOf(source, source.length);",2,0,0,0,2,1,2,0,1,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2287,         final int[] output = new int[len];,1,0,1,0,4,4,0,0,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2288,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",2,0,0,0,4,0,7,0,0,3,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2289,         return output;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2302,         final double[] output = new double[len];,1,0,1,0,4,4,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2303,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",2,0,0,0,4,0,7,0,0,3,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2304,         return output;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2318,        if (o == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2319,"            throw new NullArgumentException(pattern, args);",2,0,0,0,2,2,0,1,1,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2321,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2332,            throw new NullArgumentException();,0,0,0,1,2,2,0,1,1,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,1968,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2226,"            = new Comparator<Pair<Double, double[]>>() {",0,0,0,1,5,2,0,3,1,5,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2230,                switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2232,                    val = o1.getKey().compareTo(o2.getKey());,1,0,0,2,6,0,5,0,1,5,41,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2233,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2235,                    val = o2.getKey().compareTo(o1.getKey());,1,0,0,2,6,0,5,0,1,5,41,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2236,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2239,                    throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,53,2241,                return val;,1,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
