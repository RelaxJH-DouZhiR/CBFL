dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,149,                double scaleFactor = 1d;,1,0,0,0,0,1,0,0,0,2,24,9,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,150,                double lastScaleFactor = 1d;,1,0,0,0,0,1,0,0,0,2,28,9,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,151,                final int maxPower = 5;,1,0,0,0,0,2,0,0,1,3,23,8,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,152,"                final double scale = FastMath.max(a,b);",1,0,0,0,2,2,4,0,1,5,39,8,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,153,                if (scale <= 0) {  // Can't scale,1,1,0,1,3,1,0,0,0,5,33,8,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,158,                infinite = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,159,                for (int i = 0; i < maxPower; i++) {,4,1,0,1,3,2,0,0,1,6,36,8,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,160,                    lastScaleFactor = scaleFactor;,2,0,0,0,0,0,0,0,1,2,30,10,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,161,                    scaleFactor *= scale;,2,0,0,0,0,0,0,0,1,2,21,10,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,162,                    if (a != 0.0 && a > b) {,3,3,0,1,3,1,0,0,0,5,24,10,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,169,                    infinite = Double.isInfinite(p2) || Double.isInfinite(q2);,1,1,0,1,4,0,6,0,1,6,58,10,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,170,                    if (!infinite) {,1,0,0,1,3,1,0,0,1,5,16,10,0.5,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,171,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.5,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,644,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,648,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.25,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,169,            ret = 0.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3491,        return (a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);,8,2,0,2,6,1,2,0,0,6,61,5,0.16667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,173,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.16667,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,53,            ret = -ret;,2,0,0,0,0,0,0,0,2,2,11,6,0.16667,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,125,        final double dev = x - mean;,3,1,0,0,0,2,0,0,1,4,28,4,0.14286,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,127,        return 0.5 * (1.0 + Erf.erf((dev) /,1,3,0,1,4,1,2,0,0,6,35,6,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,51,"        double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);",3,1,0,0,2,1,2,0,0,5,65,5,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,52,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,55,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.14286,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,47,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,129,        double p0 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,130,"        double p1 = getA(0, x);",1,0,0,0,2,1,2,0,1,5,23,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,131,        double q0 = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,132,        double q1 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,133,        double c = p1 / q1;,3,1,0,0,0,1,0,0,0,3,19,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,134,        int n = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,135,        double relativeError = Double.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,40,5,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,136,        while (n < maxIterations && relativeError > epsilon) {,4,3,0,1,3,1,0,0,0,5,54,4,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,137,            ++n;,1,0,0,0,0,0,0,0,1,2,4,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,138,"            double a = getA(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,139,"            double b = getB(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,140,            double p2 = a * p1 + b * p0;,5,3,0,0,0,1,0,0,0,3,28,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,141,            double q2 = a * q1 + b * q0;,5,3,0,0,0,1,0,0,0,3,28,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,142,            boolean infinite = false;,1,0,0,0,0,1,0,0,1,3,25,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,143,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0,1,0,2,7,1,6,0,0,5,53,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,176,            if (infinite) {,1,0,0,1,3,1,0,0,0,4,15,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,183,            double r = p2 / q2;,3,1,0,0,0,1,0,0,0,3,19,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,185,            if (Double.isNaN(r)) {,0,0,0,2,5,1,3,0,0,4,22,7,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,190,            relativeError = FastMath.abs(r / c - 1.0);,3,2,0,1,2,0,2,0,1,6,42,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,193,            c = p2 / q2;,3,1,0,0,0,0,0,0,1,3,12,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,194,            p0 = p1;,2,0,0,0,0,0,0,0,1,2,8,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,195,            p1 = p2;,2,0,0,0,0,0,0,0,1,2,8,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,196,            q0 = q1;,2,0,0,0,0,0,0,0,1,2,8,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,197,            q1 = q2;,2,0,0,0,0,0,0,0,1,2,8,6,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,198,        },0,0,0,0,1,0,0,0,0,1,1,2,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,200,        if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,4,0.07692,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,206,        return c;,1,0,0,0,0,1,0,0,0,2,9,4,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,253,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,257,                    return ((2.0 * n) + 1.0) - a + x;,3,4,0,2,4,1,0,0,0,5,33,14,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,262,                    return n * (a - n);,3,2,0,1,2,1,0,0,0,5,19,14,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,243,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,245,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,247,        } else if (x < a + 1.0) {,2,2,0,1,4,2,0,0,0,5,25,6,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,253,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,266,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,1,5,51,8,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,267,            ret = FastMath.exp(-x + (a * FastMath.log(x)) - logGamma(a)) * ret;,4,4,0,3,8,0,7,0,3,6,67,8,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,270,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.07692,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,166,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,168,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,170,        } else if (x >= a + 1) {,2,2,0,1,4,2,0,0,0,5,24,6,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,176,            double n = 0.0; // current element index,1,0,0,0,0,1,0,0,0,2,40,9,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,177,            double an = 1.0 / a; // n-th element in the series,2,1,0,0,0,1,0,0,0,3,50,9,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,178,            double sum = an; // partial sum,2,0,0,0,0,1,0,0,0,2,31,9,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,179,            while (FastMath.abs(an/sum) > epsilon && n < maxIterations && sum < Double.POSITIVE_INFINITY) {,8,6,0,2,5,1,2,0,0,6,95,8,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,181,                n = n + 1.0;,2,1,0,0,0,0,0,0,1,3,12,10,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,182,                an = an * (x / (a + n));,5,3,0,2,4,0,0,0,1,5,24,10,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,185,                sum = sum + an;,3,1,0,0,0,0,0,0,1,3,15,10,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,187,            if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,8,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,189,            } else if (Double.isInfinite(sum)) {,0,0,0,2,6,2,3,0,0,4,36,10,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,192,                ret = FastMath.exp(-x + (a * FastMath.log(x)) - logGamma(a)) * sum;,4,4,0,3,8,0,7,0,3,6,67,11,0.07143,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,196,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.07143,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1211,            if (x < 1.01 && x > 0.99 && hiPrec == null) {,3,5,0,1,3,1,0,0,0,5,45,6,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,42,    private static final double[] LANCZOS =,1,0,0,0,2,4,0,0,3,4,39,2,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,62,    private static final double HALF_LOG_2_PI = 0.5 * FastMath.log(2.0 * FastMath.PI);,3,2,0,1,2,4,2,0,3,7,82,2,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,98,        if (Double.isNaN(x) || (x <= 0.0)) {,1,2,0,2,7,1,3,0,0,6,36,4,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,101,            double g = 607.0 / 128.0;,1,1,0,0,0,1,0,0,0,3,25,7,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,103,            double sum = 0.0;,1,0,0,0,0,1,0,0,0,2,17,7,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,104,            for (int i = LANCZOS.length - 1; i > 0; --i) {,5,2,0,1,3,2,0,0,1,6,46,6,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,105,                sum = sum + (LANCZOS[i] / (x + i));,4,3,1,2,6,0,0,0,1,6,35,8,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,107,            sum = sum + LANCZOS[0];,2,1,1,0,2,0,0,0,1,5,23,6,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,109,            double tmp = x + g + .5;,3,1,0,0,0,1,0,0,0,3,24,7,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,110,            ret = ((x + .5) * FastMath.log(tmp)) - tmp +,3,5,0,2,6,0,3,0,1,6,44,6,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,114,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.06667,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1155,"        return log(x, null);",0,0,0,0,2,1,2,0,1,4,20,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1165,        long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1168,        if ((bits & 0x8000000000000000L) != 0 || x != x) {,3,4,0,2,5,1,0,0,0,5,50,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1179,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1188,        int exp = (int)(bits >> 52)-1023;,2,2,0,1,4,2,0,0,0,5,33,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1190,        if ((bits & 0x7ff0000000000000L) == 0) {,1,2,0,2,5,1,0,0,0,5,40,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1210,        if (exp == -1 || exp == 0) {,2,3,0,1,3,1,0,0,1,6,28,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1258,        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];,2,2,1,2,10,2,0,0,0,6,66,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1269,        double epsilon = (double)(bits & 0x3ffffffffffL) / (4503599627370496.0 + (bits & 0x000ffc0000000000L));,3,4,0,2,8,2,0,0,0,5,103,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1271,        double lnza = 0.0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1272,        double lnzb = 0.0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1274,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1325,            lnza = -0.16624882440418567;,1,0,0,0,0,0,0,0,2,2,28,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1326,            lnza = lnza * epsilon + 0.19999954120254515;,3,2,0,0,0,0,0,0,1,3,44,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1327,            lnza = lnza * epsilon + -0.2499999997677497;,3,2,0,0,0,0,0,0,2,3,44,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1328,            lnza = lnza * epsilon + 0.3333333333332802;,3,2,0,0,0,0,0,0,1,3,43,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1329,            lnza = lnza * epsilon + -0.5;,3,2,0,0,0,0,0,0,2,3,29,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1330,            lnza = lnza * epsilon + 1.0;,3,2,0,0,0,0,0,0,1,3,28,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1331,            lnza = lnza * epsilon;,3,1,0,0,0,0,0,0,1,3,22,6,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1348,        double a = LN_2_A*exp;,3,1,0,0,0,1,0,0,0,3,22,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1349,        double b = 0.0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1350,        double c = a+lnm[0];,2,1,1,0,2,1,0,0,0,5,20,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1351,        double d = -(c-a-lnm[0]);,3,1,1,1,4,1,0,0,1,7,25,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1352,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1353,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1355,        c = a + lnza;,3,1,0,0,0,0,0,0,1,3,13,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1356,        d = -(c - a - lnza);,4,1,0,1,2,0,0,0,2,5,20,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1357,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1358,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1360,        c = a + LN_2_B*exp;,4,2,0,0,0,0,0,0,1,3,19,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1361,        d = -(c - a - LN_2_B*exp);,5,2,0,1,2,0,0,0,2,5,26,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1362,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1363,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1365,        c = a + lnm[1];,2,1,1,0,2,0,0,0,1,5,15,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1366,        d = -(c - a - lnm[1]);,3,1,1,1,4,0,0,0,2,6,22,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1367,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1368,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1370,        c = a + lnzb;,3,1,0,0,0,0,0,0,1,3,13,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1371,        d = -(c - a - lnzb);,4,1,0,1,2,0,0,0,2,5,20,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1372,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1373,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1375,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1380,        return a + b;,2,1,0,0,0,1,0,0,0,3,13,4,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3265,        return (x < 0.0) ? -x : x;,3,1,0,1,2,1,0,0,1,6,26,5,0.0625,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,641,            intVal = (int) -x;,2,0,0,1,2,1,0,0,2,5,18,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,643,            if (intVal > 746) {,1,1,0,1,3,1,0,0,0,5,19,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,651,            if (intVal > 709) {,1,1,0,1,3,1,0,0,0,5,19,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,661,            if (intVal == 709) {,1,1,0,1,3,1,0,0,0,5,20,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,671,            intVal++;,1,0,0,0,0,0,0,0,1,2,9,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,673,            intPartA = EXP_INT_TABLE_A[750-intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,674,            intPartB = EXP_INT_TABLE_B[750-intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,676,            intVal = -intVal;,2,0,0,0,0,0,0,0,2,2,17,6,0.05882,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,621,"        return exp(x, 0.0, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,640,        if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,696,        final int intFrac = (int) ((x - intVal) * 1024.0);,3,2,0,2,6,3,0,0,1,6,50,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,697,        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];,1,0,1,0,2,2,0,0,1,5,51,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,698,        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];,1,0,1,0,2,2,0,0,1,5,51,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,704,        final double epsilon = x - (intVal + intFrac / 1024.0);,4,3,0,1,2,2,0,0,1,6,55,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,713,        double z = 0.04168701738764507;,1,0,0,0,0,1,0,0,0,2,31,5,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,714,        z = z * epsilon + 0.1666666505023083;,3,2,0,0,0,0,0,0,1,3,37,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,715,        z = z * epsilon + 0.5000000000042687;,3,2,0,0,0,0,0,0,1,3,37,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,716,        z = z * epsilon + 1.0;,3,2,0,0,0,0,0,0,1,3,22,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,717,        z = z * epsilon + -3.940510424527919E-20;,3,2,0,0,0,0,0,0,2,3,41,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,724,        double tempA = intPartA * fracPartA;,3,1,0,0,0,1,0,0,0,3,36,5,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,725,        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;,7,5,0,0,0,1,0,0,0,3,82,5,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,731,        final double tempC = tempB + tempA;,3,1,0,0,0,2,0,0,1,4,35,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,733,        if (extra != 0.0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,736,            result = tempC*z + tempB + tempA;,5,3,0,0,0,0,0,0,1,3,33,6,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,739,        if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.05556,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,745,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.05556,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,58,    protected AbstractContinuousDistribution() {},1,0,0,1,4,1,0,0,1,5,45,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,49,    protected final RandomDataImpl randomData = new RandomDataImpl();,1,0,0,1,2,3,0,2,3,6,65,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,54,    private double solverAbsoluteAccuracy = BrentSolver.DEFAULT_ABSOLUTE_ACCURACY;,3,0,0,0,0,2,0,0,1,3,78,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,60,40,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,60,41,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,60,"        this(mean, sd, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);",3,0,0,0,2,1,0,0,0,3,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,73,"    public NormalDistributionImpl(double mean, double sd, double inverseCumAccuracy) {",4,0,0,0,3,4,0,0,1,4,82,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,74,        if (sd <= 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,78,        this.mean = mean;,2,0,0,0,0,1,0,0,1,3,17,4,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,79,        standardDeviation = sd;,2,0,0,0,0,0,0,0,1,2,23,4,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,80,        solverAbsoluteAccuracy = inverseCumAccuracy;,2,0,0,0,0,0,0,0,1,2,44,4,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,45,    private static final double SQRT2PI = FastMath.sqrt(2 * FastMath.PI);,3,1,0,1,2,4,2,0,3,7,69,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,35,    private static final double EXP_INT_TABLE_A[] = new double[1500];,1,0,0,0,4,6,0,0,3,4,65,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,40,    private static final double EXP_INT_TABLE_B[] = new double[1500];,1,0,0,0,4,6,0,0,3,4,65,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,45,    private static final double EXP_FRAC_TABLE_A[] = new double[1025];,1,0,0,0,4,6,0,0,3,4,66,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,50,    private static final double EXP_FRAC_TABLE_B[] = new double[1025];,1,0,0,0,4,6,0,0,3,4,66,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,53,    private static final double FACT[] = new double[20];,1,0,0,0,4,6,0,0,3,4,52,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,56,    private static final double LN_MANT[][] = new double[1024][];,1,0,0,0,8,6,0,0,3,4,61,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,65,    private static final double LN_SPLIT_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,49,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,85,    private static final double LN_QUICK_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,49,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,98,    private static final double LN_HI_PREC_COEF[][] = {,1,0,0,0,5,4,0,0,3,4,51,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,108,    private static final double SINE_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,60,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,111,    private static final double SINE_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,60,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,114,    private static final double COSINE_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,62,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,117,    private static final double COSINE_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,62,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,120,    private static final double TANGENT_TABLE_A[] = new double[14];,1,0,0,0,4,6,0,0,3,4,63,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,123,    private static final double TANGENT_TABLE_B[] = new double[14];,1,0,0,0,4,6,0,0,3,4,63,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,126,    private static long RECIP_2PI[] = new long[] {,1,0,0,0,5,5,0,0,2,4,46,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,147,    private static long PI_O_4_BITS[] = new long[] {,1,0,0,0,5,5,0,0,2,4,48,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,155,"    private static final double EIGHTHES[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",1,0,0,0,4,4,0,0,3,4,127,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,158,"    private static final double CBRTTWO[] = { 0.6299605249474366,",1,0,0,0,3,4,0,0,3,4,61,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,169,        FACT[0] = 1.0;,0,0,1,0,2,0,0,0,1,3,14,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,170,        for (i = 1; i < 20; i++) {,3,1,0,1,3,1,0,0,2,6,26,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,171,            FACT[i] = FACT[i-1] * i;,2,2,1,0,4,0,0,0,1,5,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,174,        double tmp[] = new double[2];,1,0,0,0,4,3,0,0,0,3,29,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,175,        double recip[] = new double[2];,1,0,0,0,4,3,0,0,0,3,31,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,178,        for (i = 0; i < 750; i++) {,3,1,0,1,3,1,0,0,2,6,27,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,179,"            expint(i, tmp);",0,0,0,0,2,0,3,0,1,3,15,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,180,            EXP_INT_TABLE_A[i+750] = tmp[0];,1,1,1,0,4,0,0,0,1,5,32,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,181,            EXP_INT_TABLE_B[i+750] = tmp[1];,1,1,1,0,4,0,0,0,1,5,32,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,183,            if (i != 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,185,"                splitReciprocal(tmp, recip);",0,0,0,0,2,0,3,0,1,3,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,186,                EXP_INT_TABLE_A[750-i] = recip[0];,1,1,1,0,4,0,0,0,1,5,34,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,187,                EXP_INT_TABLE_B[750-i] = recip[1];,1,1,1,0,4,0,0,0,1,5,34,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,192,        for (i = 0; i < 1025; i++) {,3,1,0,1,3,1,0,0,2,6,28,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,193,"            slowexp(i/1024.0, tmp);",1,1,0,0,2,0,2,0,1,5,23,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,194,            EXP_FRAC_TABLE_A[i] = tmp[0];,0,0,1,0,4,0,0,0,1,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,195,            EXP_FRAC_TABLE_B[i] = tmp[1];,0,0,1,0,4,0,0,0,1,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,199,        for (i = 0; i < 1024; i++) {,3,1,0,1,3,1,0,0,2,6,28,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,200,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,2,2,0,4,8,2,2,0,0,6,79,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,201,            LN_MANT[i] = slowLog(d);,0,0,1,1,4,0,2,0,2,5,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,205,        buildSinCosTables();,0,0,0,1,2,0,1,0,1,4,20,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,206,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,219,        return Math.sqrt(a);,0,0,0,1,2,1,3,0,0,4,20,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,911,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,912,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,913,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,914,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,915,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,916,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,918,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,919,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,920,            ys[0] = as[0];,0,0,1,0,4,0,0,0,1,3,14,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,921,            ys[1] = as[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,923,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,924,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,926,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,927,            ys[0] = as[0];,0,0,1,0,4,0,0,0,1,3,14,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,928,            ys[1] = as[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,931,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,932,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,933,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,936,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,945,        if (d < 8e298 && d > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,946,            final double a = d * 1073741824.0;,2,1,0,0,0,2,0,0,1,4,34,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,947,            split[0] = (d + a) - a;,3,2,1,1,4,0,0,0,1,6,23,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,948,            split[1] = d - split[0];,1,1,1,0,4,0,0,0,1,5,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,949,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,954,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,961,        final double c = a[0] + a[1];,1,1,1,0,4,2,0,0,1,6,29,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,962,        final double d = -(c - a[0] - a[1]);,2,1,1,1,6,2,0,0,2,7,36,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,964,        if (c < 8e298 && c > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,965,            double z = c * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,966,            a[0] = (c + z) - z;,3,2,1,1,4,0,0,0,1,6,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,967,            a[1] = c - a[0] + d;,2,2,1,0,4,0,0,0,1,5,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,968,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,969,            double z = c * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,42,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,970,            a[0] = (c + z - c) * 1073741824.0;,3,3,1,1,4,0,0,0,1,6,34,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,971,            a[1] = c - a[0] + d;,2,2,1,0,4,0,0,0,1,5,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,973,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,981,        ans[0] = a[0] * b[0];,0,1,1,0,6,0,0,0,1,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,982,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,0,5,1,0,14,0,0,0,1,4,49,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,985,        resplit(ans);,0,0,0,1,2,0,2,0,1,4,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,986,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,994,        ans[0] = a[0] + b[0];,0,1,1,0,6,0,0,0,1,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,995,        ans[1] = a[1] + b[1];,0,1,1,0,6,0,0,0,1,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,997,        resplit(ans);,0,0,0,1,2,0,2,0,1,4,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,998,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1019,        final double b = 1.0/4194304.0;,1,1,0,0,0,2,0,0,1,4,31,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1020,        final double a = 1.0 - b;,2,1,0,0,0,2,0,0,1,4,25,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1022,        if (in[0] == 0.0) {,0,1,1,1,5,1,0,0,0,5,19,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1027,        result[0] = a / in[0];,1,1,1,0,4,0,0,0,1,5,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1028,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,2,7,1,1,18,0,0,0,1,6,60,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1030,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,1,9,2,0,0,0,5,63,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1031,            result[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1035,        resplit(result);,0,0,0,1,2,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1037,        for (int i = 0; i < 2; i++) {,3,1,0,1,3,2,0,0,1,6,29,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1039,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,1,6,1,0,8,1,0,0,0,5,58,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1042,            err = err * (result[0] + result[1]);,2,2,1,1,6,0,0,0,1,6,36,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1044,            result[1] += err;,1,0,1,0,2,0,0,0,1,4,17,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1046,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1054,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1055,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1056,        final double zs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1059,"        split(a[0], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1060,"        split(b[0], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1061,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1063,        result[0] = zs[0];,0,0,1,0,4,0,0,0,1,3,18,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1064,        result[1] = zs[1];,0,0,1,0,4,0,0,0,1,3,18,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1067,"        split(b[1], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1068,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1070,        double tmp = result[0] + zs[0];,1,1,1,0,4,1,0,0,0,5,31,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1071,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1072,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1073,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1074,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1075,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1078,"        split(a[1], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1079,"        split(b[0], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1080,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1082,        tmp = result[0] + zs[0];,1,1,1,0,4,0,0,0,1,5,24,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1083,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1084,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1085,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1086,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1087,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1090,"        split(a[1], xs);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1091,"        split(b[1], ys);",0,0,1,0,4,0,2,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1092,"        splitMult(xs, ys, zs);",0,0,0,0,2,0,4,0,1,3,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1094,        tmp = result[0] + zs[0];,1,1,1,0,4,0,0,0,1,5,24,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1095,        result[1] = result[1] - (tmp - result[0] - zs[0]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1096,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1097,        tmp = result[0] + zs[1];,1,1,1,0,4,0,0,0,1,5,24,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1098,        result[1] = result[1] - (tmp - result[0] - zs[1]);,1,2,1,1,10,0,0,0,1,6,50,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1099,        result[0] = tmp;,1,0,1,0,2,0,0,0,1,4,16,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1100,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1109,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1110,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1111,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1120,        xs[0] = 2.718281828459045;,0,0,1,0,2,0,0,0,1,3,26,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1121,        xs[1] = 1.4456468917292502E-16;,0,0,1,0,2,0,0,0,1,3,31,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1123,"        split(1.0, ys);",0,0,0,0,2,0,2,0,1,3,15,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1125,        while (p > 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1126,            if ((p & 1) != 0) {,1,2,0,2,5,1,0,0,0,5,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1127,"                quadMult(ys, xs, as);",0,0,0,0,2,0,4,0,1,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1128,                ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1131,"            quadMult(xs, xs, as);",0,0,0,0,2,0,4,0,1,3,21,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1132,            xs[0] = as[0]; xs[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1134,            p >>= 1;,1,0,0,0,0,0,0,0,1,2,8,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1137,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1138,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1139,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1141,            resplit(result);,0,0,0,1,2,0,2,0,1,4,16,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1144,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1627,        double x[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1628,        double x2[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1629,        double y[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1630,        double a[] = new double[2];,1,0,0,0,4,3,0,0,0,3,27,5,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1632,"        split(xi, x);",0,0,0,0,2,0,3,0,1,3,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1635,        x[0] += 1.0;,0,0,1,0,2,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1636,        resplit(x);,0,0,0,1,2,0,2,0,1,4,11,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1637,"        splitReciprocal(x, a);",0,0,0,0,2,0,3,0,1,3,22,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1638,        x[0] -= 2.0;,0,0,1,0,2,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1639,        resplit(x);,0,0,0,1,2,0,2,0,1,4,11,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1640,"        splitMult(x, a, y);",0,0,0,0,2,0,4,0,1,3,19,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1641,        x[0] = y[0];,0,0,1,0,4,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1642,        x[1] = y[1];,0,0,1,0,4,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1645,"        splitMult(x, x, x2);",0,0,0,0,2,0,4,0,1,3,20,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1651,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,2,1,1,0,6,0,0,0,1,5,48,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1652,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,2,1,1,0,6,0,0,0,1,5,48,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1654,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,51,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1655,"            splitMult(y, x2, a);",0,0,0,0,2,0,4,0,1,3,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1656,            y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1657,            y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1658,"            splitAdd(y, LN_SPLIT_COEF[i], a);",0,0,1,0,4,0,3,0,1,4,33,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1659,            y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1660,            y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1663,"        splitMult(y, x, a);",0,0,0,0,2,0,4,0,1,3,19,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1664,        y[0] = a[0];,0,0,1,0,4,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1665,        y[1] = a[1];,0,0,1,0,4,0,0,0,1,3,12,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1667,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1677,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1678,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1679,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1680,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1681,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1682,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1684,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1685,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1686,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1688,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1689,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1692,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1693,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1695,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1696,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1697,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1700,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1701,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1704,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1705,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1706,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1709,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1720,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1721,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1722,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1723,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1724,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1725,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1727,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1728,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1729,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1731,            if ( (i & 1) != 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1732,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1735,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1736,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1738,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1739,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1740,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1743,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1744,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1747,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1748,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1749,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1752,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1758,        final double result[] = new double[2];,1,0,0,0,4,4,0,0,1,4,38,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1761,        for (int i = 0; i < 7; i++) {,3,1,0,1,3,2,0,0,1,6,29,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1762,            double x = i / 8.0;,2,1,0,0,0,1,0,0,0,3,19,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1764,"            slowSin(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1765,            SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1766,            SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1768,"            slowCos(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1769,            COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1770,            COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1774,        for (int i = 7; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1775,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1776,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1777,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1778,            double bs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1779,            double temps[] = new double[2];,1,0,0,0,4,3,0,0,0,3,31,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1781,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1783,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1784,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1785,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1786,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1789,"                splitMult(xs, ys, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1790,                SINE_TABLE_A[i] = result[0] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1791,                SINE_TABLE_B[i] = result[1] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1794,"                splitMult(ys, ys, as);",0,0,0,0,2,0,4,0,1,3,22,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1795,"                splitMult(xs, xs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1796,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1797,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1798,"                splitAdd(as, temps, result);",0,0,0,0,2,0,4,0,1,3,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1799,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1800,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1802,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1803,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1804,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1805,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1806,                as[0] = SINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1807,                as[1] = SINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1808,                bs[0] = COSINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1809,                bs[1] = COSINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1812,"                splitMult(xs, bs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1813,"                splitMult(ys, as, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1814,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1815,                SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1816,                SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1819,"                splitMult(ys, bs, result);",0,0,0,0,2,0,4,0,1,3,26,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1820,"                splitMult(xs, as, temps);",0,0,0,0,2,0,4,0,1,3,25,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1821,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1822,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1823,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1824,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1825,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1830,        for (int i = 0; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1831,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1832,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1833,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1835,            as[0] = COSINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,26,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1836,            as[1] = COSINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,26,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1838,"            splitReciprocal(as, ys);",0,0,0,0,2,0,3,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1840,            xs[0] = SINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1841,            xs[1] = SINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,24,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1843,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1845,            TANGENT_TABLE_A[i] = as[0];,0,0,1,0,4,0,0,0,1,3,27,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1846,            TANGENT_TABLE_B[i] = as[1];,0,0,1,0,4,0,0,0,1,3,27,6,0.04,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1849,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,119,    public RandomDataImpl() {,1,0,0,1,3,1,0,0,1,5,25,2,0.04,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,111,    private RandomGenerator rand = null;,1,0,0,0,0,1,0,1,1,4,36,2,0.04,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,114,    private SecureRandom secRand = null;,1,0,0,0,0,1,0,1,1,4,36,2,0.04,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,120,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,77,        if (p < 0.0 || p > 1.0) {,2,3,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,78,"            throw new OutOfRangeException(p, 0, 1);",1,0,0,0,2,2,0,1,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,83,        UnivariateRealFunction rootFindingFunction =,1,0,0,0,0,0,0,1,0,2,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,102,        double lowerBound = getDomainLowerBound(p);,1,0,0,1,2,1,2,0,1,6,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,103,        double upperBound = getDomainUpperBound(p);,1,0,0,1,2,1,2,0,1,6,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,104,        double[] bracket = null;,1,0,0,0,2,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,106,            bracket = UnivariateRealSolverUtils.bracket(,1,0,0,0,1,0,2,0,1,4,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,123,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,109,        } catch (NumberIsTooLargeException ex) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,115,            if (FastMath.abs(rootFindingFunction.value(lowerBound)) < getSolverAbsoluteAccuracy()) {,0,1,0,3,9,1,6,0,1,6,88,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,116,                return lowerBound;,1,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,118,            if (FastMath.abs(rootFindingFunction.value(upperBound)) < getSolverAbsoluteAccuracy()) {,0,1,0,3,9,1,6,0,1,6,88,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,119,                return upperBound;,1,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,122,            throw new MathException(ex);,1,0,0,1,2,2,0,1,1,6,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,126,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,",1,0,0,0,1,1,3,0,0,4,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,130,        return root;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,140,        randomData.reSeed(seed);,0,0,0,1,2,0,3,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,141,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,155,        return randomData.nextInversionDeviate(this);,0,0,0,1,2,2,2,0,0,4,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,169,        if (sampleSize <= 0) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,170,"            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,",2,0,0,0,1,2,0,1,1,5,74,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,173,        double[] out = new double[sampleSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,174,        for (int i = 0; i < sampleSize; i++) {,4,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,175,            out[i] = sample();,0,0,1,1,4,0,1,0,2,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,177,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,217,        return solverAbsoluteAccuracy;,1,0,0,0,0,1,0,0,0,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,60,62,        if (x0 > x1) {,2,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,60,63,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,60,67,        return cumulativeProbability(x1) - cumulativeProbability(x0);,0,1,0,1,4,1,4,0,2,6,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,84,            new UnivariateRealFunction() {,0,0,0,1,3,1,0,1,1,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,86,                double ret = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,11,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,88,                    ret = cumulativeProbability(x) - p;,2,1,0,1,2,0,2,0,2,6,35,12,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,93,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,89,                } catch (MathException ex) {,1,0,0,1,4,1,0,1,0,5,28,12,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,90,"                    throw new MathUserException(ex,",1,0,0,0,1,2,0,1,1,5,31,13,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,94,                if (Double.isNaN(ret)) {,0,0,0,2,5,1,3,0,0,4,24,11,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,95,"                    throw new MathUserException(LocalizedFormats.CUMULATIVE_PROBABILITY_RETURNED_NAN, x, p);",4,0,0,0,2,2,0,1,1,5,88,12,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,60,97,                return ret;,1,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,58,    public MathException() {,1,0,0,1,3,1,0,0,1,5,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,59,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,3,0,0,0,0,1,0,0,1,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,60,"        this.arguments = new Object[] { """" };",1,0,0,0,4,2,0,1,2,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,73,"      this(new DummyLocalizable(pattern), arguments);",2,0,0,1,4,2,0,1,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,74,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,84,"    public MathException(Localizable pattern, Object ... arguments) {",3,0,0,0,3,1,0,2,1,5,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,85,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,86,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,87,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,97,        super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,98,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,3,0,0,0,0,1,0,0,1,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,99,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",2,1,0,1,8,2,2,1,2,8,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,100,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,115,"        this(rootCause, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,116,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,129,      super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,130,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,131,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,132,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,142,        return pattern.getSourceString();,0,0,0,1,2,1,2,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,147,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,152,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,157,        return arguments.clone();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,168,        if (pattern != null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,169,"            return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",1,0,0,1,6,2,5,1,1,7,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,171,"        return """";",0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,177,        return getMessage(Locale.US);,2,0,0,1,2,1,1,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,183,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,191,        printStackTrace(System.err);,2,0,0,1,2,0,1,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,192,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,201,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,202,"            PrintWriter pw = new PrintWriter(out, false);",2,0,0,0,2,1,0,2,2,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,203,            printStackTrace(pw);,0,0,0,1,2,0,2,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,205,            pw.flush();,0,0,0,1,2,0,2,0,0,3,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,206,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,60,207,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,75,"            throw new NotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION, sd);",3,0,0,0,2,2,0,1,1,5,80,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,88,"        this(0, 1);",0,0,0,0,2,1,0,0,0,2,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,89,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,95,        return mean;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,102,        return standardDeviation;,1,0,0,0,0,1,0,0,0,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,110,        final double x0 = x - mean;,3,1,0,0,0,2,0,0,1,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,111,        final double x1 = x0 / standardDeviation;,3,1,0,0,0,2,0,0,1,4,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,112,        return FastMath.exp(-0.5 * x1 * x1) / (standardDeviation * SQRT2PI);,4,3,0,1,4,1,2,0,1,7,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,129,        } catch (MaxIterationsExceededException ex) {,1,0,0,1,4,1,0,1,0,5,45,6,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,130,            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38,3,3,0,2,5,1,0,0,0,5,65,7,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,131,                return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,132,            } else if (x > (mean + 20 * standardDeviation)) {,3,3,0,2,6,2,0,0,0,5,49,8,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,133,                return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,135,                throw ex;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,1,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,149,        return solverAbsoluteAccuracy;,1,0,0,0,0,1,0,0,0,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,168,        if (p == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,169,            return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,171,        if (p == 1) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,172,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,174,        return super.inverseCumulativeProbability(p);,2,0,0,1,2,2,0,0,0,4,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,186,"        return randomData.nextGaussian(mean, standardDeviation);",0,0,0,0,2,1,4,0,0,3,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,201,        if (p < 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,202,            ret = -Double.MAX_VALUE;,3,0,0,0,0,0,0,0,2,2,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,204,            ret = mean;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,207,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,222,        if (p < 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,223,            ret = mean;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,225,            ret = Double.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,228,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,243,        if (p < 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,244,            ret = mean - standardDeviation;,3,1,0,0,0,0,0,0,1,3,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,245,        } else if (p > 0.5) {,1,1,0,1,4,2,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,246,            ret = mean + standardDeviation;,3,1,0,0,0,0,0,0,1,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,248,            ret = mean;,2,0,0,0,0,0,0,0,1,2,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,60,251,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,60,38,"        super(value, 0, false);",1,0,0,0,2,1,0,0,2,4,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,60,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,60,48,"        super(specific, value, 0, false);",2,0,0,0,2,1,0,0,2,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,60,49,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,52,"        this(null, wrong, min, boundIsAllowed);",3,0,0,0,2,1,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,67,"        super(specific,",1,0,0,0,1,1,0,0,1,4,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,73,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,74,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,81,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,60,88,        return min;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,50,"        super(specific, general, wrong, arguments);",4,0,0,0,2,1,0,0,1,4,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,51,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,64,"        super(general, wrong, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,65,        argument = wrong;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,60,72,        return argument;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,61,                                        Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,62,        this.specific = specific;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,63,        this.general = general;,2,0,0,0,0,1,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,64,        arguments = ArgUtils.flatten(args);,1,0,0,1,2,0,3,0,1,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,65,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,72,"        this(null, general, args);",2,0,0,0,2,1,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,73,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,77,        return specific;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,82,        return general;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,87,        return arguments.clone();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,97,"        return MessageFactory.buildMessage(locale, specific, general, arguments);",0,0,0,0,2,1,6,0,0,3,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,103,        return getMessage(Locale.US);,2,0,0,1,2,1,1,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,60,109,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,52,"        this(null, wrong, max, boundIsAllowed);",3,0,0,0,2,1,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,66,"        super(specific,",1,0,0,0,1,1,0,0,1,4,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,72,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,73,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,74,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,80,        return boundIsAllowed;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,60,87,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,46,"        this(null, wrong, lo, hi);",3,0,0,0,2,1,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,62,"        super(specific, LocalizedFormats.OUT_OF_RANGE_SIMPLE,",3,0,0,0,1,1,0,0,1,4,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,64,        this.lo = lo;,2,0,0,0,0,1,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,65,        this.hi = hi;,2,0,0,0,0,1,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,72,        return lo;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,60,78,        return hi;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,48,"        super(LocalizedFormats.MAX_ITERATIONS_EXCEEDED, maxIterations);",3,0,0,0,2,1,0,0,1,4,63,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,49,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,50,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,63,"        this(maxIterations, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,76,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,77,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,60,84,        return maxIterations;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,38,        super(LocalizedFormats.CONVERGENCE_FAILED);,2,0,0,1,2,1,0,0,1,5,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,51,"        this(new DummyLocalizable(pattern), arguments);",2,0,0,1,4,2,0,1,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,62,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,63,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,70,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,71,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,84,"        this(cause, new DummyLocalizable(pattern), arguments);",3,0,0,1,4,2,0,1,1,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,85,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,96,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,60,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,211,    private FastMath() {,1,0,0,1,3,1,0,0,1,5,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,212,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,227,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,228,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,231,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,232,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,235,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,236,          return exp(-x)/2.0;,1,1,0,1,2,1,1,0,2,7,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,239,      double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,240,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,241,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,243,"      exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,245,      double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,246,      double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,248,      double temp = ya * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,249,      double yaa = ya + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,250,      double yab = ya - yaa;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,253,      double recip = 1.0/ya;,2,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,254,      temp = recip * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,255,      double recipa = recip + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,256,      double recipb = recip - recipa;,3,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,259,      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,10,9,0,1,2,0,0,0,1,5,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,261,      recipb += -yb * recip * recip;,4,1,0,0,0,0,0,0,2,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,264,      temp = ya + recipa;,3,1,0,0,0,0,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,265,      yb += -(temp - ya - recipa);,4,1,0,1,2,0,0,0,2,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,266,      ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,267,      temp = ya + recipb;,3,1,0,0,0,0,0,0,1,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,268,      yb += -(temp - ya - recipb);,4,1,0,1,2,0,0,0,2,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,269,      ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,271,      double result = ya + yb;,3,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,272,      result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,273,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,281,      boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,282,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,283,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,286,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,287,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,290,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,291,          return -exp(-x)/2.0;,1,1,0,1,2,1,1,0,3,7,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,294,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,295,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,298,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,299,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,300,          negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,305,      if (x > 0.25) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,306,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,307,"          exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,309,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,310,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,312,          double temp = ya * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,313,          double yaa = ya + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,314,          double yab = ya - yaa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,317,          double recip = 1.0/ya;,2,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,318,          temp = recip * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,319,          double recipa = recip + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,320,          double recipb = recip - recipa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,323,          recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,10,9,0,1,2,0,0,0,1,5,76,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,325,          recipb += -yb * recip * recip;,4,1,0,0,0,0,0,0,2,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,327,          recipa = -recipa;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,328,          recipb = -recipb;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,331,          temp = ya + recipa;,3,1,0,0,0,0,0,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,332,          yb += -(temp - ya - recipa);,4,1,0,1,2,0,0,0,2,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,333,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,334,          temp = ya + recipb;,3,1,0,0,0,0,0,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,335,          yb += -(temp - ya - recipb);,4,1,0,1,2,0,0,0,2,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,336,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,338,          result = ya + yb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,339,          result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,340,      },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,342,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,343,"          expm1(x, hiPrec);",0,0,0,0,2,0,3,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,345,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,346,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,349,          double denom = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,350,          double denomr = 1.0 / denom;,2,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,351,          double denomb = -(denom - 1.0 - ya) + yb;,4,2,0,1,2,1,0,0,1,6,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,352,          double ratio = ya * denomr;,3,1,0,0,0,1,0,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,353,          double temp = ratio * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,354,          double ra = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,355,          double rb = ratio - ra;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,357,          temp = denom * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,358,          double za = denom + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,359,          double zb = denom - za;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,361,          rb += (ya - za*ra - za*rb - zb*ra - zb*rb) * denomr;,11,9,0,1,2,0,0,0,1,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,364,          rb += yb*denomr;                        // numerator,3,1,0,0,0,0,0,0,1,3,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,365,          rb += -ya * denomb * denomr * denomr;   // denominator,5,1,0,0,0,0,0,0,2,3,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,368,          temp = ya + ra;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,369,          yb += -(temp - ya - ra);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,370,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,371,          temp = ya + rb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,372,          yb += -(temp - ya - rb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,373,          ya = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,375,          result = ya + yb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,376,          result *= 0.5;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,379,      if (negate) {,1,0,0,1,3,1,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,380,          result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,383,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,391,      boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,393,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,394,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,397,      if (x > 20.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,398,          return 1.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,401,      if (x < -20) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,402,          return -1.0;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,405,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,406,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,409,      if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,410,          x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,411,          negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,415,      if (x >= 0.5) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,416,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,418,"          exp(x*2.0, 0.0, hiPrec);",1,1,0,0,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,420,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,421,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,424,          double na = -1.0 + ya;,2,1,0,0,0,1,0,0,1,4,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,425,          double nb = -(na + 1.0 - ya);,3,2,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,426,          double temp = na + yb;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,427,          nb += -(temp - na - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,428,          na = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,431,          double da = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,432,          double db = -(da - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,433,          temp = da + yb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,434,          db += -(temp - da - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,435,          da = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,437,          temp = da * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,438,          double daa = da + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,439,          double dab = da - daa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,442,          double ratio = na/da;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,443,          temp = ratio * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,444,          double ratioa = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,445,          double ratiob = ratio - ratioa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,448,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,11,9,0,1,2,0,0,0,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,451,          ratiob += nb / da;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,453,          ratiob += -db * na / da / da;,5,3,0,0,0,0,0,0,2,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,455,          result = ratioa + ratiob;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,456,      },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,458,          double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,460,"          expm1(x*2.0, hiPrec);",1,1,0,0,2,0,2,0,1,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,462,          double ya = hiPrec[0] + hiPrec[1];,1,1,1,0,4,1,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,463,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,1,6,1,0,0,1,7,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,466,          double na = ya;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,467,          double nb = yb;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,470,          double da = 2.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,471,          double db = -(da - 2.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,472,          double temp = da + yb;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,473,          db += -(temp - da - yb);,4,1,0,1,2,0,0,0,2,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,474,          da = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,476,          temp = da * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,477,          double daa = da + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,478,          double dab = da - daa;,3,1,0,0,0,1,0,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,481,          double ratio = na/da;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,482,          temp = ratio * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,483,          double ratioa = ratio + temp - temp;,4,2,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,484,          double ratiob = ratio - ratioa;,3,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,487,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,11,9,0,1,2,0,0,0,1,5,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,490,          ratiob += nb / da;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,492,          ratiob += -db * na / da / da;,5,3,0,0,0,0,0,0,2,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,494,          result = ratioa + ratiob;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,497,      if (negate) {,1,0,0,1,3,1,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,498,          result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,501,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,509,        return FastMath.log(a + FastMath.sqrt(a * a - 1));,3,3,0,2,4,1,4,0,0,6,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,518,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,519,        if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,520,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,521,            a = -a;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,525,        if (a > 0.167) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,526,            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);,4,3,0,2,4,0,4,0,1,6,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,528,            final double a2 = a * a;,3,1,0,0,0,2,0,0,1,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,529,            if (a > 0.097) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,530,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,10,33,0,9,18,0,0,0,1,5,264,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,531,            } else if (a > 0.036) {,1,1,0,1,4,2,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,532,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,8,25,0,7,14,0,0,0,1,5,196,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,533,            } else if (a > 0.0036) {,1,1,0,1,4,2,0,0,0,5,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,534,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,6,17,0,5,10,0,0,0,1,5,129,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,536,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);,4,9,0,3,6,0,0,0,1,5,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,540,        return negative ? -absAsinh : absAsinh;,3,0,0,0,0,1,0,0,1,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,550,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,551,        if (a < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,552,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,553,            a = -a;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,557,        if (a > 0.15) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,558,            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));,3,4,0,2,6,0,2,0,1,6,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,560,            final double a2 = a * a;,3,1,0,0,0,2,0,0,1,4,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,561,            if (a > 0.087) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,562,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));,10,25,0,9,18,0,0,0,1,5,175,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,563,            } else if (a > 0.031) {,1,1,0,1,4,2,0,0,0,5,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,564,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));,8,19,0,7,14,0,0,0,1,5,135,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,565,            } else if (a > 0.003) {,1,1,0,1,4,2,0,0,0,5,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,566,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));,6,13,0,5,10,0,0,0,1,5,95,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,568,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));,4,7,0,3,6,0,0,0,1,5,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,572,        return negative ? -absAtanh : absAtanh;,3,0,0,0,0,1,0,0,1,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,582,        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : (Double.isNaN(a) ? Double.NaN : 0.0));,4,2,0,3,10,1,3,0,1,7,83,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,590,"        return nextAfter(a, Double.POSITIVE_INFINITY);",2,0,0,0,2,1,2,0,1,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,597,        return Math.random();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,645,                    hiPrec[0] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,646,                    hiPrec[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,653,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;",2,2,0,0,2,2,3,0,2,6,79,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,654,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,655,                    hiPrec[0] /= 285040095144011776.0;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,656,                    hiPrec[1] /= 285040095144011776.0;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,658,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,663,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;",2,2,0,0,2,2,3,0,2,6,79,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,664,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,665,                    hiPrec[0] /= 4.455505956692756620;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,666,                    hiPrec[1] /= 4.455505956692756620;,0,0,1,0,2,0,0,0,1,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,668,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,678,            intVal = (int) x;,2,0,0,1,2,1,0,0,1,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,680,            if (intVal > 709) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,681,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,682,                    hiPrec[0] = Double.POSITIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,683,                    hiPrec[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,685,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,688,            intPartA = EXP_INT_TABLE_A[750+intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,689,            intPartB = EXP_INT_TABLE_B[750+intVal];,2,1,1,0,2,0,0,0,1,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,734,            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;,10,7,0,0,0,0,0,0,1,3,63,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,741,            hiPrec[0] = tempA;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,742,            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;,8,6,1,0,2,0,0,0,1,5,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,753,"      return expm1(x, null);",0,0,0,0,2,1,2,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,762,        if (x != x || x == 0.0) { // NaN or zero,3,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,763,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,766,        if (x <= -1.0 || x >= 1.0) {,2,3,0,1,3,1,0,0,1,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,769,            double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,770,"            exp(x, 0.0, hiPrec);",0,0,0,0,2,0,3,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,771,            if (x > 0.0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,772,                return -1.0 + hiPrec[0] + hiPrec[1];,0,1,1,0,4,1,0,0,1,5,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,774,                final double ra = -1.0 + hiPrec[0];,1,1,1,0,2,2,0,0,2,6,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,775,                double rb = -(ra + 1.0 - hiPrec[0]);,2,2,1,1,4,1,0,0,1,7,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,776,                rb += hiPrec[1];,1,0,1,0,2,0,0,0,1,4,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,777,                return ra + rb;,2,1,0,0,0,1,0,0,0,3,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,784,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,786,        if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,787,            x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,788,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,792,            int intFrac = (int) (x * 1024.0);,2,1,0,1,4,2,0,0,0,5,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,793,            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;,1,1,1,0,2,1,0,0,0,5,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,794,            double tempB = EXP_FRAC_TABLE_B[intFrac];,1,0,1,0,2,1,0,0,0,4,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,796,            double temp = tempA + tempB;,3,1,0,0,0,1,0,0,0,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,797,            tempB = -(temp - tempA - tempB);,4,1,0,1,2,0,0,0,2,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,798,            tempA = temp;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,800,            temp = tempA * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,801,            baseA = tempA + temp - temp;,4,2,0,0,0,0,0,0,1,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,802,            baseB = tempB + (tempA - baseA);,4,2,0,1,2,0,0,0,1,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,804,            epsilon = x - intFrac/1024.0;,3,2,0,0,0,0,0,0,1,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,809,        double zb = 0.008336750013465571;,1,0,0,0,0,1,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,810,        zb = zb * epsilon + 0.041666663879186654;,3,2,0,0,0,0,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,811,        zb = zb * epsilon + 0.16666666666745392;,3,2,0,0,0,0,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,812,        zb = zb * epsilon + 0.49999999999999994;,3,2,0,0,0,0,0,0,1,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,813,        zb = zb * epsilon;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,814,        zb = zb * epsilon;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,816,        double za = epsilon;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,817,        double temp = za + zb;,3,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,818,        zb = -(temp - za - zb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,819,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,821,        temp = za * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,822,        temp = za + temp - temp;,4,2,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,823,        zb += za - temp;,3,1,0,0,0,0,0,0,1,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,824,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,827,        double ya = za * baseA;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,829,        temp = ya + za * baseB;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,830,        double yb = -(temp - ya - za * baseB);,5,2,0,1,2,1,0,0,1,6,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,831,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,833,        temp = ya + zb * baseA;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,834,        yb += -(temp - ya - zb * baseA);,5,2,0,1,2,0,0,0,2,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,835,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,837,        temp = ya + zb * baseB;,4,2,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,838,        yb += -(temp - ya - zb*baseB);,5,2,0,1,2,0,0,0,2,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,839,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,843,        temp = ya + baseA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,844,        yb += -(temp - baseA - ya);,4,1,0,1,2,0,0,0,2,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,845,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,847,        temp = ya + za;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,849,        yb += -(temp - ya - za);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,850,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,852,        temp = ya + baseB;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,854,        yb += -(temp - ya - baseB);,4,1,0,1,2,0,0,0,2,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,855,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,857,        temp = ya + zb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,859,        yb += -(temp - ya - zb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,860,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,862,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,864,            double denom = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,865,            double denomr = 1.0 / denom;,2,1,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,866,            double denomb = -(denom - 1.0 - ya) + yb;,4,2,0,1,2,1,0,0,1,6,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,867,            double ratio = ya * denomr;,3,1,0,0,0,1,0,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,868,            temp = ratio * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,869,            final double ra = ratio + temp - temp;,4,2,0,0,0,2,0,0,1,4,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,870,            double rb = ratio - ra;,3,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,872,            temp = denom * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,873,            za = denom + temp - temp;,4,2,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,874,            zb = denom - za;,3,1,0,0,0,0,0,0,1,3,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,876,            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;,11,9,0,1,2,0,0,0,1,5,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,887,            rb += yb * denomr;                      // numerator,3,1,0,0,0,0,0,0,1,3,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,888,            rb += -ya * denomb * denomr * denomr;   // denominator,5,1,0,0,0,0,0,0,2,3,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,891,            ya = -ra;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,892,            yb = -rb;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,895,        if (hiPrecOut != null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,896,            hiPrecOut[0] = ya;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,897,            hiPrecOut[1] = yb;,1,0,1,0,2,0,0,0,1,4,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,900,        return ya + yb;,2,1,0,0,0,1,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,950,            final double a = d * 9.31322574615478515625E-10;,2,1,0,0,0,2,0,0,1,4,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,951,            split[0] = (d + a - d) * 1073741824.0;,3,3,1,1,4,0,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,952,            split[1] = d - split[0];,1,1,1,0,4,0,0,0,1,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1023,            in[0] = in[1];,0,0,1,0,4,0,0,0,1,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1024,            in[1] = 0.0;,0,0,1,0,2,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1169,            if (x != 0.0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1170,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1171,                    hiPrec[0] = Double.NaN;,2,0,1,0,2,0,0,0,1,4,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1174,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1180,            if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1181,                hiPrec[0] = Double.POSITIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1184,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1192,            if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1194,                if (hiPrec != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1195,                    hiPrec[0] = Double.NEGATIVE_INFINITY;,2,0,1,0,2,0,0,0,1,4,37,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1198,                return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1202,            bits <<= 1;,1,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1203,            while ( (bits & 0x0010000000000000L) == 0) {,1,2,0,2,5,1,0,0,0,5,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1204,                exp--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1205,                bits <<= 1;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1216,                double xa = x - 1.0;,2,1,0,0,0,1,0,0,0,3,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1217,                double xb = xa - x + 1.0;,3,2,0,0,0,1,0,0,0,3,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1218,                double tmp = xa * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1219,                double aa = xa + tmp - tmp;,4,2,0,0,0,1,0,0,0,3,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1220,                double ab = xa - aa;,3,1,0,0,0,1,0,0,0,3,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1221,                xa = aa;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1222,                xb = ab;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1224,                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];,3,1,1,0,4,1,0,0,0,5,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1225,                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];,3,1,1,0,4,1,0,0,0,5,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1227,                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,53,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1229,                    aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1230,                    ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1232,                    tmp = aa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1233,                    ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1234,                    yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1237,                    aa = ya + LN_QUICK_COEF[i][0];,2,1,1,0,4,0,0,0,1,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1238,                    ab = yb + LN_QUICK_COEF[i][1];,2,1,1,0,4,0,0,0,1,5,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1240,                    tmp = aa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1241,                    ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1242,                    yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1246,                aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1247,                ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1249,                tmp = aa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1250,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1251,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1253,                return ya + yb;,2,1,0,0,0,1,0,0,0,3,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1276,            double tmp = epsilon * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1277,            double aa = epsilon + tmp - tmp;,4,2,0,0,0,1,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1278,            double ab = epsilon - aa;,3,1,0,0,0,1,0,0,0,3,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1279,            double xa = aa;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1280,            double xb = ab;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1283,            double numer = (double)(bits & 0x3ffffffffffL);,2,1,0,1,4,2,0,0,0,5,47,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1284,            double denom = 4503599627370496.0 + (bits & 0x000ffc0000000000L);,2,2,0,1,2,1,0,0,0,5,65,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1285,            aa = numer - xa*denom - xb * denom;,6,4,0,0,0,0,0,0,1,3,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1286,            xb += aa / denom;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1289,            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];,3,1,1,0,4,1,0,0,0,5,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1290,            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];,3,1,1,0,4,1,0,0,0,5,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1292,            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {,5,2,0,1,3,2,0,0,1,6,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1294,                aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1295,                ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1297,                tmp = aa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1298,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1299,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1302,                aa = ya + LN_HI_PREC_COEF[i][0];,2,1,1,0,4,0,0,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1303,                ab = yb + LN_HI_PREC_COEF[i][1];,2,1,1,0,4,0,0,0,1,5,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1305,                tmp = aa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1306,                ya = aa + tmp - tmp;,4,2,0,0,0,0,0,0,1,3,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1307,                yb = aa - ya + ab;,4,2,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1311,            aa = ya * xa;,3,1,0,0,0,0,0,0,1,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1312,            ab = ya * xb + yb * xa + yb * xb;,7,5,0,0,0,0,0,0,1,3,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1320,            lnza = aa + ab;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1321,            lnzb = -(lnza - aa - ab);,4,1,0,1,2,0,0,0,2,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1322,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1376,            hiPrec[0] = a;,1,0,1,0,2,0,0,0,1,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1377,            hiPrec[1] = b;,1,0,1,0,2,0,0,0,1,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1388,        double xpa = 1.0 + x;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1389,        double xpb = -(xpa - 1.0 - x);,3,1,0,1,2,1,0,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1391,        if (x == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1392,            return x/0.0;   // -Infinity,1,1,0,0,0,1,0,0,0,3,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1395,        if (x > 0 && 1/x == 0) { // x = Infinity,2,4,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1396,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1399,        if (x>1e-6 || x<-1e-6) {,2,3,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1400,            double hiPrec[] = new double[2];,1,0,0,0,4,3,0,0,0,3,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1402,"            log(xpa, hiPrec);",0,0,0,0,2,0,3,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1406,            double fx1 = xpb/xpa;,3,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1408,            double epsilon = 0.5 * fx1 + 1.0;,2,2,0,0,0,1,0,0,0,3,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1409,            epsilon = epsilon * fx1;,3,1,0,0,0,0,0,0,1,3,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1411,            return epsilon + hiPrec[1] + hiPrec[0];,1,1,1,0,4,1,0,0,0,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1415,        double y = x * 0.333333333333333 - 0.5;,2,2,0,0,0,1,0,0,0,3,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1416,        y = y * x + 1.0;,3,2,0,0,0,0,0,0,1,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1417,        y = y * x;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1419,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1427,        final double hiPrec[] = new double[2];,1,0,0,0,4,4,0,0,1,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1429,"        log(x, hiPrec);",0,0,0,0,2,0,3,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1431,        final double tmp = hiPrec[0] * 1073741824.0;,1,1,1,0,2,2,0,0,1,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1432,        final double lna = hiPrec[0] + tmp - tmp;,3,2,1,0,2,2,0,0,1,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1433,        final double lnb = hiPrec[0] - lna + hiPrec[1];,2,2,1,0,4,2,0,0,1,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1435,        final double rln10a = 0.4342944622039795;,1,0,0,0,0,2,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1436,        final double rln10b = 1.9699272335463627E-8;,1,0,0,0,0,2,0,0,1,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1438,        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;,8,7,0,0,0,1,0,0,0,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1449,        final double lns[] = new double[2];,1,0,0,0,4,4,0,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1451,        if (y == 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1452,            return 1.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1455,        if (x != x) { // X is NaN,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1456,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1460,        if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1461,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1462,            if ((bits & 0x8000000000000000L) != 0) {,1,2,0,2,5,1,0,0,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1464,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1466,                if (y < 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1467,                    return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1470,                if (y < 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1471,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1474,                if (y > 0 && y == yi && (yi & 1) == 1) {,4,6,0,2,5,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1475,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1479,            if (y < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1480,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1482,            if (y > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1483,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1486,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1489,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1490,            if (y != y) { // y is NaN,2,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1491,                return y;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1493,            if (y < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1494,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1496,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1500,        if (y == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1501,            if (x * x == 1.0),2,2,0,1,2,1,0,0,0,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1502,              return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1504,            if (x * x > 1.0) {,2,2,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1505,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1507,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1511,        if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1512,            if (y != y) { // y is NaN,2,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1513,                return y;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1516,            if (y < 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1517,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1518,                if (y == yi && (yi & 1) == 1) {,3,4,0,2,5,1,0,0,0,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1519,                    return -0.0;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1522,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1525,            if (y > 0)  {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1526,                long yi = (long) y;,2,0,0,1,2,2,0,0,0,4,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1527,                if (y == yi && (yi & 1) == 1) {,3,4,0,2,5,1,0,0,0,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1528,                    return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1531,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1535,        if (y == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1537,            if (x * x == 1.0) {,2,2,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1538,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1541,            if (x * x < 1.0) {,2,2,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1542,                return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1544,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1549,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1551,            if (y >= 4503599627370496.0 || y <= -4503599627370496.0) {,2,3,0,1,3,1,0,0,1,6,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1552,"                return pow(-x, y);",1,0,0,0,2,1,2,0,2,5,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1555,            if (y == (long) y) {,2,1,0,2,5,2,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1557,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);",3,2,0,2,8,2,4,0,5,7,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1559,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1566,        if (y < 8e298 && y > -8e298) {,2,3,0,1,3,1,0,0,1,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1567,            double tmp1 = y * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1568,            ya = y + tmp1 - tmp1;,4,2,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1569,            yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1570,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1571,            double tmp1 = y * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,45,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1572,            double tmp2 = tmp1 * 9.31322574615478515625E-10;,2,1,0,0,0,1,0,0,0,3,48,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1573,            ya = (tmp1 + tmp2 - tmp1) * 1073741824.0 * 1073741824.0;,4,3,0,1,2,0,0,0,1,5,56,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1574,            yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1578,"        log(x, lns);",0,0,0,0,2,0,3,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1579,        double lna = lns[0];,1,0,1,0,2,1,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1580,        double lnb = lns[1];,1,0,1,0,2,1,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1583,        double tmp1 = lna * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1584,        double tmp2 = lna + tmp1 - tmp1;,4,2,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1585,        lnb += lna - tmp2;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1586,        lna = tmp2;,2,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1589,        final double aa = lna * ya;,3,1,0,0,0,2,0,0,1,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1590,        final double ab = lna * yb + lnb * ya + lnb * yb;,7,5,0,0,0,2,0,0,1,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1592,        lna = aa+ab;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1593,        lnb = -(lna - aa - ab);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1595,        double z = 1.0 / 120.0;,1,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1596,        z = z * lnb + (1.0 / 24.0);,3,3,0,1,2,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1597,        z = z * lnb + (1.0 / 6.0);,3,3,0,1,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1598,        z = z * lnb + 0.5;,3,2,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1599,        z = z * lnb + 1.0;,3,2,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1600,        z = z * lnb;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1602,"        final double result = exp(lna, z, null);",1,0,0,0,2,2,3,0,2,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1604,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1859,        double x2 = x*x;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1861,        double p = 2.7553817452272217E-6;,1,0,0,0,0,1,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1862,        p = p * x2 + -1.9841269659586505E-4;,3,2,0,0,0,0,0,0,2,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1863,        p = p * x2 + 0.008333333333329196;,3,2,0,0,0,0,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1864,        p = p * x2 + -0.16666666666666666;,3,2,0,0,0,0,0,0,2,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1867,        p = p * x2 * x;,4,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1869,        return p;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1879,        double x2 = x*x;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1881,        double p = 2.479773539153719E-5;,1,0,0,0,0,1,0,0,0,2,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1882,        p = p * x2 + -0.0013888888689039883;,3,2,0,0,0,0,0,0,2,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1883,        p = p * x2 + 0.041666666666621166;,3,2,0,0,0,0,0,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1884,        p = p * x2 + -0.49999999999999994;,3,2,0,0,0,0,0,0,2,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1885,        p *= x2;,2,0,0,0,0,0,0,0,1,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1887,        return p;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1898,        int idx = (int) ((xa * 8.0) + 0.5);,2,2,0,2,6,2,0,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1899,        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;,2,1,1,0,2,2,0,0,1,6,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1902,        final double sintA = SINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1903,        final double sintB = SINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1904,        final double costA = COSINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1905,        final double costB = COSINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1908,        double sinEpsA = epsilon;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1909,        double sinEpsB = polySine(epsilon);,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1910,        final double cosEpsA = 1.0;,1,0,0,0,0,2,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1911,        final double cosEpsB = polyCosine(epsilon);,1,0,0,1,2,2,2,0,2,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1914,        final double temp = sinEpsA * 1073741824.0;,2,1,0,0,0,2,0,0,1,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1915,        double temp2 = (sinEpsA + temp) - temp;,4,2,0,1,2,1,0,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1916,        sinEpsB +=  sinEpsA - temp2;,3,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1917,        sinEpsA = temp2;,2,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1943,        double a = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1944,        double b = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1946,        double t = sintA;,2,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1947,        double c = a + t;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1948,        double d = -(c - a - t);,4,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1949,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1950,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1952,        t = costA * sinEpsA;,3,1,0,0,0,0,0,0,1,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1953,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1954,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1955,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1956,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1958,        b = b + sintA * cosEpsB + costA * sinEpsB;,6,4,0,0,0,0,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,1973,        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;,9,6,0,0,0,0,0,0,1,3,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2000,        if (xb != 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2001,            t = ((costA + costB) * (cosEpsA + cosEpsB) -,5,5,0,1,5,0,0,0,1,5,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2003,            c = a + t;,3,1,0,0,0,0,0,0,1,3,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2004,            d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2005,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2006,            b = b + d;,3,1,0,0,0,0,0,0,1,3,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2009,        result = a + b;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2011,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2022,        final double pi2a = 1.5707963267948966;,1,0,0,0,0,2,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2023,        final double pi2b = 6.123233995736766E-17;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2025,        final double a = pi2a - xa;,3,1,0,0,0,2,0,0,1,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2026,        double b = -(a - pi2a + xa);,4,2,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2027,        b += pi2b - xb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2029,"        return sinQ(a, b);",0,0,0,0,2,1,3,0,1,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2042,        int idx = (int) ((xa * 8.0) + 0.5);,2,2,0,2,6,2,0,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2043,        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;,2,1,1,0,2,2,0,0,1,6,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2046,        final double sintA = SINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2047,        final double sintB = SINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2048,        final double costA = COSINE_TABLE_A[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2049,        final double costB = COSINE_TABLE_B[idx];,1,0,1,0,2,2,0,0,1,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2052,        double sinEpsA = epsilon;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2053,        double sinEpsB = polySine(epsilon);,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2054,        final double cosEpsA = 1.0;,1,0,0,0,0,2,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2055,        final double cosEpsB = polyCosine(epsilon);,1,0,0,1,2,2,2,0,2,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2058,        double temp = sinEpsA * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2059,        double temp2 = (sinEpsA + temp) - temp;,4,2,0,1,2,1,0,0,0,5,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2060,        sinEpsB +=  sinEpsA - temp2;,3,1,0,0,0,0,0,0,1,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2061,        sinEpsA = temp2;,2,0,0,0,0,0,0,0,1,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2086,        double a = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2087,        double b = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2090,        double t = sintA;,2,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2091,        double c = a + t;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2092,        double d = -(c - a - t);,4,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2093,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2094,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2096,        t = costA*sinEpsA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2097,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2098,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2099,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2100,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2102,        b = b + sintA*cosEpsB + costA*sinEpsB;,6,4,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2103,        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;,9,6,0,0,0,0,0,0,1,3,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2105,        double sina = a + b;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2106,        double sinb = -(sina - a - b);,4,1,0,1,2,1,0,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2110,        a = b = c = d = 0.0;,4,0,0,0,0,0,0,0,4,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2112,        t = costA*cosEpsA;,3,1,0,0,0,0,0,0,1,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2113,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2114,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2115,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2116,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2118,        t = -sintA*sinEpsA;,3,1,0,0,0,0,0,0,2,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2119,        c = a + t;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2120,        d = -(c - a - t);,4,1,0,1,2,0,0,0,2,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2121,        a = c;,2,0,0,0,0,0,0,0,1,2,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2122,        b = b + d;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2124,        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;,8,6,0,0,0,0,0,0,1,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2125,        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);,8,6,0,1,2,0,0,0,1,5,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2127,        double cosa = a + b;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2128,        double cosb = -(cosa - a - b);,4,1,0,1,2,1,0,0,1,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2130,        if (cotanFlag) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2132,            tmp = cosa; cosa = sina; sina = tmp;,6,0,0,0,0,0,0,0,3,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2133,            tmp = cosb; cosb = sinb; sinb = tmp;,6,0,0,0,0,0,0,0,3,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2147,        double est = sina/cosa;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2150,        temp = est * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2151,        double esta = (est + temp) - temp;,4,2,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2152,        double estb =  est - esta;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2154,        temp = cosa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2155,        double cosaa = (cosa + temp) - temp;,4,2,0,1,2,1,0,0,0,5,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2156,        double cosab =  cosa - cosaa;,3,1,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2159,        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding,11,9,0,1,2,2,0,0,0,5,114,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2160,        err += sinb/cosa;                     // Change in est due to sinb,3,1,0,0,0,0,0,0,1,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2161,        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb,5,3,0,0,0,0,0,0,2,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2163,        if (xb != 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2166,            double xbadj = xb + est*est*xb;,5,2,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2167,            if (cotanFlag) {,1,0,0,1,3,1,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2168,                xbadj = -xbadj;,2,0,0,0,0,0,0,0,2,2,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2171,            err += xbadj;,2,0,0,0,0,0,0,0,1,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2174,        return est+err;,2,1,0,0,0,1,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2191,        long inbits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2192,        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,2,0,0,0,5,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2195,        inbits &= 0x000fffffffffffffL;,1,0,0,0,0,0,0,0,1,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2196,        inbits |= 0x0010000000000000L;,1,0,0,0,0,0,0,0,1,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2199,        exponent++;,1,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2200,        inbits <<= 11;,1,0,0,0,0,0,0,0,1,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2206,        int idx = exponent >> 6;,2,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2207,        int shift = exponent - (idx << 6);,3,2,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2209,        if (shift != 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2210,            shpi0 = (idx == 0) ? 0 : (RECIP_2PI[idx-1] << shift);,4,3,1,1,6,0,0,0,1,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2211,            shpi0 |= RECIP_2PI[idx] >>> (64-shift);,2,2,1,1,4,0,0,0,1,6,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2212,            shpiA = (RECIP_2PI[idx] << shift) | (RECIP_2PI[idx+1] >>> (64-shift));,4,5,1,2,10,0,0,0,1,6,70,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2213,            shpiB = (RECIP_2PI[idx+1] << shift) | (RECIP_2PI[idx+2] >>> (64-shift));,5,6,1,2,10,0,0,0,1,6,72,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2215,            shpi0 = (idx == 0) ? 0 : RECIP_2PI[idx-1];,3,2,1,1,4,0,0,0,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2216,            shpiA = RECIP_2PI[idx];,1,0,1,0,2,0,0,0,1,4,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2217,            shpiB = RECIP_2PI[idx+1];,2,1,1,0,2,0,0,0,1,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2221,        long a = inbits >>> 32;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2222,        long b = inbits & 0xffffffffL;,2,1,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2224,        long c = shpiA >>> 32;,2,1,0,0,0,1,0,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2225,        long d = shpiA & 0xffffffffL;,2,1,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2227,        long ac = a * c;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2228,        long bd = b * d;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2229,        long bc = b * c;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2230,        long ad = a * d;,3,1,0,0,0,1,0,0,0,3,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2232,        long prodB = bd + (ad << 32);,3,2,0,1,2,1,0,0,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2233,        long prodA = ac + (ad >>> 32);,3,2,0,1,2,1,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2235,        boolean bita = (bd & 0x8000000000000000L) != 0;,2,2,0,1,2,1,0,0,0,5,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2236,        boolean bitb = (ad & 0x80000000L ) != 0;,2,2,0,1,2,1,0,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2237,        boolean bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,1,0,0,0,5,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2240,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2242,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2245,        bita = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2246,        bitb = (bc & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2248,        prodB = prodB + (bc << 32);,3,2,0,1,2,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2249,        prodA = prodA + (bc >>> 32);,3,2,0,1,2,0,0,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2251,        bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2254,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2256,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2260,        c = shpiB >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2261,        d = shpiB & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2262,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2263,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2264,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2267,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2269,        bita = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2270,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2271,        prodB += ac;,2,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2272,        bitsum = (prodB & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2274,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2276,            prodA++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2280,        c = shpi0 >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2281,        d = shpi0 & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2283,        bd = b * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2284,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2285,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2287,        prodA += bd + ((bc + ad) << 32);,4,3,0,2,4,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2299,        int intPart = (int)(prodA >>> 62);,2,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2302,        prodA <<= 2;,1,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2303,        prodA |= prodB >>> 62;,2,1,0,0,0,0,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2304,        prodB <<= 2;,1,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2307,        a = prodA >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2308,        b = prodA & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2310,        c = PI_O_4_BITS[0] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2311,        d = PI_O_4_BITS[0] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2313,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2314,        bd = b * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2315,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2316,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2318,        long prod2B = bd + (ad << 32);,3,2,0,1,2,1,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2319,        long prod2A = ac + (ad >>> 32);,3,2,0,1,2,1,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2321,        bita = (bd & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2322,        bitb = (ad & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2323,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2326,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2328,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2331,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2332,        bitb = (bc & 0x80000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2334,        prod2B = prod2B + (bc << 32);,3,2,0,1,2,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2335,        prod2A = prod2A + (bc >>> 32);,3,2,0,1,2,0,0,0,1,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2337,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2340,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2342,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2346,        c = PI_O_4_BITS[1] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2347,        d = PI_O_4_BITS[1] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2348,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2349,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2350,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2353,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2355,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2356,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2357,        prod2B += ac;,2,0,0,0,0,0,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2358,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2360,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2362,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2366,        a = prodB >>> 32;,2,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2367,        b = prodB & 0xffffffffL;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2368,        c = PI_O_4_BITS[0] >>> 32;,1,1,1,0,2,0,0,0,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2369,        d = PI_O_4_BITS[0] & 0xffffffffL;,1,1,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2370,        ac = a * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2371,        bc = b * c;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2372,        ad = a * d;,3,1,0,0,0,0,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2375,        ac = ac + ((bc + ad) >>> 32);,4,3,0,2,4,0,0,0,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2377,        bita = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2378,        bitb = (ac & 0x8000000000000000L ) != 0;,2,2,0,1,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2379,        prod2B += ac;,2,0,0,0,0,0,0,0,1,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2380,        bitsum = (prod2B & 0x8000000000000000L) != 0;,2,2,0,1,2,0,0,0,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2382,        if ( (bita && bitb) ||,2,2,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2384,            prod2A++;,1,0,0,0,0,0,0,0,1,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2388,        double tmpA = (prod2A >>> 12) / 4503599627370496.0;  // High order 52 bits,2,2,0,1,2,1,0,0,0,5,74,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2389,        double tmpB = (((prod2A & 0xfffL) << 40) + (prod2B >>> 24)) / 4503599627370496.0 / 4503599627370496.0; // Low bits,3,5,0,3,8,1,0,0,0,5,114,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2391,        double sumA = tmpA + tmpB;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2392,        double sumB = -(sumA - tmpA - tmpB);,4,1,0,1,2,1,0,0,1,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2395,        result[0] = intPart;,1,0,1,0,2,0,0,0,1,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2396,        result[1] = sumA * 2.0;,1,1,1,0,2,0,0,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2397,        result[2] = sumB * 2.0;,1,1,1,0,2,0,0,0,1,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2398,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2406,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2407,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2409,        double xb = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2412,        xa = x;,2,0,0,0,0,0,0,0,1,2,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2413,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2414,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2415,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2419,        if (xa == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2420,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2421,            if (bits < 0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2422,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2424,            return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2427,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2428,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2432,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2436,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2437,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2438,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2439,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2440,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2441,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2446,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2452,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2453,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2454,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2456,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2457,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2458,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2459,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2461,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2462,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2463,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2464,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2466,                if (remA > 0.0),1,1,0,1,2,1,0,0,0,5,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2467,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2472,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2473,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2474,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2475,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2476,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2479,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2480,            quadrant ^= 2;  // Flip bit 1,1,0,0,0,0,0,0,0,1,2,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2483,        switch (quadrant) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2485,"                return sinQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2487,"                return cosQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2489,"                return -sinQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2491,"                return -cosQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2493,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2503,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2506,        double xa = x;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2507,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2508,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2511,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2512,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2516,        double xb = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2517,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2521,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2522,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2523,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2524,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2525,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2526,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2531,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2537,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2538,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2539,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2541,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2542,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2543,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2544,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2546,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2547,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2548,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2549,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2551,                if (remA > 0.0),1,1,0,1,2,1,0,0,0,5,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2552,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2557,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2558,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2559,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2560,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2561,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2567,        switch (quadrant) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2569,"                return cosQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2571,"                return -sinQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2573,"                return -cosQ(xa, xb);",0,0,0,0,2,1,3,0,2,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2575,"                return sinQ(xa, xb);",0,0,0,0,2,1,3,0,1,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2577,                return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2587,        boolean negative = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2588,        int quadrant = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2591,        double xa = x;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2592,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2593,            negative = true;,1,0,0,0,0,0,0,0,2,2,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2594,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2598,        if (xa == 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2599,            long bits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2600,            if (bits < 0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2601,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2603,            return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2606,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,5,3,0,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2607,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2611,        double xb = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2612,        if (xa > 3294198.0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2616,            double reduceResults[] = new double[3];,1,0,0,0,4,3,0,0,0,3,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2617,"            reducePayneHanek(xa, reduceResults);",0,0,0,0,2,0,3,0,1,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2618,            quadrant = ((int) reduceResults[0]) & 3;,1,1,1,2,6,1,0,0,1,7,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2619,            xa = reduceResults[1];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2620,            xb = reduceResults[2];,1,0,1,0,2,0,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2621,        } else if (xa > 1.5707963267948966) {,1,1,0,1,4,2,0,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2626,            int k = (int)(xa * 0.6366197723675814);,2,1,0,1,4,2,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2632,                double a = -k * 1.570796251296997;,2,1,0,0,0,1,0,0,1,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2633,                remA = xa + a;,3,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2634,                remB = -(remA - xa - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2636,                a = -k * 7.549789948768648E-8;,2,1,0,0,0,0,0,0,2,3,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2637,                double b = remA;,2,0,0,0,0,1,0,0,0,2,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2638,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2639,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2641,                a = -k * 6.123233995736766E-17;,2,1,0,0,0,0,0,0,2,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2642,                b = remA;,2,0,0,0,0,0,0,0,1,2,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2643,                remA = a + b;,3,1,0,0,0,0,0,0,1,3,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2644,                remB += -(remA - b - a);,4,1,0,1,2,0,0,0,2,5,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2646,                if (remA > 0.0),1,1,0,1,2,1,0,0,0,5,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2647,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2652,                k--;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2653,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2654,            quadrant = k & 3;,2,1,0,0,0,0,0,0,1,3,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2655,            xa = remA;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2656,            xb = remB;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2659,        if (xa > 1.5) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2661,            final double pi2a = 1.5707963267948966;,1,0,0,0,0,2,0,0,1,3,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2662,            final double pi2b = 6.123233995736766E-17;,1,0,0,0,0,2,0,0,1,3,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2664,            final double a = pi2a - xa;,3,1,0,0,0,2,0,0,1,4,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2665,            double b = -(a - pi2a + xa);,4,2,0,1,2,1,0,0,1,6,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2666,            b += pi2b - xb;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2668,            xa = a + b;,3,1,0,0,0,0,0,0,1,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2669,            xb = -(xa - a - b);,4,1,0,1,2,0,0,0,2,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2670,            quadrant ^= 1;,1,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2671,            negative ^= true;,1,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2675,        if ((quadrant & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2676,"            result = tanQ(xa, xb, false);",1,0,0,0,2,0,3,0,3,4,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2678,"            result = -tanQ(xa, xb, true);",1,0,0,0,2,0,3,0,4,4,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2681,        if (negative) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2682,            result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2685,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2694,"        return atan(x, 0.0, false);",0,0,0,0,2,1,2,0,2,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2704,        boolean negate = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2707,        if (xa < 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2709,            xa = -xa;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2710,            xb = -xb;,2,0,0,0,0,0,0,0,2,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2711,            negate = true;,1,0,0,0,0,0,0,0,2,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2714,        if (xa > 1.633123935319537E16) { // Very large input,1,1,0,1,3,1,0,0,0,5,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2715,            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);,6,3,0,1,6,1,0,0,1,6,61,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2719,        if (xa < 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2720,            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);,4,4,0,3,8,1,0,0,2,6,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2722,            double temp = 1.0/xa;,2,1,0,0,0,1,0,0,0,3,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2723,            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);,4,4,0,3,8,1,0,0,3,6,74,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2725,        double epsA = xa - TANGENT_TABLE_A[idx];,2,1,1,0,2,1,0,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2726,        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);,3,2,1,1,4,1,0,0,1,7,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2727,        epsB += xb - TANGENT_TABLE_B[idx];,2,1,1,0,2,0,0,0,1,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2729,        double temp = epsA + epsB;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2730,        epsB = -(temp - epsA - epsB);,4,1,0,1,2,0,0,0,2,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2731,        epsA = temp;,2,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2734,        temp = xa * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2735,        double ya = xa + temp - temp;,4,2,0,0,0,1,0,0,0,3,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2736,        double yb = xb + xa - ya;,4,2,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2737,        xa = ya;,2,0,0,0,0,0,0,0,1,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2738,        xb += yb;,2,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2741,        if (idx == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2744,            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,3,5,1,2,10,1,0,0,0,6,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2746,            ya = epsA * denom;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2747,            yb = epsB * denom;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2748,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2749,            double temp2 = xa * TANGENT_TABLE_A[idx];,2,1,1,0,2,1,0,0,0,5,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2750,            double za = 1.0 + temp2;,2,1,0,0,0,1,0,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2751,            double zb = -(za - 1.0 - temp2);,3,1,0,1,2,1,0,0,1,6,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2752,            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];,3,3,1,0,4,0,0,0,1,5,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2753,            temp = za + temp2;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2754,            zb += -(temp - za - temp2);,4,1,0,1,2,0,0,0,2,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2755,            za = temp;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2757,            zb += xb * TANGENT_TABLE_B[idx];,2,1,1,0,2,0,0,0,1,5,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2758,            ya = epsA / za;,3,1,0,0,0,0,0,0,1,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2760,            temp = ya * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2761,            final double yaa = (ya + temp) - temp;,4,2,0,1,2,2,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2762,            final double yab = ya - yaa;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2764,            temp = za * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2765,            final double zaa = (za + temp) - temp;,4,2,0,1,2,2,0,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2766,            final double zab = za - zaa;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2769,            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;,11,9,0,1,2,0,0,0,1,5,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2771,            yb += -epsA * zb / za / za;,5,3,0,0,0,0,0,0,2,3,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2772,            yb += epsB / za;,3,1,0,0,0,0,0,0,1,3,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2776,        epsA = ya;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2777,        epsB = yb;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2780,        double epsA2 = epsA*epsA;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2791,        yb = 0.07490822288864472;,1,0,0,0,0,0,0,0,1,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2792,        yb = yb * epsA2 + -0.09088450866185192;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2793,        yb = yb * epsA2 + 0.11111095942313305;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2794,        yb = yb * epsA2 + -0.1428571423679182;,3,2,0,0,0,0,0,0,2,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2795,        yb = yb * epsA2 + 0.19999999999923582;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2796,        yb = yb * epsA2 + -0.33333333333333287;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2797,        yb = yb * epsA2 * epsA;,4,1,0,0,0,0,0,0,1,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2800,        ya = epsA;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2802,        temp = ya + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2803,        yb = -(temp - ya - yb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2804,        ya = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2807,        yb += epsB / (1.0 + epsA * epsA);,4,3,0,1,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2813,        double za = EIGHTHES[idx] + ya;,2,1,1,0,2,1,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2814,        double zb = -(za - EIGHTHES[idx] - ya);,3,1,1,1,4,1,0,0,1,7,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2815,        temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2816,        zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2817,        za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2819,        result = za + zb;,3,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2820,        resultb = -(result - za - zb);,4,1,0,1,2,0,0,0,2,5,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2822,        if (leftPlane) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2824,            final double pia = 1.5707963267948966*2.0;,1,1,0,0,0,2,0,0,1,4,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2825,            final double pib = 6.123233995736766E-17*2.0;,1,1,0,0,0,2,0,0,1,4,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2827,            za = pia - result;,3,1,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2828,            zb = -(za - pia + result);,4,2,0,1,2,0,0,0,2,5,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2829,            zb += pib - resultb;,3,1,0,0,0,0,0,0,1,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2831,            result = za + zb;,3,1,0,0,0,0,0,0,1,3,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2832,            resultb = -(result - za - zb);,4,1,0,1,2,0,0,0,2,5,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2836,        if (negate ^ leftPlane) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2837,            result = -result;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2840,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2850,        if (x !=x || y != y) {,4,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2851,            return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2854,        if (y == 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2855,            double result = x*y;,3,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2856,            double invx = 1.0/x;,2,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2857,            double invy = 1.0/y;,2,1,0,0,0,1,0,0,0,3,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2859,            if (invx == 0.0) { // X is infinite,1,1,0,1,3,1,0,0,0,5,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2860,                if (x > 0) {,1,1,0,1,3,1,0,0,0,5,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2861,                    return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2863,                    return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2867,            if (result != result) { // y must be infinite,2,1,0,1,3,1,0,0,0,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2868,                return x/y;,2,1,0,0,0,1,0,0,0,3,11,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2871,            if (x < 0.0 || invx < 0.0) {,2,3,0,1,3,1,0,0,0,5,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2872,                if (y < 0.0 || invy < 0.0) {,2,3,0,1,3,1,0,0,0,5,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2873,                    return -Math.PI;,2,0,0,0,0,1,0,0,1,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2875,                    return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2878,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2882,        if (y == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2883,            if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2884,                return Math.PI/4.0;,2,1,0,0,0,1,0,0,0,3,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2887,            if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2888,                return Math.PI*3.0/4.0;,2,2,0,0,0,1,0,0,0,3,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2891,            return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2894,        if (y == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2895,            if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2896,                return -Math.PI/4.0;,2,1,0,0,0,1,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2899,            if (x == Double.NEGATIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2900,                return -Math.PI*3.0/4.0;,2,2,0,0,0,1,0,0,1,4,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2903,            return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2906,        if (x == Double.POSITIVE_INFINITY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2907,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2908,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2911,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2912,                return -0.0;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2916,        if (x == Double.NEGATIVE_INFINITY),3,1,0,1,2,1,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2918,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2919,                return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2922,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2923,                return -Math.PI;,2,0,0,0,0,1,0,0,1,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2927,        if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2928,            if (y > 0.0 || 1/y > 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2929,                return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2932,            if (y < 0.0 || 1/y < 0.0) {,2,4,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2933,                return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2937,        if (x > 8e298 || x < -8e298) { // This would cause split of x to fail,2,3,0,1,3,1,0,0,1,6,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2938,            x *= 9.31322574615478515625E-10;,1,0,0,0,0,0,0,0,1,2,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2939,            y *= 9.31322574615478515625E-10;,1,0,0,0,0,0,0,0,1,2,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2943,        double temp = x * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2944,        final double xa = x + temp - temp;,4,2,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2945,        final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2948,        final double r = y/x;,3,1,0,0,0,2,0,0,1,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2949,        temp = r * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2950,        double ra = r + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2951,        double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2953,        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;,11,9,0,1,2,0,0,0,1,5,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2955,        temp = ra + rb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2956,        rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2957,        ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2960,"        double result = atan(ra, rb, x < 0);",2,1,0,0,2,1,3,0,1,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2962,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2970,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2971,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2974,      if (x > 1.0 || x < -1.0) {,2,3,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2975,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2978,      if (x == 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2979,          return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2982,      if (x == -1.0) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2983,          return -Math.PI/2.0;,2,1,0,0,0,1,0,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2989,      double temp = x * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2990,      final double xa = x + temp - temp;,4,2,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2991,      final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2994,      double ya = xa*xa;,3,1,0,0,0,1,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2995,      double yb = xa*xb*2.0 + xb*xb;,5,3,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2998,      ya = -ya;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,2999,      yb = -yb;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3001,      double za = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3002,      double zb = -(za - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3004,      temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3005,      zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3006,      za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3010,      y = sqrt(za);,1,0,0,1,2,0,2,0,2,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3011,      temp = y * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3012,      ya = y + temp - temp;,4,2,0,0,0,0,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3013,      yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3016,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,9,8,0,1,4,0,0,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3019,      double dx = zb / (2.0*y);,3,2,0,1,2,1,0,0,0,5,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3022,      double r = x/y;,3,1,0,0,0,1,0,0,0,3,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3023,      temp = r * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3024,      double ra = r + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3025,      double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3027,      rb += (x - ra*ya - ra*yb - rb*ya - rb*yb) / y;  // Correct for rounding in division,11,9,0,1,2,1,0,0,1,6,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3028,      rb += -x * dx / y / y;  // Add in effect additional bits of sqrt.,5,3,0,0,0,0,0,0,2,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3030,      temp = ra + rb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3031,      rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3032,      ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3034,"      return atan(ra, rb, false);",0,0,0,0,2,1,3,0,2,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3042,      if (x != x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3043,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3046,      if (x > 1.0 || x < -1.0) {,2,3,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3047,          return Double.NaN;,2,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3050,      if (x == -1.0) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3051,          return Math.PI;,2,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3054,      if (x == 1.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3055,          return 0.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3058,      if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3059,          return Math.PI/2.0;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3065,      double temp = x * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3066,      final double xa = x + temp - temp;,4,2,0,0,0,2,0,0,1,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3067,      final double xb = x - xa;,3,1,0,0,0,2,0,0,1,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3070,      double ya = xa*xa;,3,1,0,0,0,1,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3071,      double yb = xa*xb*2.0 + xb*xb;,5,3,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3074,      ya = -ya;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3075,      yb = -yb;,2,0,0,0,0,0,0,0,2,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3077,      double za = 1.0 + ya;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3078,      double zb = -(za - 1.0 - ya);,3,1,0,1,2,1,0,0,1,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3080,      temp = za + yb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3081,      zb += -(temp - za - yb);,4,1,0,1,2,0,0,0,2,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3082,      za = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3085,      double y = sqrt(za);,1,0,0,1,2,1,2,0,1,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3086,      temp = y * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3087,      ya = y + temp - temp;,4,2,0,0,0,0,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3088,      yb = y - ya;,3,1,0,0,0,0,0,0,1,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3091,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,9,8,0,1,4,0,0,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3094,      yb += zb / (2.0*y);,3,2,0,1,2,0,0,0,1,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3095,      y = ya+yb;,3,1,0,0,0,0,0,0,1,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3096,      yb = -(y - ya - yb);,4,1,0,1,2,0,0,0,2,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3099,      double r = y/x;,3,1,0,0,0,1,0,0,0,3,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3100,      temp = r * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3101,      double ra = r + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3102,      double rb = r - ra;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3104,      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division,11,9,0,1,2,1,0,0,1,6,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3105,      rb += yb / x;  // Add in effect additional bits of sqrt.,3,1,0,0,0,0,0,0,1,3,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3107,      temp = ra + rb;,3,1,0,0,0,0,0,0,1,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3108,      rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,2,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3109,      ra = temp;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3111,"      return atan(ra, rb, x<0);",1,1,0,0,2,1,3,0,1,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3120,      long inbits = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3121,      int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,2,0,0,0,5,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3122,      boolean subnormal = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3124,      if (exponent == -1023) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3125,          if (x == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3126,              return x;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3130,          subnormal = true;,1,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3131,          x *= 1.8014398509481984E16;  // 2^54,1,0,0,0,0,0,0,0,1,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3132,          inbits = Double.doubleToLongBits(x);,1,0,0,1,2,0,3,0,1,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3133,          exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,2,3,0,2,6,1,0,0,1,6,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3136,      if (exponent == 1024) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3138,          return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3142,      int exp3 = exponent / 3;,2,1,0,0,0,1,0,0,0,3,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3145,      double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) |,2,2,0,1,3,1,2,0,0,6,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3149,      final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);,2,2,0,2,4,2,2,0,1,7,98,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3152,      double est = -0.010714690733195933;,1,0,0,0,0,1,0,0,1,3,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3153,      est = est * mant + 0.0875862700108075;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3154,      est = est * mant + -0.3058015757857271;,3,2,0,0,0,0,0,0,2,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3155,      est = est * mant + 0.7249995199969751;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3156,      est = est * mant + 0.5039018405998233;,3,2,0,0,0,0,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3158,      est *= CBRTTWO[exponent % 3 + 2];,2,2,1,0,2,0,0,0,1,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3163,      final double xs = x / (p2*p2*p2);,5,2,0,1,2,2,0,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3164,      est += (xs - est*est*est) / (3*est*est);,7,4,0,1,4,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3165,      est += (xs - est*est*est) / (3*est*est);,7,4,0,1,4,0,0,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3168,      double temp = est * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3169,      double ya = est + temp - temp;,4,2,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3170,      double yb = est - ya;,3,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3172,      double za = ya * ya;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3173,      double zb = ya * yb * 2.0 + yb * yb;,5,3,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3174,      temp = za * 1073741824.0;,2,1,0,0,0,0,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3175,      double temp2 = za + temp - temp;,4,2,0,0,0,1,0,0,0,3,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3176,      zb += za - temp2;,3,1,0,0,0,0,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3177,      za = temp2;,2,0,0,0,0,0,0,0,1,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3179,      zb = za * yb + ya * zb + zb * yb;,7,5,0,0,0,0,0,0,1,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3180,      za = za * ya;,3,1,0,0,0,0,0,0,1,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3182,      double na = xs - za;,3,1,0,0,0,1,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3183,      double nb = -(na - xs + za);,4,2,0,1,2,1,0,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3184,      nb -= zb;,2,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3186,      est += (na+nb)/(3*est*est);,5,3,0,1,4,0,0,0,1,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3189,      est *= p2;,2,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3191,      if (subnormal) {,1,0,0,1,3,1,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3192,          est *= 3.814697265625E-6;  // 2^-18,1,0,0,0,0,0,0,0,1,2,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3195,      return est;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3205,        final double facta = 0.01745329052209854;,1,0,0,0,0,2,0,0,1,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3206,        final double factb = 1.997844754509471E-9;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3208,        double temp = x * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3209,        double xa = x + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3210,        double xb = x - xa;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3212,        return xb * factb + xb * facta + xa * factb + xa * facta;,8,7,0,0,0,1,0,0,0,3,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3222,        final double facta = 57.2957763671875;,1,0,0,0,0,2,0,0,1,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3223,        final double factb = 3.145894820876798E-6;,1,0,0,0,0,2,0,0,1,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3225,        double temp = x * 1073741824.0;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3226,        double xa = x + temp - temp;,4,2,0,0,0,1,0,0,0,3,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3227,        double xb = x - xa;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3229,        return xb * factb + xb * facta + xa * factb + xa * facta;,8,7,0,0,0,1,0,0,0,3,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3238,        return (x < 0) ? -x : x;,3,1,0,1,2,1,0,0,1,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3247,        return (x < 0l) ? -x : x;,3,1,0,1,2,1,0,0,1,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3256,        return (x < 0.0f) ? -x : x;,3,1,0,1,2,1,0,0,1,6,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3275,        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));,1,2,0,3,6,1,6,0,1,7,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3297,        if (Double.isNaN(d) || Double.isInfinite(d)) {,0,1,0,2,7,1,6,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3298,            return d;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3299,        } else if (d == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3300,            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,5,1,0,1,2,1,0,0,1,6,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3306,        long bits     = Double.doubleToLongBits(d);,1,0,0,1,2,1,3,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3307,        long sign     = bits & 0x8000000000000000L;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3308,        long exponent = bits & 0x7ff0000000000000L;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3309,        long mantissa = bits & 0x000fffffffffffffL;,2,1,0,0,0,1,0,0,0,3,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3311,        if (d * (direction - d) >= 0) {,3,3,0,2,5,1,0,0,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3313,            if (mantissa == 0x000fffffffffffffL) {,1,1,0,1,3,1,0,0,0,5,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3314,                return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3317,                return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3322,            if (mantissa == 0L) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3323,                return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3327,                return Double.longBitsToDouble(sign |,1,1,0,0,1,1,2,0,0,5,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3341,        if (x != x) { // NaN,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3342,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3345,        if (x >= 4503599627370496.0 || x <= -4503599627370496.0) {,2,3,0,1,3,1,0,0,1,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3346,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3349,        y = (long) x;,2,0,0,1,2,1,0,0,1,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3350,        if (x < 0 && y != x) {,3,3,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3351,            y--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3354,        if (y == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3355,            return x*y;,2,1,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3358,        return (double) y;,1,0,0,1,2,2,0,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3368,        if (x != x) { // NaN,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3369,            return x;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3372,        y = floor(x);,1,0,0,1,2,0,2,0,2,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3373,        if (y == x) {,2,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3374,            return y;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3377,        y += 1.0;,1,0,0,0,0,0,0,0,1,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3379,        if (y == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3380,            return x*y;,2,1,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3383,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3391,        double y = floor(x);,1,0,0,1,2,1,2,0,1,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3392,        double d = x - y;,3,1,0,0,0,1,0,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3394,        if (d > 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3395,            return y+1.0;,1,1,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3397,        if (d < 0.5) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3398,            return y;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3402,        long z = (long) y;,2,0,0,1,2,2,0,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3403,        return (z & 1) == 0 ? y : y + 1.0;,3,3,0,1,2,1,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3411,        return (long) floor(x + 0.5);,1,1,0,1,4,2,1,0,1,7,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3419,        return Math.round(x);,0,0,0,1,2,1,3,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3428,        return (a <= b) ? a : b;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3437,        return (a <= b) ? a : b;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3446,        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);,8,2,0,2,6,1,2,0,0,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3455,        return (a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b);,8,2,0,2,6,1,2,0,0,6,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3464,        return (a <= b) ? b : a;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3473,        return (a <= b) ? b : a;,4,1,0,1,2,1,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,60,3482,        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);,8,2,0,2,6,1,2,0,0,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,75,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,86,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,97,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,154,                    throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,163,                        p2 = p1 / lastScaleFactor + (b / scaleFactor * p0);,6,4,0,1,2,0,0,0,1,5,51,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,164,                        q2 = q1 / lastScaleFactor + (b / scaleFactor * q0);,6,4,0,1,2,0,0,0,1,5,51,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,165,                    } else if (b != 0) {,1,1,0,1,4,2,0,0,0,5,20,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,166,                        p2 = (a / scaleFactor * p1) + p0 / lastScaleFactor;,6,4,0,1,2,0,0,0,1,5,51,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,167,                        q2 = (a / scaleFactor * q1) + q0 / lastScaleFactor;,6,4,0,1,2,0,0,0,1,5,51,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,178,               throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,186,                throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,60,201,"            throw new MaxIterationsExceededException(maxIterations,",1,0,0,0,1,2,0,1,1,5,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,75,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,76,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,99,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,128,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,167,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,188,                throw new MaxIterationsExceededException(maxIterations);,1,0,0,1,2,2,0,1,1,6,56,10,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,190,                ret = 1.0;,1,0,0,0,0,0,0,0,1,2,10,11,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,210,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,244,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,246,            ret = 1.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,250,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,295,        if (x > 0 && x <= S_LIMIT) {,3,3,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,298,            return -GAMMA - 1 / x;,2,2,0,0,0,1,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,301,        if (x >= C_LIMIT) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,303,            double inv = 1 / (x * x);,3,2,0,1,2,1,0,0,0,5,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,307,            return FastMath.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));,4,10,0,2,8,1,3,0,0,6,86,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,310,        return digamma(x + 1) - 1 / x;,2,3,0,1,2,1,1,0,1,7,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,324,        if (x > 0 && x <= S_LIMIT) {,3,3,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,325,            return 1 / (x * x);,2,2,0,1,2,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,328,        if (x >= C_LIMIT) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,329,            double inv = 1 / (x * x);,3,2,0,1,2,1,0,0,0,5,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,334,            return 1 / x + inv / 2 + inv / x * (1.0 / 6 - inv * (1.0 / 30 + inv / 42));,6,12,0,2,4,1,0,0,0,5,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,60,337,        return trigamma(x + 1) + 1 / (x * x);,3,4,0,1,4,1,1,0,1,7,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,33,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/special/Erf,60,34,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,131,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,132,        this.rand = rand;,2,0,0,0,0,1,0,0,1,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,133,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,154,        if (len <= 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,155,"            throw new NotStrictlyPositiveException(LocalizedFormats.LENGTH, len);",3,0,0,0,2,2,0,1,1,5,69,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,159,        RandomGenerator ran = getRan();,1,0,0,1,2,0,1,1,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,162,        StringBuffer outBuffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,165,        byte[] randomBytes = new byte[(len / 2) + 1];,2,2,0,1,6,3,0,0,0,5,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,166,        ran.nextBytes(randomBytes);,0,0,0,1,2,0,3,0,0,3,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,169,        for (int i = 0; i < randomBytes.length; i++) {,5,1,0,1,3,2,0,0,1,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,170,            Integer c = Integer.valueOf(randomBytes[i]);,1,0,1,1,4,0,2,1,0,6,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,177,            String hex = Integer.toHexString(c.intValue() + 128);,1,1,0,2,4,0,4,1,0,6,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,180,            if (hex.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,181,"                hex = ""0"" + hex;",2,1,0,0,0,0,0,0,2,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,183,            outBuffer.append(hex);,0,0,0,1,2,0,3,0,0,3,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,185,"        return outBuffer.toString().substring(0, len);",0,0,0,1,4,1,4,0,0,4,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,200,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,201,"            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,204,        double r = getRan().nextDouble();,1,0,0,1,4,1,2,0,1,6,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,205,        return (int) ((r * upper) + ((1.0 - r) * lower) + r);,5,4,0,3,10,2,0,0,0,5,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,220,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,221,"            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,224,        double r = getRan().nextDouble();,1,0,0,1,4,1,2,0,1,6,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,225,        return (long) ((r * upper) + ((1.0 - r) * lower) + r);,5,4,0,3,10,2,0,0,0,5,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,250,        if (len <= 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,251,"            throw new NotStrictlyPositiveException(LocalizedFormats.LENGTH, len);",3,0,0,0,2,2,0,1,1,5,69,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,255,        SecureRandom secRan = getSecRan();,1,0,0,1,2,0,1,1,1,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,256,        MessageDigest alg = null;,1,0,0,0,0,0,0,1,0,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,258,"            alg = MessageDigest.getInstance(""SHA-1"");",1,0,0,1,2,0,2,0,2,5,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,262,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,259,        } catch (NoSuchAlgorithmException ex) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,261,            throw MathRuntimeException.createInternalError(ex);,0,0,0,1,2,1,3,0,0,4,51,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,263,        alg.reset();,0,0,0,1,2,0,2,0,0,3,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,266,        int numIter = (len / 40) + 1;,2,2,0,1,2,1,0,0,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,268,        StringBuffer outBuffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,269,        for (int iter = 1; iter < numIter + 1; iter++) {,4,2,0,1,3,2,0,0,1,6,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,270,            byte[] randomBytes = new byte[40];,1,0,0,0,4,3,0,0,0,3,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,271,            secRan.nextBytes(randomBytes);,0,0,0,1,2,0,3,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,272,            alg.update(randomBytes);,0,0,0,1,2,0,3,0,0,3,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,275,            byte hash[] = alg.digest();,1,0,0,1,4,1,2,0,0,5,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,278,            for (int i = 0; i < hash.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,279,                Integer c = Integer.valueOf(hash[i]);,1,0,1,1,4,0,2,1,0,6,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,286,                String hex = Integer.toHexString(c.intValue() + 128);,1,1,0,2,4,0,4,1,0,6,53,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,289,                if (hex.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,290,"                    hex = ""0"" + hex;",2,1,0,0,0,0,0,0,2,3,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,292,                outBuffer.append(hex);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,295,"        return outBuffer.toString().substring(0, len);",0,0,0,1,4,1,4,0,0,4,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,311,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,312,"            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,315,        SecureRandom sec = getSecRan();,1,0,0,1,2,0,1,1,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,316,        return lower + (int) (sec.nextDouble() * (upper - lower + 1));,3,4,0,2,8,2,2,0,0,6,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,332,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,333,"            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,336,        SecureRandom sec = getSecRan();,1,0,0,1,2,0,1,1,1,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,337,        return lower + (long) (sec.nextDouble() * (upper - lower + 1));,3,4,0,2,8,2,2,0,0,6,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,358,        if (mean <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,359,"            throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, mean);",3,0,0,0,2,2,0,1,1,5,68,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,362,        final RandomGenerator generator = getRan();,1,0,0,1,2,1,1,1,2,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,364,        final double pivot = 40.0d;,1,0,0,0,0,2,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,365,        if (mean < pivot) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,366,            double p = FastMath.exp(-mean);,2,0,0,1,2,1,2,0,1,6,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,367,            long n = 0;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,368,            double r = 1.0d;,1,0,0,0,0,1,0,0,0,2,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,369,            double rnd = 1.0d;,1,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,371,            while (n < 1000 * mean) {,2,2,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,372,                rnd = generator.nextDouble();,1,0,0,1,2,0,2,0,1,5,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,373,                r = r * rnd;,3,1,0,0,0,0,0,0,1,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,374,                if (r >= p) {,2,1,0,1,3,1,0,0,0,5,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,375,                    n++;,1,0,0,0,0,0,0,0,1,2,4,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,377,                    return n;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,380,            return n;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,382,            final double lambda = FastMath.floor(mean);,1,0,0,1,2,2,3,0,1,6,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,383,            final double lambdaFractional = mean - lambda;,3,1,0,0,0,2,0,0,1,4,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,384,            final double logLambda = FastMath.log(lambda);,1,0,0,1,2,2,3,0,1,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,385,            final double logLambdaFactorial = MathUtils.factorialLog((int) lambda);,2,0,0,2,4,3,2,0,1,6,71,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,386,            final long y2 = lambdaFractional < Double.MIN_VALUE ? 0 : nextPoisson(lambdaFractional);,4,1,0,1,2,2,2,0,2,7,88,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,387,            final double delta = FastMath.sqrt(lambda * FastMath.log(32 * lambda / FastMath.PI + 1));,5,4,0,2,4,2,4,0,1,7,89,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,388,            final double halfDelta = delta / 2;,2,1,0,0,0,2,0,0,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,389,            final double twolpd = 2 * lambda + delta;,3,2,0,0,0,2,0,0,1,4,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,390,            final double a1 = FastMath.sqrt(FastMath.PI * twolpd) * FastMath.exp(1 / 8 * lambda);,5,4,0,1,4,2,4,0,1,7,85,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,391,            final double a2 = (twolpd / delta) * FastMath.exp(-delta * (1 + delta) / twolpd);,6,5,0,2,6,2,2,0,2,7,81,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,392,            final double aSum = a1 + a2 + 1;,3,1,0,0,0,2,0,0,1,4,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,393,            final double p1 = a1 / aSum;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,394,            final double p2 = a2 / aSum;,3,1,0,0,0,2,0,0,1,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,395,            final double c1 = 1 / (8 * lambda);,2,2,0,1,2,2,0,0,1,6,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,397,            double x = 0;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,398,            double y = 0;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,399,            double v = 0;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,400,            int a = 0;,1,0,0,0,0,1,0,0,0,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,401,            double t = 0;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,402,            double qr = 0;,1,0,0,0,0,1,0,0,0,2,14,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,403,            double qa = 0;,1,0,0,0,0,1,0,0,0,2,14,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,405,"                final double u = nextUniform(0.0, 1);",1,0,0,0,2,2,1,0,2,5,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,406,                if (u <= p1) {,2,1,0,1,3,1,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,407,"                    final double n = nextGaussian(0d, 1d);",1,0,0,0,2,2,1,0,2,5,38,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,408,                    x = n * FastMath.sqrt(lambda + halfDelta) - 0.5d;,4,3,0,1,2,0,2,0,1,6,49,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,409,                    if (x > delta || x < -lambda) {,4,3,0,1,3,1,0,0,1,6,31,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,410,                        continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,412,                    y = x < 0 ? FastMath.floor(x) : FastMath.ceil(x);,2,1,0,1,4,0,6,0,1,6,49,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,413,                    final double e = nextExponential(1d);,1,0,0,1,2,2,1,0,2,6,37,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,414,                    v = -e - (n * n / 2) + c1;,5,4,0,1,2,0,0,0,2,5,26,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,415,                } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,416,                    if (u > p1 + p2) {,3,2,0,1,3,1,0,0,0,5,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,417,                        y = lambda;,2,0,0,0,0,0,0,0,1,2,11,12,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,418,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,420,                        x = delta + (twolpd / delta) * nextExponential(1d);,4,3,0,1,4,0,1,0,2,6,51,12,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,421,                        y = FastMath.ceil(x);,1,0,0,1,2,0,3,0,1,5,21,12,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,422,                        v = -nextExponential(1d) - delta * (x + 1) / twolpd;,4,4,0,1,4,0,1,0,3,6,52,12,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,425,                a = x < 0 ? 1 : 0;,2,1,0,0,0,0,0,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,426,                t = y * (y + 1) / (2 * lambda);,4,4,0,1,4,0,0,0,1,5,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,427,                if (v < -t && a == 0) {,3,3,0,1,3,1,0,0,1,6,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,428,                    y = lambda + y;,3,1,0,0,0,0,0,0,1,3,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,429,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,431,                qr = t * ((2 * y + 1) / (6 * lambda) - 1);,4,6,0,2,6,0,0,0,1,5,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,432,                qa = qr - (t * t) / (3 * (lambda + a * (y + 1)));,7,7,0,3,8,0,0,0,1,5,49,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,433,                if (v < qa) {,2,1,0,1,3,1,0,0,0,5,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,434,                    y = lambda + y;,3,1,0,0,0,0,0,0,1,3,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,435,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,437,                if (v > qr) {,2,1,0,1,3,1,0,0,0,5,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,438,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,440,                if (v < y * logLambda - MathUtils.factorialLog((int) (y + lambda)) + logLambdaFactorial) {,6,5,0,3,9,2,2,0,0,6,90,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,441,                    y = lambda + y;,3,1,0,0,0,0,0,0,1,3,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,442,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,444,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,445,            return y2 + (long) y;,2,1,0,1,2,2,0,0,0,5,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,462,        if (sigma <= 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,463,"            throw new NotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION, sigma);",3,0,0,0,2,2,0,1,1,5,83,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,465,        return sigma * getRan().nextGaussian() + mu;,2,2,0,1,4,1,2,0,1,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,483,        if (mean <= 0.0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,484,"            throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, mean);",3,0,0,0,2,2,0,1,1,5,68,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,486,        final RandomGenerator generator = getRan();,1,0,0,1,2,1,1,1,2,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,487,        double unif = generator.nextDouble();,1,0,0,1,2,1,2,0,0,5,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,488,        while (unif == 0.0d) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,489,            unif = generator.nextDouble();,1,0,0,1,2,0,2,0,1,5,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,491,        return -mean * FastMath.log(unif);,1,1,0,1,2,1,3,0,1,7,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,512,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,513,"            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,",2,0,0,0,1,2,0,1,1,5,87,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,516,        final RandomGenerator generator = getRan();,1,0,0,1,2,1,1,1,2,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,519,        double u = generator.nextDouble();,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,520,        while (u <= 0.0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,521,            u = generator.nextDouble();,1,0,0,1,2,0,2,0,1,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,524,        return lower + u * (upper - lower);,4,3,0,1,2,1,0,0,0,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,539,"        return nextInversionDeviate(new BetaDistributionImpl(alpha, beta));",2,0,0,0,4,2,1,1,2,6,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,554,"        return nextInversionDeviate(new BinomialDistributionImpl(numberOfTrials, probabilityOfSuccess));",2,0,0,0,4,2,1,1,2,6,96,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,569,"        return nextInversionDeviate(new CauchyDistributionImpl(median, scale));",2,0,0,0,4,2,1,1,2,6,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,583,        return nextInversionDeviate(new ChiSquaredDistributionImpl(df));,1,0,0,2,4,2,1,1,2,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,598,"        return nextInversionDeviate(new FDistributionImpl(numeratorDf, denominatorDf));",2,0,0,0,4,2,1,1,2,6,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,613,"        return nextInversionDeviate(new GammaDistributionImpl(shape, scale));",2,0,0,0,4,2,1,1,2,6,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,629,"        return nextInversionDeviate(new HypergeometricDistributionImpl(populationSize, numberOfSuccesses, sampleSize));",3,0,0,0,4,2,1,1,2,6,111,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,644,"        return nextInversionDeviate(new PascalDistributionImpl(r, p));",2,0,0,0,4,2,1,1,2,6,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,658,        return nextInversionDeviate(new TDistributionImpl(df));,1,0,0,2,4,2,1,1,2,7,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,673,"        return nextInversionDeviate(new WeibullDistributionImpl(shape, scale));",2,0,0,0,4,2,1,1,2,6,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,688,"        return nextInversionDeviate(new ZipfDistributionImpl(numberOfElements, exponent));",2,0,0,0,4,2,1,1,2,6,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,701,        if (rand == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,702,            rand = new JDKRandomGenerator();,1,0,0,1,2,1,0,1,2,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,703,            rand.setSeed(System.currentTimeMillis());,0,0,0,2,4,0,4,0,0,3,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,705,        return rand;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,717,        if (secRand == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,718,            secRand = new SecureRandom();,1,0,0,1,2,1,0,1,2,6,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,719,            secRand.setSeed(System.currentTimeMillis());,0,0,0,2,4,0,4,0,0,3,44,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,721,        return secRand;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,734,        if (rand == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,735,            rand = new JDKRandomGenerator();,1,0,0,1,2,1,0,1,2,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,737,        rand.setSeed(seed);,0,0,0,1,2,0,3,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,738,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,748,        if (secRand == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,749,            secRand = new SecureRandom();,1,0,0,1,2,1,0,1,2,6,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,751,        secRand.setSeed(System.currentTimeMillis());,0,0,0,2,4,0,4,0,0,3,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,752,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,764,        if (secRand == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,765,            secRand = new SecureRandom();,1,0,0,1,2,1,0,1,2,6,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,767,        secRand.setSeed(seed);,0,0,0,1,2,0,3,0,0,3,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,768,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,775,        if (rand == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,776,            rand = new JDKRandomGenerator();,1,0,0,1,2,1,0,1,2,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,778,        rand.setSeed(System.currentTimeMillis());,0,0,0,2,4,0,4,0,0,3,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,779,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,803,"        secRand = SecureRandom.getInstance(algorithm, provider);",1,0,0,0,2,0,4,0,1,4,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,804,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,837,        if (k > n) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,838,"            throw new NumberIsTooLargeException(LocalizedFormats.PERMUTATION_EXCEEDS_N,",2,0,0,0,1,2,0,1,1,5,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,841,        if (k == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,842,"            throw new NotStrictlyPositiveException(LocalizedFormats.PERMUTATION_SIZE,",2,0,0,0,1,2,0,1,1,5,73,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,846,        int[] index = getNatural(n);,1,0,0,1,4,1,2,0,1,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,847,"        shuffle(index, n - k);",2,1,0,0,2,0,2,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,848,        int[] result = new int[k];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,849,        for (int i = 0; i < k; i++) {,4,1,0,1,3,2,0,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,850,            result[i] = index[n - i - 1];,2,1,1,0,4,0,0,0,1,5,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,853,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,875,        int len = c.size();,1,0,0,1,2,1,2,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,876,        if (k > len) {,2,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,877,"            throw new NumberIsTooLargeException(LocalizedFormats.SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE,",2,0,0,0,1,2,0,1,1,5,89,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,880,        if (k <= 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,881,"            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, k);",3,0,0,0,2,2,0,1,1,5,78,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,884,        Object[] objects = c.toArray();,1,0,0,1,4,0,2,1,0,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,885,"        int[] index = nextPermutation(len, k);",1,0,0,0,4,1,3,0,1,5,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,886,        Object[] result = new Object[k];,1,0,1,0,4,1,0,2,0,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,887,        for (int i = 0; i < k; i++) {,4,1,0,1,3,2,0,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,888,            result[i] = objects[index[i]];,0,0,1,0,6,0,0,0,1,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,890,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,903,"        return distribution.inverseCumulativeProbability(nextUniform(0, 1));",0,0,0,0,4,1,3,0,1,4,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,917,"        final double target = nextUniform(0, 1);",1,0,0,0,2,2,1,0,2,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,918,        final int glb = distribution.inverseCumulativeProbability(target);,1,0,0,1,2,2,3,0,1,6,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,919,        if (distribution.cumulativeProbability(glb) == 1.0d) { // No mass above,0,1,0,2,5,1,3,0,0,5,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,920,            return glb;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,922,            return glb + 1;,1,1,0,0,0,1,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,938,        int target = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,939,        for (int i = list.length - 1; i >= end; i--) {,6,2,0,1,3,2,0,0,1,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,940,            if (i == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,941,                target = 0;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,943,"                target = nextInt(0, i);",1,0,0,0,2,0,2,0,2,4,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,945,            int temp = list[target];,1,0,1,0,2,1,0,0,0,4,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,946,            list[target] = list[i];,0,0,1,0,4,0,0,0,1,3,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,947,            list[i] = temp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,949,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,959,        int[] natural = new int[n];,1,0,1,0,4,3,0,0,0,4,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,960,        for (int i = 0; i < n; i++) {,4,1,0,1,3,2,0,0,1,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,961,            natural[i] = i;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/RandomDataImpl,60,963,        return natural;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
