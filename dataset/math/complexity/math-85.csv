dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/MathException,85,106,"      super(buildMessage(Locale.US, pattern, arguments));",2,0,0,0,4,1,3,0,2,5,51,3,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,107,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,108,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,109,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,60,            ResourceBundle bundle =,1,0,0,0,0,0,0,1,0,2,23,6,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,67,        } catch (MissingResourceException mre) {,1,0,0,1,4,1,0,1,0,5,40,6,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,73,        return s;,1,0,0,0,0,1,0,0,0,2,9,4,1.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,85,"        return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        ",2,1,0,1,8,2,5,1,3,8,104,5,1.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,43,"        super(""Maximal number of iterations ({0}) exceeded"", maxIterations);",1,0,0,1,6,1,0,0,2,5,68,3,1.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,44,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,45,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,45,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,46,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,128,        } catch (MaxIterationsExceededException ex) {,1,0,0,1,4,1,0,1,0,5,45,6,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,129,            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38,3,3,0,2,5,1,0,0,0,5,65,7,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,131,            } else if (x > (mean + 20 * standardDeviation)) {,3,3,0,2,6,2,0,0,0,5,49,8,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,132,                return 1.0d;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,178,        if (p < .5) {,1,1,0,1,3,1,0,0,0,5,13,4,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,181,            ret = getMean();,1,0,0,1,2,0,1,0,2,5,16,6,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,184,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,200,        if (p < .5) {,1,1,0,1,3,1,0,0,0,5,13,4,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,203,            ret = Double.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,23,6,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,206,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,221,        if (p < .5) {,1,1,0,1,3,1,0,0,0,5,13,4,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,223,        } else if (p > .5) {,1,1,0,1,4,2,0,0,0,5,20,5,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,224,            ret = getMean() + getStandardDeviation();,1,1,0,1,4,0,2,0,3,6,41,7,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,229,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,181,                throw new MaxIterationsExceededException(maxIterations);,1,0,0,1,2,2,0,1,1,6,56,10,1.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,162,        return super.inverseCumulativeProbability(p);,2,0,0,1,2,2,0,0,0,4,45,5,0.5,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,156,        if (p == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.33333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,159,        if (p == 1) {,1,1,0,1,3,1,0,0,0,5,13,4,0.33333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,72,        return mean;,1,0,0,0,0,1,0,0,0,2,12,4,0.16667,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,88,        return standardDeviation;,1,0,0,0,0,1,0,0,0,2,25,4,0.16667,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,126,            return 0.5 * (1.0 + Erf.erf((x - mean) /,2,4,0,1,4,1,2,0,0,6,40,6,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,51,"        double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);",3,1,0,0,2,1,2,0,0,5,65,5,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,52,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,55,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.14286,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,162,            ret = 0.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.14286,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,54,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,43,    private double mean = 0;,1,0,0,0,0,2,0,0,1,3,24,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,46,    private double standardDeviation = 1;,1,0,0,0,0,2,0,0,1,3,37,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,55,        setMean(mean);,0,0,0,1,2,0,2,0,1,4,14,4,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,56,        setStandardDeviation(sd);,0,0,0,1,2,0,2,0,1,4,25,4,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,40,    private static final double SQRT2PI = Math.sqrt(2 * Math.PI);,3,1,0,1,2,4,2,0,3,7,61,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,80,        this.mean = mean;,2,0,0,0,0,1,0,0,1,3,17,4,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,97,        if (sd <= 0.0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,102,        standardDeviation = sd;,2,0,0,0,0,0,0,0,1,2,23,4,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.08333,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,69,        UnivariateRealFunction rootFindingFunction =,1,0,0,0,0,0,0,1,0,2,44,4,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,81,        double lowerBound = getDomainLowerBound(p);,1,0,0,1,2,1,2,0,1,6,43,5,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,82,        double upperBound = getDomainUpperBound(p);,1,0,0,1,2,1,2,0,1,6,43,5,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,83,        double[] bracket = null;,1,0,0,0,2,1,0,0,0,3,24,5,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,85,            bracket = UnivariateRealSolverUtils.bracket(,1,0,0,0,1,0,2,0,1,4,44,6,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,70,            new UnivariateRealFunction() {,0,0,0,1,3,1,0,1,1,5,30,5,0.06667,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,73,                    return cumulativeProbability(x) - p;,1,1,0,1,2,1,2,0,1,7,36,12,0.06667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,159,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,161,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,163,        } else if (a >= 1.0 && x > a) {,3,3,0,1,4,2,0,0,0,5,31,6,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,169,            double n = 0.0; // current element index,1,0,0,0,0,1,0,0,0,2,40,9,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,170,            double an = 1.0 / a; // n-th element in the series,2,1,0,0,0,1,0,0,0,3,50,9,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,171,            double sum = an; // partial sum,2,0,0,0,0,1,0,0,0,2,31,9,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,172,            while (Math.abs(an) > epsilon && n < maxIterations) {,3,3,0,2,5,1,3,0,0,6,53,8,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,174,                n = n + 1.0;,2,1,0,0,0,0,0,0,1,3,12,10,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,175,                an = an * (x / (a + n));,5,3,0,2,4,0,0,0,1,5,24,10,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,178,                sum = sum + an;,3,1,0,0,0,0,0,0,1,3,15,10,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,180,            if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,8,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,183,                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;,4,4,0,3,8,0,7,0,3,6,59,10,0.0625,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,187,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,182,        double a = initial;,2,0,0,0,0,1,0,0,0,2,19,5,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,183,        double b = initial;,2,0,0,0,0,1,0,0,0,2,19,5,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,186,        int numIterations = 0 ;,1,0,0,0,0,1,0,0,0,2,23,5,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,189,"            a = Math.max(a - 1.0, lowerBound);",2,1,0,0,2,0,3,0,1,5,34,6,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,190,"            b = Math.min(b + 1.0, upperBound);",2,1,0,0,2,0,3,0,1,5,34,6,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,191,            fa = function.value(a);,1,0,0,1,2,0,3,0,1,5,23,6,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,193,            fb = function.value(b);,1,0,0,1,2,0,3,0,1,5,23,6,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,194,            numIterations++ ;,1,0,0,0,0,0,0,0,1,2,17,6,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,195,        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ,4,4,0,1,6,1,0,0,0,5,66,4,0.0625,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,198,        if (fa * fb >= 0.0 ) {,2,2,0,1,3,1,0,0,0,5,22,4,0.0625,1,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,127,"        return bracket( function, initial, lowerBound, upperBound,",0,0,0,0,1,1,5,0,1,4,58,4,0.05882,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,170,        if (function == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.05882,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,173,        if (maximumIterations <= 0)  {,1,1,0,1,3,1,0,0,0,5,30,4,0.05882,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,177,        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {,6,5,0,1,3,1,0,0,0,5,79,4,0.05882,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,62,        if (p < 0.0 || p > 1.0) {,2,3,0,1,3,1,0,0,0,5,25,4,0.05,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,41,    private static final double[] lanczos =,1,0,0,0,2,4,0,0,3,4,39,2,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,61,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,3,2,0,1,2,4,2,0,3,7,74,2,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,91,        if (Double.isNaN(x) || (x <= 0.0)) {,1,2,0,2,7,1,3,0,0,6,36,4,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,94,            double g = 607.0 / 128.0;,1,1,0,0,0,1,0,0,0,3,25,7,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,96,            double sum = 0.0;,1,0,0,0,0,1,0,0,0,2,17,7,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,97,            for (int i = lanczos.length - 1; i > 0; --i) {,5,2,0,1,3,2,0,0,1,6,46,6,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,98,                sum = sum + (lanczos[i] / (x + i));,4,3,1,2,6,0,0,0,1,6,35,8,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,100,            sum = sum + lanczos[0];,2,1,1,0,2,0,0,0,1,5,23,6,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,102,            double tmp = x + g + .5;,3,1,0,0,0,1,0,0,0,3,24,7,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,103,            ret = ((x + .5) * Math.log(tmp)) - tmp +,3,5,0,2,6,0,3,0,1,6,40,6,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,107,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.02703,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,46,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.01587,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01587,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,39,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.01587,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,40,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01587,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,44,"        super(""evaluation failed for argument = {0}"", argument);",1,0,0,0,4,2,0,0,2,4,56,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,45,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,46,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,56,"        super(""evaluation failed for argument = {0}"", new ArrayRealVector(argument));",1,0,0,1,6,3,0,1,3,6,77,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,57,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,58,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,70,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,71,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,72,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,84,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,85,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,86,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,96,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,97,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,98,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,108,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,109,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,110,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,124,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,125,        this.argument = new double[] { argument };,2,0,0,0,4,3,0,0,1,4,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,126,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,140,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,141,        this.argument = argument.clone();,1,0,0,1,2,1,2,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,142,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,150,        return argument.clone();,0,0,0,1,2,1,2,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,93,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,94,        this.pattern   = null;,1,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,95,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,96,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,119,        super(rootCause);,1,0,0,1,2,1,0,0,1,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,120,        this.pattern   = getMessage();,1,0,0,1,2,1,1,0,2,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,121,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,122,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,135,"      super(buildMessage(Locale.US, pattern, arguments), rootCause);",3,0,0,0,4,1,3,0,2,5,62,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,136,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,137,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,2,1,0,1,6,2,2,1,1,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,138,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,62,            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {,0,0,0,3,11,1,6,0,0,4,68,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,64,                return bundle.getString(s);,0,0,0,1,2,1,3,0,0,4,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,69,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,146,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,155,        return arguments.clone();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,166,"        return buildMessage(locale, pattern, arguments);",0,0,0,0,2,1,4,0,1,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,172,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,180,        printStackTrace(System.err);,2,0,0,1,2,0,1,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,181,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,190,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,191,"            PrintWriter pw = new PrintWriter(out, false);",2,0,0,0,2,1,0,2,2,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,192,            printStackTrace(pw);,0,0,0,1,2,0,2,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,194,            pw.flush();,0,0,0,1,2,0,2,0,0,3,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,195,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,85,196,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,56,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,57,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,58,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,64,        return maxIterations;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,34,"        super(""Convergence failed"");",0,0,0,1,2,1,0,0,2,4,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,35,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,53,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,54,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,65,"        super(cause, pattern, arguments);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,64,"        this(0.0, 1.0);",0,0,0,0,2,1,0,0,0,2,15,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,65,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,98,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,112,        double x0 = x - getMean();,2,1,0,1,2,1,1,0,1,7,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,113,        return Math.exp(-x0 * x0 / (2 * getStandardDeviation() * getStandardDeviation())) / (getStandardDeviation() * SQRT2PI);,3,5,0,3,12,1,5,0,4,7,119,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,130,                return 0.0d;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,134,                throw ex;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,157,            return Double.NEGATIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,160,            return Double.POSITIVE_INFINITY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,179,            ret = -Double.MAX_VALUE;,3,0,0,0,0,0,0,0,2,2,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,201,            ret = getMean();,1,0,0,1,2,0,1,0,2,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,222,            ret = getMean() - getStandardDeviation();,1,1,0,1,4,0,2,0,3,6,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,226,            ret = getMean();,1,0,0,1,2,0,1,0,2,5,16,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,33,public class NormalDistributionImpl extends AbstractContinuousDistribution ,1,0,0,0,0,3,0,1,1,4,74,1,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,63,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,105,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,88,        }  catch (ConvergenceException ex) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,97,            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {,0,1,0,3,7,1,5,0,0,5,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,98,                return lowerBound;,1,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,100,            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {,0,1,0,3,7,1,5,0,0,5,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,101,                return upperBound;,1,0,0,0,0,1,0,0,0,2,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,104,            throw new MathException(ex);,1,0,0,1,2,2,0,1,1,6,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,108,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,",1,0,0,0,1,1,3,0,0,4,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,110,        return root;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,61,        if (x0 > x1) {,2,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,62,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,66,        return cumulativeProbability(x1) - cumulativeProbability(x0);,0,1,0,1,4,1,4,0,2,6,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,74,                } catch (MathException ex) {,1,0,0,1,4,1,0,1,0,5,28,12,0.0,0,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,75,"                    throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());",2,0,0,1,6,2,4,1,1,7,81,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,46,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,74,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,85,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,96,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,128,        double p0 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,129,"        double p1 = getA(0, x);",1,0,0,0,2,1,2,0,1,5,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,130,        double q0 = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,131,        double q1 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,132,        double c = p1 / q1;,3,1,0,0,0,1,0,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,133,        int n = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,134,        double relativeError = Double.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,135,        while (n < maxIterations && relativeError > epsilon) {,4,3,0,1,3,1,0,0,0,5,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,136,            ++n;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,137,"            double a = getA(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,138,"            double b = getB(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,139,            double p2 = a * p1 + b * p0;,5,3,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,140,            double q2 = a * q1 + b * q0;,5,3,0,0,0,1,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,141,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0,1,0,2,7,1,6,0,0,5,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,143,                if (a != 0.0) {,1,1,0,1,3,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,144,                    p2 = p1 + (b / a * p0);,5,3,0,1,2,0,0,0,1,5,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,145,                    q2 = q1 + (b / a * q0);,5,3,0,1,2,0,0,0,1,5,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,146,                } else if (b != 0) {,1,1,0,1,4,2,0,0,0,5,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,147,                    p2 = (a / b * p1) + p0;,5,3,0,1,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,148,                    q2 = (a / b * q1) + q0;,5,3,0,1,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,151,                    throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,156,            double r = p2 / q2;,3,1,0,0,0,1,0,0,0,3,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,157,            relativeError = Math.abs(r / c - 1.0);,3,2,0,1,2,0,2,0,1,6,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,160,            c = p2 / q2;,3,1,0,0,0,0,0,0,1,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,161,            p0 = p1;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,162,            p1 = p2;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,163,            q0 = q1;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,164,            q1 = q2;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,165,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,167,        if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,168,"            throw new MaxIterationsExceededException(maxIterations,",1,0,0,0,1,2,0,1,1,5,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,173,        return c;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,33,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,34,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/special/Erf,85,53,            ret = -ret;,2,0,0,0,0,0,0,0,2,2,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,244,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,248,                    return ((2.0 * n) + 1.0) - a + x;,3,4,0,2,4,1,0,0,0,5,33,14,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,253,                    return n * (a - n);,3,2,0,1,2,1,0,0,0,5,19,14,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,68,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,69,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,92,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,121,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,160,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,166,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,201,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,234,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,235,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,236,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,237,            ret = 1.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,238,        } else if (x < a || a < 1.0) {,3,3,0,1,4,2,0,0,0,5,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,241,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,244,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,257,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,1,5,51,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,258,            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;,4,4,0,3,8,0,7,0,3,6,59,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,261,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,292,        if (x > 0 && x <= S_LIMIT) {,3,3,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,295,            return -GAMMA - 1 / x;,2,2,0,0,0,1,0,0,1,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,298,        if (x >= C_LIMIT) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,300,            double inv = 1 / (x * x);,3,2,0,1,2,1,0,0,0,5,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,304,            return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));,4,10,0,2,8,1,3,0,0,6,82,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,307,        return digamma(x + 1) - 1 / x;,2,3,0,1,2,1,1,0,1,7,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,321,        if (x > 0 && x <= S_LIMIT) {,3,3,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,322,            return 1 / (x * x);,2,2,0,1,2,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,325,        if (x >= C_LIMIT) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,326,            double inv = 1 / (x * x);,3,2,0,1,2,1,0,0,0,5,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,331,            return 1 / x + inv / 2 + inv / x * (1.0 / 6 - inv * (1.0 / 30 + inv / 42));,6,12,0,2,4,1,0,0,0,5,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,85,334,        return trigamma(x + 1) + 1 / (x * x);,3,4,0,1,4,1,1,0,1,7,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,32,    public UnivariateRealSolverFactoryImpl() {,1,0,0,1,3,1,0,0,1,5,42,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,33,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,38,        return newBrentSolver();,0,0,0,1,2,1,1,0,1,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,44,        return new BisectionSolver();,0,0,0,1,2,2,0,1,1,5,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,50,        return new BrentSolver();,0,0,0,1,2,2,0,1,1,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,56,        return new NewtonSolver();,0,0,0,1,2,2,0,1,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,62,        return new SecantSolver();,0,0,0,1,2,2,0,1,1,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,44,    protected UnivariateRealSolverFactory() {,1,0,0,1,3,1,0,0,1,5,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,52,        return new UnivariateRealSolverFactoryImpl();,0,0,0,1,2,2,0,1,1,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,49,"        super(f, 100, 1E-6);",1,0,0,0,2,1,0,0,1,4,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,50,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,56,"        super(100, 1E-6);",0,0,0,0,2,1,0,0,1,3,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,57,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,63,"        return solve(f, min, max);",0,0,0,0,2,1,4,0,1,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,70,"        return solve(f, min, max, initial);",0,0,0,0,2,1,5,0,1,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,97,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,98,"        verifySequence(min, initial, max);",0,0,0,0,2,0,4,0,1,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,101,        double yInitial = f.value(initial);,1,0,0,1,2,1,3,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,102,        if (Math.abs(yInitial) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,103,"            setResult(initial, 0);",0,0,0,0,2,0,2,0,1,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,104,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,108,        double yMin = f.value(min);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,109,        if (Math.abs(yMin) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,110,"            setResult(yMin, 0);",0,0,0,0,2,0,2,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,111,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,115,        if (yInitial * yMin < 0) {,2,2,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,116,"            return solve(f, min, yMin, initial, yInitial, min, yMin);",0,0,0,0,2,1,8,0,1,4,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,120,        double yMax = f.value(max);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,121,        if (Math.abs(yMax) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,122,"            setResult(yMax, 0);",0,0,0,0,2,0,2,0,1,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,123,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,127,        if (yInitial * yMax < 0) {,2,2,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,128,"            return solve(f, initial, yInitial, max, yMax, initial, yInitial);",0,0,0,0,2,1,8,0,1,4,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,132,"        return solve(f, min, yMin, max, yMax, initial, yInitial);",0,0,0,0,2,1,8,0,1,4,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,158,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,159,"        verifyInterval(min, max);",0,0,0,0,2,0,3,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,161,        double ret = Double.NaN;,3,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,163,        double yMin = f.value(min);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,164,        double yMax = f.value(max);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,167,        double sign = yMin * yMax;,3,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,168,        if (sign > 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,170,            if (Math.abs(yMin) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,171,"                setResult(min, 0);",0,0,0,0,2,0,2,0,1,3,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,172,                ret = min;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,173,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,1,1,0,2,6,2,3,0,0,6,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,174,"                setResult(max, 0);",0,0,0,0,2,0,2,0,1,3,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,175,                ret = max;,2,0,0,0,0,0,0,0,1,2,10,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,178,                throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,183,        } else if (sign < 0){,1,1,0,1,4,2,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,185,"            ret = solve(f, min, yMin, max, yMax, min, yMin);",1,0,0,0,2,0,8,0,2,4,48,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,188,            if (yMin == 0.0) {,1,1,0,1,3,1,0,0,0,5,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,189,                ret = min;,2,0,0,0,0,0,0,0,1,2,10,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,191,                ret = max;,2,0,0,0,0,0,0,0,1,2,10,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,195,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,221,        double delta = x1 - x0;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,222,        double oldDelta = delta;,2,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,224,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,225,        while (i < maximalIterationCount) {,2,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,226,            if (Math.abs(y2) < Math.abs(y1)) {,0,1,0,2,7,1,6,0,0,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,228,                x0 = x1;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,229,                x1 = x2;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,230,                x2 = x0;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,231,                y0 = y1;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,232,                y1 = y2;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,233,                y2 = y0;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,235,            if (Math.abs(y1) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,239,"                setResult(x1, i);",0,0,0,0,2,0,3,0,1,3,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,240,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,242,            double dx = (x2 - x1);,3,1,0,1,2,1,0,0,0,5,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,243,            double tolerance =,1,0,0,0,0,1,0,0,0,2,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,245,            if (Math.abs(dx) <= tolerance) {,1,1,0,2,5,1,3,0,0,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,246,"                setResult(x1, i);",0,0,0,0,2,0,3,0,1,3,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,247,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,249,            if ((Math.abs(oldDelta) < tolerance) ||,1,2,0,2,5,1,3,0,0,6,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,252,                delta = 0.5 * dx;,2,1,0,0,0,0,0,0,1,3,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,253,                oldDelta = delta;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,255,                double r3 = y1 / y0;,3,1,0,0,0,1,0,0,0,3,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,261,                if (x0 == x2) {,2,1,0,1,3,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,263,                    p = dx * r3;,3,1,0,0,0,0,0,0,1,3,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,264,                    p1 = 1.0 - r3;,2,1,0,0,0,0,0,0,1,3,14,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,267,                    double r1 = y0 / y2;,3,1,0,0,0,1,0,0,0,3,20,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,268,                    double r2 = y1 / y2;,3,1,0,0,0,1,0,0,0,3,20,11,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,269,                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));,9,7,0,2,8,0,0,0,1,5,56,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,270,                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);,4,4,0,1,6,0,0,0,1,5,42,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,272,                if (p > 0.0) {,1,1,0,1,3,1,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,273,                    p1 = -p1;,2,0,0,0,0,0,0,0,2,2,9,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,275,                    p = -p;,2,0,0,0,0,0,0,0,2,2,7,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,277,                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||,5,6,0,1,3,1,2,0,0,6,58,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,282,                    delta = 0.5 * dx;,2,1,0,0,0,0,0,0,1,3,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,283,                    oldDelta = delta;,2,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,285,                    oldDelta = delta;,2,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,286,                    delta = p / p1;,3,1,0,0,0,0,0,0,1,3,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,290,            x0 = x1;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,291,            y0 = y1;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,293,            if (Math.abs(delta) > tolerance) {,1,1,0,2,5,1,3,0,0,6,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,294,                x1 = x1 + delta;,3,1,0,0,0,0,0,0,1,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,295,            } else if (dx > 0.0) {,1,1,0,1,4,2,0,0,0,5,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,296,                x1 = x1 + 0.5 * tolerance;,3,2,0,0,0,0,0,0,1,3,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,297,            } else if (dx <= 0.0) {,1,1,0,1,4,2,0,0,0,5,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,298,                x1 = x1 - 0.5 * tolerance;,3,2,0,0,0,0,0,0,1,3,26,10,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,300,            y1 = f.value(x1);,1,0,0,1,2,0,3,0,1,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,301,            if ((y1 > 0) == (y2 > 0)) {,2,3,0,2,7,1,0,0,0,5,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,302,                x2 = x0;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,303,                y2 = y0;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,304,                delta = x1 - x0;,3,1,0,0,0,0,0,0,1,3,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,305,                oldDelta = delta;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,307,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,308,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,309,        throw new MaxIterationsExceededException(maximalIterationCount);,1,0,0,1,2,2,0,1,1,6,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,74,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,41,    protected boolean resultComputed = false;,1,0,0,0,0,2,0,0,2,3,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,75,        if (f == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,76,"            throw MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");",0,0,0,1,2,1,2,0,1,5,94,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,78,        this.f = f;,2,0,0,0,0,1,0,0,1,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,79,        this.defaultFunctionValueAccuracy = 1.0e-15;,1,0,0,0,0,1,0,0,1,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,80,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,2,0,0,0,0,1,0,0,1,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,81,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,93,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,94,        this.defaultFunctionValueAccuracy = 1.0e-15;,1,0,0,0,0,1,0,0,1,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,95,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,2,0,0,0,0,1,0,0,1,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,96,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,102,        if (!resultComputed) {,1,0,0,1,3,1,0,0,1,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,103,"            throw MathRuntimeException.createIllegalStateException(""no result available"");",0,0,0,1,2,1,2,0,1,5,78,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,105,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,109,        checkResultComputed();,0,0,0,1,2,0,1,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,110,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,115,        checkResultComputed();,0,0,0,1,2,0,1,0,1,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,116,        return functionValue;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,121,        functionValueAccuracy = accuracy;,2,0,0,0,0,0,0,0,1,2,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,122,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,126,        return functionValueAccuracy;,1,0,0,0,0,1,0,0,0,2,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,131,        functionValueAccuracy = defaultFunctionValueAccuracy;,2,0,0,0,0,0,0,0,1,2,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,132,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,141,        this.result         = result;,2,0,0,0,0,1,0,0,1,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,142,        this.iterationCount = iterationCount;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,143,        this.resultComputed = true;,1,0,0,0,0,1,0,0,2,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,155,        this.result         = x;,2,0,0,0,0,1,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,156,        this.functionValue  = fx;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,157,        this.iterationCount = iterationCount;,2,0,0,0,0,1,0,0,1,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,158,        this.resultComputed = true;,1,0,0,0,0,1,0,0,2,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,159,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,165,        this.iterationCount = 0;,1,0,0,0,0,1,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,166,        this.resultComputed = false;,1,0,0,0,0,1,0,0,2,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,167,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,182,        final double f1 = f.value(lower);,1,0,0,1,2,2,3,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,183,        final double f2 = f.value(upper);,1,0,0,1,2,2,3,0,1,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,184,        return ((f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0));,4,7,0,2,6,1,0,0,0,5,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,196,        return (start < mid) && (mid < end);,4,3,0,1,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,208,        if (lower >= upper) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,209,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,213,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,225,"        if (!isSequence(lower, initial, upper)) {",0,0,0,0,5,1,4,0,2,4,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,226,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,230,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,247,"        verifyInterval(lower, upper);",0,0,0,0,2,0,3,0,1,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,248,"        if (!isBracketing(lower, upper, f)) {",0,0,0,0,5,1,4,0,2,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,249,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,254,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,61,                                      final double defaultAbsoluteAccuracy) {,1,0,0,0,2,2,0,0,1,4,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,63,        this.defaultRelativeAccuracy = 1.0e-14;,1,0,0,0,0,1,0,0,1,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,65,        this.relativeAccuracy = defaultRelativeAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,67,        this.maximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,68,        this.iterationCount = 0;,1,0,0,0,0,1,0,0,1,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,69,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,73,        return iterationCount;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,78,        absoluteAccuracy = accuracy;,2,0,0,0,0,0,0,0,1,2,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,79,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,83,        return absoluteAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,88,        absoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,0,0,0,1,2,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,89,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,93,        maximalIterationCount = count;,2,0,0,0,0,0,0,0,1,2,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,94,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,98,        return maximalIterationCount;,1,0,0,0,0,1,0,0,0,2,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,103,        maximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,0,0,0,1,2,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,104,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,108,        relativeAccuracy = accuracy;,2,0,0,0,0,0,0,0,1,2,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,109,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,113,        return relativeAccuracy;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,118,        relativeAccuracy = defaultRelativeAccuracy;,2,0,0,0,0,0,0,0,1,2,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,119,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,235,    private static class LazyHolder {,1,0,0,0,1,3,0,0,2,4,33,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,237,        private static final UnivariateRealSolverFactory FACTORY =,1,0,0,0,0,3,0,1,3,4,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,34,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,35,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,53,        setup(f);,0,0,0,1,2,0,2,0,1,4,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,54,"        return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);",2,0,0,1,4,1,5,0,0,5,62,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,77,        setup(f);,0,0,0,1,2,0,2,0,1,4,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,78,        UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();,3,0,0,1,2,0,1,1,0,5,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,79,        solver.setAbsoluteAccuracy(absoluteAccuracy);,0,0,0,1,2,0,3,0,0,3,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,80,"        return solver.solve(f, x0, x1);",0,0,0,0,2,1,5,0,0,3,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,171,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");",0,0,0,1,2,1,2,0,1,5,78,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,174,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,178,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,1,2,0,0,3,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,199,            throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,207,"        return new double[]{a, b};",2,0,0,0,4,3,0,0,0,3,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,218,        return (a + b) * .5;,2,2,0,1,2,1,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,227,        if (f == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,228,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");",0,0,0,1,2,1,2,0,1,5,78,7,0.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,230,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
