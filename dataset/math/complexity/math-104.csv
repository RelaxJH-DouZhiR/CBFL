dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/special/Gamma,104,200,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.16667,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,243,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,248,                    return ((2.0 * n) + 1.0) - a + x;,3,4,0,2,4,1,0,0,0,5,33,14,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,252,                    return n * (a - n);,3,2,0,1,2,1,0,0,0,5,19,14,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,237,        } else if (x < a || a < 1.0) {,3,3,0,1,4,2,0,0,0,5,30,6,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,243,            ContinuedFraction cf = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,48,8,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,256,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,1,5,51,8,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,257,            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;,4,4,0,3,8,0,7,0,3,6,59,8,0.04,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,235,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.03846,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,120,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,4,0,1,5,67,4,0.03704,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,168,            double n = 0.0; // current element index,1,0,0,0,0,1,0,0,0,2,40,9,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,169,            double an = 1.0 / a; // n-th element in the series,2,1,0,0,0,1,0,0,0,3,50,9,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,170,            double sum = an; // partial sum,2,0,0,0,0,1,0,0,0,2,31,9,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,171,            while (Math.abs(an) > epsilon && n < maxIterations) {,3,3,0,2,5,1,3,0,0,6,53,8,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,173,                n = n + 1.0;,2,1,0,0,0,0,0,0,1,3,12,10,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,174,                an = an * (x / (a + n));,5,3,0,2,4,0,0,0,1,5,24,10,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,177,                sum = sum + an;,3,1,0,0,0,0,0,0,1,3,15,10,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,179,            if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,8,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,182,                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;,4,4,0,3,8,0,7,0,3,6,59,10,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,233,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,260,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.03226,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,162,        } else if (a >= 1.0 && x > a) {,3,3,0,1,4,2,0,0,0,5,31,6,0.02703,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,160,        } else if (x == 0.0) {,1,1,0,1,4,2,0,0,0,5,22,5,0.02564,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,158,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,0.02273,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,186,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.02273,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,51,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,133,        double p0 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,134,"        double p1 = getA(0, x);",1,0,0,0,2,1,2,0,1,5,23,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,135,        double q0 = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,136,        double q1 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,137,        double c = p1 / q1;,3,1,0,0,0,1,0,0,0,3,19,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,138,        int n = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,139,        double relativeError = Double.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,40,5,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,140,        while (n < maxIterations && relativeError > epsilon) {,4,3,0,1,3,1,0,0,0,5,54,4,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,141,            ++n;,1,0,0,0,0,0,0,0,1,2,4,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,142,"            double a = getA(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,143,"            double b = getB(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,144,            double p2 = a * p1 + b * p0;,5,3,0,0,0,1,0,0,0,3,28,7,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,145,            double q2 = a * q1 + b * q0;,5,3,0,0,0,1,0,0,0,3,28,7,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,146,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0,1,0,2,7,1,6,0,0,5,53,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,161,            double r = p2 / q2;,3,1,0,0,0,1,0,0,0,3,19,7,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,162,            relativeError = Math.abs(r / c - 1.0);,3,2,0,1,2,0,2,0,1,6,38,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,165,            c = p2 / q2;,3,1,0,0,0,0,0,0,1,3,12,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,166,            p0 = p1;,2,0,0,0,0,0,0,0,1,2,8,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,167,            p1 = p2;,2,0,0,0,0,0,0,0,1,2,8,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,168,            q0 = q1;,2,0,0,0,0,0,0,0,1,2,8,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,169,            q1 = q2;,2,0,0,0,0,0,0,0,1,2,8,6,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,170,        },0,0,0,0,1,0,0,0,0,1,1,2,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,172,        if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,4,0.01515,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,178,        return c;,1,0,0,0,0,1,0,0,0,2,9,4,0.01515,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,93,            double g = 607.0 / 128.0;,1,1,0,0,0,1,0,0,0,3,25,7,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,95,            double sum = 0.0;,1,0,0,0,0,1,0,0,0,2,17,7,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,96,            for (int i = lanczos.length - 1; i > 0; --i) {,5,2,0,1,3,2,0,0,1,6,46,6,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,97,                sum = sum + (lanczos[i] / (x + i));,4,3,1,2,6,0,0,0,1,6,35,8,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,99,            sum = sum + lanczos[0];,2,1,1,0,2,0,0,0,1,5,23,6,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,101,            double tmp = x + g + .5;,3,1,0,0,0,1,0,0,0,3,24,7,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,102,            ret = ((x + .5) * Math.log(tmp)) - tmp +,3,5,0,2,6,0,3,0,1,6,40,6,0.0125,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,90,        if (Double.isNaN(x) || (x <= 0.0)) {,1,2,0,2,7,1,3,0,0,6,36,4,0.01205,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,106,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.01205,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,40,    private static double[] lanczos =,1,0,0,0,2,3,0,0,2,4,33,2,0.01111,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,60,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,3,2,0,1,2,4,2,0,3,7,74,2,0.01111,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,36,"        super(""Maximal number of iterations ({0}) exceeded"",",0,0,0,1,5,1,0,0,2,4,52,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,38,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,39,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,50,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,51,        this.maxIterations = maxIterations;,2,0,0,0,0,1,0,0,1,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,52,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,58,        return maxIterations;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,34,"        super(""Convergence failed"", new Object[0]);",0,0,0,0,4,2,0,1,2,4,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,35,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,44,"        super(pattern, arguments);",2,0,0,0,2,1,0,0,1,4,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,52,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,63,"        super(pattern, arguments, cause);",3,0,0,0,2,1,0,0,1,4,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,77,"        super(msg, rootCause);",2,0,0,0,2,1,0,0,1,4,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,78,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,89,        super(msg);,1,0,0,1,2,1,0,0,1,5,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,90,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,123,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,124,        this.pattern   = null;,1,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,125,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,126,        this.rootCause = null;,1,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,127,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,137,        super(msg);,1,0,0,1,2,1,0,0,1,5,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,138,        this.pattern   = msg;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,139,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,140,        this.rootCause = null;,1,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,141,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,151,"      super(buildMessage(pattern, arguments, Locale.US));",2,0,0,0,4,1,3,0,2,5,51,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,152,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,153,      this.arguments = arguments;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,154,      this.rootCause = null;,1,0,0,0,0,1,0,0,1,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,155,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,165,        super((rootCause == null ? null : rootCause.getMessage()));,1,1,0,3,6,1,2,0,1,7,59,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,166,        this.pattern   = getMessage();,1,0,0,1,2,1,1,0,2,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,167,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,168,        this.rootCause = rootCause;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,169,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,181,        super(msg);,1,0,0,1,2,1,0,0,1,5,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,182,        this.pattern   = msg;,2,0,0,0,0,1,0,0,1,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,183,        this.arguments = new Object[0];,1,0,0,0,2,2,0,1,1,5,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,184,        this.rootCause = rootCause;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,185,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,197,"      super(buildMessage(pattern, arguments, Locale.US));",2,0,0,0,4,1,3,0,2,5,51,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,198,      this.pattern   = pattern;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,199,      this.arguments = arguments;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,200,      this.rootCause = rootCause;,2,0,0,0,0,1,0,0,1,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,201,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,47,        boolean flag = false;,1,0,0,0,0,1,0,0,1,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,49,"            Throwable.class.getDeclaredMethod(""getCause"", new Class[0]);",0,0,0,0,4,2,1,2,1,5,60,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,50,            flag = true;,1,0,0,0,0,0,0,0,2,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,53,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,51,        } catch (NoSuchMethodException ex) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,52,            flag = false;,1,0,0,0,0,0,0,0,2,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,54,        JDK_SUPPORTS_NESTED = flag;,2,0,0,0,0,0,0,0,1,2,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,57,    private static ResourceBundle cachedResources = null;,1,0,0,0,0,2,0,1,2,4,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,83,            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {,1,2,0,3,11,1,4,0,1,7,82,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,85,                cachedResources =,1,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,89,            if (cachedResources.getLocale().getLanguage().equals(locale.getLanguage())) {,0,0,0,3,11,1,6,0,0,4,77,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,91,                return cachedResources.getString(s);,0,0,0,1,2,1,3,0,0,4,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,96,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,94,        } catch (MissingResourceException mre) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,100,        return s;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,113,"        MessageFormat mf = new MessageFormat(translate(pattern, locale));",1,0,0,0,4,1,3,2,2,6,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,114,        mf.setLocale(locale);,0,0,0,1,2,0,3,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,115,        return mf.format(arguments);        ,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,208,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,216,        return arguments;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,226,"        return (pattern == null) ? null : buildMessage(pattern, arguments, locale);",1,1,0,1,4,1,4,0,1,7,75,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,235,        return rootCause;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,242,        printStackTrace(System.err);,2,0,0,1,2,0,1,0,1,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,243,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,251,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,252,"            PrintWriter pw = new PrintWriter(out, false);",2,0,0,0,2,1,0,2,2,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,253,            printStackTrace(pw);,0,0,0,1,2,0,2,0,1,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,255,            pw.flush();,0,0,0,1,2,0,2,0,0,3,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,256,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,257,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,265,        synchronized (out) {,1,0,0,1,3,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,266,            super.printStackTrace(out);,2,0,0,1,2,1,0,0,0,4,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,267,            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {,2,3,0,1,3,1,0,0,1,6,56,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,268,"                out.print(""Caused by: "");",0,0,0,1,2,0,2,0,1,4,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,269,                rootCause.printStackTrace(out);,0,0,0,1,2,0,3,0,0,3,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,271,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,104,272,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,79,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,90,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,101,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,148,                if (a != 0.0) {,1,1,0,1,3,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,149,                    p2 = p1 + (b / a * p0);,5,3,0,1,2,0,0,0,1,5,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,150,                    q2 = q1 + (b / a * q0);,5,3,0,1,2,0,0,0,1,5,23,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,151,                } else if (b != 0) {,1,1,0,1,4,2,0,0,0,5,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,152,                    p2 = (a / b * p1) + p0;,5,3,0,1,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,153,                    q2 = (a / b * q1) + q0;,5,3,0,1,2,0,0,0,1,5,23,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,156,                    throw new ConvergenceException(,0,0,0,0,1,2,0,1,1,4,31,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,173,"            throw new MaxIterationsExceededException(maxIterations,",1,0,0,0,1,2,0,1,1,5,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,67,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,91,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,159,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,161,            ret = 0.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,165,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,180,                throw new MaxIterationsExceededException(maxIterations);,1,0,0,1,2,2,0,1,1,6,56,10,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,234,            ret = Double.NaN;,3,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,236,            ret = 1.0;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/special/Gamma,104,240,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",1,1,0,0,2,0,5,0,2,5,60,8,0.0,0,0
