dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,349,            sign = 1;,1,0,0,0,0,0,0,0,1,2,9,5,0.33333,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,350,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.33333,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,58,"        this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());",1,0,0,1,4,1,1,0,1,6,60,4,0.28571,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,59,    },0,0,0,0,1,0,0,0,0,1,1,2,0.28571,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,237,        return getDefaultNumberFormat(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,51,4,0.28571,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,361,"        parseAndIgnoreWhitespace(source, pos);",0,0,0,0,2,0,3,0,1,3,38,4,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,364,"        Number im = parseNumber(source, getRealFormat(), pos);",1,0,0,1,4,0,4,1,2,6,54,4,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,365,        if (im == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,374,        int n = getImaginaryCharacter().length();,1,0,0,1,4,1,2,0,1,6,41,5,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,375,        startIndex = pos.getIndex();,1,0,0,1,2,0,2,0,1,5,28,4,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,376,        int endIndex = startIndex + n;,3,1,0,0,0,1,0,0,0,3,30,5,0.18182,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,377,        if (,0,0,0,0,1,1,0,0,0,2,4,2,0.18182,1,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,321,        int initialIndex = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,34,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,324,"        parseAndIgnoreWhitespace(source, pos);",0,0,0,0,2,0,3,0,1,3,38,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,327,"        Number re = parseNumber(source, getRealFormat(), pos);",1,0,0,1,4,0,4,1,2,6,54,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,328,        if (re == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,337,        int startIndex = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,32,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,338,"        char c = parseNextCharacter(source, pos);",1,0,0,0,2,1,3,0,1,5,41,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,339,        int sign = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,340,        switch (c) {,1,0,0,1,3,1,0,0,0,4,12,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,399,"        parseNextCharacter(source, pos);",0,0,0,0,2,0,3,0,1,3,32,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,400,        pos.setIndex(pos.getIndex() - 1);,0,1,0,2,4,0,4,0,0,4,33,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,401,    },0,0,0,0,1,0,0,0,0,1,1,2,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,411,         int index = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,412,         int n = source.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,413,         char ret = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,415,         if (index < n) {,2,1,0,1,3,1,0,0,0,5,16,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,418,                 c = source.charAt(index++);,2,0,0,1,2,0,2,0,2,5,27,8,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,419,             } while (Character.isWhitespace(c) && index < n);,2,2,0,2,5,1,3,0,0,6,49,6,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,420,             pos.setIndex(index);,0,0,0,1,2,0,3,0,0,3,20,7,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,422,             if (index < n) {,2,1,0,1,3,1,0,0,0,5,16,6,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,423,                 ret = c;,2,0,0,0,0,0,0,0,1,2,8,8,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,427,         return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,471,        int startIndex = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,32,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,472,"        Number number = format.parse(source, pos);",1,0,0,0,2,0,4,1,0,4,42,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,473,        int endIndex = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,30,5,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,476,        if (startIndex == endIndex) {,2,1,0,1,3,1,0,0,0,5,29,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,487,        return number;,1,0,0,0,0,1,0,0,0,2,14,4,0.16667,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,258,        return imaginaryCharacter;,1,0,0,0,0,1,0,0,0,2,26,4,0.08696,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,292,        return realFormat;,1,0,0,0,0,1,0,0,0,2,18,4,0.07143,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,67,"        this(DEFAULT_IMAGINARY_CHARACTER, format);",2,0,0,0,2,1,0,0,0,3,42,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,97,"        this(imaginaryCharacter, format, (NumberFormat)format.clone());",2,0,0,1,6,1,2,1,0,6,63,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,98,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,110,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,111,        setImaginaryCharacter(imaginaryCharacter);,0,0,0,1,2,0,2,0,1,4,42,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,112,        setImaginaryFormat(imaginaryFormat);,0,0,0,1,2,0,2,0,1,4,36,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,113,        setRealFormat(realFormat);,0,0,0,1,2,0,2,0,1,4,26,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,114,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,248,        NumberFormat nf = NumberFormat.getInstance(locale);,1,0,0,1,2,0,3,1,0,5,51,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,249,        nf.setMaximumFractionDigits(2);,0,0,0,1,2,0,2,0,0,3,31,5,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,250,        return nf;,1,0,0,0,0,1,0,0,0,2,10,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,283,        NumberFormat f = getDefaultNumberFormat(locale);,1,0,0,1,2,0,2,1,1,6,48,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,284,        return new ComplexFormat(f);,1,0,0,1,2,2,0,1,1,6,28,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,508,        if (imaginaryCharacter == null || imaginaryCharacter.length() == 0) {,1,3,0,2,5,1,2,0,0,6,69,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,512,        this.imaginaryCharacter = imaginaryCharacter;,2,0,0,0,0,1,0,0,1,3,45,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,513,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,522,        if (imaginaryFormat == null) {,1,1,0,1,3,1,0,0,0,5,30,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,526,        this.imaginaryFormat = imaginaryFormat;,2,0,0,0,0,1,0,0,1,3,39,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,527,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,536,        if (realFormat == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,540,        this.realFormat = realFormat;,2,0,0,0,0,1,0,0,1,3,29,4,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,541,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05882,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,78,"        this(DEFAULT_IMAGINARY_CHARACTER, realFormat, imaginaryFormat);",3,0,0,0,2,1,0,0,0,3,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,79,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,87,"        this(imaginaryCharacter, getDefaultNumberFormat());",1,0,0,1,4,1,1,0,1,6,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,88,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,124,        return getInstance().format( c );,0,0,0,1,4,1,3,0,1,5,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,139,        pos.setBeginIndex(0);,0,0,0,1,2,0,2,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,140,        pos.setEndIndex(0);,0,0,0,1,2,0,2,0,0,3,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,143,        double re = complex.getReal();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,144,"        formatDouble(re, getRealFormat(), toAppendTo, pos);",0,0,0,1,4,0,5,0,2,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,147,        double im = complex.getImaginary();,1,0,0,1,2,1,2,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,148,        if (im < 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,149,"            toAppendTo.append("" - "");",0,0,0,1,2,0,2,0,1,4,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,150,"            formatDouble(-im, getImaginaryFormat(), toAppendTo, pos);",1,0,0,1,4,0,4,0,3,5,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,151,            toAppendTo.append(getImaginaryCharacter());,0,0,0,2,4,0,3,0,1,4,43,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,152,        } else if (im > 0.0 || Double.isNaN(im)) {,1,2,0,2,6,2,3,0,0,6,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,153,"            toAppendTo.append("" + "");",0,0,0,1,2,0,2,0,1,4,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,154,"            formatDouble(im, getImaginaryFormat(), toAppendTo, pos);",0,0,0,1,4,0,5,0,2,4,56,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,155,            toAppendTo.append(getImaginaryCharacter());,0,0,0,2,4,0,3,0,1,4,43,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,158,        return toAppendTo;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,177,        StringBuffer ret = null;,1,0,0,0,0,0,0,1,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,179,        if (obj instanceof Complex) {,1,0,0,1,3,2,0,1,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,180,"            ret = format( (Complex)obj, toAppendTo, pos);",2,0,0,1,4,0,3,1,2,6,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,181,        } else if (obj instanceof Number) {,1,0,0,1,4,3,0,1,0,5,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,182,"            ret = format( new Complex(((Number)obj).doubleValue(), 0.0),",2,0,0,2,9,1,2,2,3,7,60,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,185,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,189,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,211,        if( Double.isNaN(value) || Double.isInfinite(value) ) {,0,1,0,2,7,1,6,0,0,5,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,212,            toAppendTo.append('(');,0,0,0,1,3,0,2,0,1,4,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,213,            toAppendTo.append(value);,0,0,0,1,2,0,3,0,0,3,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,214,            toAppendTo.append(')');,0,0,0,1,3,0,2,0,1,4,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,216,"            format.format(value, toAppendTo, pos);",0,0,0,0,2,0,5,0,0,2,38,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,218,        return toAppendTo;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,227,        return NumberFormat.getAvailableLocales();,0,0,0,1,2,1,2,0,0,4,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,266,        return imaginaryFormat;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,274,        return getInstance(Locale.getDefault());,0,0,0,2,4,1,3,0,1,5,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,304,        ParsePosition parsePosition = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,305,"        Complex result = parse(source, parsePosition);",1,0,0,0,2,0,3,1,1,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,306,        if (parsePosition.getIndex() == 0) {,0,1,0,2,5,1,2,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,307,"            throw new ParseException(""Unparseable complex number: \"""" + source +",1,1,0,0,1,2,0,1,2,6,68,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,310,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,332,            pos.setIndex(initialIndex);,0,0,0,1,2,0,3,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,333,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,344,"            return new Complex(re.doubleValue(), 0.0);",0,0,0,1,4,2,2,1,1,6,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,346,            sign = -1;,1,0,0,0,0,0,0,0,2,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,347,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,355,            pos.setIndex(initialIndex);,0,0,0,1,2,0,3,0,0,3,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,356,            pos.setErrorIndex(startIndex);,0,0,0,1,2,0,3,0,0,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,357,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,369,            pos.setIndex(initialIndex);,0,0,0,1,2,0,3,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,370,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,382,            pos.setIndex(initialIndex);,0,0,0,1,2,0,3,0,0,3,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,383,            pos.setErrorIndex(startIndex);,0,0,0,1,2,0,3,0,0,3,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,384,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,386,        pos.setIndex(endIndex);,0,0,0,1,2,0,3,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,388,"        return new Complex(re.doubleValue(), im.doubleValue() * sign);",1,1,0,1,6,2,4,1,1,8,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,440,        Number ret = null;,1,0,0,0,0,0,0,1,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,442,        StringBuffer sb = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,443,        sb.append('(');,0,0,0,1,3,0,2,0,1,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,444,        sb.append(value);,0,0,0,1,2,0,3,0,0,3,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,445,        sb.append(')');,0,0,0,1,3,0,2,0,1,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,447,        int n = sb.length();,1,0,0,1,2,1,2,0,0,5,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,448,        int startIndex = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,449,        int endIndex = startIndex + n;,3,1,0,0,0,1,0,0,0,3,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,450,        if (endIndex < source.length()) {,1,1,0,2,5,1,2,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,451,"            if (source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0) {",0,1,0,2,9,1,7,0,0,5,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,452,                ret = new Double(value);,2,0,0,1,2,1,0,1,2,6,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,453,                pos.setIndex(endIndex);,0,0,0,1,2,0,3,0,0,3,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,457,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,478,"            double[] special = {Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY};",7,0,0,0,4,1,0,0,0,3,84,7,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,479,            for (int i = 0; i < special.length; ++i) {,5,1,0,1,3,2,0,0,1,6,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,480,"                number = parseNumber(source, special[i], pos);",1,0,1,0,4,0,3,0,2,5,46,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,481,                if (number != null) {,1,1,0,1,3,1,0,0,0,5,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,482,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,499,"        return parse(source, pos);",0,0,0,0,2,1,3,0,1,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,509,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,523,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/complex/ComplexFormat,101,537,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
