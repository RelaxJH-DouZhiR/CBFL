dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,math,org/apache/commons/math/util/FastMath,62,2326,                k--;,16,3,0,0,0,0,0,0,0,23,4,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2327,            },12,2,0,0,1,1,6,0,0,22,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2328,            quadrant = k & 3;,4,1,0,0,0,0,0,0,0,6,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2329,            xa = remA;,4,0,0,0,0,0,0,0,0,5,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2330,            xb = remB;,4,0,0,0,0,0,4,0,0,9,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2336,        switch (quadrant) {,8,0,0,1,3,0,0,2,0,10,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2338,"                return cosQ(xa, xb);",0,1,0,1,2,1,22,0,0,23,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2340,"                return -sinQ(xa, xb);",8,1,0,1,2,1,6,0,0,17,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2342,"                return -cosQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2344,"                return sinQ(xa, xb);",2,1,0,1,2,1,6,0,0,9,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2346,                return Double.NaN;,4,0,0,0,0,1,6,0,0,11,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2356,        boolean negative = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2357,        int quadrant = 0;,6,0,0,0,0,0,0,0,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2360,        double xa = x;,16,13,0,0,0,0,2,2,0,34,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2361,        if (x < 0) {,2,2,0,1,3,0,18,0,0,22,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2362,            negative = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2363,            xa = -xa;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2367,        if (xa == 0.0) {,6,2,0,1,3,0,6,2,0,16,16,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2368,            long bits = Double.doubleToLongBits(x);,2,0,1,1,2,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2369,            if (bits < 0) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2370,                return -0.0;,8,2,0,0,0,1,0,0,0,12,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2372,            return 0.0;,6,1,0,0,0,1,0,0,0,7,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2375,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,10,3,0,1,3,0,0,0,0,13,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2376,            return Double.NaN;,12,1,0,0,0,1,0,0,0,15,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2380,        double xb = 0;,4,0,0,0,0,1,6,4,0,15,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2381,        if (xa > 3294198.0) {,2,0,0,1,3,0,0,0,0,2,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2385,            double reduceResults[] = new double[3];,6,0,0,2,4,0,0,0,0,6,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2386,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2387,            quadrant = ((int) reduceResults[0]) & 3;,2,1,1,3,6,0,0,0,0,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2388,            xa = reduceResults[1];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2389,            xb = reduceResults[2];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2390,        } else if (xa > 1.5707963267948966) {,2,1,0,1,4,0,0,0,0,3,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2395,            int k = (int)(xa * 0.6366197723675814);,10,1,0,2,4,0,0,0,0,12,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2401,                double a = -k * 1.570796251296997;,4,1,0,0,0,0,0,0,0,6,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2402,                remA = xa + a;,6,1,0,0,0,0,0,0,0,8,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2403,                remB = -(remA - xa - a);,10,1,0,1,2,0,0,0,0,13,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2405,                a = -k * 7.549789948768648E-8;,4,1,0,0,0,0,0,0,0,6,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2406,                double b = remA;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2407,                remA = a + b;,2,0,1,0,0,0,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2408,                remB += -(remA - b - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2410,                a = -k * 6.123233995736766E-17;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2411,                b = remA;,4,0,0,0,0,0,0,0,0,5,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2412,                remA = a + b;,6,1,0,0,0,0,0,0,0,8,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2413,                remB += -(remA - b - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2415,                if (remA > 0.0),8,1,1,1,2,1,0,2,0,14,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2416,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2421,                k--;,6,1,1,0,0,0,0,0,0,12,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2422,            },8,1,0,0,1,0,0,0,0,10,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2423,            quadrant = k & 3;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2424,            xa = remA;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2425,            xb = remB;,4,0,0,0,0,0,0,0,0,5,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2428,        if (xa > 1.5) {,2,0,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2430,            final double pi2a = 1.5707963267948966;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2431,            final double pi2b = 6.123233995736766E-17;,2,0,0,0,0,1,0,0,0,3,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2433,            final double a = pi2a - xa;,4,0,0,0,0,0,0,0,0,4,27,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2434,            double b = -(a - pi2a + xa);,8,2,0,1,2,0,0,0,0,11,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2435,            b += pi2b - xb;,6,1,0,0,0,0,6,0,0,14,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2437,            xa = a + b;,6,1,0,0,0,0,0,0,0,8,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2438,            xb = -(xa - a - b);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2439,            quadrant ^= 1;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2440,            negative ^= true;,2,0,0,0,0,0,0,0,0,4,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2444,        if ((quadrant & 1) == 0) {,4,2,0,2,5,0,0,0,0,6,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2445,"            result = tanQ(xa, xb, false);",0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2447,"            result = -tanQ(xa, xb, true);",4,0,0,1,2,0,6,0,0,13,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2450,        if (negative) {,4,0,0,1,3,0,0,0,0,4,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2451,            result = -result;,6,0,0,0,0,0,0,0,0,8,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2454,        return result;,16,3,0,0,0,1,0,0,0,20,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2463,"        return atan(x, 0.0, false);",2,0,1,1,2,2,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2473,        boolean negate = false;,6,1,0,0,0,0,0,0,0,9,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2476,        if (xa < 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2478,            xa = -xa;,8,0,0,0,0,0,0,2,0,12,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2479,            xb = -xb;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2480,            negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2483,        if (xa > 1.633123935319537E16) { // Very large input,2,1,0,1,3,0,0,0,0,3,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2484,            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);,16,7,0,3,6,1,0,0,0,24,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2488,        if (xa < 1.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2489,            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);,0,0,0,4,8,0,0,0,0,12,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2491,            double temp = 1.0/xa;,8,2,0,0,0,0,0,0,0,12,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2492,            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);,8,4,0,4,8,0,0,0,0,15,74,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2494,        double epsA = xa - TANGENT_TABLE_A[idx];,6,1,1,1,2,0,0,0,0,11,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2495,        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);,14,3,1,2,4,0,0,0,0,23,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2496,        epsB += xb - TANGENT_TABLE_B[idx];,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2498,        double temp = epsA + epsB;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2499,        epsB = -(temp - epsA - epsB);,12,1,1,1,2,0,0,0,0,18,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2500,        epsA = temp;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2503,        temp = xa * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2504,        double ya = xa + temp - temp;,8,2,0,0,0,0,0,0,0,10,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2505,        double yb = xb + xa - ya;,8,2,0,0,0,0,0,0,0,10,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2506,        xa = ya;,4,0,0,0,0,0,0,0,0,5,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2507,        xb += yb;,10,1,0,0,0,1,6,0,0,19,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2510,        if (idx == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2513,            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,6,5,1,5,10,0,0,0,0,19,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2515,            ya = epsA * denom;,6,1,0,0,0,0,0,0,0,8,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2516,            yb = epsB * denom;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2517,        } else {,2,0,1,0,2,1,0,0,0,7,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2518,            double temp2 = xa * TANGENT_TABLE_A[idx];,4,1,1,1,2,0,0,0,0,9,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2519,            double za = 1.0 + temp2;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2520,            double zb = -(za - 1.0 - temp2);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2521,            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];,6,3,1,2,4,0,0,0,0,18,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2522,            temp = za + temp2;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2523,            zb += -(temp - za - temp2);,8,1,0,1,2,0,0,0,0,11,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2524,            za = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2526,            zb += xb * TANGENT_TABLE_B[idx];,6,1,1,1,2,1,0,0,0,13,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2527,            ya = epsA / za;,8,2,0,0,0,0,0,0,0,12,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2529,            temp = ya * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2530,            final double yaa = (ya + temp) - temp;,16,7,0,1,2,0,0,0,0,23,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2531,            final double yab = ya - yaa;,6,1,0,0,0,1,0,0,0,8,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2533,            temp = za * 1073741824.0;,10,3,0,0,0,0,0,0,0,15,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2534,            final double zaa = (za + temp) - temp;,14,3,0,1,2,1,0,0,0,18,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2535,            final double zab = za - zaa;,10,1,0,0,0,1,0,0,0,14,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2538,            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2540,            yb += -epsA * zb / za / za;,10,3,0,0,0,0,0,0,0,15,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2541,            yb += epsB / za;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2545,        epsA = ya;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2546,        epsB = yb;,10,0,0,0,0,0,0,2,0,14,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2549,        double epsA2 = epsA*epsA;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2560,        yb = 0.07490822288864472;,2,0,0,0,0,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2561,        yb = yb * epsA2 + -0.09088450866185192;,6,2,0,0,0,0,0,0,0,10,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2562,        yb = yb * epsA2 + 0.11111095942313305;,14,4,0,0,0,0,0,0,0,19,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2563,        yb = yb * epsA2 + -0.1428571423679182;,6,2,1,0,0,0,0,0,0,13,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2564,        yb = yb * epsA2 + 0.19999999999923582;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2565,        yb = yb * epsA2 + -0.33333333333333287;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2566,        yb = yb * epsA2 * epsA;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2569,        ya = epsA;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2571,        temp = ya + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2572,        yb = -(temp - ya - yb);,8,1,0,1,2,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2573,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2576,        yb += epsB / (1.0 + epsA * epsA);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2582,        double za = EIGHTHES[idx] + ya;,6,2,1,1,2,0,0,0,0,12,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2583,        double zb = -(za - EIGHTHES[idx] - ya);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2584,        temp = za + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2585,        zb += -(temp - za - yb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2586,        za = temp;,6,0,0,0,0,1,8,2,0,18,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2588,        result = za + zb;,6,1,0,0,0,0,0,0,0,8,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2589,        resultb = -(result - za - zb);,2,1,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2591,        if (leftPlane) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2593,            final double pia = 1.5707963267948966*2.0;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2594,            final double pib = 6.123233995736766E-17*2.0;,2,1,0,0,0,1,0,0,0,4,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2596,            za = pia - result;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2597,            zb = -(za - pia + result);,10,3,1,1,2,0,0,0,0,19,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2598,            zb += pib - resultb;,12,2,0,0,0,0,0,0,0,16,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2600,            result = za + zb;,16,2,0,0,0,0,0,0,0,20,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2601,            resultb = -(result - za - zb);,14,3,0,1,2,0,0,0,0,20,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2605,        if (negate ^ leftPlane) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2606,            result = -result;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2609,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2619,        if (x !=x || y != y) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2620,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2623,        if (y == 0.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2624,            double result = x*y;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2625,            double invx = 1.0/x;,2,0,0,0,0,0,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2626,            double invy = 1.0/y;,4,1,0,0,0,0,0,0,0,5,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2628,            if (invx == 0.0) { // X is infinite,12,3,1,1,3,2,0,0,0,21,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2629,                if (x > 0) {,2,1,0,1,3,0,0,0,0,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2630,                    return 0.0;,2,0,1,0,0,2,0,0,0,7,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2632,                    return Math.PI;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2636,            if (result != result) { // y must be infinite,8,1,0,1,3,0,0,0,0,9,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2637,                return x/y;,4,1,0,0,0,1,0,0,0,5,11,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2640,            if (x < 0.0 || invx < 0.0) {,4,4,1,1,3,0,0,0,0,21,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2641,                if (y < 0.0 || invy < 0.0) {,4,3,0,1,3,0,0,0,0,7,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2642,                    return -Math.PI;,4,0,0,0,0,1,0,0,0,5,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2644,                    return Math.PI;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2647,                return result;,2,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2651,        if (y == Double.POSITIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2652,            if (x == Double.POSITIVE_INFINITY) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2653,                return Math.PI/4.0;,12,2,0,0,0,1,0,0,0,16,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2656,            if (x == Double.NEGATIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2657,                return Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,6,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2660,            return Math.PI/2.0;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2663,        if (y == Double.NEGATIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2664,            if (x == Double.POSITIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2665,                return -Math.PI/4.0;,4,1,0,0,0,1,0,0,0,6,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2668,            if (x == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2669,                return -Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,7,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2672,            return -Math.PI/2.0;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2675,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2676,            if (y > 0.0 || 1/y > 0.0) {,20,8,0,1,3,1,0,0,0,31,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2677,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2680,            if (y < 0.0 || 1/y < 0.0) {,4,4,0,1,3,0,0,0,0,8,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2681,                return -0.0;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2685,        if (x == Double.NEGATIVE_INFINITY),8,1,0,1,2,0,0,0,0,10,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2687,            if (y > 0.0 || 1/y > 0.0) {,12,5,0,1,3,0,0,0,0,18,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2688,                return Math.PI;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2691,            if (y < 0.0 || 1/y < 0.0) {,4,4,0,1,3,0,0,0,0,8,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2692,                return -Math.PI;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2696,        if (x == 0) {,8,1,0,1,3,0,0,0,0,11,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2697,            if (y > 0.0 || 1/y > 0.0) {,12,5,0,1,3,0,0,0,0,18,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2698,                return Math.PI/2.0;,6,1,0,0,0,1,0,0,0,7,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2701,            if (y < 0.0 || 1/y < 0.0) {,12,6,0,1,3,1,0,0,0,19,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2702,                return -Math.PI/2.0;,6,1,0,0,0,1,0,2,0,10,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2706,        if (x > 8e298 || x < -8e298) { // This would cause split of x to fail,12,4,0,1,3,0,0,0,0,19,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2707,            x *= 9.31322574615478515625E-10;,2,0,0,0,0,0,0,0,0,3,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2708,            y *= 9.31322574615478515625E-10;,2,0,0,0,0,0,0,0,0,3,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2712,        double temp = x * 1073741824.0;,10,2,0,0,0,0,0,0,0,12,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2713,        final double xa = x + temp - temp;,8,2,0,0,0,1,0,0,0,11,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2714,        final double xb = x - xa;,6,1,0,0,0,0,0,0,0,8,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2717,        final double r = y/x;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2718,        temp = r * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2719,        double ra = r + temp - temp;,20,6,0,0,0,0,4,0,0,31,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2720,        double rb = r - ra;,8,1,1,0,0,0,0,0,0,12,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2722,        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2724,        temp = ra + rb;,6,1,0,0,0,0,4,2,0,15,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2725,        rb = -(temp - ra - rb);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2726,        ra = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2729,"        double result = atan(ra, rb, x < 0);",4,1,0,1,2,0,6,0,0,11,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2731,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2739,      if (x != x) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2740,          return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2743,      if (x > 1.0 || x < -1.0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2744,          return Double.NaN;,8,0,0,0,0,1,0,0,0,8,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2747,      if (x == 1.0) {,2,1,0,1,3,0,8,0,0,11,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2748,          return Math.PI/2.0;,4,1,0,0,0,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2751,      if (x == -1.0) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2752,          return -Math.PI/2.0;,8,1,0,0,0,1,0,0,0,10,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2758,      double temp = x * 1073741824.0;,6,2,0,0,0,0,4,0,0,12,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2759,      final double xa = x + temp - temp;,8,2,0,0,0,1,0,0,0,11,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2760,      final double xb = x - xa;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2763,      double ya = xa*xa;,6,1,0,0,0,0,0,0,0,7,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2764,      double yb = xa*xb*2.0 + xb*xb;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2767,      ya = -ya;,4,0,0,0,0,0,0,0,0,6,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2768,      yb = -yb;,4,1,0,0,0,0,0,0,0,5,9,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2770,      double za = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2771,      double zb = -(za - 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2773,      temp = za + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2774,      zb += -(temp - za - yb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2775,      za = temp;,6,0,0,0,0,0,0,0,0,9,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2779,      y = sqrt(za);,2,0,0,1,2,0,4,0,0,7,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2780,      temp = y * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2781,      ya = y + temp - temp;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2782,      yb = y - ya;,12,2,0,0,0,0,0,0,0,16,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2785,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,2,0,1,2,4,1,0,0,0,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2788,      double dx = zb / (2.0*y);,12,3,0,1,2,0,0,0,0,15,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2791,      double r = x/y;,6,1,0,0,0,0,0,0,0,7,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2792,      temp = r * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2793,      double ra = r + temp - temp;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2794,      double rb = r - ra;,10,1,0,0,0,0,0,0,0,13,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2796,      rb += (x - ra*ya - ra*yb - rb*ya - rb*yb) / y;  // Correct for rounding in division,22,9,0,1,2,0,0,0,0,32,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2797,      rb += -x * dx / y / y;  // Add in effect additional bits of sqrt.,10,3,0,0,0,0,0,0,0,15,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2799,      temp = ra + rb;,11,2,0,0,0,1,2,0,0,17,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2800,      rb = -(temp - ra - rb);,8,1,0,1,2,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2801,      ra = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2803,"      return atan(ra, rb, false);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2811,      if (x != x) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2812,          return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2815,      if (x > 1.0 || x < -1.0) {,2,0,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2816,          return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2819,      if (x == -1.0) {,12,2,0,1,3,2,4,0,0,21,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2820,          return Math.PI;,4,0,0,0,0,1,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2823,      if (x == 1.0) {,4,1,0,1,3,0,0,0,0,6,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2824,          return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2827,      if (x == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2828,          return Math.PI/2.0;,4,1,0,0,0,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2834,      double temp = x * 1073741824.0;,4,1,0,0,0,0,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2835,      final double xa = x + temp - temp;,8,2,0,0,0,1,0,0,0,11,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2836,      final double xb = x - xa;,24,7,1,0,0,1,0,0,0,36,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2839,      double ya = xa*xa;,8,1,0,0,0,0,0,0,0,9,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2840,      double yb = xa*xb*2.0 + xb*xb;,2,1,1,0,0,0,6,0,0,14,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2843,      ya = -ya;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2844,      yb = -yb;,4,0,0,0,0,0,0,0,0,6,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2846,      double za = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2847,      double zb = -(za - 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2849,      temp = za + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2850,      zb += -(temp - za - yb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2851,      za = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2854,      double y = sqrt(za);,6,1,0,1,2,0,4,0,0,12,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2855,      temp = y * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2856,      ya = y + temp - temp;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2857,      yb = y - ya;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2860,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,20,8,1,2,4,0,0,0,0,32,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2863,      yb += zb / (2.0*y);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2864,      y = ya+yb;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2865,      yb = -(y - ya - yb);,20,2,0,1,2,0,0,0,0,25,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2868,      double r = y/x;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2869,      temp = r * 1073741824.0;,10,3,0,0,0,0,0,0,0,15,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2870,      double ra = r + temp - temp;,14,3,0,0,0,0,0,0,0,18,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2871,      double rb = r - ra;,8,1,0,0,0,0,0,0,0,9,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2873,      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division,36,12,0,1,2,0,0,0,0,53,83,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2874,      rb += yb / x;  // Add in effect additional bits of sqrt.,6,1,0,0,0,0,0,0,0,8,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2876,      temp = ra + rb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2877,      rb = -(temp - ra - rb);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2878,      ra = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2880,"      return atan(ra, rb, x<0);",2,1,0,1,2,1,12,0,0,15,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2889,      long inbits = Double.doubleToLongBits(x);,10,3,0,1,2,0,6,0,0,20,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2890,      int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,6,1,0,3,6,0,0,0,0,7,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2891,      boolean subnormal = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2893,      if (exponent == -1023) {,6,1,0,1,3,0,0,0,0,9,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2894,          if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2895,              return x;,8,1,0,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2899,          subnormal = true;,14,2,0,0,0,1,0,0,0,21,17,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2900,          x *= 1.8014398509481984E16;  // 2^54,2,0,0,0,0,0,0,0,0,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2901,          inbits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2902,          exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,4,3,0,3,6,0,0,0,0,8,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2905,      if (exponent == 1024) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2907,          return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2911,      int exp3 = exponent / 3;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2914,      double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) | ,0,0,0,1,3,0,0,0,0,4,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2918,      final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);,12,4,0,2,4,1,4,0,0,21,98,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2921,      double est = -0.010714690733195933;,2,0,0,0,0,0,0,0,0,3,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2922,      est = est * mant + 0.0875862700108075;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2923,      est = est * mant + -0.3058015757857271;,6,2,0,0,0,0,0,0,0,10,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2924,      est = est * mant + 0.7249995199969751;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2925,      est = est * mant + 0.5039018405998233;,6,2,0,0,0,0,0,0,0,9,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2927,      est *= CBRTTWO[exponent % 3 + 2];,4,2,1,1,2,0,0,0,0,9,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2932,      final double xs = x / (p2*p2*p2); ,10,2,0,1,2,1,0,0,0,13,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2933,      est += (xs - est*est*est) / (3*est*est);,2,0,0,2,4,0,0,0,0,2,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2934,      est += (xs - est*est*est) / (3*est*est);,14,4,0,2,4,0,0,0,0,19,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2937,      double temp = est * 1073741824.0;,12,4,0,0,0,0,0,0,0,16,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2938,      double ya = est + temp - temp;,8,2,0,0,0,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2939,      double yb = est - ya;,6,1,0,0,0,0,0,0,0,7,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2941,      double za = ya * ya;,10,1,0,0,0,0,0,0,0,11,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2942,      double zb = ya * yb * 2.0 + yb * yb;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2943,      temp = za * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2944,      double temp2 = za + temp - temp;,20,3,0,0,0,0,0,0,0,24,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2945,      zb += (za - temp2);,6,1,0,1,2,0,0,0,0,8,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2946,      za = temp2;,6,1,0,0,0,0,0,0,0,8,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2948,      zb = za * yb + ya * zb + zb * yb;,14,5,0,0,0,0,0,0,0,20,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2949,      za = za * ya;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2951,      double na = xs - za;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2952,      double nb = -(na - xs + za);,8,2,0,1,2,0,0,0,0,11,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2953,      nb -= zb;,4,0,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2955,      est += (na+nb)/(3*est*est);,18,4,0,2,4,0,0,0,0,25,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2958,      est *= p2;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2960,      if (subnormal) {,4,0,0,1,3,0,4,0,0,9,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2961,          est *= 3.814697265625E-6;  // 2^-18,2,0,0,0,0,0,0,0,0,3,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2964,      return est;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2974,        final double facta = 0.01745329052209854;,10,1,0,0,0,0,0,0,0,11,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2975,        final double factb = 1.997844754509471E-9;,2,0,1,0,0,1,0,0,0,6,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2977,        double temp = x * 1073741824.0;,4,1,0,0,0,0,4,0,0,9,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2978,        double xa = x + temp - temp;,8,2,0,0,0,0,0,0,0,10,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2979,        double xb = x - xa;,8,1,0,0,0,1,4,0,0,14,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2981,        return xb * factb + xb * facta + xa * factb + xa * facta;,0,0,0,0,0,1,0,0,0,1,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2991,        final double facta = 57.2957763671875;,8,2,0,0,0,0,0,0,0,10,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2992,        final double factb = 3.145894820876798E-6;,2,0,0,0,0,1,0,0,0,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2994,        double temp = x * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2995,        double xa = x + temp - temp;,14,4,0,0,0,0,8,0,0,29,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2996,        double xb = x - xa;,2,0,0,0,0,0,0,0,0,2,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2998,        return xb * factb + xb * facta + xa * factb + xa * facta;,0,0,0,0,0,1,0,0,0,1,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3007,        return (x < 0) ? -x : x;,6,1,0,1,2,1,0,0,0,8,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3025,        return (x < 0.0f) ? -x : x;,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3066,        if (Double.isNaN(d) || Double.isInfinite(d)) {,0,1,0,3,7,0,12,0,0,13,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3067,            return d;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3068,        } else if (d == 0) {,4,1,1,1,4,1,0,0,0,10,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3069,            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,4,1,1,1,2,2,0,0,0,9,62,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3075,        long bits     = Double.doubleToLongBits(d);,2,0,0,1,2,0,6,0,0,8,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3076,        long sign     = bits & 0x8000000000000000L;,6,1,0,0,0,0,0,0,0,7,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3077,        long exponent = bits & 0x7ff0000000000000L;,4,1,0,0,0,0,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3078,        long mantissa = bits & 0x000fffffffffffffL;,4,1,0,0,0,0,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3080,        if (d * (direction - d) >= 0) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3082,            if (mantissa == 0x000fffffffffffffL) {,8,3,0,1,3,0,4,0,0,15,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3083,                return Double.longBitsToDouble(sign |,6,1,0,0,1,1,4,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3086,                return Double.longBitsToDouble(sign |,0,0,0,0,1,1,0,0,0,2,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3091,            if (mantissa == 0L) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3092,                return Double.longBitsToDouble(sign |,2,1,0,0,1,1,4,0,0,7,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3096,                return Double.longBitsToDouble(sign |,0,0,0,0,1,1,0,0,0,2,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3110,        if (x != x) { // NaN,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3111,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3114,        if (x >= 4503599627370496.0 || x <= -4503599627370496.0) {,4,3,0,1,3,0,0,0,0,8,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3115,            return x;,6,1,0,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3118,        y = (long) x;,10,3,0,1,2,0,0,0,0,14,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3119,        if (x < 0 && y != x) {,6,3,0,1,3,0,0,0,0,9,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3120,            y--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3123,        if (y == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3124,            return x*y;,4,1,0,0,0,1,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3127,        return (double) y;,2,0,0,1,2,1,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3137,        if (x != x) { // NaN,4,0,0,1,3,0,0,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3138,            return x;,4,0,0,0,0,1,0,0,0,4,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3141,        y = floor(x);,2,0,0,1,2,0,4,0,0,7,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3142,        if (y == x) {,6,2,0,1,3,0,0,0,0,8,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3143,            return y;,2,0,0,0,0,1,4,0,0,7,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3146,        y += 1.0;,4,1,0,0,0,0,0,0,0,6,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3148,        if (y == 0) {,2,1,0,1,3,0,6,0,0,9,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3149,            return x*y;,10,2,0,0,0,1,0,0,0,12,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3152,        return y;,4,1,1,0,0,1,0,0,0,8,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3160,        double y = floor(x);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3161,        double d = x - y;,6,1,0,0,0,0,0,0,0,7,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3163,        if (d > 0.5) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3164,            return y+1.0;,2,1,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3166,        if (d < 0.5) {,12,2,0,1,3,0,0,0,0,14,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3167,            return y;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3171,        long z = (long) y;,8,2,0,1,2,0,0,0,0,11,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3172,        return (z & 1) == 0 ? y : y + 1.0;,6,3,0,1,2,1,0,0,0,9,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3180,        return (long) floor(x + 0.5);,16,5,0,2,4,1,6,0,0,28,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3188,        return Math.round(x);,0,0,0,1,2,1,6,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3197,        return (a <= b) ? a : b;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3206,        return (a <= b) ? a : b;,8,1,0,1,2,1,0,0,0,10,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3215,        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);,20,2,0,3,6,1,4,4,0,30,59,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3233,        return (a <= b) ? b : a;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3242,        return (a <= b) ? b : a;,8,1,0,1,2,1,4,0,0,14,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3251,        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);,0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,73,        for (int i = 0; i < value; i++) {,16,3,0,1,3,0,0,0,0,20,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,74,            incrementCount();,0,0,0,1,2,0,2,0,0,2,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,76,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,85,            throw new MaxCountExceededException(maximalCount);,2,0,0,1,2,0,0,2,0,4,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,43,"        this(null, max);",12,2,0,1,2,0,0,0,0,15,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,44,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,53,"        super(specific,",2,0,0,0,1,0,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,57,        this.max = max;,4,0,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,58,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,64,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,58,                                     Object ... args) {,0,0,0,0,2,0,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,59,        this.specific = specific;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,60,        this.general = general;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,61,        arguments = ArgUtils.flatten(args);,2,0,0,1,2,0,6,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,62,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,69,"        this(null, general, args);",8,0,0,1,2,0,0,2,0,10,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,70,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,80,"        return MessageFactory.buildMessage(locale, specific, general, arguments);",0,0,0,1,2,1,12,0,0,12,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,86,        return getMessage(Locale.US);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,92,        return getMessage(Locale.getDefault());,4,0,0,2,4,1,6,2,0,12,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1806,    public static enum OrderDirection {,2,0,0,0,1,2,0,0,0,4,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1808,"        INCREASING,",2,0,0,0,0,0,0,0,0,2,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1810,        DECREASING,2,0,0,0,0,0,0,0,0,2,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,88,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,89,    },6,1,0,0,1,0,0,0,0,8,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,102,        long s = (long)x + (long)y;,6,1,0,2,4,0,0,0,0,7,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,103,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,104,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);",4,0,0,1,2,0,8,0,0,12,98,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,106,        return (int)s;,6,1,0,1,2,1,0,0,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,120,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);",8,2,1,1,2,1,0,0,0,13,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,136,        if (a > b) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,138,"            ret = addAndCheck(b, a, pattern);",2,0,0,1,2,0,8,0,0,11,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,142,            if (a < 0) {,8,3,0,1,3,0,4,0,0,15,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,143,                if (b < 0) {,2,1,0,1,3,0,0,0,0,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,145,                    if (Long.MIN_VALUE - b <= a) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,146,                        ret = a + b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,148,"                        throw MathRuntimeException.createArithmeticException(pattern, a, b);",10,1,0,1,2,0,10,0,0,22,68,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,152,                    ret = a + b;,6,1,0,0,0,0,0,0,0,8,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,159,                if (a <= Long.MAX_VALUE - b) {,2,0,0,1,3,0,6,0,0,11,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,160,                    ret = a + b;,8,1,0,0,0,0,0,2,0,12,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,162,"                    throw MathRuntimeException.createArithmeticException(pattern, a, b);",0,0,0,1,2,0,10,0,0,10,68,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,166,        return ret;,6,0,0,0,0,1,2,2,0,11,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,195,"        checkBinomial(n, k);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,196,        if ((n == k) || (k == 0)) {,6,3,0,3,7,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,197,            return 1;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,199,        if ((k == 1) || (k == n - 1)) {,8,5,0,3,7,0,0,0,0,13,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,200,            return n;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,203,        if (k > n / 2),6,2,0,1,2,0,0,0,0,8,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,204,"            return binomialCoefficient(n, n - k);",4,1,0,1,2,1,4,0,0,9,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,211,        long result = 1;,2,0,0,0,0,0,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,212,        if (n <= 61) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,214,            int i = n - k + 1;,16,3,0,0,0,0,0,0,0,20,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,215,            for (int j = 1; j <= k; j++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,216,                result = result * i / j;,8,2,0,0,0,0,0,0,0,11,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,217,                i++;,4,0,0,0,0,0,0,0,0,5,4,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,219,        } else if (n <= 66) {,2,1,0,1,4,0,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,222,            int i = n - k + 1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,223,            for (int j = 1; j <= k; j++) {,2,0,0,1,3,0,0,0,0,2,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,230,"                final long d = gcd(i, j);",2,0,0,1,2,1,6,0,0,9,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,231,                result = (result / (j / d)) * (i / d);,12,4,0,3,6,0,0,0,0,17,38,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,232,                i++;,6,1,0,0,0,0,0,0,0,8,4,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,234,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,238,            int i = n - k + 1;,8,3,0,0,0,0,0,0,0,11,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,239,            for (int j = 1; j <= k; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,240,"                final long d = gcd(i, j);",2,0,0,1,2,1,6,0,0,9,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,241,"                result = mulAndCheck(result / (j / d), i / d);",0,0,0,2,4,0,0,0,0,6,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,242,                i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,245,        return result;,2,3,0,0,0,1,6,0,0,11,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,271,"        checkBinomial(n, k);",0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,272,        if ((n == k) || (k == 0)) {,0,0,0,3,7,0,0,0,0,10,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,273,            return 1d;,4,1,0,0,0,1,10,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,275,        if ((k == 1) || (k == n - 1)) {,12,5,0,3,7,1,0,0,0,18,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,276,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,278,        if (k > n/2) {,4,2,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,279,"            return binomialCoefficientDouble(n, n - k);",4,1,0,1,2,1,4,0,0,9,43,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,281,        if (n < 67) {,2,1,0,1,3,0,0,2,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,282,"            return binomialCoefficient(n,k);",0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,285,        double result = 1d;,14,3,0,0,0,0,0,0,0,17,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,286,        for (int i = 1; i <= k; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,287,             result *= (double)(n - k + i) / (double)i;,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,290,        return FastMath.floor(result + 0.5);,4,2,0,1,2,1,4,0,0,10,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,312,"        checkBinomial(n, k);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,313,        if ((n == k) || (k == 0)) {,6,3,0,3,7,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,314,            return 0;,4,0,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,316,        if ((k == 1) || (k == n - 1)) {,0,0,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,317,            return FastMath.log(n);,22,3,0,1,2,2,10,6,0,45,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,324,        if (n < 67) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,325,"            return FastMath.log(binomialCoefficient(n,k));",2,0,0,2,4,1,10,0,0,12,46,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,332,        if (n < 1030) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,333,"            return FastMath.log(binomialCoefficientDouble(n, k));",0,0,0,2,4,1,10,0,0,10,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,336,        if (k > n / 2) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,337,"            return binomialCoefficientLog(n, n - k);",4,1,0,1,2,1,4,0,0,9,40,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,343,        double logSum = 0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,346,        for (int i = n - k + 1; i <= n; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,347,            logSum += FastMath.log(i);,14,5,0,1,2,0,6,0,0,28,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,351,        for (int i = 2; i <= k; i++) {,22,6,0,1,3,0,4,0,0,33,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,352,            logSum -= FastMath.log(i);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,355,        return logSum;,6,0,0,0,0,1,0,0,0,8,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,366,        if (n < k) {,8,2,0,1,3,0,0,0,0,10,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,367,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,371,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,372,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,376,    },6,0,1,0,1,0,0,2,0,10,1,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,389,"        if (equals(x, y, eps)) {",0,0,0,2,5,0,8,0,0,8,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,390,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,391,        } else if (x < y) {,0,0,0,1,4,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,392,          return -1;,0,0,0,0,0,1,0,0,0,1,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,394,        return 1;,2,0,0,0,0,2,2,0,0,5,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,405,        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,429,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);",2,0,0,4,8,1,0,0,0,2,63,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,442,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",6,3,0,2,4,1,10,0,0,19,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,456,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",0,0,0,3,6,1,0,0,0,10,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,509,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);",0,0,0,4,8,1,0,0,0,13,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,523,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,524,            return !((x == null) ^ (y == null));,8,1,0,3,6,1,0,0,0,10,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,526,        if (x.length != y.length) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,527,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,529,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,530,"            if (!equals(x[i], y[i])) {",4,0,0,4,9,0,0,0,0,4,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,531,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,534,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,548,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,549,            return !((x == null) ^ (y == null));,0,0,0,3,6,1,0,0,0,10,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,551,        if (x.length != y.length) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,552,            return false;,16,3,0,0,0,1,0,0,0,21,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,554,        for (int i = 0; i < x.length; ++i) {,6,1,0,1,3,0,0,0,0,7,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,555,"            if (!equalsIncludingNaN(x[i], y[i])) {",2,0,1,4,9,0,2,0,0,15,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,556,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,559,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,585,        if (n < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,586,            throw MathRuntimeException.createIllegalArgumentException(,8,1,0,0,1,0,4,0,0,15,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,590,        if (n > 20) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,591,            throw new ArithmeticException(,0,0,0,0,1,0,0,0,0,1,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,594,        return FACTORIALS[n];,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,618,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,619,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,623,        if (n < 21) {,4,2,0,1,3,0,0,0,0,6,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,624,            return factorial(n);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,626,        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);,0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,643,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,644,            throw MathRuntimeException.createIllegalArgumentException(,6,1,0,0,1,1,4,0,0,12,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,648,        if (n < 21) {,4,1,0,1,3,0,0,0,0,5,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,649,            return FastMath.log(factorial(n));,4,0,0,2,4,1,8,0,0,12,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,651,        double logSum = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,652,        for (int i = 2; i <= n; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,653,            logSum += FastMath.log(i);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,655,        return logSum;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,688,        int u = p;,4,0,0,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,689,        int v = q;,4,0,0,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,690,        if ((u == 0) || (v == 0)) {,14,4,0,3,7,0,0,2,0,20,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,691,            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {,6,1,0,3,7,0,0,0,0,9,59,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,692,                throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,696,            return FastMath.abs(u) + FastMath.abs(v);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,703,        if (u > 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,704,            u = -u;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,706,        if (v > 0) {,8,5,1,1,3,0,0,0,0,20,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,707,            v = -v;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,710,        int k = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,711,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,0,0,0,3,7,0,0,0,0,10,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,713,            u /= 2;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,714,            v /= 2;,2,0,0,0,0,0,0,0,0,3,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,715,            k++; // cast out twos.,2,0,0,0,0,0,0,0,0,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,717,        if (k == 31) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,718,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,4,0,0,4,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,724,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,8,3,0,3,6,0,0,0,0,12,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,730,            while ((t & 1) == 0) { // while t is even..,14,3,0,2,5,0,0,0,0,19,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,731,                t /= 2; // cast out twos,2,0,0,0,0,0,0,0,0,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,734,            if (t > 0) {,2,0,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,735,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,737,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,740,            t = (v - u) / 2;,2,0,0,1,2,1,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,743,        } while (t != 0);,4,0,1,1,3,1,4,0,0,12,17,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,744,        return -u * (1 << k); // gcd is u*2^k,8,2,0,1,2,1,0,0,0,11,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,777,        long u = p;,6,1,0,0,0,1,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,778,        long v = q;,8,2,0,0,0,0,0,0,0,10,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,779,        if ((u == 0) || (v == 0)) {,4,3,0,3,7,0,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,780,            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){,4,0,0,3,7,0,0,0,0,5,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,781,                throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,785,            return FastMath.abs(u) + FastMath.abs(v);,2,2,1,2,4,1,12,0,0,19,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,792,        if (u > 0) {,0,0,0,1,3,0,4,0,0,4,12,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,793,            u = -u;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,795,        if (v > 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,796,            v = -v;,2,1,0,0,0,0,0,0,0,3,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,799,        int k = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,800,        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are,0,0,0,3,7,0,0,0,0,10,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,802,            u /= 2;,4,0,1,0,0,0,0,0,0,10,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,803,            v /= 2;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,804,            k++; // cast out twos.,2,0,0,0,0,0,0,0,0,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,806,        if (k == 63) {,4,2,1,1,3,0,0,0,0,9,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,807,            throw MathRuntimeException.createArithmeticException(,6,1,0,0,1,0,0,0,0,8,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,813,        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,8,3,0,3,6,0,0,0,0,12,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,819,            while ((t & 1) == 0) { // while t is even..,4,3,0,2,5,0,0,0,0,7,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,820,                t /= 2; // cast out twos,2,0,0,0,0,0,0,0,0,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,823,            if (t > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,824,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,826,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,829,            t = (v - u) / 2;,6,2,0,1,2,0,0,0,0,9,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,832,        } while (t != 0);,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,833,        return -u * (1L << k); // gcd is u*2^k,4,2,0,1,2,1,0,0,0,7,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,843,        return new Double(value).hashCode();,2,0,0,2,4,1,2,2,0,6,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,854,        return Arrays.hashCode(value);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,865,        return (x >= ZB) ? PB : NB;,14,3,0,1,2,1,12,0,0,30,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,877,        if (Double.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,878,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,880,        return (x >= 0.0) ? 1.0 : -1.0;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,891,        if (Float.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,892,            return Float.NaN;,4,0,0,0,0,1,0,0,0,4,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,894,        return (x >= 0.0F) ? 1.0F : -1.0F;,2,0,0,1,2,1,0,0,0,2,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,904,        return (x >= 0) ? 1 : -1;,2,1,0,1,2,1,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,914,        return (x >= 0L) ? 1L : -1L;,8,2,0,1,2,1,0,0,0,12,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,925,        return (x >= ZS) ? PS : NS;,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,952,        if (a==0 || b==0){,4,3,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,953,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,955,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",0,0,0,3,6,0,0,0,0,9,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,956,        if (lcm == Integer.MIN_VALUE) {,26,7,0,1,3,1,4,0,0,39,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,957,            throw MathRuntimeException.createArithmeticException(,8,2,1,0,1,1,4,2,0,19,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,961,        return lcm;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,987,        if (a==0 || b==0){,4,3,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,988,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,990,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",4,3,0,3,6,0,32,0,0,39,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,991,        if (lcm == Long.MIN_VALUE){,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,992,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,996,        return lcm;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1016,        return FastMath.log(x)/FastMath.log(base);,0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1030,        long m = ((long)x) * ((long)y);,8,1,0,4,8,0,4,0,0,14,31,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1031,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1032,"            throw new ArithmeticException(""overflow: mul"");",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1034,        return (int)m;,10,2,1,1,2,1,0,0,0,17,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1049,"        String msg = ""overflow: multiply"";",2,0,0,0,0,0,0,2,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1050,        if (a > b) {,12,4,0,1,3,0,0,0,0,17,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1052,"            ret = mulAndCheck(b, a);",2,1,1,1,2,0,8,0,0,14,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1054,            if (a < 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1055,                if (b < 0) {,6,1,0,1,3,0,0,0,0,7,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1057,                    if (a >= Long.MAX_VALUE / b) {,14,4,0,1,3,0,4,0,0,22,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1058,                        ret = a * b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1060,                        throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1062,                } else if (b > 0) {,0,0,0,1,4,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1064,                    if (Long.MIN_VALUE / b <= a) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1065,                        ret = a * b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1067,                        throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1072,                    ret = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1074,            } else if (a > 0) {,2,1,0,1,4,0,0,0,0,3,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1079,                if (a <= Long.MAX_VALUE / b) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1080,                    ret = a * b;,2,0,1,0,0,0,0,0,0,7,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1082,                    throw new ArithmeticException(msg);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1086,                ret = 0;,0,0,0,0,0,0,6,0,0,6,8,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1089,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1104,        if ((d == 0) || Double.isNaN(d) || Double.isInfinite(d)) {,0,0,0,4,9,0,0,0,0,13,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1105,            return d;,10,2,0,0,0,1,0,0,0,13,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1109,        final long bits     = Double.doubleToLongBits(d);,2,0,0,1,2,1,6,0,0,9,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1110,        final long exponent = bits & 0x7ff0000000000000L;,4,1,0,0,0,1,0,0,0,6,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1111,        final long rest     = bits & 0x800fffffffffffffL;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1114,        final long newBits = rest | (exponent + (((long) scaleFactor) << 52));,8,3,0,4,8,1,0,0,0,12,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1115,        return Double.longBitsToDouble(newBits);,12,1,0,1,2,1,6,0,0,21,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1139,         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);,16,5,0,2,4,1,4,0,0,25,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1165,         if (Double.isInfinite(normalizedSum)) {,6,1,0,2,5,0,6,0,0,14,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1166,             throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1169,         if (Double.isNaN(normalizedSum)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1170,             throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1173,         double sum = 0d;,2,0,0,0,0,0,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1174,         final int len = values.length;,6,2,1,0,0,1,6,0,0,20,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1175,         double[] out = new double[len];,2,1,0,2,4,0,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1176,         for (int i = 0; i < len; i++) {,18,2,0,1,3,0,0,0,0,22,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1177,             if (Double.isInfinite(values[i])) {,0,0,1,3,7,0,4,0,0,8,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1178,                 throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1181,             if (!Double.isNaN(values[i])) {,0,0,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1182,                 sum += values[i];,6,0,1,1,2,0,14,0,0,25,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1185,         if (sum == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1186,             throw MathRuntimeException.createArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);,4,0,0,1,2,0,4,0,0,8,90,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1188,         for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1189,             if (Double.isNaN(values[i])) {,0,0,1,3,7,0,4,0,0,8,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1190,                 out[i] = Double.NaN;,4,0,1,1,2,0,0,0,0,9,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1192,                 out[i] = values[i] * normalizedSum / sum;,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1195,         return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1208,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",4,0,0,1,2,1,6,0,0,10,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1225,            return (new BigDecimal,0,0,0,0,1,1,0,2,0,2,22,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1229,        } catch (NumberFormatException ex) {,12,1,0,1,4,0,0,2,0,16,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1230,            if (Double.isInfinite(x)) {,2,2,0,2,5,0,14,0,0,19,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1231,                return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1233,                return Double.NaN;,8,0,0,0,0,1,2,0,0,10,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1248,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",4,0,0,1,2,1,6,0,0,10,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1264,        float sign = indicator(x);,2,0,0,1,2,1,0,0,0,3,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1265,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;",0,0,0,2,4,0,0,0,0,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1266,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",6,2,0,2,4,1,6,0,0,14,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1283,        switch (roundingMethod) {,2,0,0,1,3,0,0,0,0,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1285,            if (sign == -1) {,4,1,0,1,3,0,0,0,0,6,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1286,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",4,1,0,2,4,1,4,0,0,10,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1288,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1290,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1292,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",6,0,0,2,4,0,10,0,0,17,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1293,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1295,            if (sign == -1) {,2,1,0,1,3,0,0,0,0,4,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1296,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",12,0,1,2,4,1,10,0,0,30,81,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1298,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",6,0,0,2,4,0,10,0,0,17,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1300,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1302,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);",28,9,0,1,2,0,6,0,0,45,66,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1303,            double fraction = unscaled - FastMath.floor(unscaled);,10,2,0,1,2,0,6,0,0,19,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1304,            if (fraction > 0.5) {,8,2,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1305,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1307,                unscaled = FastMath.floor(unscaled);,8,1,0,1,2,0,6,0,0,17,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1309,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1312,            double fraction = unscaled - FastMath.floor(unscaled);,4,1,0,1,2,0,6,0,0,11,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1313,            if (fraction > 0.5) {,2,1,0,1,3,0,6,0,0,9,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1314,                unscaled = FastMath.ceil(unscaled);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1315,            } else if (fraction < 0.5) {,2,1,0,1,4,0,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1316,                unscaled = FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1319,                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math,0,3,0,1,4,0,12,0,0,15,57,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1321,                    unscaled = FastMath.floor(unscaled);,4,2,1,1,2,0,6,0,0,19,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1323,                    unscaled = FastMath.ceil(unscaled);,10,1,0,1,2,0,6,0,0,18,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1326,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1329,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1330,            double fraction = unscaled - FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1331,            if (fraction >= 0.5) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1332,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1334,                unscaled = FastMath.floor(unscaled);,2,0,0,1,2,0,6,0,0,9,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1336,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1339,            if (unscaled != FastMath.floor(unscaled)) {,2,1,0,2,5,0,6,0,0,9,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1340,"                throw new ArithmeticException(""Inexact result from rounding"");",0,0,0,1,2,0,0,2,0,3,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1344,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));",6,0,0,2,4,0,10,0,0,17,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1345,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1347,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1359,        return unscaled;,6,1,0,0,0,1,0,0,0,7,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1373,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,4,0,0,2,4,1,0,0,0,5,43,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1389,        if (Double.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1390,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1392,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,8,2,0,2,4,1,0,0,0,12,49,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1407,        if (Float.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1408,            return Float.NaN;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1410,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,4,2,0,2,4,1,0,0,0,7,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1424,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,4,1,0,2,4,1,0,0,0,5,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1438,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,4,2,0,2,4,1,0,0,0,7,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1453,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,14,2,0,2,4,1,0,0,0,16,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1464,        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1478,        long s = (long)x - (long)y;,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1479,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1480,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);",4,0,0,1,2,0,8,0,0,12,101,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1482,        return (int)s;,2,0,0,1,2,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1497,"        String msg = ""overflow: subtract"";",0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1498,        if (b == Long.MIN_VALUE) {,2,0,0,1,3,0,4,0,0,7,26,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1499,            if (a < 0) {,6,1,0,1,3,1,0,0,0,8,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1500,                ret = a - b;,6,1,0,0,0,0,0,0,0,8,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1502,                throw new ArithmeticException(msg);,6,0,0,1,2,0,0,6,0,12,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1506,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);",10,0,0,1,2,1,8,0,0,21,64,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1508,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1521,        if (e < 0) {,2,0,0,1,3,0,0,0,0,2,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1522,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1527,        int result = 1;,2,0,0,0,0,1,4,0,0,7,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1528,        int k2p    = k;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1529,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1530,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1531,                result *= k2p;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1533,            k2p *= k2p;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1534,            e = e >> 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1537,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1551,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1552,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1557,        int result = 1;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1558,        int k2p    = k;,12,2,1,0,0,1,4,0,0,23,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1559,        while (e != 0) {,2,1,0,1,3,0,6,0,0,9,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1560,            if ((e & 0x1) != 0) {,6,2,0,2,5,0,0,0,0,10,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1561,                result *= k2p;,6,1,0,0,0,0,22,0,0,31,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1563,            k2p *= k2p;,2,0,1,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1564,            e = e >> 1;,6,1,0,0,0,1,2,0,0,11,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1567,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1581,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1582,            throw MathRuntimeException.createIllegalArgumentException(,4,0,0,0,1,0,4,4,0,13,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1587,        long result = 1l;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1588,        long k2p    = k;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1589,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1590,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1591,                result *= k2p;,20,3,0,0,0,0,0,0,0,26,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1593,            k2p *= k2p;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1594,            e = e >> 1;,4,1,0,0,0,0,4,0,0,10,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1597,        return result;,8,4,0,0,0,1,4,0,0,16,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1611,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1612,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1617,        long result = 1l;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1618,        long k2p    = k;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1619,        while (e != 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1620,            if ((e & 0x1) != 0) {,10,4,0,2,5,0,0,0,0,14,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1621,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1623,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1624,            e = e >> 1;,4,1,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1627,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1641,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1642,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1647,        return k.pow(e);,0,0,0,1,2,1,6,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1661,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1662,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1667,        BigInteger result = BigInteger.ONE;,6,0,0,0,0,0,0,2,0,8,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1668,        BigInteger k2p    = k;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1669,        while (e != 0) {,0,0,1,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1670,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,6,0,0,10,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1671,                result = result.multiply(k2p);,8,1,0,1,2,0,0,0,0,10,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1673,            k2p = k2p.multiply(k2p);,6,0,0,1,2,0,6,0,0,14,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1674,            e = e >> 1;,4,1,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1677,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1691,        if (e.compareTo(BigInteger.ZERO) < 0) {,4,1,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1692,            throw MathRuntimeException.createIllegalArgumentException(,8,0,0,0,1,0,4,0,0,13,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1697,        BigInteger result = BigInteger.ONE;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1698,        BigInteger k2p    = k;,4,0,0,0,0,0,0,2,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1699,        while (!BigInteger.ZERO.equals(e)) {,4,0,0,2,5,0,4,0,0,9,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1700,            if (e.testBit(0)) {,8,2,0,2,5,0,0,0,0,11,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1701,                result = result.multiply(k2p);,2,0,0,1,2,0,6,0,0,9,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1703,            k2p = k2p.multiply(k2p);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1704,            e = e.shiftRight(1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1707,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1719,        double sum = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1720,        for (int i = 0; i < p1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1721,            sum += FastMath.abs(p1[i] - p2[i]);,2,1,1,3,6,0,4,0,0,16,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1723,        return sum;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1734,      int sum = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1735,      for (int i = 0; i < p1.length; i++) {,12,1,0,1,3,0,0,0,0,14,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1736,          sum += FastMath.abs(p1[i] - p2[i]);,6,1,1,3,6,0,4,0,0,21,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1738,      return sum;,10,1,0,0,0,2,0,0,0,13,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1749,        double sum = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1750,        for (int i = 0; i < p1.length; i++) {,14,4,0,1,3,0,4,0,0,23,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1751,            final double dp = p1[i] - p2[i];,2,1,1,2,4,1,4,0,0,17,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1752,            sum += dp * dp;,6,1,0,0,0,0,10,0,0,18,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1754,        return FastMath.sqrt(sum);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1765,      double sum = 0;,4,0,0,0,0,0,0,4,0,9,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1766,      for (int i = 0; i < p1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1767,          final double dp = p1[i] - p2[i];,2,1,1,2,4,1,0,0,0,12,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1768,          sum += dp * dp;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1770,      return FastMath.sqrt(sum);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1781,        double max = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1782,        for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,13,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1783,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",2,1,1,4,8,0,10,0,0,22,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1785,        return max;,4,0,1,0,0,2,0,0,0,7,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1796,        int max = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1797,        for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1798,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",2,1,1,4,8,0,10,0,0,22,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1800,        return max;,4,0,0,0,0,1,0,2,0,6,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1822,        double previous = val[0];,6,2,1,1,2,0,6,0,0,17,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1823,        boolean ok = true;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1825,        int max = val.length;,10,1,0,0,0,0,4,0,0,15,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1826,        for (int i = 1; i < max; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1827,            switch (dir) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1829,                if (strict) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1830,                    if (val[i] <= previous) {,2,1,1,2,5,0,0,0,0,7,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1831,                        ok = false;,2,0,0,0,0,0,6,0,0,10,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1834,                    if (val[i] < previous) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1835,                        ok = false;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1840,                if (strict) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1841,                    if (val[i] >= previous) {,2,1,1,2,5,0,0,0,0,7,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1842,                        ok = false;,10,1,0,0,0,0,0,0,0,14,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1845,                    if (val[i] > previous) {,2,1,1,2,5,0,0,0,0,7,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1846,                        ok = false;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1852,                throw new IllegalArgumentException();,0,0,0,1,2,0,0,2,0,2,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1855,            if (!ok) {,4,0,0,1,3,1,2,0,0,8,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1856,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);",8,0,1,2,4,0,0,2,0,14,75,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1858,            previous = val[i];,2,0,1,1,2,0,0,0,0,7,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1860,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1869,"        checkOrder(val, OrderDirection.INCREASING, true);",4,0,0,1,2,0,4,0,0,9,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1870,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1932,    double rdwarf = 3.834e-20;,6,0,0,0,0,0,0,0,0,7,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1933,    double rgiant = 1.304e+19;,2,0,0,0,0,0,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1934,    double s1=0.0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1935,    double s2=0.0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1936,    double s3=0.0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1937,    double x1max = 0.0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1938,    double x3max = 0.0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1939,    double floatn = (double)v.length;,6,0,0,1,2,0,0,0,0,6,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1940,    double agiant = rgiant/floatn;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1941,    for (int i=0;i<v.length;i++) {,18,6,0,1,3,0,0,0,0,25,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1942,        double xabs = Math.abs(v[i]);,2,0,1,2,4,0,4,0,0,10,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1943,        if (xabs<rdwarf || xabs>agiant) {,8,3,0,1,3,0,0,0,0,11,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1944,            if (xabs>rdwarf) {,4,1,0,1,3,0,0,0,0,5,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1945,                if (xabs>x1max) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1946,                    double r=x1max/xabs;,6,1,0,0,0,0,0,0,0,7,20,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1947,                    s1=1.0+s1*r*r;,8,2,0,0,0,0,0,0,0,11,14,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1948,                    x1max=xabs;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1949,                } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1950,                    double r=xabs/x1max;,6,1,0,0,0,0,0,0,0,7,20,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1951,                    s1+=r*r;,6,1,0,0,0,0,0,0,0,8,8,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1952,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1954,                if (xabs>x3max) {,8,3,1,1,3,0,0,0,0,14,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1955,                 double r=x3max/xabs;,8,1,0,0,0,0,14,0,0,24,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1956,                 s3=1.0+s3*r*r;,8,2,0,0,0,0,0,0,0,11,14,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1957,                 x3max=xabs;,4,0,0,0,0,0,0,0,0,5,11,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1958,                } else {,18,2,0,0,2,0,0,0,0,20,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1959,                    if (xabs!=0.0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1960,                        double r=xabs/x3max;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1961,                        s3+=r*r;,6,1,0,0,0,0,0,0,0,8,8,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1962,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1966,         s2+=xabs*xabs;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1970,    if (s1!=0.0) {,6,2,0,1,3,0,0,0,0,8,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1971,        norm = x1max*Math.sqrt(s1+(s2/x1max)/x1max);,12,4,0,2,4,0,4,0,0,21,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1973,        if (s2==0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1974,            norm = x3max*Math.sqrt(s3);,4,1,0,1,2,0,6,0,0,12,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1976,            if (s2>=x3max) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1977,                norm = Math.sqrt(s2*(1.0+(x3max/s2)*(x3max*s3)));,16,5,0,4,8,0,4,0,0,27,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1979,                norm = Math.sqrt(x3max*((s2/x3max)+(x3max*s3)));,12,4,0,4,8,0,4,0,0,21,48,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1983,    return norm;,6,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1827,            switch (dir) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,63,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,82,        super(direction == MathUtils.OrderDirection.INCREASING ?,8,1,0,0,1,0,0,0,0,9,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,91,        this.direction = direction;,4,0,0,0,0,0,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,92,        this.strict = strict;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,93,        this.index = index;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,94,        this.previous = previous;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,95,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,101,        return direction;,2,1,0,0,0,2,0,0,0,4,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,107,        return strict;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,115,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,121,        return previous;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,50,"        super(specific, general, wrong, arguments);",8,0,0,1,2,0,0,0,0,8,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,51,        argument = wrong;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,52,    },2,0,0,0,1,1,4,0,0,7,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,64,"        super(general, wrong, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,65,        argument = wrong;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,66,    },10,1,0,0,1,0,0,0,0,12,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,72,        return argument;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,61,                                           Object ... args) {,4,0,0,0,2,1,2,2,0,9,18,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,62,        this.specific = specific;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,63,        this.general = general;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,64,        arguments = ArgUtils.flatten(args);,2,0,0,1,2,0,6,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,65,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,72,"        this(null, general, args);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,73,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,83,"        return MessageFactory.buildMessage(locale, specific, general, arguments);",0,0,0,1,2,1,12,0,0,12,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,89,        return getMessage(Locale.US);,4,0,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,95,        return getMessage(Locale.getDefault());,0,0,1,2,4,1,12,0,0,17,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,57,    public MathException() {,4,0,0,1,3,1,0,4,0,9,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,58,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,6,0,0,0,0,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,59,"        this.arguments = new Object[] { """" };",2,0,0,2,4,0,0,2,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,72,"      this(new DummyLocalizable(pattern), arguments);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,73,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,83,"    public MathException(Localizable pattern, Object ... arguments) {",6,0,0,1,3,1,0,4,0,11,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,84,      this.pattern   = pattern;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,85,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,4,1,0,3,6,0,4,2,0,12,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,96,        super(rootCause);,2,0,0,1,2,0,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,97,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,6,0,0,0,0,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,98,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",4,1,0,4,8,0,4,2,0,13,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,99,    },6,2,0,0,1,0,10,0,0,19,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,114,"        this(rootCause, new DummyLocalizable(pattern), arguments);",0,0,0,2,4,0,0,0,0,6,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,115,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,128,      super(rootCause);,6,0,0,1,2,0,0,0,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,129,      this.pattern   = pattern;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,130,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,0,0,0,3,6,0,0,0,0,9,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,131,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,141,        return pattern.getSourceString();,2,0,0,1,2,1,4,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,150,        return pattern;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,159,        return arguments.clone();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,170,        if (pattern != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,171,"            return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",2,0,0,3,6,1,10,2,0,14,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,173,"        return """";",0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,179,        return getMessage(Locale.US);,4,0,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,185,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,193,        printStackTrace(System.err);,10,1,0,1,2,0,2,0,0,13,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,194,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,203,        synchronized (out) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,204,"            PrintWriter pw = new PrintWriter(out, false);",4,0,0,1,2,0,0,4,0,9,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,205,            printStackTrace(pw);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,207,            pw.flush();,0,0,0,1,2,0,4,0,0,4,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,208,        },8,1,0,0,1,0,0,0,0,10,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,62,209,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,35,        setSeed((long) seed);,4,1,1,2,4,0,2,0,0,10,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,36,    },6,1,0,0,1,0,0,0,0,8,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,41,        final long prime = 4294967291l;,2,0,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,43,        long combined = 0l;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,44,        for (int s : seed) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,45,            combined = combined * prime + s;,8,2,0,0,0,0,0,0,0,11,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,47,        setSeed(combined);,0,0,0,1,2,0,4,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,47,"        super(LocalizedFormats.EVALUATION_FAILED, argument);",6,0,0,1,2,0,0,0,0,6,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,48,        this.argument = new double[] { argument };,4,0,0,2,4,0,0,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,59,"        super(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));",6,0,0,2,4,0,0,2,0,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,60,        this.argument = argument.clone();,2,0,0,1,2,0,4,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,73,"        this(argument, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,74,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,86,"        super(pattern, arguments);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,87,        this.argument = new double[] { argument };,6,0,0,2,4,1,2,0,0,10,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,88,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,100,"        this(argument, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,101,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,113,"        super(pattern, arguments);",4,0,0,1,2,0,0,2,0,6,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,114,        this.argument = argument.clone();,6,0,0,1,2,0,4,0,0,12,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,115,    },6,0,0,0,1,0,0,0,0,7,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,125,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,126,        this.argument = new double[] { argument };,4,0,0,2,4,0,0,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,127,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,137,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,138,        this.argument = argument.clone();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,139,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,153,"        this(cause, argument, new DummyLocalizable(pattern), arguments);",10,0,0,2,4,0,0,2,0,12,64,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,154,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,168,"        super(cause, pattern, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,169,        this.argument = new double[] { argument };,8,0,0,2,4,0,0,0,0,10,42,1,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,170,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,184,"        this(cause, argument, new DummyLocalizable(pattern), arguments);",8,0,0,2,4,0,0,2,0,10,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,185,    },6,3,1,0,1,1,0,0,0,13,1,8,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,199,"        super(cause, pattern, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,200,        this.argument = argument.clone();,2,0,0,1,2,0,4,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,201,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,209,        return argument.clone();,0,0,0,1,2,1,4,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,195,                        return (o2 == null) ? 0 : 1;,8,1,0,1,2,1,14,0,0,24,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,197,                        return -1;,14,4,0,0,0,1,0,0,0,20,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,82,        optimizer.setConvergenceChecker(checker);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,83,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,89,        return optimizer.getConvergenceChecker();,0,0,0,1,2,1,4,0,0,4,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,94,        return maxEvaluations;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,99,        return totalEvaluations;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,104,        this.maxEvaluations = maxEvaluations;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,105,        optimizer.setMaxEvaluations(maxEvaluations);,0,0,0,1,2,0,6,0,0,6,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,106,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,135,        if (optima == null) {,10,2,0,1,3,0,0,0,0,13,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,136,            throw new MathIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);,4,0,0,1,2,0,6,2,0,12,78,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,138,        return optima.clone();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,163,            } catch (FunctionEvaluationException fee) {,0,0,0,1,4,0,0,0,0,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,164,                optima[i] = null;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,165,            } catch (ConvergenceException ce) {,2,0,0,1,4,0,0,2,0,4,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,166,                optima[i] = null;,0,0,1,1,2,0,0,0,0,5,17,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,177,"            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,",4,0,0,0,1,0,0,2,0,6,84,7,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,107,        } catch (MaxCountExceededException e) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,108,            throw new TooManyEvaluationsException(e.getMax());,0,0,0,2,4,0,4,2,0,6,50,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,121,            throw new NullArgumentException();,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,124,            throw new NullArgumentException();,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,151,        checker = c;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,152,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,37,        this(null);,0,0,0,1,2,0,0,0,0,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,38,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,45,"        this(specific,",2,0,0,0,1,0,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,57,"        super(specific,",0,0,0,0,1,0,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,78,"            throw new NumberIsTooSmallException(rel, MIN_RELATIVE_TOLERANCE, true);",4,0,0,1,2,0,0,2,0,7,71,7,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,81,            throw new NotStrictlyPositiveException(abs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,105,            a = hi;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,106,            b = lo;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,116,            fx = -fx;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,166,                                d = -tol1;,4,0,0,0,0,0,0,0,0,6,10,16,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,181,                        e = b - x;,8,3,0,0,0,0,12,0,0,24,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,201,                    fu = -fu;,12,1,0,0,0,0,0,0,0,16,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,242,"                    if (checker.converged(iter, previous, current)) {",0,0,0,2,5,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,243,                        return current;,8,1,0,0,0,1,0,0,0,10,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,41,        super(LocalizedFormats.NULL_NOT_ALLOWED);,16,7,0,1,2,0,0,0,0,23,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,48,"        super(specific, LocalizedFormats.NULL_NOT_ALLOWED);",6,0,0,1,2,0,0,0,0,6,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,62,37,"        super(LocalizedFormats.EVALUATIONS, max);",6,0,0,1,2,0,0,0,0,6,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,62,38,    },2,0,1,0,1,1,0,2,0,9,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,52,"        this(null, wrong, min, boundIsAllowed);",6,0,0,1,2,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,53,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,67,"        super(specific,",2,0,0,0,1,0,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,73,        this.min = min;,4,0,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,74,        this.boundIsAllowed = boundIsAllowed;,4,0,0,0,0,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,75,    },10,3,0,0,1,0,0,0,0,14,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,81,        return boundIsAllowed;,4,0,0,0,0,1,4,4,0,13,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,88,        return min;,6,3,0,0,0,1,2,0,0,11,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,38,"        super(value, 0, false);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,39,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,48,"        super(specific, value, 0, false);",4,0,0,1,2,0,0,0,0,5,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,33,public final class MathUtils {,0,0,0,0,1,0,0,0,0,1,30,4,0.00228,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,75,    private static final long[] FACTORIALS = new long[] {,2,0,0,2,5,3,0,0,0,5,53,2,0.00228,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,63,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);",12,0,0,1,2,0,0,0,0,13,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,82,        super(direction == MathUtils.OrderDirection.INCREASING ?,0,0,0,0,1,0,0,0,0,1,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,91,        this.direction = direction;,4,0,0,0,0,0,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,92,        this.strict = strict;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,93,        this.index = index;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,94,        this.previous = previous;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,95,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,101,        return direction;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,107,        return strict;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,115,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,63,121,        return previous;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,50,"        super(specific, general, wrong, arguments);",8,0,0,1,2,0,0,0,0,8,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,51,        argument = wrong;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,52,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,64,"        super(general, wrong, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,65,        argument = wrong;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,66,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,63,72,        return argument;,8,2,0,0,0,2,0,0,0,11,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,61,                                           Object ... args) {,0,0,0,0,2,0,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,62,        this.specific = specific;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,63,        this.general = general;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,64,        arguments = ArgUtils.flatten(args);,2,0,0,1,2,0,6,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,65,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,72,"        this(null, general, args);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,73,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,83,"        return MessageFactory.buildMessage(locale, specific, general, arguments);",0,0,0,1,2,1,0,0,0,4,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,89,        return getMessage(Locale.US);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,63,95,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,6,0,0,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1806,    public static enum OrderDirection {,2,0,0,0,1,2,0,0,0,4,35,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1808,"        INCREASING,",2,0,0,0,0,0,0,0,0,2,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1810,        DECREASING,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1827,            switch (dir) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,88,        super();,2,1,0,1,2,0,14,0,0,17,8,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,89,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,102,        long s = (long)x + (long)y;,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,103,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,104,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);",4,0,0,1,2,0,8,0,0,12,98,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,106,        return (int)s;,2,0,0,1,2,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,120,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,136,        if (a > b) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,138,"            ret = addAndCheck(b, a, pattern);",12,3,0,1,2,0,8,0,0,26,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,142,            if (a < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,143,                if (b < 0) {,2,1,0,1,3,0,0,0,0,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,145,                    if (Long.MIN_VALUE - b <= a) {,8,2,0,1,3,0,0,0,0,10,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,146,                        ret = a + b;,6,1,0,0,0,0,0,0,0,8,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,148,"                        throw MathRuntimeException.createArithmeticException(pattern, a, b);",6,1,0,1,2,0,10,0,0,18,68,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,152,                    ret = a + b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,159,                if (a <= Long.MAX_VALUE - b) {,8,2,0,1,3,0,6,0,0,16,30,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,160,                    ret = a + b;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,162,"                    throw MathRuntimeException.createArithmeticException(pattern, a, b);",0,0,0,1,2,0,10,0,0,10,68,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,166,        return ret;,12,3,1,0,0,2,0,0,0,21,11,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,195,"        checkBinomial(n, k);",4,0,0,1,2,0,6,0,0,11,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,196,        if ((n == k) || (k == 0)) {,6,3,0,3,7,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,197,            return 1;,4,2,0,0,0,1,0,0,0,6,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,199,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,200,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,203,        if (k > n / 2),4,2,0,1,2,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,204,"            return binomialCoefficient(n, n - k);",4,1,0,1,2,1,4,0,0,9,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,211,        long result = 1;,2,0,0,0,0,0,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,212,        if (n <= 61) {,10,2,0,1,3,0,0,0,0,14,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,214,            int i = n - k + 1;,8,2,0,0,0,0,0,0,0,11,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,215,            for (int j = 1; j <= k; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,216,                result = result * i / j;,8,2,0,0,0,0,0,0,0,11,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,217,                i++;,4,1,0,0,0,0,0,0,0,6,4,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,219,        } else if (n <= 66) {,0,0,0,1,4,0,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,222,            int i = n - k + 1;,6,2,0,0,0,0,0,0,0,8,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,223,            for (int j = 1; j <= k; j++) {,8,1,0,1,3,0,0,0,0,10,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,230,"                final long d = gcd(i, j);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,231,                result = (result / (j / d)) * (i / d);,12,4,0,3,6,0,0,0,0,17,38,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,232,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,234,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,238,            int i = n - k + 1;,6,2,0,0,0,0,0,0,0,8,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,239,            for (int j = 1; j <= k; j++) {,12,1,0,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,240,"                final long d = gcd(i, j);",2,0,0,1,2,1,6,0,0,9,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,241,"                result = mulAndCheck(result / (j / d), i / d);",12,3,0,2,4,0,2,0,0,18,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,242,                i++;,4,0,0,0,0,0,0,2,0,8,4,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,245,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,271,"        checkBinomial(n, k);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,272,        if ((n == k) || (k == 0)) {,6,3,0,3,7,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,273,            return 1d;,2,1,0,0,0,1,0,0,0,3,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,275,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,276,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,278,        if (k > n/2) {,4,2,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,279,"            return binomialCoefficientDouble(n, n - k);",2,0,1,1,2,2,0,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,281,        if (n < 67) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,282,"            return binomialCoefficient(n,k);",0,0,0,1,2,1,6,0,0,6,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,285,        double result = 1d;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,286,        for (int i = 1; i <= k; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,287,             result *= (double)(n - k + i) / (double)i;,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,290,        return FastMath.floor(result + 0.5);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,312,"        checkBinomial(n, k);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,313,        if ((n == k) || (k == 0)) {,0,0,0,3,7,0,0,0,0,10,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,314,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,316,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,317,            return FastMath.log(n);,0,1,0,1,2,1,8,0,0,9,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,324,        if (n < 67) {,2,1,1,1,3,0,8,0,0,15,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,325,"            return FastMath.log(binomialCoefficient(n,k));",0,0,0,2,4,1,10,0,0,10,46,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,332,        if (n < 1030) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,333,"            return FastMath.log(binomialCoefficientDouble(n, k));",0,0,0,2,4,1,10,0,0,10,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,336,        if (k > n / 2) {,6,3,0,1,3,0,4,0,0,13,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,337,"            return binomialCoefficientLog(n, n - k);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,343,        double logSum = 0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,346,        for (int i = n - k + 1; i <= n; i++) {,12,3,0,1,3,0,0,0,0,16,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,347,            logSum += FastMath.log(i);,10,1,0,1,2,0,6,0,0,20,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,351,        for (int i = 2; i <= k; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,352,            logSum -= FastMath.log(i);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,355,        return logSum;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,366,        if (n < k) {,10,1,0,1,3,1,0,0,0,12,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,367,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,371,        if (n < 0) {,14,6,0,1,3,0,4,0,0,24,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,372,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,376,    },4,2,1,0,1,0,0,0,0,11,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,389,"        if (equals(x, y, eps)) {",0,0,0,2,5,0,8,0,0,8,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,390,            return 0;,0,1,1,0,0,1,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,391,        } else if (x < y) {,4,1,0,1,4,0,0,0,0,5,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,392,          return -1;,0,0,0,0,0,1,0,0,0,1,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,394,        return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,405,        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;,2,2,0,3,6,1,10,0,0,15,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,417,        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;,12,4,0,3,6,1,12,0,0,29,54,3,0.0,1,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,429,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);",2,2,0,4,8,1,18,0,0,22,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,442,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,456,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",6,3,0,3,6,1,10,0,0,19,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,479,        assert maxUlps > 0 && maxUlps < NAN_GAP;,6,3,0,0,0,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,481,        long xInt = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,482,        long yInt = Double.doubleToLongBits(y);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,485,        if (xInt < 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,486,            xInt = SGN_MASK - xInt;,6,1,0,0,0,0,0,0,0,8,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,488,        if (yInt < 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,489,            yInt = SGN_MASK - yInt;,6,1,0,0,0,0,0,0,0,8,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,492,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,12,5,1,1,2,1,8,0,0,30,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,494,        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);,2,1,0,2,4,1,12,0,0,17,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,509,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);",0,2,0,4,8,1,20,0,0,22,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,523,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,524,            return !((x == null) ^ (y == null));,4,3,0,3,6,1,0,0,0,8,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,526,        if (x.length != y.length) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,527,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,529,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,530,"            if (!equals(x[i], y[i])) {",2,0,1,4,9,0,2,0,0,13,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,531,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,534,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,548,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,549,            return !((x == null) ^ (y == null));,0,0,0,3,6,1,0,0,0,10,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,551,        if (x.length != y.length) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,552,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,554,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,555,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,4,9,0,2,0,0,11,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,556,                return false;,6,3,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,559,        return true;,0,0,0,0,0,1,4,0,0,5,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,585,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,586,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,590,        if (n > 20) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,591,            throw new ArithmeticException(,2,1,1,0,1,0,0,2,0,9,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,594,        return FACTORIALS[n];,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,618,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,619,            throw MathRuntimeException.createIllegalArgumentException(,2,1,1,0,1,0,4,0,0,12,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,623,        if (n < 21) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,624,            return factorial(n);,4,0,0,1,2,1,4,0,0,10,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,626,        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);,12,3,0,3,6,4,16,2,0,36,59,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,643,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,644,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,648,        if (n < 21) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,649,            return FastMath.log(factorial(n));,0,0,0,2,4,1,8,0,0,8,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,651,        double logSum = 0;,8,1,0,0,0,0,0,0,0,9,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,652,        for (int i = 2; i <= n; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,653,            logSum += FastMath.log(i);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,655,        return logSum;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,688,        int u = p;,4,0,0,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,689,        int v = q;,6,2,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,690,        if ((u == 0) || (v == 0)) {,0,0,0,3,7,0,0,0,0,10,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,691,            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {,12,3,0,3,7,0,0,0,0,15,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,692,                throw MathRuntimeException.createArithmeticException(,2,0,0,0,1,0,0,0,0,2,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,696,            return FastMath.abs(u) + FastMath.abs(v);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,703,        if (u > 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,704,            u = -u;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,706,        if (v > 0) {,6,1,1,1,3,0,0,0,0,13,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,707,            v = -v;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,710,        int k = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,711,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,8,7,0,3,7,0,0,0,0,16,69,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,713,            u /= 2;,2,0,0,0,0,0,0,0,0,3,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,714,            v /= 2;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,715,            k++; // cast out twos.,2,0,0,0,0,0,0,0,0,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,717,        if (k == 31) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,718,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,4,0,0,4,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,724,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,8,3,0,3,6,0,0,0,0,12,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,730,            while ((t & 1) == 0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,731,                t /= 2; // cast out twos,4,1,1,0,0,0,0,0,0,11,24,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,734,            if (t > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,735,                u = -t;,4,0,0,0,0,0,0,0,0,6,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,737,                v = t;,10,1,0,0,0,0,0,0,0,13,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,740,            t = (v - u) / 2;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,743,        } while (t != 0);,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,744,        return -u * (1 << k); // gcd is u*2^k,4,2,0,1,2,1,0,0,0,7,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,777,        long u = p;,4,0,0,0,0,0,0,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,778,        long v = q;,4,0,0,0,0,0,0,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,779,        if ((u == 0) || (v == 0)) {,4,3,0,3,7,0,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,780,            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){,14,3,1,3,7,0,0,0,0,20,52,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,781,                throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,785,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,2,4,1,12,0,0,13,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,792,        if (u > 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,793,            u = -u;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,795,        if (v > 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,796,            v = -v;,4,1,1,0,0,0,6,0,0,17,7,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,799,        int k = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,800,        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are,6,7,0,3,7,0,0,0,0,13,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,802,            u /= 2;,4,1,1,0,0,0,0,0,0,10,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,803,            v /= 2;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,804,            k++; // cast out twos.,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,806,        if (k == 63) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,807,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,4,0,0,4,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,813,        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,14,4,0,3,6,1,0,0,0,20,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,819,            while ((t & 1) == 0) { // while t is even..,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,820,                t /= 2; // cast out twos,2,0,0,0,0,0,0,0,0,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,823,            if (t > 0) {,4,1,0,1,3,0,0,0,0,5,12,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,824,                u = -t;,4,0,0,0,0,0,0,0,0,6,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,826,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,829,            t = (v - u) / 2;,6,2,0,1,2,0,0,0,0,9,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,832,        } while (t != 0);,6,1,0,1,3,0,0,0,0,7,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,833,        return -u * (1L << k); // gcd is u*2^k,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,843,        return new Double(value).hashCode();,2,0,0,2,4,4,0,0,0,5,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,854,        return Arrays.hashCode(value);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,865,        return (x >= ZB) ? PB : NB;,8,1,0,1,2,1,0,0,0,9,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,877,        if (Double.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,878,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,880,        return (x >= 0.0) ? 1.0 : -1.0;,2,1,0,1,2,1,0,0,0,4,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,891,        if (Float.isNaN(x)) {,2,0,0,2,5,1,6,0,0,9,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,892,            return Float.NaN;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,894,        return (x >= 0.0F) ? 1.0F : -1.0F;,6,1,0,1,2,1,0,0,0,9,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,904,        return (x >= 0) ? 1 : -1;,2,1,0,1,2,1,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,914,        return (x >= 0L) ? 1L : -1L;,14,3,0,1,2,1,0,2,0,21,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,925,        return (x >= ZS) ? PS : NS;,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,952,        if (a==0 || b==0){,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,953,            return 0;,2,0,0,0,0,1,0,0,0,3,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,955,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",4,1,0,3,6,0,14,0,0,19,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,956,        if (lcm == Integer.MIN_VALUE) {,6,1,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,957,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,961,        return lcm;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,987,        if (a==0 || b==0){,4,3,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,988,            return 0;,0,1,1,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,990,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,991,        if (lcm == Long.MIN_VALUE){,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,992,            throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,996,        return lcm;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1016,        return FastMath.log(x)/FastMath.log(base);,0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1030,        long m = ((long)x) * ((long)y);,6,1,0,4,8,0,0,0,0,7,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1031,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,2,0,0,1,3,0,4,0,0,7,53,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1032,"            throw new ArithmeticException(""overflow: mul"");",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1034,        return (int)m;,2,0,0,1,2,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1049,"        String msg = ""overflow: multiply"";",2,0,0,0,0,0,0,2,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1050,        if (a > b) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1052,"            ret = mulAndCheck(b, a);",4,0,0,1,2,0,8,4,0,17,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1054,            if (a < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1055,                if (b < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1057,                    if (a >= Long.MAX_VALUE / b) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1058,                        ret = a * b;,6,1,0,0,0,0,0,0,0,8,12,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1060,                        throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1062,                } else if (b > 0) {,0,0,0,1,4,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1064,                    if (Long.MIN_VALUE / b <= a) {,8,2,0,1,3,0,0,0,0,10,30,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1065,                        ret = a * b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1067,                        throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1072,                    ret = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1074,            } else if (a > 0) {,0,0,0,1,4,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1079,                if (a <= Long.MAX_VALUE / b) {,10,2,0,1,3,1,0,0,0,13,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1080,                    ret = a * b;,6,1,0,0,0,0,0,0,0,8,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1082,                    throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1086,                ret = 0;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1089,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1104,        if ((d == 0) || Double.isNaN(d) || Double.isInfinite(d)) {,2,2,0,4,9,0,12,0,0,16,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1105,            return d;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1109,        final long bits     = Double.doubleToLongBits(d);,2,0,0,1,2,1,6,0,0,9,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1110,        final long exponent = bits & 0x7ff0000000000000L;,6,1,0,0,0,0,0,0,0,7,49,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1111,        final long rest     = bits & 0x800fffffffffffffL;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1114,        final long newBits = rest | (exponent + (((long) scaleFactor) << 52));,0,0,0,4,8,0,0,0,0,12,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1115,        return Double.longBitsToDouble(newBits);,0,0,0,1,2,1,2,0,0,2,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1139,         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);,2,0,0,2,4,1,0,0,0,2,72,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1165,         if (Double.isInfinite(normalizedSum)) {,14,6,0,2,5,0,6,0,0,26,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1166,             throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1169,         if (Double.isNaN(normalizedSum)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1170,             throw MathRuntimeException.createIllegalArgumentException(,2,0,0,0,1,0,4,0,0,7,58,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1173,         double sum = 0d;,8,2,0,0,0,1,4,0,0,15,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1174,         final int len = values.length;,6,0,0,0,0,1,0,0,0,7,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1175,         double[] out = new double[len];,2,0,1,2,4,0,0,0,0,4,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1176,         for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1177,             if (Double.isInfinite(values[i])) {,0,0,1,3,7,0,4,0,0,8,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1178,                 throw MathRuntimeException.createArithmeticException(,0,0,0,0,1,0,4,0,0,4,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1181,             if (!Double.isNaN(values[i])) {,4,1,0,3,7,0,0,0,0,6,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1182,                 sum += values[i];,2,0,1,1,2,0,0,0,0,7,17,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1185,         if (sum == 0) {,6,3,0,1,3,0,0,0,0,9,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1186,             throw MathRuntimeException.createArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);,4,0,0,1,2,0,4,0,0,8,90,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1188,         for (int i = 0; i < len; i++) {,12,1,0,1,3,0,0,0,0,15,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1189,             if (Double.isNaN(values[i])) {,4,1,1,3,7,0,4,0,0,13,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1190,                 out[i] = Double.NaN;,4,0,1,1,2,0,0,0,0,9,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1192,                 out[i] = values[i] * normalizedSum / sum;,4,2,1,2,4,0,0,0,0,15,41,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1195,         return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1208,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1225,            return (new BigDecimal,0,0,0,0,1,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1229,        } catch (NumberFormatException ex) {,2,0,0,1,4,0,0,2,0,4,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1230,            if (Double.isInfinite(x)) {,2,1,1,2,5,0,6,0,0,18,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1231,                return x;,4,0,0,0,0,1,12,0,0,16,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1233,                return Double.NaN;,6,0,0,0,0,2,0,0,0,7,18,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1248,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1264,        float sign = indicator(x);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1265,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;",4,1,0,2,4,0,6,0,0,11,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1266,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",6,2,0,2,4,1,6,0,0,14,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1283,        switch (roundingMethod) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1285,            if (sign == -1) {,2,1,0,1,3,0,0,0,0,4,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1286,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",6,0,0,2,4,0,10,0,0,17,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1288,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1290,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1292,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",2,0,0,2,4,1,2,0,0,5,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1293,            break;,0,0,0,0,0,0,4,0,0,4,6,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1295,            if (sign == -1) {,2,1,0,1,3,0,0,0,0,4,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1296,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1298,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",10,3,0,2,4,0,10,0,0,25,82,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1300,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1302,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1303,            double fraction = unscaled - FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1304,            if (fraction > 0.5) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1305,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1307,                unscaled = FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1309,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1312,            double fraction = unscaled - FastMath.floor(unscaled);,10,3,0,1,2,0,6,0,0,21,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1313,            if (fraction > 0.5) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1314,                unscaled = FastMath.ceil(unscaled);,10,1,0,1,2,0,6,0,0,19,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1315,            } else if (fraction < 0.5) {,2,1,0,1,4,0,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1316,                unscaled = FastMath.floor(unscaled);,2,0,0,1,2,0,6,0,0,9,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1319,                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math,0,3,0,1,4,0,12,0,0,15,57,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1321,                    unscaled = FastMath.floor(unscaled);,2,0,0,1,2,0,10,0,0,14,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1323,                    unscaled = FastMath.ceil(unscaled);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1326,            break;,6,0,0,0,0,0,0,0,0,8,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1329,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);",6,0,1,1,2,0,6,0,0,18,66,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1330,            double fraction = unscaled - FastMath.floor(unscaled);,4,1,0,1,2,0,6,0,0,11,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1331,            if (fraction >= 0.5) {,2,0,0,1,3,0,0,0,0,2,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1332,                unscaled = FastMath.ceil(unscaled);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1334,                unscaled = FastMath.floor(unscaled);,2,0,0,1,2,0,10,0,0,13,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1336,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1339,            if (unscaled != FastMath.floor(unscaled)) {,2,1,0,2,5,0,6,0,0,9,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1340,"                throw new ArithmeticException(""Inexact result from rounding"");",0,0,0,1,2,0,0,0,0,3,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1344,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));",0,0,0,2,4,0,0,0,0,6,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1345,            break;,8,2,0,0,0,0,14,0,0,25,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1347,            throw MathRuntimeException.createIllegalArgumentException(,2,0,0,0,1,0,0,0,0,3,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1359,        return unscaled;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1373,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,2,2,0,2,4,1,0,0,0,4,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1389,        if (Double.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1390,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1392,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,4,2,0,2,4,1,0,0,0,7,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1407,        if (Float.isNaN(x)) {,2,1,0,2,5,0,6,0,0,9,21,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1408,            return Float.NaN;,4,0,0,0,0,1,0,0,0,4,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1410,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,0,0,0,2,4,1,0,0,0,7,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1424,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,4,2,0,2,4,1,0,0,0,7,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1438,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,8,2,0,2,4,1,0,0,0,13,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1453,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,14,2,0,2,4,1,0,0,0,16,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1464,        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;,2,2,0,3,6,1,10,0,0,15,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1478,        long s = (long)x - (long)y;,6,1,0,2,4,0,0,0,0,7,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1479,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,0,0,0,1,3,0,0,0,0,4,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1480,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);",4,0,0,1,2,0,8,0,0,12,101,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1482,        return (int)s;,6,0,0,1,2,1,0,0,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1497,"        String msg = ""overflow: subtract"";",12,1,0,0,0,1,0,6,0,23,34,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1498,        if (b == Long.MIN_VALUE) {,6,1,0,1,3,0,0,0,0,7,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1499,            if (a < 0) {,6,1,1,1,3,0,0,0,0,12,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1500,                ret = a - b;,6,1,0,0,0,0,0,0,0,8,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1502,                throw new ArithmeticException(msg);,2,0,0,1,2,0,0,2,0,4,35,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1506,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);",14,0,0,1,2,0,4,4,0,24,64,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1508,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1521,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1522,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1527,        int result = 1;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1528,        int k2p    = k;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1529,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1530,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,4,0,0,8,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1531,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1533,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1534,            e = e >> 1;,4,1,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1537,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1551,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1552,            throw MathRuntimeException.createIllegalArgumentException(,2,0,0,0,1,0,4,0,0,6,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1557,        int result = 1;,8,1,0,0,0,0,0,0,0,9,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1558,        int k2p    = k;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1559,        while (e != 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1560,            if ((e & 0x1) != 0) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1561,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1563,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1564,            e = e >> 1;,4,1,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1567,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1581,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1582,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1587,        long result = 1l;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1588,        long k2p    = k;,4,0,0,0,0,0,0,0,0,4,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1589,        while (e != 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1590,            if ((e & 0x1) != 0) {,10,3,0,2,5,0,0,0,0,14,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1591,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1593,            k2p *= k2p;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1594,            e = e >> 1;,6,1,0,0,0,0,0,0,0,8,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1597,        return result;,6,1,0,0,0,1,0,0,0,8,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1611,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1612,            throw MathRuntimeException.createIllegalArgumentException(,2,0,0,0,1,0,0,0,0,2,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1617,        long result = 1l;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1618,        long k2p    = k;,10,4,0,0,0,0,0,0,0,14,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1619,        while (e != 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1620,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1621,                result *= k2p;,10,2,0,0,0,0,0,0,0,14,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1623,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1624,            e = e >> 1;,6,1,0,0,0,1,2,0,0,11,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1627,        return result;,4,1,0,0,0,1,12,0,0,17,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1641,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1642,            throw MathRuntimeException.createIllegalArgumentException(,40,13,0,0,1,0,0,0,0,54,58,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1647,        return k.pow(e);,0,0,0,1,2,1,10,0,0,10,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1661,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1662,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1667,        BigInteger result = BigInteger.ONE;,14,1,0,0,0,3,0,2,0,21,35,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1668,        BigInteger k2p    = k;,4,0,0,0,0,0,0,2,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1669,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1670,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1671,                result = result.multiply(k2p);,2,0,0,1,2,0,12,0,0,15,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1673,            k2p = k2p.multiply(k2p);,2,0,0,1,2,0,6,0,0,9,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1674,            e = e >> 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1677,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1691,        if (e.compareTo(BigInteger.ZERO) < 0) {,4,1,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1692,            throw MathRuntimeException.createIllegalArgumentException(,0,0,0,0,1,0,4,0,0,4,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1697,        BigInteger result = BigInteger.ONE;,8,0,1,0,0,0,0,2,0,17,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1698,        BigInteger k2p    = k;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1699,        while (!BigInteger.ZERO.equals(e)) {,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1700,            if (e.testBit(0)) {,0,0,0,2,5,0,4,0,0,4,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1701,                result = result.multiply(k2p);,2,0,0,1,2,1,0,8,0,11,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1703,            k2p = k2p.multiply(k2p);,2,0,0,1,2,0,6,0,0,9,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1704,            e = e.shiftRight(1);,8,1,0,1,2,0,4,0,0,14,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1707,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1719,        double sum = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1720,        for (int i = 0; i < p1.length; i++) {,30,10,0,1,3,0,0,0,0,42,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1721,            sum += FastMath.abs(p1[i] - p2[i]);,2,1,1,3,6,0,4,0,0,16,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1723,        return sum;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1734,      int sum = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1735,      for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1736,          sum += FastMath.abs(p1[i] - p2[i]);,4,1,1,3,6,1,4,0,0,19,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1738,      return sum;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1749,        double sum = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1750,        for (int i = 0; i < p1.length; i++) {,16,2,0,1,3,0,0,0,0,19,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1751,            final double dp = p1[i] - p2[i];,2,1,1,2,4,1,0,0,0,12,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1752,            sum += dp * dp;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1754,        return FastMath.sqrt(sum);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1765,      double sum = 0;,10,1,0,0,0,1,2,4,0,18,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1766,      for (int i = 0; i < p1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1767,          final double dp = p1[i] - p2[i];,2,1,1,2,4,1,0,0,0,12,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1768,          sum += dp * dp;,8,1,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1770,      return FastMath.sqrt(sum);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1781,        double max = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1782,        for (int i = 0; i < p1.length; i++) {,14,1,0,1,3,0,0,0,0,17,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1783,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",0,0,0,4,8,0,0,0,0,12,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1785,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1796,        int max = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1797,        for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1798,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",2,1,1,4,8,0,10,0,0,22,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1800,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1822,        double previous = val[0];,4,0,1,1,2,0,8,2,0,16,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1823,        boolean ok = true;,2,0,0,0,0,0,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1825,        int max = val.length;,6,0,0,0,0,0,0,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1826,        for (int i = 1; i < max; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1827,            switch (dir) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1829,                if (strict) {,2,0,0,1,3,0,0,0,0,2,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1830,                    if (val[i] <= previous) {,2,1,1,2,5,0,0,0,0,7,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1831,                        ok = false;,2,0,0,0,0,0,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1834,                    if (val[i] < previous) {,2,0,1,2,5,0,0,0,0,4,24,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1835,                        ok = false;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1840,                if (strict) {,8,2,0,1,3,0,0,0,0,11,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1841,                    if (val[i] >= previous) {,6,1,1,2,5,0,0,0,0,14,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1842,                        ok = false;,2,0,0,0,0,0,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1845,                    if (val[i] > previous) {,2,1,1,2,5,0,0,0,0,7,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1846,                        ok = false;,2,0,0,0,0,0,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1852,                throw new IllegalArgumentException();,2,1,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1855,            if (!ok) {,2,0,0,1,3,0,0,0,0,3,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1856,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);",8,0,1,2,4,0,0,2,0,14,75,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1858,            previous = val[i];,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1860,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1869,"        checkOrder(val, OrderDirection.INCREASING, true);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1870,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1932,    double rdwarf = 3.834e-20;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1933,    double rgiant = 1.304e+19;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1934,    double s1=0.0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1935,    double s2=0.0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1936,    double s3=0.0;,6,0,0,0,0,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1937,    double x1max = 0.0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1938,    double x3max = 0.0;,12,1,0,0,0,1,0,0,0,15,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1939,    double floatn = (double)v.length;,12,1,1,1,2,0,0,0,0,16,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1940,    double agiant = rgiant/floatn;,6,1,0,0,0,0,0,0,0,7,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1941,    for (int i=0;i<v.length;i++) {,10,1,0,1,3,0,0,0,0,13,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1942,        double xabs = Math.abs(v[i]);,4,0,1,2,4,0,4,2,0,14,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1943,        if (xabs<rdwarf || xabs>agiant) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1944,            if (xabs>rdwarf) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1945,                if (xabs>x1max) {,6,1,0,1,3,0,0,0,0,7,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1946,                    double r=x1max/xabs;,6,1,0,0,0,0,0,0,0,7,20,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1947,                    s1=1.0+s1*r*r;,20,4,0,0,0,0,0,0,0,26,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1948,                    x1max=xabs;,6,0,0,0,0,0,0,0,0,7,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1949,                } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1950,                    double r=xabs/x1max;,6,1,0,0,0,0,0,0,0,7,20,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1951,                    s1+=r*r;,8,1,0,0,0,1,6,0,0,17,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1952,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1954,                if (xabs>x3max) {,4,1,0,1,3,0,0,0,0,5,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1955,                 double r=x3max/xabs;,6,1,0,0,0,0,0,0,0,7,20,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1956,                 s3=1.0+s3*r*r;,8,2,0,0,0,0,0,0,0,11,14,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1957,                 x3max=xabs;,0,0,0,0,0,0,4,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1958,                } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1959,                    if (xabs!=0.0) {,2,1,0,1,3,0,0,0,0,3,16,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1960,                        double r=xabs/x3max;,20,3,1,0,0,0,0,0,0,31,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1961,                        s3+=r*r;,6,1,0,0,0,0,0,0,0,8,8,14,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1962,                    },8,2,0,0,1,0,0,0,0,10,1,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1966,         s2+=xabs*xabs;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1970,    if (s1!=0.0) {,4,1,0,1,3,0,4,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1971,        norm = x1max*Math.sqrt(s1+(s2/x1max)/x1max);,18,5,0,2,4,0,4,0,0,28,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1973,        if (s2==0.0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1974,            norm = x3max*Math.sqrt(s3);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1976,            if (s2>=x3max) {,2,0,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1977,                norm = Math.sqrt(s2*(1.0+(x3max/s2)*(x3max*s3)));,16,6,0,4,8,0,4,0,0,27,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1979,                norm = Math.sqrt(x3max*((s2/x3max)+(x3max*s3)));,12,4,0,4,8,0,4,0,0,21,48,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,63,1983,    return norm;,8,1,0,0,0,1,0,0,0,10,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,204,    private FastMath() {,2,0,0,1,3,1,0,0,0,3,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,205,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,35,    private static final double EXP_INT_TABLE_A[] = new double[1500];,5,1,0,2,4,0,0,0,0,6,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,40,    private static final double EXP_INT_TABLE_B[] = new double[1500];,0,0,0,2,4,0,0,0,0,6,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,45,    private static final double EXP_FRAC_TABLE_A[] = new double[1025];,2,0,0,2,4,3,0,0,0,5,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,50,    private static final double EXP_FRAC_TABLE_B[] = new double[1025];,2,0,0,2,4,3,0,0,0,5,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,53,    private static final double FACT[] = new double[20];,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,56,    private static final double LN_MANT[][] = new double[1024][];,0,0,0,4,8,0,0,0,0,12,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,65,    private static final double LN_SPLIT_COEF[][] = {,0,0,0,2,5,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,85,    private static final double LN_QUICK_COEF[][] = {,0,0,0,2,5,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,98,    private static final double LN_HI_PREC_COEF[][] = {,2,0,0,2,5,3,0,0,0,5,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,108,    private static final double SINE_TABLE_A[] = new double[14];,10,0,0,2,4,3,0,0,0,17,60,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,111,    private static final double SINE_TABLE_B[] = new double[14];,2,1,0,2,4,0,4,0,0,7,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,114,    private static final double COSINE_TABLE_A[] = new double[14];,8,2,0,2,4,0,0,0,0,11,62,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,117,    private static final double COSINE_TABLE_B[] = new double[14];,2,0,0,2,4,3,0,0,0,5,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,120,    private static final double TANGENT_TABLE_A[] = new double[14];,8,2,0,2,4,0,0,0,0,11,63,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,123,    private static final double TANGENT_TABLE_B[] = new double[14];,2,0,0,2,4,3,0,0,0,5,63,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,126,    private static long RECIP_2PI[] = new long[] {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,147,    private static long PI_O_4_BITS[] = new long[] {,2,0,0,2,5,2,6,0,0,10,48,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,155,"    private static final double EIGHTHES[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",0,0,0,2,4,0,0,0,0,6,127,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,162,        FACT[0] = 1.0;,0,0,1,1,2,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,163,        for (i = 1; i < 20; i++) {,12,2,0,1,3,0,0,0,0,16,26,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,164,            FACT[i] = FACT[i-1] * i;,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,167,        double tmp[] = new double[2];,12,1,0,2,4,0,0,0,0,15,29,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,168,        double recip[] = new double[2];,20,9,0,2,4,0,0,0,0,30,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,171,        for (i = 0; i < 750; i++) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,172,"            expint(i, tmp);",2,0,0,1,2,0,6,0,0,8,15,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,173,            EXP_INT_TABLE_A[i+750] = tmp[0];,2,1,1,2,4,0,0,0,0,8,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,174,            EXP_INT_TABLE_B[i+750] = tmp[1];,4,1,1,2,4,0,0,0,0,10,32,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,176,            if (i != 0) {,2,0,0,1,3,0,0,0,0,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,178,"                splitReciprocal(tmp, recip);",28,13,0,1,2,0,6,0,0,48,28,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,179,                EXP_INT_TABLE_A[750-i] = recip[0];,4,0,0,2,4,0,0,0,0,5,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,180,                EXP_INT_TABLE_B[750-i] = recip[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,185,        for (i = 0; i < 1025; i++) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,186,"            slowexp(i/1024.0, tmp);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,187,            EXP_FRAC_TABLE_A[i] = tmp[0];,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,188,            EXP_FRAC_TABLE_B[i] = tmp[1];,0,0,1,2,4,0,0,0,0,7,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,192,        for (i = 0; i < 1024; i++) {,6,1,0,1,3,0,0,0,0,9,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,193,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,0,0,0,4,8,0,0,0,0,12,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,194,            LN_MANT[i] = slowLog(d);,4,0,0,2,4,0,0,0,0,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,198,        buildSinCosTables();,4,0,0,1,2,0,8,0,0,13,20,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,199,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,212,        return Math.acos(a);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,220,        return Math.asin(a);,0,0,0,1,2,1,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,228,        return Math.sqrt(a);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,236,        return Math.cbrt(a);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,244,        return 0.5 * (FastMath.exp(a) + FastMath.exp(-a));,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,253,        boolean negative = false;,4,1,1,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,254,        if (a < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,255,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,256,            a = -a;,2,1,1,0,0,0,0,0,0,8,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,260,        if (a > 0.3) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,261,            absSinh = 0.5 * (FastMath.exp(a) - FastMath.exp(-a));,0,0,0,3,6,0,0,0,0,1,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,263,            final double a2 = a * a;,22,3,1,0,0,1,0,0,0,32,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,264,            if (a > 0.05) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,265,                absSinh = a * (1 + a2 * (1 + a2  * (1 + a2 * (1 + a2 * (1 + a2 / 110) / 72) / 42) / 20) / 6);,18,15,0,5,10,0,0,0,0,34,93,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,267,                absSinh = a * (1 + a2 * (1 + a2  * (1 + a2 / 42) / 20) / 6);,10,9,0,3,6,0,0,0,0,20,60,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,271,        return negative ? -absSinh : absSinh;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,281,        boolean negative = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,282,        if (a < 0) {,6,2,0,1,3,0,0,0,0,9,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,283,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,284,            a = -a;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,288,        if (a > 0.074) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,289,            final double twoA = 2 * a;,8,2,0,0,0,1,0,0,0,11,26,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,290,            absTanh = FastMath.expm1(twoA) / (FastMath.exp(twoA) + 1);,0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,291,        } else {,2,1,0,0,2,0,0,0,0,3,8,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,292,            final double a2 = a * a;,6,1,0,0,0,1,0,0,0,8,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,293,            if (a > 0.016) {,12,2,0,1,3,0,0,0,0,15,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,294,                absTanh = a * (1 - a2 * (1 - a2 * (2 - a2 * (17 - a2 * (62 - a2 * 1382 / 55 ) / 9) / 21) / 5) / 3);,0,0,0,5,10,0,0,0,0,15,99,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,296,                absTanh = a * (1 - a2 * (1 - a2 * (2 - a2 * 17 / 21) / 5) / 3);,2,0,0,3,6,0,0,0,0,4,63,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,300,        return negative ? -absTanh : absTanh;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,309,        return FastMath.log(a + FastMath.sqrt(a * a - 1));,12,5,0,2,4,1,8,0,0,25,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,318,        boolean negative = false;,8,1,0,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,319,        if (a < 0) {,10,2,0,1,3,0,0,0,0,14,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,320,            negative = true;,12,2,0,0,0,0,0,0,0,18,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,321,            a = -a;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,325,        if (a > 0.167) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,326,            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);,18,10,0,2,4,1,20,0,0,51,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,328,            final double a2 = a * a;,2,1,0,0,0,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,329,            if (a > 0.097) {,4,1,0,1,3,0,0,0,0,5,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,330,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,2,1,0,9,18,0,0,0,0,3,264,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,331,            } else if (a > 0.036) {,2,1,0,1,4,0,0,0,0,3,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,332,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,24,27,0,7,14,1,0,0,0,53,196,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,333,            } else if (a > 0.0036) {,2,1,0,1,4,0,0,0,0,4,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,334,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,14,17,0,5,10,3,0,0,0,35,129,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,336,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);,8,9,0,3,6,0,0,0,0,18,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,340,        return negative ? -absAsinh : absAsinh;,2,0,0,0,0,1,2,2,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,350,        boolean negative = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,351,        if (a < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,352,            negative = true;,12,1,0,0,0,0,0,0,0,16,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,353,            a = -a;,6,0,0,0,0,0,0,0,0,8,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,357,        if (a > 0.15) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,358,            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));,6,4,0,3,6,0,4,0,0,15,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,360,            final double a2 = a * a;,6,1,1,0,0,1,0,0,0,11,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,361,            if (a > 0.087) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,362,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));,20,25,0,9,18,0,0,0,0,46,175,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,363,            } else if (a > 0.031) {,0,0,0,1,4,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,364,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));,16,19,0,7,14,0,0,0,0,36,135,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,365,            } else if (a > 0.003) {,2,1,0,1,4,0,0,0,0,3,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,366,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));,18,14,0,5,10,0,0,0,0,33,95,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,368,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));,20,9,0,3,6,0,0,0,0,32,57,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,372,        return negative ? -absAtanh : absAtanh;,0,0,0,0,0,1,0,0,0,1,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,382,        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : (Double.isNaN(a) ? Double.NaN : 0.0));,8,2,0,5,10,1,6,0,0,17,83,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,390,"        return nextAfter(a, Double.POSITIVE_INFINITY);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,397,        return Math.random();,10,2,0,1,2,1,8,0,0,22,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,421,"        return exp(x, 0.0, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,440,        if (x < 0.0) {,2,1,0,1,3,0,0,4,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,441,            intVal = (int) -x;,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,443,            if (intVal > 746) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,444,                return 0.0;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,447,            if (intVal > 709) {,4,1,1,1,3,0,0,0,0,10,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,449,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,450,                if (hiPrec != null) {,8,3,1,1,3,0,0,0,0,16,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,451,                    hiPrec[0] /= 285040095144011776.0;,0,0,1,1,2,0,0,0,0,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,452,                    hiPrec[1] /= 285040095144011776.0;,10,2,0,1,2,0,0,0,0,13,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,454,                return result;,2,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,457,            if (intVal == 709) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,459,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;",4,2,0,1,2,1,6,0,0,13,79,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,460,                if (hiPrec != null) {,0,1,0,1,3,0,6,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,461,                    hiPrec[0] /= 4.455505956692756620;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,462,                    hiPrec[1] /= 4.455505956692756620;,4,0,0,1,2,0,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,464,                return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,467,            intVal++;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,469,            intPartA = EXP_INT_TABLE_A[750-intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,470,            intPartB = EXP_INT_TABLE_B[750-intVal];,4,1,1,1,2,0,0,0,0,8,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,472,            intVal = -intVal;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,474,            intVal = (int) x;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,476,            if (intVal > 709) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,477,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,480,            intPartA = EXP_INT_TABLE_A[750+intVal];,8,2,0,1,2,0,0,0,0,11,39,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,481,            intPartB = EXP_INT_TABLE_B[750+intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,488,        final int intFrac = (int) ((x - intVal) * 1024.0);,6,2,0,3,6,1,0,0,0,9,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,489,        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];,2,0,1,1,2,1,0,0,0,7,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,490,        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];,2,0,1,1,2,1,0,0,0,7,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,496,        final double epsilon = x - (intVal + intFrac / 1024.0);,14,5,0,1,2,1,0,0,0,20,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,505,        double z = 0.04168701738764507;,2,0,0,0,0,0,0,0,0,2,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,506,        z = z * epsilon + 0.1666666505023083;,2,0,0,0,0,0,6,0,0,9,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,507,        z = z * epsilon + 0.5000000000042687;,12,3,0,0,0,0,0,0,0,16,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,508,        z = z * epsilon + 1.0;,12,3,0,0,0,0,0,0,0,17,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,509,        z = z * epsilon + -3.940510424527919E-20;,8,2,0,0,0,0,6,0,0,19,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,516,        double tempA = intPartA * fracPartA;,6,1,0,0,0,0,0,0,0,7,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,517,        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;,0,0,0,0,0,0,0,0,0,0,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,523,        final double tempC = tempB + tempA;,6,1,0,0,0,1,0,0,0,8,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,525,        if (extra != 0.0) {,2,1,0,1,3,0,6,0,0,9,19,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,526,            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;,16,3,0,0,0,0,0,0,0,20,63,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,528,            result = tempC*z + tempB + tempA;,10,3,0,0,0,0,0,0,0,14,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,531,        if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,533,            hiPrec[0] = tempA;,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,534,            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;,16,6,1,1,2,0,0,0,0,25,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,537,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,545,        if (x != x || x == 0.0) { // NaN or zero,8,3,1,1,3,0,0,0,0,14,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,546,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,549,        if (x <= -1.0 || x >= 1.0) {,4,3,0,1,3,0,0,0,0,8,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,552,            double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,553,"            exp(x, 0.0, hiPrec);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,554,            if (x > 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,555,                return -1.0 + hiPrec[0] + hiPrec[1];,0,0,0,2,4,1,0,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,557,                final double ra = -1.0 + hiPrec[0];,10,2,0,1,2,0,0,0,0,13,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,558,                double rb = -(ra + 1.0 - hiPrec[0]);,4,2,1,2,4,0,0,0,0,9,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,559,                rb += hiPrec[1];,2,0,1,1,2,0,0,0,0,5,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,560,                return ra + rb;,4,1,0,0,0,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,567,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,569,        if (x < 0.0) {,6,1,0,1,3,0,0,0,0,8,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,570,            x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,571,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,575,            int intFrac = (int) (x * 1024.0);,12,3,0,2,4,0,0,0,0,16,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,576,            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;,10,3,1,1,2,0,0,0,0,18,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,577,            double tempB = EXP_FRAC_TABLE_B[intFrac];,14,4,1,1,2,1,0,0,0,23,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,579,            double temp = tempA + tempB;,18,3,0,0,0,0,0,0,0,23,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,580,            tempB = -(temp - tempA - tempB);,24,3,0,1,2,0,0,0,0,30,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,581,            tempA = temp;,12,2,0,0,0,0,0,0,0,15,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,583,            temp = tempA * 1073741824.0;,8,1,0,0,0,0,0,0,0,10,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,584,            baseA = tempA + temp - temp;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,585,            baseB = tempB + (tempA - baseA);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,587,            epsilon = x - intFrac/1024.0;,8,2,0,0,0,0,0,0,0,12,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,592,        double zb = 0.008336750013465571;,2,0,0,0,0,0,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,593,        zb = zb * epsilon + 0.041666663879186654;,6,2,0,0,0,0,0,0,0,9,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,594,        zb = zb * epsilon + 0.16666666666745392;,6,2,0,0,0,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,595,        zb = zb * epsilon + 0.49999999999999994;,6,2,0,0,0,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,596,        zb = zb * epsilon;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,597,        zb = zb * epsilon;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,599,        double za = epsilon;,12,1,0,0,0,0,0,0,0,13,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,600,        double temp = za + zb;,6,1,0,0,0,0,0,0,0,7,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,601,        zb = -(temp - za - zb);,4,1,0,1,2,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,602,        za = temp;,12,2,0,0,0,0,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,604,        temp = za * 1073741824.0;,6,1,0,0,0,0,0,0,0,8,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,605,        temp = za + temp - temp;,10,2,0,0,0,0,0,0,0,13,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,606,        zb += za - temp;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,607,        za = temp;,24,6,0,0,0,0,4,0,0,36,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,610,        double ya = za * baseA;,6,1,0,0,0,0,12,0,0,19,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,612,        temp = ya + za * baseB;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,613,        double yb = -(temp - ya - za * baseB);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,614,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,616,        temp = ya + zb * baseA;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,617,        yb += -(temp - ya - zb * baseA);,4,0,0,1,2,0,0,0,0,4,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,618,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,620,        temp = ya + zb * baseB;,14,3,0,0,0,0,6,0,0,25,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,621,        yb += -(temp - ya - zb*baseB);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,622,        ya = temp;,6,0,1,0,0,1,0,0,0,12,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,626,        temp = ya + baseA;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,627,        yb += -(temp - baseA - ya);,8,1,0,1,2,0,0,0,0,11,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,628,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,630,        temp = ya + za;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,632,        yb += -(temp - ya - za);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,633,        ya = temp;,8,1,1,0,0,0,0,0,0,12,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,635,        temp = ya + baseB;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,637,        yb += -(temp - ya - baseB);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,638,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,640,        temp = ya + zb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,642,        yb += -(temp - ya - zb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,643,        ya = temp;,26,3,1,0,0,1,0,4,0,43,10,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,645,        if (negative) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,647,            double denom = 1.0 + ya;,0,1,0,0,0,0,8,0,0,9,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,648,            double denomr = 1.0 / denom;,4,1,0,0,0,0,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,649,            double denomb = -(denom - 1.0 - ya) + yb;,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,650,            double ratio = ya * denomr;,6,1,0,0,0,0,0,0,0,7,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,651,            temp = ratio * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,652,            final double ra = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,653,            double rb = ratio - ra;,6,1,0,0,0,0,0,0,0,7,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,655,            temp = denom * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,656,            za = denom + temp - temp;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,657,            zb = denom - za;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,659,            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;,22,9,0,1,2,0,0,0,0,32,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,670,            rb += yb * denomr;                      // numerator,6,1,0,0,0,0,0,0,0,8,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,671,            rb += -ya * denomb * denomr * denomr;   // denominator,10,1,0,0,0,0,0,0,0,13,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,674,            ya = -ra;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,675,            yb = -rb;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,678,        return ya + yb;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,689,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,690,        final double ys[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,691,        final double facts[] = new double[2];,2,0,0,2,4,1,8,0,0,11,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,692,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,693,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,694,        ys[0] = ys[1] = 0.0;,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,696,        for (int i = 19; i >= 0; i--) {,6,1,0,1,3,0,0,0,0,8,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,697,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,698,            ys[0] = as[0];,0,0,0,2,4,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,699,            ys[1] = as[1];,0,0,1,2,4,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,701,"            split(FACT[i], as);",0,0,1,2,4,0,4,0,0,8,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,702,"            splitReciprocal(as, facts);",4,0,0,1,2,0,6,0,0,10,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,704,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,705,            ys[0] = as[0];,4,0,1,2,4,0,0,0,0,9,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,706,            ys[1] = as[1];,0,0,1,2,4,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,709,        if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,710,            result[0] = ys[0];,0,0,1,2,4,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,711,            result[1] = ys[1];,0,0,1,2,4,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,714,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,723,        if (d < 8e298 && d > -8e298) {,4,3,0,1,3,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,724,            final double a = d * 1073741824.0;,8,3,1,0,0,1,0,0,0,17,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,725,            split[0] = (d + a) - a;,6,2,1,2,4,0,0,0,0,11,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,726,            split[1] = d - split[0];,2,1,1,2,4,0,0,0,0,8,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,727,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,728,            final double a = d * 9.31322574615478515625E-10;,0,0,0,0,0,0,0,0,0,0,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,729,            split[0] = (d + a - d) * 1073741824.0;,6,3,1,2,4,0,0,0,0,12,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,730,            split[1] = d - split[0];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,732,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,739,        final double c = a[0] + a[1];,14,2,0,2,4,0,0,0,0,18,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,740,        final double d = -(c - a[0] - a[1]);,4,1,1,3,6,1,0,0,0,11,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,742,        if (c < 8e298 && c > -8e298) {,8,5,0,1,3,0,0,0,0,14,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,743,            double z = c * 1073741824.0;,4,1,0,0,0,0,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,744,            a[0] = (c + z) - z;,0,0,0,2,4,0,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,745,            a[1] = c - a[0] + d;,4,2,1,2,4,0,0,0,0,11,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,746,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,747,            double z = c * 9.31322574615478515625E-10;,6,1,0,0,0,0,0,2,0,10,42,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,748,            a[0] = (c + z - c) * 1073741824.0;,14,9,1,2,4,0,0,0,0,26,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,749,            a[1] = c - a[0] + d;,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,751,    },12,1,0,0,1,0,0,0,0,14,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,759,        ans[0] = a[0] * b[0];,0,1,1,3,6,0,0,0,0,8,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,760,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,0,0,0,7,14,0,0,0,0,21,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,763,        resplit(ans);,12,5,0,1,2,1,4,0,0,22,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,764,    },8,1,0,0,1,0,0,0,0,10,1,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,772,        ans[0] = a[0] + b[0];,12,3,0,3,6,0,0,0,0,16,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,773,        ans[1] = a[1] + b[1];,0,1,1,3,6,0,0,0,0,8,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,775,        resplit(ans);,0,0,0,1,2,0,4,0,0,4,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,776,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,797,        final double b = 1.0/4194304.0;,6,3,0,0,0,1,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,798,        final double a = 1.0 - b;,8,4,0,0,0,1,0,0,0,14,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,800,        if (in[0] == 0.0) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,801,            in[0] = in[1];,0,0,0,2,4,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,802,            in[1] = 0.0;,2,1,1,1,2,0,0,0,0,11,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,805,        result[0] = a / in[0];,8,2,1,2,4,1,6,0,0,22,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,806,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,10,2,0,9,18,1,0,0,0,13,60,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,808,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,4,9,0,0,0,0,5,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,809,            result[1] = 0.0;,0,0,1,1,2,0,0,0,0,3,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,813,        resplit(result);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,815,        for (int i = 0; i < 2; i++) {,22,4,0,1,3,0,8,0,0,39,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,817,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,0,0,0,4,8,0,0,0,0,12,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,820,            err = err * (result[0] + result[1]);,4,2,1,3,6,0,0,0,0,11,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,822,            result[1] += err;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,824,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,832,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,833,        final double ys[] = new double[2];,2,0,0,2,4,1,0,2,0,6,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,834,        final double zs[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,837,"        split(a[0], xs);",2,1,0,2,4,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,838,"        split(b[0], ys);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,839,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,841,        result[0] = zs[0];,4,3,1,2,4,0,0,0,0,12,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,842,        result[1] = zs[1];,0,0,1,2,4,0,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,845,"        split(b[1], ys);",0,0,1,2,4,0,4,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,846,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,848,        double tmp = result[0] + zs[0];,14,5,1,2,4,0,0,0,0,27,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,849,        result[1] = result[1] - (tmp - result[0] - zs[0]);,4,2,1,5,10,1,0,0,0,20,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,850,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,851,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,852,        result[1] = result[1] - (tmp - result[0] - zs[1]);,2,0,0,5,10,0,0,0,0,2,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,853,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,856,"        split(a[1], xs);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,857,"        split(b[0], ys);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,858,"        splitMult(xs, ys, zs);",4,0,0,1,2,0,0,0,0,4,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,860,        tmp = result[0] + zs[0];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,861,        result[1] = result[1] - (tmp - result[0] - zs[0]);,8,4,1,5,10,1,2,0,0,26,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,862,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,863,        tmp = result[0] + zs[1];,10,1,1,2,4,1,14,0,0,32,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,864,        result[1] = result[1] - (tmp - result[0] - zs[1]);,4,3,1,5,10,0,0,0,0,16,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,865,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,868,"        split(a[1], xs);",0,0,1,2,4,0,4,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,869,"        split(b[1], ys);",0,0,1,2,4,0,4,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,870,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,872,        tmp = result[0] + zs[0];,2,1,1,2,4,0,0,0,0,8,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,873,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,0,0,5,10,0,0,0,0,2,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,874,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,875,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,876,        result[1] = result[1] - (tmp - result[0] - zs[1]);,4,3,1,5,10,0,0,0,0,16,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,877,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,878,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,887,        final double xs[] = new double[2];,8,1,0,2,4,1,0,0,0,11,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,888,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,889,        final double ys[] = new double[2];,12,2,0,2,4,1,0,0,0,17,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,898,        xs[0] = 2.718281828459045;,0,0,1,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,899,        xs[1] = 1.4456468917292502E-16;,0,0,1,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,901,"        split(1.0, ys);",2,0,0,1,2,0,8,0,0,11,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,903,        while (p > 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,904,            if ((p & 1) != 0) {,0,0,1,2,5,0,0,0,0,3,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,905,"                quadMult(ys, xs, as);",0,0,0,1,2,0,8,0,0,8,21,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,906,                ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,909,"            quadMult(xs, xs, as);",0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,910,            xs[0] = as[0]; xs[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,912,            p >>= 1;,22,9,0,0,0,0,0,0,0,33,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,915,        if (result != null) {,2,0,0,1,3,0,4,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,916,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,917,            result[1] = ys[1];,0,0,1,2,4,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,919,            resplit(result);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,922,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,933,"        return log(x, null);",0,0,0,1,2,1,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,943,        long bits = Double.doubleToLongBits(x);,18,1,0,1,2,1,6,0,0,28,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,946,        if ((bits & 0x8000000000000000L) != 0 || x != x) {,0,0,0,2,5,0,0,0,0,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,947,            if (x != 0.0) {,8,1,0,1,3,0,0,0,0,10,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,948,                if (hiPrec != null) {,4,1,1,1,3,1,0,0,0,8,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,949,                    hiPrec[0] = Double.NaN;,4,0,1,1,2,0,6,0,0,13,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,952,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,957,        if (x == Double.POSITIVE_INFINITY) {,8,1,0,1,3,1,0,0,0,10,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,958,            if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,959,                hiPrec[0] = Double.POSITIVE_INFINITY;,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,962,            return Double.POSITIVE_INFINITY;,12,2,0,0,0,2,0,0,0,15,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,966,        int exp = (int)(bits >> 52)-1023;,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,968,        if ((bits & 0x7ff0000000000000L) == 0) {,2,2,0,2,5,0,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,970,            if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,972,                if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,973,                    hiPrec[0] = Double.NEGATIVE_INFINITY;,12,2,1,1,2,0,0,0,0,17,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,976,                return Double.NEGATIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,980,            bits <<= 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,981,            while ( (bits & 0x0010000000000000L) == 0) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,982,                exp--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,983,                bits <<= 1;,10,2,0,0,0,0,0,0,0,13,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,988,        if (exp == -1 || exp == 0) {,4,3,0,1,3,0,0,0,0,8,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,989,            if (x < 1.01 && x > 0.99 && hiPrec == null) {,6,5,0,1,3,0,0,0,0,11,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,994,                double xa = x - 1.0;,0,0,0,0,0,0,10,0,0,10,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,995,                double xb = xa - x + 1.0;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,996,                double tmp = xa * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,997,                double aa = xa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,998,                double ab = xa - aa;,6,1,0,0,0,0,0,0,0,7,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,999,                xa = aa;,8,2,0,0,0,0,10,0,0,20,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1000,                xb = ab;,8,0,1,0,0,0,0,0,0,14,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1002,                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1003,                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1005,                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1007,                    aa = ya * xa;,2,0,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1008,                    ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1010,                    tmp = aa * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1011,                    ya = aa + tmp - tmp;,8,2,0,0,0,0,0,0,0,11,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1012,                    yb = aa - ya + ab;,0,0,0,0,0,0,4,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1015,                    aa = ya + LN_QUICK_COEF[i][0];,16,2,1,2,4,1,2,0,0,27,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1016,                    ab = yb + LN_QUICK_COEF[i][1];,6,1,1,2,4,1,0,10,0,23,30,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1018,                    tmp = aa * 1073741824.0;,8,1,0,0,0,0,0,0,0,11,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1019,                    ya = aa + tmp - tmp;,8,2,0,0,0,0,0,0,0,11,20,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1020,                    yb = aa - ya + ab;,6,1,1,0,0,0,0,0,0,9,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1024,                aa = ya * xa;,14,2,0,0,0,0,0,0,0,19,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1025,                ab = ya * xb + yb * xa + yb * xb;,0,0,0,0,0,0,6,4,0,10,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1027,                tmp = aa * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1028,                ya = aa + tmp - tmp;,18,7,0,0,0,0,0,0,0,26,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1029,                yb = aa - ya + ab;,8,2,0,0,0,0,0,0,0,11,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1031,                if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1032,                    hiPrec[0] = ya;,2,0,1,1,2,0,0,0,0,5,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1033,                    hiPrec[1] = yb;,2,0,1,1,2,0,0,0,0,5,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1036,                return ya + yb;,4,1,0,0,0,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1041,        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];,0,0,0,5,10,0,0,0,0,15,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1052,        double epsilon = (double)(bits & 0x3ffffffffffL) / (4503599627370496.0 + (bits & 0x000ffc0000000000L));,10,1,1,4,8,1,0,0,0,15,103,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1054,        double lnza = 0.0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1055,        double lnzb = 0.0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1057,        if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1059,            double tmp = epsilon * 1073741824.0;,14,2,0,0,0,0,0,0,0,18,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1060,            double aa = epsilon + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1061,            double ab = epsilon - aa;,8,2,0,0,0,0,0,0,0,10,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1062,            double xa = aa;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1063,            double xb = ab;,4,0,0,0,0,0,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1066,            double numer = (double)(bits & 0x3ffffffffffL);,24,5,0,2,4,1,0,0,0,30,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1067,            double denom = 4503599627370496.0 + (bits & 0x000ffc0000000000L);,10,2,0,1,2,0,2,2,0,17,65,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1068,            aa = numer - xa*denom - xb * denom;,12,4,0,0,0,0,0,0,0,17,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1069,            xb += aa / denom;,6,1,0,0,0,0,0,0,0,8,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1072,            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];,0,0,0,2,4,0,0,0,0,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1073,            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];,6,1,1,2,4,0,0,0,0,9,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1075,            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1077,                aa = ya * xa;,12,3,0,0,0,0,0,0,0,17,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1078,                ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1080,                tmp = aa * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1081,                ya = aa + tmp - tmp;,8,2,0,0,0,0,0,0,0,11,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1082,                yb = aa - ya + ab;,8,2,0,0,0,0,0,0,0,11,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1085,                aa = ya + LN_HI_PREC_COEF[i][0];,6,1,1,2,4,1,4,0,0,17,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1086,                ab = yb + LN_HI_PREC_COEF[i][1];,8,2,1,2,4,1,0,0,0,20,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1088,                tmp = aa * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1089,                ya = aa + tmp - tmp;,4,2,0,0,0,1,6,0,0,13,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1090,                yb = aa - ya + ab;,8,2,0,0,0,0,0,0,0,11,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1094,            aa = ya * xa;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1095,            ab = ya * xb + yb * xa + yb * xb;,42,18,0,0,0,0,0,0,0,62,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1103,            lnza = aa + ab;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1104,            lnzb = -(lnza - aa - ab);,6,1,0,1,2,0,0,0,0,7,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1105,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1108,            lnza = -0.16624882440418567;,2,0,0,0,0,0,0,0,0,4,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1109,            lnza = lnza * epsilon + 0.19999954120254515;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1110,            lnza = lnza * epsilon + -0.2499999997677497;,4,1,1,0,0,1,0,0,0,10,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1111,            lnza = lnza * epsilon + 0.3333333333332802;,4,0,0,0,0,0,6,0,0,10,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1112,            lnza = lnza * epsilon + -0.5;,4,3,0,0,0,0,0,0,0,8,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1113,            lnza = lnza * epsilon + 1.0;,8,2,0,0,0,0,0,0,0,11,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1114,            lnza = lnza * epsilon;,0,0,1,0,0,0,4,0,0,13,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1131,        double a = LN_2_A*exp;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1132,        double b = 0.0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1133,        double c = a+lnm[0];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1134,        double d = -(c-a-lnm[0]);,0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1135,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1136,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1138,        c = a + lnza;,8,0,0,0,0,0,0,0,0,8,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1139,        d = -(c - a - lnza);,8,1,0,1,2,0,0,0,0,11,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1140,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1141,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1143,        c = a + LN_2_B*exp;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1144,        d = -(c - a - LN_2_B*exp);,6,1,0,1,2,0,0,0,0,8,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1145,        a = c;,10,1,0,0,0,0,0,0,0,12,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1146,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1148,        c = a + lnm[1];,2,0,1,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1149,        d = -(c - a - lnm[1]);,0,0,0,2,4,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1150,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1151,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1153,        c = a + lnzb;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1154,        d = -(c - a - lnzb);,8,1,0,1,2,0,0,0,0,11,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1155,        a = c;,6,1,0,0,0,0,0,0,0,7,6,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1156,        b = b + d;,10,3,0,0,0,0,0,0,0,14,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1158,        if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1159,            hiPrec[0] = a;,12,1,1,1,2,0,0,0,0,17,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1160,            hiPrec[1] = b;,6,0,1,1,2,0,0,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1163,        return a + b;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1171,        double xpa = 1.0 + x;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1172,        double xpb = -(xpa - 1.0 - x);,6,1,0,1,2,0,0,0,0,8,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1174,        if (x>1e-6 || x<-1e-6) {,8,3,0,1,3,0,0,0,0,13,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1175,            double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1177,"            log(xpa, hiPrec);",0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1181,            double fx1 = xpb/xpa;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1183,            double epsilon = 0.5 * fx1 + 1.0;,8,2,0,0,0,0,0,0,0,11,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1184,            epsilon = epsilon * fx1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1186,            return epsilon + hiPrec[1] + hiPrec[0];,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1190,        double y = x * 0.333333333333333 - 0.5;,4,2,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1191,        y = y * x + 1.0;,6,2,0,0,0,0,0,0,0,9,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1192,        y = y * x;,10,1,0,0,0,0,0,0,0,13,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1194,        return y;,2,0,1,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1202,        final double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1204,"        log(x, hiPrec);",0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1206,        final double tmp = hiPrec[0] * 1073741824.0;,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1207,        final double lna = hiPrec[0] + tmp - tmp;,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1208,        final double lnb = hiPrec[0] - lna + hiPrec[1];,4,2,1,2,4,1,0,0,0,11,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1210,        final double rln10a = 0.4342944622039795;,30,9,0,0,0,2,0,0,0,42,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1211,        final double rln10b = 1.9699272335463627E-8;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1213,        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;,16,7,0,0,0,1,0,0,0,23,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1224,        final double lns[] = new double[2];,2,0,0,2,4,1,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1226,        if (y == 0.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1227,            return 1.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1231,        if (x < 0) {,2,1,1,1,3,0,0,0,0,8,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1232,            if (y == (long) y) {,4,1,0,2,5,0,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1234,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);",0,0,0,4,8,1,0,0,0,13,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1236,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1240,        if (x == 0) {,6,3,0,1,3,0,0,0,0,9,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1241,            long bits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1242,            if ((bits & 0x8000000000000000L) != 0) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1244,                if (y < 0 && y == (long)y),0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1245,                    return Double.NEGATIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1248,            if (y < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1249,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1251,            if (y > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1252,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1255,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1258,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1259,            if (y < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1260,                return 0.0;,6,1,0,0,0,1,0,0,0,7,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1262,                return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1266,        if (y == Double.POSITIVE_INFINITY) {,28,5,0,1,3,0,0,0,0,36,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1267,            if (x * x > 1.0) {,16,2,0,1,3,0,6,0,0,28,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1268,                return Double.POSITIVE_INFINITY;,8,0,0,0,0,1,0,0,0,8,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1270,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1274,        if (y == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1275,            if (x*x < 1.0) {,0,0,1,1,3,0,0,0,0,7,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1276,                return Double.NEGATIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1278,                return 0.0;,4,0,0,0,0,1,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1283,        double tmp1 = y * 1073741824.0;,2,0,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1284,        final double ya = y + tmp1 - tmp1;,8,2,0,0,0,1,0,0,0,11,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1285,        final double yb = y - ya;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1288,"        log(x, lns);",0,0,0,1,2,0,6,0,0,6,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1289,        double lna = lns[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1290,        double lnb = lns[1];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1293,        tmp1 = lna * 1073741824.0;,4,1,0,0,0,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1294,        final double tmp2 = lna + tmp1 - tmp1;,8,2,0,0,0,1,0,0,0,11,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1295,        lnb += lna - tmp2;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1296,        lna = tmp2;,4,0,0,0,0,0,0,0,0,5,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1299,        final double aa = lna * ya;,6,1,0,0,0,1,0,0,0,8,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1300,        final double ab = lna * yb + lnb * ya + lnb * yb;,14,5,0,0,0,1,0,0,0,20,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1302,        lna = aa+ab;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1303,        lnb = -(lna - aa - ab);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1305,        double z = 1.0 / 120.0;,10,2,0,0,0,0,0,0,0,14,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1306,        z = z * lnb + (1.0 / 24.0);,6,1,1,1,2,0,0,0,0,9,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1307,        z = z * lnb + (1.0 / 6.0);,6,3,0,1,2,0,0,0,0,10,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1308,        z = z * lnb + 0.5;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1309,        z = z * lnb + 1.0;,2,0,1,0,0,0,0,0,0,7,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1310,        z = z * lnb;,14,2,0,0,0,0,0,0,0,18,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1312,"        final double result = exp(lna, z, null);",2,0,0,1,2,1,6,0,0,10,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1314,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1337,        double x[] = new double[2];,2,0,0,2,4,0,0,0,0,2,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1338,        double x2[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1339,        double y[] = new double[2];,4,0,0,2,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1340,        double a[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1342,"        split(xi, x);",0,0,0,1,2,0,6,0,0,6,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1345,        x[0] += 1.0;,10,2,1,1,2,0,0,0,0,16,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1346,        resplit(x);,0,0,0,1,2,0,4,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1347,"        splitReciprocal(x, a);",0,0,0,1,2,0,6,0,0,6,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1348,        x[0] -= 2.0;,0,0,1,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1349,        resplit(x);,0,0,0,1,2,0,4,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1350,"        splitMult(x, a, y);",10,2,0,1,2,0,0,0,0,14,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1351,        x[0] = y[0];,6,1,1,2,4,0,0,0,0,12,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1352,        x[1] = y[1];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1355,"        splitMult(x, x, x2);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1361,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,8,2,0,3,6,0,0,0,0,11,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1362,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,4,1,1,3,6,0,0,0,0,10,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1364,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,6,1,0,1,3,0,0,0,0,7,51,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1365,"            splitMult(y, x2, a);",10,1,0,1,2,0,8,0,0,20,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1366,            y[0] = a[0];,8,3,1,2,4,0,4,0,0,21,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1367,            y[1] = a[1];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1368,"            splitAdd(y, LN_SPLIT_COEF[i], a);",0,0,1,2,4,0,18,0,0,22,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1369,            y[0] = a[0];,0,0,1,2,4,0,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1370,            y[1] = a[1];,0,0,1,2,4,0,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1373,"        splitMult(y, x, a);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1374,        y[0] = a[0];,14,6,1,2,4,2,6,0,0,38,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1375,        y[1] = a[1];,4,1,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1377,        return y;,6,1,1,0,0,2,0,0,0,12,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1387,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1388,        final double ys[] = new double[2];,8,1,0,2,4,1,10,2,0,23,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1389,        final double facts[] = new double[2];,4,0,0,2,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1390,        final double as[] = new double[2];,8,1,0,2,4,0,0,0,0,11,34,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1391,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1392,        ys[0] = ys[1] = 0.0;,4,1,0,2,4,0,0,0,0,5,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1394,        for (int i = 19; i >= 0; i--) {,6,1,0,1,3,0,0,0,0,8,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1395,"            splitMult(xs, ys, as);",0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1396,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1398,            if ( (i & 1) == 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1399,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1402,"            split(FACT[i], as);",0,0,0,2,4,0,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1403,"            splitReciprocal(as, facts);",2,1,1,1,2,0,6,0,0,13,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1405,            if ( (i & 2) != 0 ) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1406,                facts[0] = -facts[0];,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1407,                facts[1] = -facts[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1410,"            splitAdd(ys, facts, as);",10,1,0,1,2,0,8,0,0,20,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1411,            ys[0] = as[0]; ys[1] = as[1];,4,0,1,4,8,0,0,0,0,16,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1414,        if (result != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1415,            result[0] = ys[0];,2,0,0,2,4,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1416,            result[1] = ys[1];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1419,        return ys[0] + ys[1];,2,2,1,2,4,1,0,0,0,8,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1430,        final double xs[] = new double[2];,10,1,0,2,4,1,0,0,0,14,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1431,        final double ys[] = new double[2];,6,1,0,2,4,0,0,0,0,8,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1432,        final double facts[] = new double[2];,0,0,0,2,4,0,0,0,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1433,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1434,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1435,        ys[0] = ys[1] = 0.0;,0,0,1,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1437,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1438,"            splitMult(xs, ys, as);",0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1439,            ys[0] = as[0]; ys[1] = as[1];,0,0,0,4,8,0,0,0,0,12,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1441,            if ( (i & 1) != 0) {,10,4,0,2,5,0,0,0,0,15,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1442,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1445,"            split(FACT[i], as);",4,0,1,2,4,0,4,0,0,14,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1446,"            splitReciprocal(as, facts);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1448,            if ( (i & 2) != 0 ) {,2,0,0,2,5,0,4,4,0,10,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1449,                facts[0] = -facts[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1450,                facts[1] = -facts[1];,6,1,0,2,4,1,0,0,0,8,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1453,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,16,0,0,16,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1454,            ys[0] = as[0]; ys[1] = as[1];,2,1,0,4,8,0,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1457,        if (result != null) {,14,3,0,1,3,0,0,0,0,18,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1458,            result[0] = ys[0];,2,1,0,2,4,0,4,0,0,9,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1459,            result[1] = ys[1];,2,0,1,2,4,0,0,0,0,12,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1462,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1468,        final double result[] = new double[2];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1471,        for (int i = 0; i < 7; i++) {,7,1,0,1,3,0,0,0,0,10,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1472,            double x = i / 8.0;,6,1,0,0,0,0,6,0,0,14,19,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1474,"            slowSin(x, result);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1475,            SINE_TABLE_A[i] = result[0];,8,0,1,2,4,0,4,0,0,21,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1476,            SINE_TABLE_B[i] = result[1];,16,5,1,2,4,2,4,0,0,36,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1478,"            slowCos(x, result);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1479,            COSINE_TABLE_A[i] = result[0];,6,0,1,2,4,0,0,0,0,14,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1480,            COSINE_TABLE_B[i] = result[1];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1484,        for (int i = 7; i < 14; i++) {,6,1,0,1,3,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1485,            double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1486,            double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1487,            double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1488,            double bs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1489,            double temps[] = new double[2];,0,0,0,2,4,0,0,0,0,6,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1491,            if ( (i & 1) == 0) {,2,2,0,2,5,0,0,0,0,4,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1493,                xs[0] = SINE_TABLE_A[i/2];,6,3,1,2,4,0,0,0,0,15,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1494,                xs[1] = SINE_TABLE_B[i/2];,2,1,1,2,4,0,0,0,0,8,26,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1495,                ys[0] = COSINE_TABLE_A[i/2];,6,1,1,2,4,0,14,0,0,28,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1496,                ys[1] = COSINE_TABLE_B[i/2];,4,1,1,2,4,1,6,2,0,19,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1499,"                splitMult(xs, ys, result);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1500,                SINE_TABLE_A[i] = result[0] * 2.0;,2,1,1,2,4,0,0,2,0,12,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1501,                SINE_TABLE_B[i] = result[1] * 2.0;,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1504,"                splitMult(ys, ys, as);",0,0,0,1,2,0,8,0,0,8,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1505,"                splitMult(xs, xs, temps);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1506,                temps[0] = -temps[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1507,                temps[1] = -temps[1];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1508,"                splitAdd(as, temps, result);",4,0,0,1,2,0,0,0,0,4,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1509,                COSINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1510,                COSINE_TABLE_B[i] = result[1];,0,0,1,2,4,0,0,0,0,7,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1512,                xs[0] = SINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1513,                xs[1] = SINE_TABLE_B[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1514,                ys[0] = COSINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1515,                ys[1] = COSINE_TABLE_B[i/2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1516,                as[0] = SINE_TABLE_A[i/2+1];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1517,                as[1] = SINE_TABLE_B[i/2+1];,10,4,1,2,4,1,8,4,0,37,28,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1518,                bs[0] = COSINE_TABLE_A[i/2+1];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1519,                bs[1] = COSINE_TABLE_B[i/2+1];,2,2,1,2,4,0,0,0,0,9,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1522,"                splitMult(xs, bs, temps);",8,1,0,1,2,1,14,0,0,24,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1523,"                splitMult(ys, as, result);",0,0,0,1,2,0,8,0,0,8,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1524,"                splitAdd(result, temps, result);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1525,                SINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1526,                SINE_TABLE_B[i] = result[1];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1529,"                splitMult(ys, bs, result);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1530,"                splitMult(xs, as, temps);",2,1,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1531,                temps[0] = -temps[0];,2,0,1,2,4,1,6,0,0,15,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1532,                temps[1] = -temps[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1533,"                splitAdd(result, temps, result);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1534,                COSINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1535,                COSINE_TABLE_B[i] = result[1];,4,1,1,2,4,1,0,0,0,13,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1540,        for (int i = 0; i < 14; i++) {,14,3,0,1,3,1,6,2,0,27,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1541,            double xs[] = new double[2];,8,1,0,2,4,0,0,0,0,9,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1542,            double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1543,            double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1545,            as[0] = COSINE_TABLE_A[i];,0,0,1,2,4,0,0,0,0,7,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1546,            as[1] = COSINE_TABLE_B[i];,0,0,1,2,4,0,0,0,0,7,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1548,"            splitReciprocal(as, ys);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1550,            xs[0] = SINE_TABLE_A[i];,6,1,1,2,4,0,0,0,0,9,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1551,            xs[1] = SINE_TABLE_B[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1553,"            splitMult(xs, ys, as);",0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1555,            TANGENT_TABLE_A[i] = as[0];,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1556,            TANGENT_TABLE_B[i] = as[1];,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1559,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1569,        double x2 = x*x;,6,1,0,0,0,0,0,0,0,7,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1571,        double p = 2.7553817452272217E-6;,0,0,0,0,0,0,0,2,0,2,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1572,        p = p * x2 + -1.9841269659586505E-4;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1573,        p = p * x2 + 0.008333333333329196;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1574,        p = p * x2 + -0.16666666666666666;,4,1,0,0,0,0,0,0,0,7,34,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1577,        p = p * x2 * x;,14,2,0,0,0,0,0,0,0,18,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1579,        return p;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1589,        double x2 = x*x;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1591,        double p = 2.479773539153719E-5;,2,0,0,0,0,0,0,0,0,2,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1592,        p = p * x2 + -0.0013888888689039883;,6,2,0,0,0,0,6,0,0,16,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1593,        p = p * x2 + 0.041666666666621166;,6,2,0,0,0,0,0,0,0,9,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1594,        p = p * x2 + -0.49999999999999994;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1595,        p *= x2;,4,0,0,0,0,0,4,0,0,9,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1597,        return p;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1608,        int idx = (int) ((xa * 8.0) + 0.5);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1609,        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;,4,1,1,1,2,1,0,0,0,10,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1612,        final double sintA = SINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1613,        final double sintB = SINE_TABLE_B[idx];,2,0,1,1,2,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1614,        final double costA = COSINE_TABLE_A[idx];,14,3,1,1,2,1,0,0,0,23,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1615,        final double costB = COSINE_TABLE_B[idx];,4,1,1,1,2,1,0,0,0,10,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1618,        double sinEpsA = epsilon;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1619,        double sinEpsB = polySine(epsilon);,6,1,0,1,2,0,0,0,0,8,35,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1620,        final double cosEpsA = 1.0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1621,        final double cosEpsB = polyCosine(epsilon);,2,0,0,1,2,1,4,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1624,        final double temp = sinEpsA * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1625,        double temp2 = (sinEpsA + temp) - temp;,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1626,        sinEpsB +=  sinEpsA - temp2;,6,1,0,0,0,0,0,0,0,7,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1627,        sinEpsA = temp2;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1653,        double a = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1654,        double b = 0;,12,1,0,0,0,0,0,0,0,14,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1656,        double t = sintA;,4,0,0,0,0,0,0,0,0,4,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1657,        double c = a + t;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1658,        double d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1659,        a = c;,4,1,1,0,0,0,0,0,0,9,6,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1660,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1662,        t = costA * sinEpsA;,6,1,0,0,0,0,0,0,0,8,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1663,        c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1664,        d = -(c - a - t);,10,1,1,1,2,1,12,0,0,28,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1665,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1666,        b = b + d;,12,1,0,0,0,0,0,0,0,14,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1668,        b = b + sintA * cosEpsB + costA * sinEpsB;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1683,        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;,18,6,0,0,0,0,0,0,0,25,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1710,        if (xb != 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1711,            t = ((costA + costB) * (cosEpsA + cosEpsB) -,14,5,0,2,5,0,0,2,0,24,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1713,            c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1714,            d = -(c - a - t);,14,2,0,1,2,0,0,0,0,18,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1715,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1716,            b = b + d;,12,1,0,0,0,0,0,0,0,14,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1719,        result = a + b;,8,2,0,0,0,0,0,0,0,11,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1721,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1732,        final double pi2a = 1.5707963267948966;,8,1,0,0,0,2,0,0,0,11,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1733,        final double pi2b = 6.123233995736766E-17;,2,0,0,0,0,1,0,0,0,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1735,        final double a = pi2a - xa;,6,1,0,0,0,1,0,0,0,8,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1736,        double b = -(a - pi2a + xa);,14,3,0,1,2,0,0,0,0,18,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1737,        b += pi2b - xb;,12,3,1,0,0,0,0,0,0,21,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1739,"        return sinQ(a, b);",2,0,0,1,2,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1752,        int idx = (int) ((xa * 8.0) + 0.5);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1753,        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;,4,1,1,1,2,1,0,0,0,10,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1756,        final double sintA = SINE_TABLE_A[idx];,8,4,1,1,2,1,4,0,0,22,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1757,        final double sintB = SINE_TABLE_B[idx];,12,1,1,1,2,2,0,0,0,19,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1758,        final double costA = COSINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1759,        final double costB = COSINE_TABLE_B[idx];,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1762,        double sinEpsA = epsilon;,10,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1763,        double sinEpsB = polySine(epsilon);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1764,        final double cosEpsA = 1.0;,14,2,1,0,0,2,0,0,0,24,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1765,        final double cosEpsB = polyCosine(epsilon);,6,0,0,1,2,1,4,0,0,12,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1768,        double temp = sinEpsA * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1769,        double temp2 = (sinEpsA + temp) - temp;,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1770,        sinEpsB +=  sinEpsA - temp2;,14,3,0,0,0,0,4,0,0,22,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1771,        sinEpsA = temp2;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1796,        double a = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1797,        double b = 0;,6,0,0,0,0,0,0,0,0,8,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1800,        double t = sintA;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1801,        double c = a + t;,14,3,0,0,0,1,0,0,0,18,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1802,        double d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1803,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1804,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1806,        t = costA*sinEpsA;,6,1,0,0,0,0,0,0,0,8,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1807,        c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1808,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1809,        a = c;,2,1,0,0,0,0,0,0,0,3,6,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1810,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1812,        b = b + sintA*cosEpsB + costA*sinEpsB;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1813,        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;,0,0,0,0,0,0,0,0,0,0,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1815,        double sina = a + b;,24,5,0,0,0,0,0,0,0,33,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1816,        double sinb = -(sina - a - b);,8,1,0,1,2,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1820,        a = b = c = d = 0.0;,14,1,0,0,0,0,0,0,0,19,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1822,        t = costA*cosEpsA;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1823,        c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1824,        d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1825,        a = c;,28,7,0,0,0,1,0,0,0,38,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1826,        b = b + d;,6,1,0,0,0,1,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1828,        t = -sintA*sinEpsA;,8,0,0,0,0,1,6,6,0,21,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1829,        c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1830,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1831,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1832,        b = b + d;,12,2,0,0,0,1,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1834,        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;,8,3,0,0,0,0,0,0,0,12,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1835,        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);,22,7,0,1,2,0,0,0,0,31,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1837,        double cosa = a + b;,8,1,0,0,0,0,4,0,0,13,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1838,        double cosb = -(cosa - a - b);,8,1,0,1,2,0,4,0,0,14,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1840,        if (cotanFlag) {,6,1,0,1,3,0,0,0,0,8,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1842,            tmp = cosa; cosa = sina; sina = tmp;,12,0,0,0,0,0,0,0,0,15,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1843,            tmp = cosb; cosb = sinb; sinb = tmp;,12,0,0,0,0,0,0,0,0,15,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1857,        double est = sina/cosa;,6,1,0,0,0,0,0,0,0,7,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1860,        temp = est * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1861,        double esta = (est + temp) - temp;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1862,        double estb =  est - esta;,2,0,0,0,0,0,6,0,0,8,26,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1864,        temp = cosa * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1865,        double cosaa = (cosa + temp) - temp;,8,2,0,1,2,0,0,0,0,10,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1866,        double cosab =  cosa - cosaa;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1869,        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding,0,0,0,1,2,0,0,0,0,3,114,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1870,        err += sinb/cosa;                     // Change in est due to sinb,2,0,0,0,0,0,0,0,0,4,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1871,        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb,14,3,0,0,0,0,0,0,0,19,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1873,        if (xb != 0.0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1876,            double xbadj = xb + est*est*xb;,12,3,0,0,0,0,0,0,0,15,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1877,            if (cotanFlag) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1878,                xbadj = -xbadj;,20,2,0,0,0,0,0,0,0,26,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1881,            err += xbadj;,4,0,0,0,0,0,4,0,0,9,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1884,        return est+err;,4,0,0,0,0,1,4,0,0,8,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1901,        long inbits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1902,        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,10,1,0,3,6,0,0,0,0,12,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1905,        inbits &= 0x000fffffffffffffL;,2,0,0,0,0,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1906,        inbits |= 0x0010000000000000L;,0,0,1,0,0,0,4,0,0,13,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1909,        exponent++;,6,1,0,0,0,0,0,0,0,8,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1910,        inbits <<= 11;,2,0,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1916,        int idx = exponent >> 6;,4,1,0,0,0,0,0,0,0,5,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1917,        int shift = exponent - (idx << 6);,6,2,0,1,2,0,0,0,0,8,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1919,        if (shift != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1920,            shpi0 = (idx == 0) ? 0 : (RECIP_2PI[idx-1] << shift);,8,3,1,3,6,0,0,0,0,14,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1921,            shpi0 |= RECIP_2PI[idx] >>> (64-shift);,14,5,1,2,4,0,0,0,0,28,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1922,            shpiA = (RECIP_2PI[idx] << shift) | (RECIP_2PI[idx+1] >>> (64-shift));,10,5,1,5,10,0,6,0,0,28,70,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1923,            shpiB = (RECIP_2PI[idx+1] << shift) | (RECIP_2PI[idx+2] >>> (64-shift));,2,0,0,5,10,0,0,0,0,2,72,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1925,            shpi0 = (idx == 0) ? 0 : RECIP_2PI[idx-1];,8,2,1,2,4,0,0,0,0,13,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1926,            shpiA = RECIP_2PI[idx];,2,0,1,1,2,0,8,0,0,15,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1927,            shpiB = RECIP_2PI[idx+1];,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1931,        long a = inbits >>> 32;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1932,        long b = inbits & 0xffffffffL;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1934,        long c = shpiA >>> 32;,4,1,0,0,0,0,0,0,0,5,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1935,        long d = shpiA & 0xffffffffL;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1937,        long ac = a * c;,6,1,0,0,0,0,0,0,0,7,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1938,        long bd = b * d;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1939,        long bc = b * c;,18,2,1,0,0,1,0,0,0,26,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1940,        long ad = a * d;,6,1,0,0,0,0,0,0,0,7,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1942,        long prodB = bd + (ad << 32);,10,4,1,1,2,0,6,0,0,25,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1943,        long prodA = ac + (ad >>> 32);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1945,        boolean bita = (bd & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,6,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1946,        boolean bitb = (ad & 0x80000000L ) != 0;,4,2,0,1,2,0,0,0,0,6,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1947,        boolean bitsum = (prodB & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,6,52,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1950,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1952,            prodA++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1955,        bita = (prodB & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1956,        bitb = (bc & 0x80000000L ) != 0;,10,3,1,1,2,0,4,0,0,28,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1958,        prodB = prodB + (bc << 32);,10,3,0,1,2,0,0,0,0,14,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1959,        prodA = prodA + (bc >>> 32);,6,2,0,1,2,0,0,0,0,9,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1961,        bitsum = (prodB & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1964,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1966,            prodA++;,12,1,0,0,0,0,0,0,0,15,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1970,        c = shpiB >>> 32;,12,3,0,0,0,0,0,0,0,17,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1971,        d = shpiB & 0xffffffffL;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1972,        ac = a * c;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1973,        bc = b * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1974,        ad = a * d;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1977,        ac = ac + ((bc + ad) >>> 32);,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1979,        bita = (prodB & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1980,        bitb = (ac & 0x8000000000000000L ) != 0;,4,2,0,1,2,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1981,        prodB += ac;,10,1,0,0,0,0,0,0,0,13,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1982,        bitsum = (prodB & 0x8000000000000000L) != 0;,2,0,0,1,2,0,0,0,0,3,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1984,        if ( (bita && bitb) ||,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1986,            prodA++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1990,        c = shpi0 >>> 32;,12,1,1,0,0,0,0,0,0,19,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1991,        d = shpi0 & 0xffffffffL;,8,1,0,0,0,0,0,0,0,10,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1993,        bd = b * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1994,        bc = b * c;,6,1,0,0,0,0,0,0,0,7,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1995,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,1997,        prodA += bd + ((bc + ad) << 32);,8,3,0,2,4,0,0,0,0,12,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2009,        int intPart = (int)(prodA >>> 62);,10,2,0,2,4,0,0,0,0,13,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2012,        prodA <<= 2;,2,0,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2013,        prodA |= prodB >>> 62;,4,1,0,0,0,0,6,0,0,12,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2014,        prodB <<= 2;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2017,        a = prodA >>> 32;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2018,        b = prodA & 0xffffffffL;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2020,        c = PI_O_4_BITS[0] >>> 32;,16,5,1,1,2,1,2,0,0,28,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2021,        d = PI_O_4_BITS[0] & 0xffffffffL;,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2023,        ac = a * c;,12,3,0,0,0,0,0,0,0,17,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2024,        bd = b * d;,28,10,0,0,0,0,0,0,0,40,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2025,        bc = b * c;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2026,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2028,        long prod2B = bd + (ad << 32);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2029,        long prod2A = ac + (ad >>> 32);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2031,        bita = (bd & 0x8000000000000000L) != 0;,10,3,1,1,2,0,0,0,0,16,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2032,        bitb = (ad & 0x80000000L ) != 0;,4,2,0,1,2,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2033,        bitsum = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2036,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2038,            prod2A++;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2041,        bita = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2042,        bitb = (bc & 0x80000000L ) != 0;,4,2,0,1,2,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2044,        prod2B = prod2B + (bc << 32);,6,2,0,1,2,0,0,0,0,9,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2045,        prod2A = prod2A + (bc >>> 32);,0,0,1,1,2,0,0,0,0,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2047,        bitsum = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2050,        if ( (bita && bitb) ||,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2052,            prod2A++;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2056,        c = PI_O_4_BITS[1] >>> 32;,2,1,1,1,2,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2057,        d = PI_O_4_BITS[1] & 0xffffffffL;,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2058,        ac = a * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2059,        bc = b * c;,22,9,0,0,0,0,0,0,0,32,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2060,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2063,        ac = ac + ((bc + ad) >>> 32);,16,4,0,2,4,0,0,0,0,22,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2065,        bita = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2066,        bitb = (ac & 0x8000000000000000L ) != 0;,6,1,0,1,2,0,0,0,0,8,40,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2067,        prod2B += ac;,4,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2068,        bitsum = (prod2B & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2070,        if ( (bita && bitb) ||,14,3,0,1,3,0,0,0,0,18,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2072,            prod2A++;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2076,        a = prodB >>> 32;,12,2,0,0,0,0,0,0,0,17,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2077,        b = prodB & 0xffffffffL;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2078,        c = PI_O_4_BITS[0] >>> 32;,2,1,1,1,2,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2079,        d = PI_O_4_BITS[0] & 0xffffffffL;,6,1,1,1,2,0,4,0,0,20,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2080,        ac = a * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2081,        bc = b * c;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2082,        ad = a * d;,12,2,0,0,0,0,4,0,0,19,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2085,        ac = ac + ((bc + ad) >>> 32);,8,3,0,2,4,0,0,0,0,12,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2087,        bita = (prod2B & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2088,        bitb = (ac & 0x8000000000000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2089,        prod2B += ac;,8,0,0,0,0,0,0,0,0,10,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2090,        bitsum = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2092,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2094,            prod2A++;,6,0,0,0,0,0,0,0,0,9,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2098,        double tmpA = (prod2A >>> 12) / 4503599627370496.0;  // High order 52 bits,4,2,0,1,2,0,4,0,0,10,74,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2099,        double tmpB = (((prod2A & 0xfffL) << 40) + (prod2B >>> 24)) / 4503599627370496.0 / 4503599627370496.0; // Low bits,0,0,0,4,8,0,0,0,0,12,114,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2101,        double sumA = tmpA + tmpB;,10,1,0,0,0,0,0,0,0,13,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2102,        double sumB = -(sumA - tmpA - tmpB);,8,1,0,1,2,0,0,0,0,10,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2105,        result[0] = intPart;,4,0,1,1,2,0,0,0,0,9,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2106,        result[1] = sumA * 2.0;,2,1,1,1,2,0,0,0,0,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2107,        result[2] = sumB * 2.0;,2,1,1,1,2,0,0,0,0,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2108,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2116,        boolean negative = false;,6,0,0,0,0,0,0,0,0,7,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2117,        int quadrant = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2119,        double xb = 0.0;,2,0,0,0,0,0,0,0,0,2,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2122,        xa = x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2123,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2124,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2125,            xa = -xa;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2129,        if (xa == 0.0) {,6,2,0,1,3,0,0,0,0,9,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2130,            long bits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2131,            if (bits < 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2132,                return -0.0;,20,8,0,0,0,1,0,0,0,33,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2134,            return 0.0;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2137,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,10,3,0,1,3,0,0,0,0,13,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2138,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2142,        if (xa > 3294198.0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2146,            double reduceResults[] = new double[3];,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2147,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2148,            quadrant = ((int) reduceResults[0]) & 3;,6,1,1,3,6,0,0,0,0,11,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2149,            xa = reduceResults[1];,2,1,0,1,2,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2150,            xb = reduceResults[2];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2151,        } else if (xa > 1.5707963267948966) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2156,            int k = (int)(xa * 0.6366197723675814);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2162,                double a = -k * 1.570796251296997;,12,3,0,0,0,0,0,0,0,17,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2163,                remA = xa + a;,8,1,1,0,0,0,0,0,0,13,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2164,                remB = -(remA - xa - a);,0,0,1,1,2,0,4,0,0,8,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2166,                a = -k * 7.549789948768648E-8;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2167,                double b = remA;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2168,                remA = a + b;,2,0,0,0,0,0,0,0,0,2,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2169,                remB += -(remA - b - a);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2171,                a = -k * 6.123233995736766E-17;,4,1,0,0,0,0,0,0,0,7,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2172,                b = remA;,6,0,0,0,0,0,2,0,0,10,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2173,                remA = a + b;,12,2,1,0,0,0,0,0,0,19,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2174,                remB += -(remA - b - a);,8,2,0,1,2,1,0,0,0,11,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2176,                if (remA > 0.0),10,2,0,1,2,0,0,0,0,13,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2177,                    break;,4,1,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2182,                k--;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2183,            },10,1,0,0,1,0,0,0,0,12,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2184,            quadrant = k & 3;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2185,            xa = remA;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2186,            xb = remB;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2189,        if (negative) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2190,            quadrant ^= 2;  // Flip bit 1,2,0,0,0,0,0,0,0,0,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2193,        switch (quadrant) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2195,"                return sinQ(xa, xb);",4,3,0,1,2,1,6,0,0,14,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2197,"                return cosQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2199,"                return -sinQ(xa, xb);",0,0,0,1,2,1,6,0,0,7,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2201,"                return -cosQ(xa, xb);",0,0,0,1,2,1,6,0,0,7,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2203,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2213,        int quadrant = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2216,        double xa = x;,8,2,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2217,        if (x < 0) {,18,6,1,1,3,0,0,0,0,28,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2218,            xa = -xa;,8,1,0,0,0,0,0,0,0,12,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2221,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,4,0,0,1,3,1,0,4,0,9,49,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2222,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2226,        double xb = 0;,8,1,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2227,        if (xa > 3294198.0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2231,            double reduceResults[] = new double[3];,8,1,0,2,4,1,0,0,0,10,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2232,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2233,            quadrant = ((int) reduceResults[0]) & 3;,10,5,1,3,6,0,0,0,0,21,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2234,            xa = reduceResults[1];,2,0,1,1,2,0,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2235,            xb = reduceResults[2];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2236,        } else if (xa > 1.5707963267948966) {,10,3,0,1,4,0,0,0,0,14,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2241,            int k = (int)(xa * 0.6366197723675814);,16,4,0,2,4,0,12,0,0,33,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2247,                double a = -k * 1.570796251296997;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2248,                remA = xa + a;,6,1,0,0,0,0,0,0,0,8,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2249,                remB = -(remA - xa - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2251,                a = -k * 7.549789948768648E-8;,6,1,0,0,0,0,0,0,0,9,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2252,                double b = remA;,4,0,0,0,0,0,0,0,0,4,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2253,                remA = a + b;,6,1,0,0,0,0,8,0,0,17,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2254,                remB += -(remA - b - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2256,                a = -k * 6.123233995736766E-17;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2257,                b = remA;,6,0,0,0,0,0,6,0,0,13,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2258,                remA = a + b;,6,1,0,0,0,0,0,0,0,8,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2259,                remB += -(remA - b - a);,2,0,0,1,2,0,0,0,0,3,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2261,                if (remA > 0.0),0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2262,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2267,                k--;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2268,            },14,2,1,0,1,0,0,0,0,19,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2269,            quadrant = k & 3;,4,0,0,0,0,0,2,2,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2270,            xa = remA;,4,0,0,0,0,0,0,0,0,5,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2271,            xb = remB;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2277,        switch (quadrant) {,10,0,0,1,3,0,0,0,0,12,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2279,"                return cosQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2281,"                return -sinQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2283,"                return -cosQ(xa, xb);",4,1,1,1,2,1,6,0,0,17,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2285,"                return sinQ(xa, xb);",12,3,0,1,2,1,0,0,0,16,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2287,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2297,        boolean negative = false;,6,0,0,0,0,0,0,0,0,7,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2298,        int quadrant = 0;,8,1,0,0,0,1,0,0,0,10,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2301,        double xa = x;,8,1,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2302,        if (x < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2303,            negative = true;,12,1,0,0,0,0,0,0,0,16,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2304,            xa = -xa;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2308,        if (xa == 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2309,            long bits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2310,            if (bits < 0) {,6,2,0,1,3,0,0,0,0,9,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2311,                return -0.0;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2313,            return 0.0;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2316,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2317,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2321,        double xb = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2322,        if (xa > 3294198.0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2326,            double reduceResults[] = new double[3];,2,0,0,2,4,0,0,0,0,2,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2327,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2328,            quadrant = ((int) reduceResults[0]) & 3;,22,9,0,3,6,0,0,0,0,32,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2329,            xa = reduceResults[1];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2330,            xb = reduceResults[2];,2,0,1,1,2,0,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2331,        } else if (xa > 1.5707963267948966) {,2,1,0,1,4,0,0,0,0,3,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2336,            int k = (int)(xa * 0.6366197723675814);,4,1,0,2,4,0,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2342,                double a = -k * 1.570796251296997;,4,1,0,0,0,0,0,0,0,6,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2343,                remA = xa + a;,8,1,0,0,0,0,2,2,0,14,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2344,                remB = -(remA - xa - a);,10,2,0,1,2,0,0,0,0,14,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2346,                a = -k * 7.549789948768648E-8;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2347,                double b = remA;,4,0,0,0,0,0,0,0,0,4,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2348,                remA = a + b;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2349,                remB += -(remA - b - a);,12,1,0,1,2,0,0,0,0,17,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2351,                a = -k * 6.123233995736766E-17;,6,1,1,0,0,1,0,0,0,14,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2352,                b = remA;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2353,                remA = a + b;,0,0,0,0,0,0,0,0,0,1,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2354,                remB += -(remA - b - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2356,                if (remA > 0.0),2,1,0,1,2,0,0,0,0,3,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2357,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2362,                k--;,4,1,0,0,0,0,0,0,0,6,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2363,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2364,            quadrant = k & 3;,4,1,0,0,0,0,0,0,0,7,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2365,            xa = remA;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2366,            xb = remB;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2369,        if (xa > 1.5) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2371,            final double pi2a = 1.5707963267948966;,2,0,0,0,0,1,0,0,0,3,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2372,            final double pi2b = 6.123233995736766E-17;,2,1,0,0,0,0,0,0,0,3,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2374,            final double a = pi2a - xa;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2375,            double b = -(a - pi2a + xa);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2376,            b += pi2b - xb;,8,1,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2378,            xa = a;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2379,            xb = b;,2,0,0,0,0,0,0,0,0,2,7,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2380,            quadrant ^= 1;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2381,            negative ^= true;,2,0,0,0,0,0,0,0,0,4,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2385,        if ((quadrant & 1) == 0) {,10,4,0,2,5,1,6,0,0,21,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2386,"            result = tanQ(xa, xb, false);",0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2388,"            result = -tanQ(xa, xb, true);",6,0,0,1,2,0,12,0,0,22,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2391,        if (negative) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2392,            result = -result;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2395,        return result;,4,0,0,0,0,2,6,0,0,11,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2404,"        return atan(x, 0.0, false);",2,0,0,1,2,1,4,0,0,9,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2414,        boolean negate = false;,8,2,0,0,0,0,8,0,0,19,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2415,        boolean recip = false;,6,1,0,0,0,0,0,0,0,8,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2418,        if (xa < 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2420,            xa = -xa;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2421,            xb = -xb;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2422,            negate = true;,2,0,0,0,0,0,0,0,0,4,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2425,        if (xa > 1.633123935319537E16) { // Very large input,0,0,0,1,3,0,0,0,0,4,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2426,            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);,14,3,0,3,6,1,0,0,0,18,61,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2430,        if (xa < 1.0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2431,            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);,8,4,0,4,8,0,0,0,0,14,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2433,            double temp = 1.0/xa;,8,1,0,0,0,0,0,0,0,9,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2434,            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);,8,4,0,4,8,0,0,0,0,15,74,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2436,        double epsA = xa - TANGENT_TABLE_A[idx];,4,1,1,1,2,0,0,0,0,9,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2437,        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);,6,2,1,2,4,0,0,0,0,13,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2438,        epsB += xb - TANGENT_TABLE_B[idx];,4,1,1,1,2,0,0,0,0,10,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2440,        double temp = epsA + epsB;,10,1,0,0,0,0,0,0,0,12,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2441,        epsB = -(temp - epsA - epsB);,2,0,1,1,2,1,0,0,0,7,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2442,        epsA = temp;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2445,        temp = xa * 1073741824.0;,12,2,0,0,0,0,0,0,0,16,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2446,        double ya = xa + temp - temp;,8,2,0,0,0,0,0,0,0,10,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2447,        double yb = xb + xa - ya;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2448,        xa = ya;,10,1,0,0,0,0,0,0,0,13,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2449,        xb += yb;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2452,        if (idx == 0) {,24,8,0,1,3,0,0,0,0,33,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2455,            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,6,5,1,5,10,0,0,0,0,19,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2457,            ya = epsA * denom;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2458,            yb = epsB * denom;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2459,        } else {,4,0,0,0,2,0,0,0,0,6,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2460,            double temp2 = xa * TANGENT_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2461,            double za = 1.0 + temp2;,4,1,0,0,0,0,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2462,            double zb = -(za - 1.0 - temp2);,6,1,0,1,2,0,0,0,0,8,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2463,            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];,6,3,1,2,4,0,0,0,0,18,62,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2464,            temp = za + temp2;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2465,            zb += -(temp - za - temp2);,2,1,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2466,            za = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2468,            zb += xb * TANGENT_TABLE_B[idx];,4,1,1,1,2,0,0,0,0,10,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2469,            ya = epsA / za;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2471,            temp = ya * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2472,            final double yaa = (ya + temp) - temp;,8,2,0,1,2,1,0,0,0,11,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2473,            final double yab = ya - yaa;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2475,            temp = za * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2476,            final double zaa = (za + temp) - temp;,8,2,0,1,2,1,0,0,0,11,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2477,            final double zab = za - zaa;,6,1,0,0,0,1,0,0,0,8,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2480,            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;,22,9,0,1,2,0,0,0,0,32,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2482,            yb += -epsA * zb / za / za;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2483,            yb += epsB / za;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2487,        epsA = ya;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2488,        epsB = yb;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2491,        double epsA2 = epsA*epsA;,8,3,0,0,0,0,0,0,0,12,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2502,        yb = 0.07490822288864472;,2,1,0,0,0,0,0,0,0,4,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2503,        yb = yb * epsA2 + -0.09088450866185192;,6,2,0,0,0,0,0,0,0,10,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2504,        yb = yb * epsA2 + 0.11111095942313305;,6,2,0,0,0,0,0,0,0,9,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2505,        yb = yb * epsA2 + -0.1428571423679182;,2,0,0,0,0,0,0,0,0,2,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2506,        yb = yb * epsA2 + 0.19999999999923582;,10,3,0,0,0,0,0,0,0,14,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2507,        yb = yb * epsA2 + -0.33333333333333287;,8,3,0,0,0,0,0,0,0,13,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2508,        yb = yb * epsA2 * epsA;,14,2,0,0,0,1,0,0,0,18,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2511,        ya = epsA;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2513,        temp = ya + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2514,        yb = -(temp - ya - yb);,6,1,0,1,2,0,0,0,0,8,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2515,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2518,        yb += epsB / (1.0 + epsA * epsA);,6,1,0,1,2,0,0,0,0,8,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2522,        if (recip) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2523,            final double pi2a = 1.5707963267948966;,2,0,0,0,0,1,0,0,0,3,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2524,            final double pi2b = 6.123233995736766E-17;,4,1,0,0,0,1,0,0,0,7,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2526,            double za = pi2a - ya;,4,0,0,0,0,0,0,0,0,6,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2527,            double zb = -(za - pi2a + ya);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2528,            temp = za - EIGHTHES[idx];,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2529,            zb += -(temp - za + EIGHTHES[idx]);,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2530,            za = temp;,4,1,0,0,0,0,4,0,0,9,10,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2532,            zb += pi2b - yb;,6,1,0,0,0,0,0,0,0,8,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2533,            ya = za;,6,0,0,0,0,1,12,0,0,20,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2534,            yb = zb;,8,1,0,0,0,0,0,0,0,11,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2536,            result = yb + ya;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2537,            resultb = -(result - yb - ya);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2538,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2540,            double za = EIGHTHES[idx] + ya;,6,1,1,1,2,0,0,0,0,11,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2541,            double zb = -(za - EIGHTHES[idx] - ya);,6,1,1,2,4,0,0,0,0,12,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2542,            temp = za + yb;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2543,            zb += -(temp - za - yb);,8,1,0,1,2,0,0,0,0,11,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2544,            za = temp;,4,0,0,0,0,0,4,0,0,9,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2546,            result = za + zb;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2547,            resultb = -(result - za - zb);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2550,        if (leftPlane) {,2,0,0,1,3,0,6,0,0,8,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2552,            final double pia = 1.5707963267948966*2.0;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2553,            final double pib = 6.123233995736766E-17*2.0;,0,0,0,0,0,0,0,0,0,0,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2555,            final double za = pia - result;,8,3,0,0,0,1,0,0,0,12,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2556,            double zb = -(za - pia + result);,8,2,0,1,2,0,4,0,0,16,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2557,            zb += pib - resultb;,6,1,0,0,0,0,0,0,0,8,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2559,            result = za + zb;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2560,            resultb = -(result - za - zb);,8,1,0,1,2,0,0,0,0,11,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2564,        if (negate ^ leftPlane) {,6,1,0,1,3,0,0,0,0,8,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2565,            result = -result;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2568,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2578,        if (x !=x || y != y) {,16,8,1,1,3,0,6,0,0,35,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2579,            return Double.NaN;,8,1,0,0,0,1,0,0,0,9,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2582,        if (y == 0.0) {,4,0,0,1,3,0,0,0,0,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2583,            double result = x*y;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2584,            double invx = 1.0/x;,4,1,0,0,0,0,0,0,0,5,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2585,            double invy = 1.0/y;,4,1,0,0,0,0,0,0,0,5,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2587,            if (invx == 0.0) { // X is infinite,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2588,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2591,            if (result != result) { // y must be infinite,4,1,0,1,3,0,0,0,0,5,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2592,                return x/y;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2595,            if (x < 0.0 || invx < 0.0) {,4,3,0,1,3,0,0,0,0,7,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2596,                if (y < 0.0 || invy < 0.0) {,12,0,0,1,3,0,0,0,0,15,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2597,                    return -Math.PI;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2599,                    return Math.PI;,4,0,0,0,0,1,0,0,0,4,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2602,                return result;,2,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2606,        if (y == Double.POSITIVE_INFINITY) {,22,3,0,1,3,1,0,0,0,27,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2607,            if (x == Double.POSITIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2608,                return Math.PI/4.0;,4,1,0,0,0,1,0,0,0,5,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2611,            if (x == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2612,                return Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,6,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2615,            return Math.PI/2.0;,4,1,0,0,0,1,0,0,0,5,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2618,        if (y == Double.NEGATIVE_INFINITY) {,10,1,0,1,3,0,0,0,0,11,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2619,            if (x == Double.POSITIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2620,                return -Math.PI/4.0;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2623,            if (x == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2624,                return -Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,7,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2627,            return -Math.PI/2.0;,4,1,0,0,0,1,0,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2630,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2631,            if (y > 0.0 || 1/y > 0.0) {,12,5,1,1,3,0,0,0,0,22,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2632,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2635,            if (y < 0.0 || 1/y < 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2636,                return -0.0;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2640,        if (x == Double.NEGATIVE_INFINITY),16,2,0,1,2,0,0,0,0,19,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2642,            if (y > 0.0 || 1/y > 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2643,                return Math.PI;,12,6,0,0,0,1,0,0,0,18,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2646,            if (y < 0.0 || 1/y < 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2647,                return -Math.PI;,4,0,0,0,0,1,0,0,0,5,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2651,        if (x == 0) {,4,1,0,1,3,0,12,0,0,18,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2652,            if (y > 0.0 || 1/y > 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2653,                return Math.PI/2.0;,8,1,0,0,0,2,10,2,0,22,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2656,            if (y < 0.0 || 1/y < 0.0) {,6,5,0,1,3,0,0,0,0,12,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2657,                return -Math.PI/2.0;,4,1,0,0,0,1,0,0,0,6,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2661,        if (x > 8e298 || x < -8e298) { // This would cause split of x to fail,10,4,0,1,3,0,0,0,0,16,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2662,            x *= 9.31322574615478515625E-10;,8,1,0,0,0,0,2,0,0,13,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2663,            y *= 9.31322574615478515625E-10;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2667,        double temp = x * 1073741824.0;,4,0,0,0,0,0,0,0,0,5,31,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2668,        final double xa = x + temp - temp;,10,2,1,0,0,2,0,0,0,18,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2669,        final double xb = x - xa;,4,0,0,0,0,0,0,0,0,6,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2672,        final double r = y/x;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2673,        temp = r * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2674,        double ra = r + temp - temp;,8,2,0,0,0,0,0,0,0,10,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2675,        double rb = r - ra;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2677,        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2679,        temp = ra + rb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2680,        rb = -(temp - ra - rb);,8,1,0,1,2,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2681,        ra = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2684,"        double result = atan(ra, rb, x < 0);",10,2,0,1,2,0,6,0,0,19,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2686,        return result;,8,1,0,0,0,1,0,0,0,10,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2696,        final double facta = 0.01745329052209854;,2,0,0,0,0,1,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2697,        final double factb = 1.997844754509471E-9;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2699,        double temp = x * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2700,        double xa = x + temp - temp;,8,2,0,0,0,0,0,0,0,10,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2701,        double xb = x - xa;,12,2,0,0,0,0,0,0,0,15,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2703,        return xb * factb + xb * facta + xa * factb + xa * facta;,16,7,0,0,0,1,0,0,0,23,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2713,        final double facta = 57.2957763671875;,2,0,0,0,0,1,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2714,        final double factb = 3.145894820876798E-6;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2716,        double temp = x * 1073741824.0;,4,1,0,0,0,0,0,0,0,5,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2717,        double xa = x + temp - temp;,12,2,0,0,0,0,0,0,0,15,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2718,        double xb = x - xa;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2720,        return xb * factb + xb * facta + xa * factb + xa * facta;,0,0,0,0,0,1,0,0,0,1,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2729,        return (x < 0) ? -x : x;,6,1,0,1,2,1,0,0,0,8,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2738,        return (x < 0l) ? -x : x;,8,2,0,1,2,1,0,0,0,11,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2747,        return (x < 0.0f) ? -x : x;,6,1,0,1,2,1,0,0,0,8,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2756,        return (x < 0.0) ? -x : x;,14,4,0,1,2,1,0,0,0,20,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2766,        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));,2,2,0,3,6,1,12,0,0,16,72,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2788,        if (Double.isNaN(d) || Double.isInfinite(d)) {,0,0,0,3,7,0,0,0,0,10,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2789,            return d;,4,2,0,0,0,1,6,0,0,12,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2790,        } else if (d == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2791,            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,18,2,0,1,2,1,0,0,0,22,62,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2797,        long bits     = Double.doubleToLongBits(d);,12,2,0,1,2,0,6,0,0,22,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2798,        long sign     = bits & 0x8000000000000000L;,4,1,0,0,0,0,0,0,0,5,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2799,        long exponent = bits & 0x7ff0000000000000L;,10,2,0,0,0,0,0,0,0,13,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2800,        long mantissa = bits & 0x000fffffffffffffL;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2802,        if (d * (direction - d) >= 0) {,14,5,0,2,5,0,0,0,0,20,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2804,            if (mantissa == 0x000fffffffffffffL) {,2,1,0,1,3,0,0,0,0,3,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2805,                return Double.longBitsToDouble(sign |,0,0,0,0,1,1,0,0,0,2,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2808,                return Double.longBitsToDouble(sign |,2,1,0,0,1,1,4,0,0,7,37,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2813,            if (mantissa == 0L) {,6,1,0,1,3,0,4,0,0,12,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2814,                return Double.longBitsToDouble(sign |,0,0,0,0,1,1,0,0,0,2,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2818,                return Double.longBitsToDouble(sign |,6,1,0,0,1,1,0,0,0,8,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2832,        if (x >= 4503599627370496.0 || x <= -4503599627370496.0) {,0,0,0,1,3,0,0,0,0,4,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2833,            return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2836,        y = (long) x;,0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2837,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2838,            y--;,6,1,0,0,0,0,0,0,0,7,4,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2841,        return (double) y;,0,0,0,1,2,1,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2851,        y = floor(x);,8,0,0,1,2,0,4,0,0,14,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2852,        if (y == x) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2853,            return y;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2856,        return y + 1.0;,2,1,0,0,0,1,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2864,        double y = floor(x);,2,0,0,1,2,0,4,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2865,        double d = x - y;,8,1,0,0,0,0,0,0,0,10,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2867,        if (d > 0.5) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2868,            return y+1.0;,2,1,0,0,0,1,8,0,0,11,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2870,        if (d < 0.5) {,8,2,1,1,3,1,0,0,0,13,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2871,            return y;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2875,        long z = (long) y;,4,0,0,1,2,0,0,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2876,        return (z & 1) == 0 ? y : y + 1.0;,6,3,0,1,2,1,0,0,0,9,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2884,        return (long) floor(x + 0.5);,0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2892,        return Math.round(x);,8,1,0,1,2,3,8,0,0,19,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2901,        return (a <= b) ? a : b;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2910,        return (a <= b) ? a : b;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2919,        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);,18,2,0,3,6,2,8,0,0,29,59,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2928,        return (a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b);,16,2,0,3,6,1,4,0,0,22,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2937,        return (a <= b) ? b : a;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2946,        return (a <= b) ? b : a;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2955,        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);,16,2,0,3,6,1,4,0,0,22,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,63,2964,        return (a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);,24,3,0,3,6,1,4,0,0,31,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,402,                            tmp = 0.1;,0,0,0,0,0,0,0,0,0,0,10,4,0.28571,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,627,            } else if (fp < 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.25,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,628,"                paru = Math.min(paru, lmPar);",6,3,0,1,2,0,30,0,0,41,29,3,0.25,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,605,            for (int j = 0; j < solvedCols; ++j) {,8,1,0,1,3,0,0,0,0,10,38,6,0.21053,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,606,                int pj = permutation[j];,0,0,0,1,2,0,0,0,0,3,24,4,0.21053,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,607,                work1[pj] = work3[pj] * diag[pj] / dxNorm;,0,0,0,3,6,0,0,0,0,9,42,4,0.21053,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,609,            for (int j = 0; j < solvedCols; ++j) {,8,1,0,1,3,0,6,0,0,16,38,3,0.21053,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,610,                int pj = permutation[j];,2,0,1,1,2,0,0,0,0,6,24,9,0.21053,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,611,                work1[pj] /= work2[j];,0,0,1,2,4,0,0,0,0,9,22,8,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,612,                double tmp = work1[pj];,2,0,1,1,2,0,0,0,0,6,23,9,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,613,                for (int i = j + 1; i < solvedCols; ++i) {,12,2,0,1,3,0,0,0,0,15,42,3,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,614,                    work1[permutation[i]] -= jacobian[i][pj] * tmp;,2,1,1,4,8,0,0,0,0,16,47,10,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,617,            sum2 = 0;,0,0,0,0,0,0,0,0,0,0,9,4,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,618,            for (int j = 0; j < solvedCols; ++j) {,8,1,0,1,3,0,0,0,0,10,38,6,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,619,                double s = work1[permutation[j]];,2,0,1,2,4,0,0,0,0,8,33,9,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,620,                sum2 += s * s;,0,0,0,0,0,0,0,0,0,0,14,4,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,622,            double correction = fp / (delta * sum2);,2,0,0,1,2,0,0,2,0,4,40,5,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,625,            if (fp > 0) {,2,1,0,1,3,0,0,0,0,3,13,6,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,632,"            lmPar = Math.max(parl, lmPar + correction);",6,1,0,1,2,0,6,0,0,14,43,6,0.21053,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,530,            for (int j = 0; j < solvedCols; ++j) {,0,0,0,1,3,0,0,0,0,4,38,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,531,                int pj = permutation[j];,4,0,1,1,2,0,0,0,0,9,24,3,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,532,                work1[pj] *= diag[pj] / dxNorm;,0,0,0,2,4,0,0,0,0,6,31,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,534,            sum2 = 0;,2,0,0,0,0,0,0,0,0,3,9,6,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,535,            for (int j = 0; j < solvedCols; ++j) {,8,1,0,1,3,0,0,0,0,10,38,6,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,536,                int pj = permutation[j];,0,0,0,1,2,0,0,0,0,3,24,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,537,                double sum = 0;,6,1,0,0,0,0,0,0,0,7,15,5,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,538,                for (int i = 0; i < j; ++i) {,0,0,0,1,3,0,0,0,0,4,29,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,539,                    sum += jacobian[i][pj] * work1[permutation[i]];,2,1,1,4,8,0,0,0,0,16,47,10,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,541,                double s = (work1[pj] - sum) / diagR[pj];,4,2,1,3,6,0,4,0,0,19,41,3,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,542,                work1[pj] = s;,2,0,1,1,2,0,0,0,0,7,14,8,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,543,                sum2 += s * s;,6,1,0,0,0,0,0,0,0,8,14,8,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,545,            parl = fp / (delta * sum2);,8,2,0,1,2,0,0,0,0,11,27,6,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,698,                        final double cotan = rkk / lmDiag[k];,0,0,0,1,2,0,0,0,0,3,37,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,699,                        sin   = 1.0 / Math.sqrt(1.0 + cotan * cotan);,6,3,0,1,2,0,4,0,0,14,45,12,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,700,                        cos   = sin * cotan;,6,1,0,0,0,0,0,0,0,8,20,12,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,701,                    } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.19048,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,426,                    cost = previousCost;,4,0,0,0,0,0,0,0,0,5,20,10,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,427,                    for (int j = 0; j < solvedCols; ++j) {,8,1,0,1,3,0,0,0,0,10,38,10,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,428,                        int pj = permutation[j];,2,0,1,1,2,0,0,0,0,6,24,13,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,429,                        point[pj] = oldX[pj];,0,0,0,2,4,0,0,0,0,6,21,4,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,431,                    tmpVec    = residuals;,0,0,0,0,0,0,0,0,0,0,22,4,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,432,                    residuals = oldRes;,4,0,0,0,0,0,0,0,0,5,19,10,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,433,                    oldRes    = tmpVec;,6,0,0,0,0,0,4,0,0,11,19,3,0.18182,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,275,        updateJacobian();,0,0,0,1,2,0,2,0,0,2,17,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,278,        double[][] jTj = new double[cols][cols];,2,0,1,4,8,0,0,0,0,6,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,279,        for (int i = 0; i < cols; ++i) {,8,1,0,1,3,0,0,0,0,10,32,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,280,            for (int j = i; j < cols; ++j) {,10,1,0,1,3,0,0,0,0,12,32,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,281,                double sum = 0;,4,1,0,0,0,0,0,0,0,5,15,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,282,                for (int k = 0; k < rows; ++k) {,8,1,0,1,3,0,0,0,0,10,32,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,283,                    sum += jacobian[k][i] * jacobian[k][j];,2,1,1,4,8,0,0,0,0,16,39,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,285,                jTj[i][j] = sum;,4,0,1,2,4,0,8,2,0,21,16,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,286,                jTj[j][i] = sum;,0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,292,            RealMatrix inverse =,4,1,0,0,0,0,4,2,0,12,20,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,312,        if (rows <= cols) {,4,1,0,1,3,0,0,0,0,5,19,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,44,    protected AbstractRealMatrix() {,2,0,0,1,3,1,0,0,0,3,32,2,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,45,        lu = null;,4,0,0,0,0,1,2,0,0,8,10,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,46,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,77,"        super(rowDimension, columnDimension);",0,0,0,1,2,0,0,0,0,3,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,78,        data = new double[rowDimension][columnDimension];,4,0,1,2,4,0,0,2,0,12,49,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,79,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,95,"        throws IllegalArgumentException, NullPointerException {",4,0,0,0,1,0,0,0,0,4,55,2,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,96,        copyIn(d);,0,0,0,1,2,0,4,0,0,4,10,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,97,    },0,0,0,0,1,0,2,0,0,2,1,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,298,        return copyOut();,2,0,0,1,2,1,2,0,0,6,17,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,316,        if (data == null) {,10,2,0,1,3,1,6,2,0,21,19,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,317,            if (row > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,321,            if (column > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,325,            final int nRows = subMatrix.length;,0,0,0,0,0,0,0,0,0,0,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,326,            if (nRows == 0) {,2,1,0,1,3,0,0,0,0,3,17,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,331,            final int nCols = subMatrix[0].length;,6,0,1,1,2,1,0,0,0,9,38,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,332,            if (nCols == 0) {,2,1,0,1,3,0,0,0,0,3,17,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,336,            data = new double[subMatrix.length][nCols];,6,0,1,2,4,0,0,0,0,9,43,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,337,            for (int i = 0; i < data.length; ++i) {,18,3,0,1,3,0,0,0,0,22,39,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,338,                if (subMatrix[i].length != nCols) {,0,0,0,2,5,0,0,0,0,7,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,342,"                System.arraycopy(subMatrix[i], 0, data[i + row], column, nCols);",10,2,1,3,6,0,8,0,0,26,64,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,344,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,348,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,367,            data[row][column] = value;,0,0,0,2,4,0,0,0,0,6,26,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,371,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,372,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,401,        return (data == null) ? 0 : data.length;,6,1,0,1,2,1,0,0,0,7,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,407,        return ((data == null) || (data[0] == null)) ? 0 : data[0].length;,4,3,1,5,10,1,0,0,0,11,66,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,597,        final int nRows = this.getRowDimension();,2,0,0,1,2,1,2,0,0,5,41,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,598,        final double[][] out = new double[nRows][this.getColumnDimension()];,2,0,1,5,10,1,2,0,0,7,68,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,600,        for (int i = 0; i < nRows; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,601,"            System.arraycopy(data[i], 0, out[i], 0, data[i].length);",2,0,1,4,8,0,4,0,0,18,56,7,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,603,        return out;,4,4,1,0,0,1,0,0,0,17,11,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,617,"        setSubMatrix(in, 0, 0);",0,0,0,1,2,0,0,0,0,3,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,618,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,361,            final int m = pivot.length;,6,0,0,0,0,1,0,0,0,7,27,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,362,            if (b.getRowDimension() != m) {,8,1,0,2,5,1,4,0,0,14,31,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,367,            if (singular) {,0,0,0,1,3,0,0,0,0,4,15,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,417,            return solve(MatrixUtils.createRealIdentityMatrix(pivot.length));,4,0,0,2,4,1,6,0,0,10,65,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,62,        return (rows * columns <= 4096) ?,10,2,0,1,2,1,0,0,0,13,33,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,107,        return (data.length * data[0].length <= 4096) ?,0,0,0,2,4,1,0,0,0,7,47,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,143,"        final RealMatrix m = createRealMatrix(dimension, dimension);",8,1,0,1,2,1,6,2,0,19,60,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,144,        for (int i = 0; i < dimension; ++i) {,8,1,0,1,3,0,0,0,0,10,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,145,"            m.setEntry(i, i, 1.0);",0,0,0,1,2,0,8,0,0,8,22,7,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,147,        return m;,6,0,0,0,0,1,0,0,0,7,9,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,149,        return objectiveEvaluations;,2,0,0,0,0,1,0,0,0,2,28,4,0.33333,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,154,        return jacobianEvaluations;,10,2,0,0,0,1,4,0,0,17,27,3,0.33333,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,161,    },0,0,0,0,1,0,6,0,0,6,1,11,0.07143,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,106,                final double[] luRow = lu[row];,0,0,0,2,4,0,0,0,0,6,31,4,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,107,                sum = luRow[col];,2,0,1,1,2,0,0,0,0,7,17,8,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,108,                for (int i = 0; i < row; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,111,                luRow[col] = sum;,2,0,1,1,2,0,0,0,0,7,17,8,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,121,                    sum -= luRow[i] * lu[i][col];,0,0,0,3,6,0,0,0,0,9,29,4,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,157,                lu[row][col] /= luDiag;,2,0,1,2,4,0,0,0,0,9,23,8,0.0625,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,638,        return getColumnDimension() == getRowDimension();,0,0,0,2,4,1,4,0,0,4,49,6,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,68,"        this(matrix, DEFAULT_TOO_SMALL);",0,0,0,1,2,0,2,0,0,2,32,7,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,69,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,79,        throws NonSquareMatrixException {,2,0,0,0,1,0,0,0,0,2,33,2,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,81,        if (!matrix.isSquare()) {,0,0,0,2,5,0,4,0,0,5,25,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,85,        final int m = matrix.getColumnDimension();,4,0,0,1,2,1,4,0,0,9,42,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,86,        lu = matrix.getData();,2,0,0,1,2,0,4,0,0,7,22,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,87,        pivot = new int[m];,2,0,1,1,2,0,0,0,0,5,19,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,88,        cachedL = null;,2,0,0,0,0,0,0,0,0,3,15,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,89,        cachedU = null;,4,0,0,0,0,0,0,0,0,5,15,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,90,        cachedP = null;,0,0,0,0,0,0,0,0,0,0,15,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,93,        for (int row = 0; row < m; row++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,94,            pivot[row] = row;,22,8,1,1,2,1,0,0,0,36,17,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,96,        even     = true;,2,0,0,0,0,0,0,0,0,4,16,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,97,        singular = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,100,        for (int col = 0; col < m; col++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,102,            double sum = 0;,4,0,0,0,0,1,4,0,0,9,15,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,105,            for (int row = 0; row < col; row++) {,14,2,0,1,3,1,0,0,0,18,37,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,115,            int max = col; // permutation row,4,0,0,0,0,0,0,0,0,4,33,7,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,116,            double largest = Double.NEGATIVE_INFINITY;,6,0,0,0,0,0,0,0,0,6,42,7,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,117,            for (int row = col; row < m; row++) {,10,1,0,1,3,0,0,0,0,12,37,6,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,118,                final double[] luRow = lu[row];,2,0,1,2,4,1,0,0,0,7,31,8,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,119,                sum = luRow[col];,0,0,0,1,2,0,0,0,0,3,17,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,120,                for (int i = 0; i < col; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,123,                luRow[col] = sum;,0,0,0,1,2,0,0,0,0,3,17,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,126,                if (Math.abs(sum) > largest) {,2,1,0,2,5,0,6,0,0,9,30,8,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,127,                    largest = Math.abs(sum);,2,0,0,1,2,0,6,0,0,9,24,10,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,128,                    max = row;,4,0,0,0,0,0,0,0,0,5,10,10,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,133,            if (Math.abs(lu[max][col]) < singularityThreshold) {,2,1,1,4,9,0,4,0,0,13,52,6,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,139,            if (max != col) {,0,0,0,1,3,0,0,0,0,4,17,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,155,            final double luDiag = lu[col][col];,2,0,1,2,4,1,0,0,0,9,35,6,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,156,            for (int row = col + 1; row < m; row++) {,10,2,0,1,3,0,0,0,0,13,41,6,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,227,"        return new Solver(lu, pivot, singular);",0,0,0,1,2,1,0,0,0,4,39,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,248,"        private Solver(final double[][] lu, final int[] pivot, final boolean singular) {",8,0,0,4,9,4,0,0,0,12,80,3,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,249,            this.lu       = lu;,0,0,0,0,0,0,0,0,0,0,19,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,250,            this.pivot    = pivot;,4,0,0,0,0,0,0,0,0,5,22,5,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,251,            this.singular = singular;,4,0,0,0,0,0,0,0,0,5,25,5,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,252,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,231,    private static class Solver implements DecompositionSolver {,2,0,0,0,1,2,0,2,0,6,60,2,0.05556,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,152,        return evaluations;,2,1,0,0,0,1,6,0,0,9,19,3,9.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,82,        return iterationCount;,0,0,0,0,0,1,0,0,0,1,22,4,4.5,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,107,            a = lo;,0,0,0,0,0,0,0,0,0,0,7,4,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,108,            b = hi;,4,0,0,0,0,0,0,0,0,5,7,6,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,158,                        d = p / q;,6,1,0,0,0,0,0,0,0,8,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,159,                        u = x + d;,6,1,0,0,0,0,0,0,0,8,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,162,                        if (u - a < tol2,6,2,0,0,1,0,0,0,0,8,16,13,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,175,                            e = a - x;,18,2,0,0,0,1,0,4,0,26,10,2,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,182,                        e = b - x;,6,1,0,0,0,0,0,0,0,8,10,12,3.2,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,27,public enum GoalType implements Serializable {,0,0,0,0,1,0,0,0,0,1,46,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,30,"    MAXIMIZE,",2,0,0,0,0,0,0,0,0,2,9,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,66,33,    MINIMIZE,2,0,0,0,0,0,0,0,0,2,8,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,43,    public BrentOptimizer() {,2,0,0,1,3,1,0,0,0,3,25,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,44,        setMaxEvaluations(Integer.MAX_VALUE);,4,0,0,1,2,0,2,0,0,6,37,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,45,        setMaximalIterationCount(100);,0,0,0,1,2,0,2,0,0,2,30,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,46,        setAbsoluteAccuracy(1E-10);,0,0,0,1,2,0,2,0,0,2,27,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,47,        setRelativeAccuracy(1.0e-14);,0,0,0,1,2,0,2,0,0,2,29,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,48,    },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,38,    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));,2,2,0,2,4,3,4,0,0,11,70,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,60,        clearResult();,0,0,0,1,2,0,2,0,0,2,14,5,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,61,"        return localMin(getGoalType() == GoalType.MINIMIZE,",4,1,0,1,3,1,4,0,0,9,51,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,99,        if (eps <= 0) {,2,1,0,1,3,0,0,0,0,3,15,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,102,        if (t <= 0) {,2,1,0,1,3,0,0,0,0,3,13,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,106,        if (lo < hi) {,0,0,0,1,3,0,0,0,0,4,14,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,114,        double x = mid;,4,0,0,0,0,0,0,0,0,4,15,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,115,        double v = x;,0,0,0,0,0,0,0,0,0,0,13,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,116,        double w = x;,4,0,0,0,0,0,0,0,0,4,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,117,        double d = 0;,8,2,0,0,0,0,0,0,0,11,13,3,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,118,        double e = 0;,2,0,0,0,0,0,0,0,0,2,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,119,"        double fx = computeObjectiveValue(f, x);",0,0,0,1,2,0,0,0,0,3,40,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,120,        if (goalType == GoalType.MAXIMIZE) {,6,1,0,1,3,0,0,0,0,7,36,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,123,        double fv = fx;,4,0,0,0,0,0,0,0,0,5,15,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,124,        double fw = fx;,4,0,0,0,0,0,0,0,0,4,15,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,126,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,127,        while (count < maximalIterationCount) {,6,1,0,1,3,0,0,0,0,8,39,3,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,128,            double m = 0.5 * (a + b);,6,2,0,1,2,0,0,0,0,8,25,7,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,129,            final double tol1 = eps * Math.abs(x) + t;,10,3,0,1,2,1,6,0,0,20,42,3,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,130,            final double tol2 = 2 * tol1;,0,0,0,0,0,0,0,0,0,0,29,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,133,            if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) {,12,5,1,3,7,0,4,0,0,26,45,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,134,                double p = 0;,2,0,0,0,0,0,0,2,0,5,13,3,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,135,                double q = 0;,6,0,0,0,0,0,0,0,0,7,13,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,136,                double r = 0;,2,0,0,0,0,0,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,137,                double u = 0;,2,0,0,0,0,0,0,0,0,2,13,9,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,139,                if (Math.abs(e) > tol1) { // Fit parabola.,2,1,0,2,5,0,6,0,0,9,42,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,140,                    r = (x - w) * (fx - fv);,10,3,0,2,4,0,0,0,0,14,24,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,141,                    q = (x - v) * (fx - fw);,10,3,0,2,4,0,0,0,0,14,24,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,142,                    p = (x - v) * q - (x - w) * r;,16,5,0,2,4,0,0,0,0,22,30,7,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,143,                    q = 2 * (q - r);,6,2,0,1,2,0,0,0,0,9,16,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,145,                    if (q > 0) {,2,1,0,1,3,0,0,0,0,3,12,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,146,                        p = -p;,4,0,0,0,0,0,0,0,0,6,7,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,148,                        q = -q;,4,0,0,0,0,0,0,0,0,6,7,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,151,                    r = e;,0,0,0,0,0,0,0,0,0,0,6,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,152,                    e = d;,0,0,0,0,0,0,0,0,0,0,6,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,154,                    if (p > q * (a - x),8,3,0,1,3,0,0,0,0,11,19,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,172,                        if (x < m) {,0,0,0,1,3,0,0,0,0,4,12,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,173,                            e = b - x;,6,0,0,0,0,1,0,0,0,7,10,6,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,177,                        d = GOLDEN_SECTION * e;,6,1,0,0,0,0,0,0,0,8,23,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,181,                    if (x < m) {,4,1,0,1,3,0,0,0,0,5,12,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,186,                    d = GOLDEN_SECTION * e;,10,1,0,0,0,0,0,0,0,13,23,3,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,190,                if (Math.abs(d) < tol1) {,2,1,0,2,5,0,6,0,0,9,25,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,197,                    u = x + d;,6,1,0,0,0,0,0,0,0,8,10,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,200,"                double fu = computeObjectiveValue(f, u);",2,0,0,1,2,0,6,0,0,8,40,9,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,201,                if (goalType == GoalType.MAXIMIZE) {,6,1,0,1,3,0,0,0,0,7,36,8,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,206,                if (fu <= fx) {,4,1,0,1,3,0,0,0,0,5,15,8,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,207,                    if (u < x) {,0,0,0,1,3,0,0,0,0,4,12,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,208,                        b = x;,4,0,0,0,0,0,0,0,0,5,6,12,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,210,                        a = x;,0,0,0,0,0,0,0,0,0,0,6,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,212,                    v = w;,4,0,0,0,0,0,0,0,0,5,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,213,                    fv = fw;,4,0,0,0,0,0,0,0,0,5,8,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,214,                    w = x;,4,0,0,0,0,0,4,0,0,9,6,5,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,215,                    fw = fx;,0,0,0,0,0,0,0,0,0,0,8,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,216,                    x = u;,4,0,0,0,0,0,0,0,0,5,6,10,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,217,                    fx = fu;,0,0,0,0,0,0,0,0,0,0,8,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,237,            } else { // termination,0,0,0,0,2,0,0,0,0,2,23,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,238,"                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);",10,1,0,2,4,0,6,0,0,18,64,9,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,239,                return x;,0,0,0,0,0,1,0,0,0,1,9,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,241,            ++count;,4,0,1,0,0,1,0,0,0,8,8,3,2.66667,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,242,        },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,82,    protected AbstractUnivariateRealOptimizer() {},4,2,0,2,4,1,4,0,0,13,46,2,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,126,        this.result         = x;,4,0,0,0,0,0,0,0,0,5,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,127,        this.functionValue  = fx;,10,0,0,0,0,0,0,4,0,15,25,3,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,128,        this.iterationCount = iterationCount;,4,0,0,0,0,0,0,0,0,5,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,129,        this.resultComputed = true;,0,0,0,0,0,0,0,0,0,0,27,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,130,    },4,0,0,0,1,0,0,0,0,4,1,7,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,137,        this.resultComputed = false;,2,0,0,0,0,0,0,0,0,4,28,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,138,    },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,142,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,143,    },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,159,        return goal;,2,0,0,0,0,1,0,0,0,2,12,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,193,        if (++evaluations > maxEvaluations) {,4,1,0,1,3,0,0,0,0,6,37,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,197,        return f.value(point);,0,0,0,1,2,1,6,0,0,6,22,5,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,78,    protected ConvergingAlgorithmImpl() {},2,0,0,2,4,1,0,0,0,3,38,2,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,87,        absoluteAccuracy = accuracy;,6,0,0,0,0,0,12,0,0,20,28,3,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,88,    },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,92,        return absoluteAccuracy;,2,0,0,0,0,1,0,0,0,2,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,102,        maximalIterationCount = count;,4,0,0,0,0,0,0,0,0,5,30,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,103,    },2,0,0,0,1,1,6,2,0,11,1,6,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,117,        relativeAccuracy = accuracy;,0,0,0,0,0,0,0,0,0,0,28,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,118,    },0,0,0,0,1,0,0,0,0,1,1,4,2.66667,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,66,122,        return relativeAccuracy;,0,0,0,0,0,1,0,0,0,1,24,4,2.66667,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,66,"        return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));",8,3,0,2,4,1,10,0,0,21,75,5,2.25,1,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,233,                        v = u;,4,0,0,0,0,0,0,0,0,5,6,13,2.25,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,66,234,                        fv = fu;,4,0,0,0,0,0,0,0,0,5,8,13,2.25,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,43,"        super(100, 1E-10);",0,0,0,1,2,0,0,0,0,3,18,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,44,    },2,1,0,0,1,0,10,0,0,14,1,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,37,    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));,0,0,0,2,4,0,0,0,0,6,70,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,57,        clearResult();,0,0,0,1,2,0,2,0,0,2,14,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,58,"        return localMin(f, goalType, min, max, relativeAccuracy, absoluteAccuracy);",0,0,0,1,2,1,0,0,0,4,75,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,88,        double x = a + GOLDEN_SECTION * (b - a);,10,3,0,1,2,0,0,0,0,13,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,89,        double v = x;,4,0,0,0,0,0,0,0,0,4,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,90,        double w = x;,4,0,0,0,0,0,0,0,0,4,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,91,        double e = 0;,2,0,0,0,0,0,0,0,0,2,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,92,"        double fx = computeObjectiveValue(f, x);",2,0,0,1,2,0,6,0,0,8,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,93,        if (goalType == GoalType.MAXIMIZE) {,6,1,0,1,3,0,0,0,0,7,36,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,96,        double fv = fx;,0,0,0,0,0,0,0,0,0,0,15,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,97,        double fw = fx;,4,0,0,0,0,0,0,0,0,4,15,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,99,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,100,        while (count < maximalIterationCount) {,4,1,0,1,3,0,0,0,0,5,39,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,101,            double m = 0.5 * (a + b);,6,2,0,1,2,0,0,0,0,8,25,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,102,            double tol = eps * Math.abs(x) + t;,6,2,0,1,2,0,6,0,0,14,35,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,103,            double t2 = 2 * tol;,4,1,0,0,0,0,0,0,0,6,20,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,106,            if (Math.abs(x - m) > t2 - 0.5 * (b - a)) {,10,5,0,3,7,0,4,0,0,19,43,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,107,                double p = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,108,                double q = 0;,8,1,0,0,0,0,0,0,0,10,13,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,109,                double r = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,110,                double d = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,111,                double u = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,113,                if (Math.abs(e) > tol) { // Fit parabola.,2,1,0,2,5,0,6,0,0,9,41,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,114,                    r = (x - w) * (fx - fv);,10,3,0,2,4,0,0,0,0,14,24,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,115,                    q = (x - v) * (fx - fw);,14,3,0,2,4,0,0,0,0,19,24,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,116,                    p = (x - v) * q - (x - w) * r;,14,5,0,2,4,0,0,0,0,20,30,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,117,                    q = 2 * (q - r);,6,2,0,1,2,0,0,0,0,9,16,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,119,                    if (q > 0) {,2,1,0,1,3,0,0,0,0,3,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,120,                        p = -p;,6,0,0,0,0,0,4,0,0,13,7,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,122,                        q = -q;,4,0,0,0,0,0,0,0,0,6,7,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,125,                    r = e;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,126,                    e = d;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,129,                if (Math.abs(p) < Math.abs(0.5 * q * r) &&,4,4,0,2,5,0,10,0,0,18,42,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,139,                    e = ((x < m) ? b : a) - x;,12,2,0,2,4,0,0,0,0,15,26,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,140,                    d = GOLDEN_SECTION * e;,6,1,0,0,0,0,0,0,0,8,23,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,144,                u = x + ((Math.abs(d) > tol) ? d : ((d > 0) ? tol : -tol));,14,3,0,5,10,0,6,0,0,25,59,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,145,"                double fu = computeObjectiveValue(f, u);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,146,                if (goalType == GoalType.MAXIMIZE) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,151,                if (fu <= fx) {,4,1,0,1,3,0,0,0,0,5,15,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,152,                    if (u < x) {,4,1,0,1,3,0,0,0,0,5,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,153,                        b = x;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,155,                        a = x;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,157,                    v = w;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,158,                    fv = fw;,0,0,0,0,0,0,0,0,0,0,8,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,159,                    w = x;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,160,                    fw = fx;,4,0,0,0,0,0,0,0,0,5,8,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,161,                    x = u;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,162,                    fx = fu;,4,0,0,0,0,0,0,0,0,5,8,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,164,                    if (u < x) {,4,1,0,1,3,0,0,0,0,5,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,165,                        a = u;,6,0,0,0,0,0,0,0,0,7,6,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,167,                        b = u;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,169,                    if ((fu <= fw) || (w == x)) {,8,3,0,3,7,0,0,0,0,11,29,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,170,                        v = w;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,171,                        fv = fw;,4,0,0,0,0,0,0,0,0,5,8,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,172,                        w = u;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,173,                        fw = fu;,4,0,0,0,0,0,0,0,0,5,8,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,174,                    } else if ((fu <= fv) || (v == x) || (v == w)) {,12,4,0,4,10,0,0,0,0,16,48,11,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,175,                        v = u;,6,3,1,0,0,1,0,0,0,15,6,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,176,                        fv = fu;,10,1,1,0,0,0,6,0,0,24,8,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,179,            } else { // termination,0,0,0,0,2,0,0,0,0,2,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,180,"                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);",12,2,0,2,4,0,6,0,0,21,64,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,181,                return x;,2,0,0,0,0,1,0,0,0,2,9,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,184,            ++count;,4,0,0,0,0,0,0,4,0,9,8,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,185,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,63,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",8,0,0,1,2,0,0,0,0,9,61,0,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,64,        resultComputed = false;,2,0,0,0,0,0,0,0,0,4,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,65,        setMaxEvaluations(Integer.MAX_VALUE);,6,0,0,1,2,0,6,0,0,13,37,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,66,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,72,        if (!resultComputed) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,75,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,85,        checkResultComputed();,0,0,0,1,2,0,2,0,0,2,22,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,86,        return functionValue;,2,0,0,0,0,1,0,0,0,2,21,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,98,        this.result         = x;,4,1,0,0,0,0,0,0,0,6,24,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,99,        this.functionValue  = fx;,4,0,0,0,0,0,0,0,0,5,25,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,100,        this.iterationCount = iterationCount;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,101,        this.resultComputed = true;,0,0,0,0,0,0,0,0,0,0,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,102,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,108,        this.resultComputed = false;,2,0,0,0,0,0,0,0,0,4,28,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,109,    },2,0,0,0,1,0,0,0,0,3,1,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,113,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,114,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,123,        return evaluations;,2,0,0,0,0,1,0,0,0,2,19,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,137,        if (++evaluations > maxEvaluations) {,4,1,0,1,3,0,8,0,0,14,37,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,141,        return f.value(point);,0,0,0,1,2,1,6,0,0,6,22,5,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,61,                                      final double defaultAbsoluteAccuracy) {,2,0,0,0,2,1,0,0,0,3,39,3,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,0,0,0,0,0,0,0,0,0,0,55,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,63,        this.defaultRelativeAccuracy = 1.0e-14;,2,0,0,0,0,0,0,0,0,3,39,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,0,0,0,0,0,0,0,0,0,0,48,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,65,        this.relativeAccuracy = defaultRelativeAccuracy;,4,0,0,0,0,0,0,0,0,5,48,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,4,0,0,0,0,0,0,0,0,5,65,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,67,        this.maximalIterationCount = defaultMaximalIterationCount;,0,0,0,0,0,0,0,0,0,0,58,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,68,        this.iterationCount = 0;,2,0,0,0,0,1,6,0,0,9,24,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,69,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,73,        return iterationCount;,2,0,0,0,0,1,0,0,0,2,22,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,93,        maximalIterationCount = count;,4,0,0,0,0,0,0,0,0,5,30,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,94,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,27,public enum GoalType implements Serializable {,2,0,0,0,1,1,0,2,0,5,46,1,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,30,"    MAXIMIZE,",2,0,0,0,0,0,0,0,0,2,9,2,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,33,    MINIMIZE,2,0,0,0,0,0,0,0,0,2,8,2,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,80,                                             final RandomGenerator generator) {,0,0,0,0,2,0,0,0,0,2,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,81,        this.optimizer        = optimizer;,0,0,0,0,0,0,0,0,0,0,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,82,        this.totalIterations  = 0;,6,1,0,0,0,0,0,0,0,8,26,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,83,        this.starts           = starts;,10,1,0,0,0,0,0,0,0,13,31,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,84,        this.generator        = generator;,10,1,0,0,0,0,0,0,0,13,34,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,85,        this.optima           = null;,8,0,0,0,0,0,0,0,0,10,29,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,86,        setMaximalIterationCount(Integer.MAX_VALUE);,10,0,0,1,2,0,2,0,0,13,44,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,87,        setMaxEvaluations(Integer.MAX_VALUE);,4,0,0,1,2,0,2,0,0,6,37,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,88,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,152,        this.maxIterations = count;,4,0,0,0,0,0,0,0,0,5,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,153,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,157,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,158,    },0,0,0,0,1,0,8,0,0,8,1,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,193,        if (optima == null) {,2,0,0,1,3,0,4,0,0,7,21,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,219,        if (optimaValues == null) {,2,1,0,1,3,0,0,0,0,3,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,231,        optima           = new double[starts];,2,0,1,1,2,0,0,0,0,5,38,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,232,        optimaValues     = new double[starts];,2,0,1,1,2,0,0,0,0,5,38,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,233,        totalIterations  = 0;,2,0,0,0,0,0,0,0,0,3,21,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,234,        totalEvaluations = 0;,4,0,0,0,0,3,0,0,0,8,21,1,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,237,        for (int i = 0; i < starts; ++i) {,8,1,0,1,3,0,0,0,0,10,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,240,                optimizer.setMaximalIterationCount(maxIterations - totalIterations);,4,1,0,1,2,0,4,0,0,9,68,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,241,                optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);,4,1,0,1,2,0,4,0,0,9,63,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,242,                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);,12,4,0,3,6,1,4,0,0,21,82,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,243,                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);,12,4,0,3,6,1,4,0,0,21,82,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,244,"                optima[i]       = optimizer.optimize(f, goalType,",0,0,1,1,3,0,8,0,0,13,49,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,247,                optimaValues[i] = optimizer.getFunctionValue();,0,0,1,2,4,0,4,0,0,9,47,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,254,            },4,0,0,0,1,0,0,0,0,5,1,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,256,            totalIterations  += optimizer.getIterationCount();,2,0,0,1,2,0,4,0,0,7,50,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,257,            totalEvaluations += optimizer.getEvaluations();,0,0,0,1,2,0,0,0,0,3,47,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,262,        int lastNaN = optima.length;,0,0,0,0,0,0,0,0,0,0,28,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,263,        for (int i = 0; i < lastNaN; ++i) {,8,1,0,1,3,0,0,0,0,10,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,264,            if (Double.isNaN(optima[i])) {,0,0,1,3,7,0,4,0,0,8,30,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,272,        double currX = optima[0];,8,1,1,1,2,0,0,0,0,12,25,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,273,        double currY = optimaValues[0];,2,0,1,1,2,0,0,0,0,4,31,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,274,        for (int j = 1; j < lastNaN; ++j) {,8,1,0,1,3,0,0,0,0,10,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,275,            final double prevY = currY;,4,0,0,0,0,1,0,0,0,5,27,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,276,            currX = optima[j];,2,0,1,1,2,0,0,0,0,7,18,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,277,            currY = optimaValues[j];,2,0,1,1,2,0,0,0,0,7,24,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,278,            if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {,10,3,0,3,7,0,0,0,0,13,56,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,301,        if (Double.isNaN(optima[0])) {,0,0,1,3,7,0,4,0,0,6,30,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,308,        return optima[0];,0,0,1,1,2,1,0,0,0,2,17,5,1.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,28,public class JDKRandomGenerator extends Random implements RandomGenerator {,2,0,0,0,1,1,0,4,0,7,75,1,1.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,626,"        return new ParseException(null, offset) {",8,0,0,1,3,4,4,4,0,20,41,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,634,"                return buildMessage(Locale.US, pattern, arguments);",6,0,0,1,2,4,14,0,0,23,51,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,640,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,64,"        this(new DummyLocalizable(pattern), arguments);",10,0,0,2,4,3,0,2,0,15,47,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,65,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,75,"    public MathRuntimeException(final Localizable pattern, final Object ... arguments) {",10,0,0,1,3,4,0,4,0,18,84,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,76,        this.pattern   = pattern;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,77,        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,0,0,0,3,6,0,0,0,0,9,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,78,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,88,        super(rootCause);,16,5,0,1,2,0,0,0,0,21,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,89,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,6,0,0,0,0,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,90,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",4,1,0,4,8,0,4,2,0,13,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,91,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,106,"        this(rootCause, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,107,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,121,        super(rootCause);,2,0,0,1,2,0,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,122,        this.pattern   = pattern;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,123,        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,4,1,0,3,6,0,4,2,0,12,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,136,"        return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",2,0,0,3,6,1,10,2,0,14,87,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,146,        return pattern.getSourceString();,0,0,0,1,2,1,4,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,155,        return pattern;,4,0,0,0,0,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,163,        return arguments.clone();,4,0,1,1,2,3,6,0,0,14,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,173,        if (pattern != null) {,4,1,0,1,3,0,0,0,0,6,22,0,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,174,"            return buildMessage(locale, pattern, arguments);",0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,176,"        return """";",2,0,0,0,0,3,0,0,0,4,10,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,182,        return getMessage(Locale.US);,4,0,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,188,        return getMessage(Locale.getDefault());,4,1,0,2,4,1,6,0,0,11,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,196,        printStackTrace(System.err);,4,0,0,1,2,0,2,0,0,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,197,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,206,        synchronized (out) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,207,"            PrintWriter pw = new PrintWriter(out, false);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,208,            printStackTrace(pw);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,210,            pw.flush();,0,0,0,1,2,0,0,0,0,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,211,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,212,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,225,"        return createArithmeticException(new DummyLocalizable(pattern), arguments);",2,0,0,2,4,1,4,2,0,8,75,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,238,        return new ArithmeticException() {,0,0,0,1,3,1,0,2,0,2,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,269,"        return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);",0,0,0,2,4,1,0,0,0,7,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,282,        return new ArrayIndexOutOfBoundsException() {,0,0,0,1,3,1,0,0,0,5,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,313,"        return createEOFException(new DummyLocalizable(pattern), arguments);",4,0,0,2,4,1,4,2,0,11,68,0,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,326,        return new EOFException() {,0,0,0,1,3,1,0,2,0,2,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,358,        IOException ioe = new IOException(rootCause.getLocalizedMessage());,6,0,0,2,4,0,4,4,0,15,67,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,359,        ioe.initCause(rootCause);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,360,        return ioe;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,374,"        return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);",0,0,0,2,4,1,0,0,0,7,80,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,387,        return new IllegalArgumentException() {,0,0,0,1,3,1,0,2,0,2,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,415,        IllegalArgumentException iae = new IllegalArgumentException(rootCause.getLocalizedMessage());,2,0,0,2,4,0,4,4,0,10,93,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,416,        iae.initCause(rootCause);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,417,        return iae;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,431,"        return createIllegalStateException(new DummyLocalizable(pattern), arguments);",2,0,0,2,4,1,4,2,0,8,77,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,444,        return new IllegalStateException() {,0,0,0,1,3,1,0,2,0,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,475,"        return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);",2,0,0,2,4,1,4,2,0,8,87,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,488,        return new ConcurrentModificationException() {,0,0,0,1,3,1,0,2,0,2,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,519,"        return createNoSuchElementException(new DummyLocalizable(pattern), arguments);",2,0,0,2,4,1,4,2,0,8,78,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,532,        return new NoSuchElementException() {,0,0,0,1,3,1,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,563,"        return createNullPointerException(new DummyLocalizable(pattern), arguments);",4,0,0,2,4,1,4,4,0,12,76,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,576,        return new NullPointerException() {,4,2,0,1,3,1,12,2,0,20,35,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,610,"        return createParseException(offset, new DummyLocalizable(pattern), arguments);",0,0,0,2,4,1,0,0,0,7,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,626,"        return new ParseException(null, offset) {",0,0,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,652,"        final String argument = ""https://issues.apache.org/jira/browse/MATH"";",0,0,0,0,0,0,0,0,0,0,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,654,        return new RuntimeException() {,0,0,0,1,3,1,0,2,0,2,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,39,public class MathRuntimeException extends RuntimeException {,2,0,0,0,1,1,0,2,0,5,60,1,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,444,        return new IllegalStateException() {,0,0,0,1,3,1,0,2,0,2,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,452,"                return buildMessage(Locale.US, pattern, arguments);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,458,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,387,        return new IllegalArgumentException() {,0,0,0,1,3,1,0,2,0,2,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,395,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,401,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,654,        return new RuntimeException() {,0,0,0,1,3,1,0,2,0,2,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,662,"                return buildMessage(Locale.US, LocalizedFormats.INTERNAL_ERROR, argument);",8,0,0,1,2,1,4,0,0,12,74,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,668,"                return buildMessage(Locale.getDefault(), LocalizedFormats.INTERNAL_ERROR, argument);",4,0,0,2,4,1,8,0,0,12,84,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,576,        return new NullPointerException() {,0,0,0,1,3,1,0,2,0,2,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,584,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,590,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,532,        return new NoSuchElementException() {,0,0,0,1,3,1,0,2,0,2,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,540,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,546,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,488,        return new ConcurrentModificationException() {,0,0,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,496,"                return buildMessage(Locale.US, pattern, arguments);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,502,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,326,        return new EOFException() {,0,0,0,1,3,1,0,2,0,2,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,334,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,340,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,0,0,0,7,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,282,        return new ArrayIndexOutOfBoundsException() {,0,0,0,1,3,1,0,2,0,2,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,290,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,296,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,238,        return new ArithmeticException() {,0,0,0,1,3,1,0,2,0,2,34,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,246,"                return buildMessage(Locale.US, pattern, arguments);",4,0,0,1,2,1,6,0,0,10,51,10,0.0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,67,252,"                return buildMessage(Locale.getDefault(), pattern, arguments);",0,0,0,2,4,1,10,0,0,10,61,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,50,"        return optimize(f, goalType, min, max);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,94,            fx = -fx;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,131,                    d = p / q;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,132,                    u = x + d;,8,1,0,0,0,0,0,0,0,11,10,0,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,135,                    if (((u - a) < t2) || ((b - u) < t2)) {,12,5,0,5,11,0,0,0,0,17,39,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,136,                        d = (x < m) ? tol : -tol;,10,1,0,1,2,0,0,0,0,13,25,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,147,                    fu = -fu;,4,0,0,0,0,0,0,0,0,6,9,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,187,        throw new MaxIterationsExceededException(maximalIterationCount);,2,0,0,1,2,0,0,2,0,4,64,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,73,            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE);,4,0,0,1,2,0,4,0,0,8,93,7,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,79,        checkResultComputed();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,80,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,118,        return maxEvaluations;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,138,"            throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),",2,0,0,1,3,0,0,4,0,6,90,7,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,78,        absoluteAccuracy = accuracy;,4,0,0,0,0,0,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,83,        return absoluteAccuracy;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,88,        absoluteAccuracy = defaultAbsoluteAccuracy;,4,0,0,0,0,0,0,0,0,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,89,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,98,        return maximalIterationCount;,4,0,0,0,0,1,4,0,0,8,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,103,        maximalIterationCount = defaultMaximalIterationCount;,4,0,1,0,0,0,4,0,0,11,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,104,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,108,        relativeAccuracy = accuracy;,4,0,0,0,0,0,4,0,0,9,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,109,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,113,        return relativeAccuracy;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,118,        relativeAccuracy = defaultRelativeAccuracy;,4,0,0,0,0,0,0,0,0,5,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,119,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,45,"        super(LocalizedFormats.MAX_EVALUATIONS_EXCEEDED, maxEvaluations);",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,46,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,47,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,60,"        this(maxEvaluations, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,73,"        super(pattern, arguments);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,74,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,75,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,67,81,        return maxEvaluations;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,38,        super(LocalizedFormats.CONVERGENCE_FAILED);,4,0,0,1,2,0,0,0,0,4,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,39,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,51,"        this(new DummyLocalizable(pattern), arguments);",4,0,0,2,4,0,0,2,0,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,52,    },4,0,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,62,"        super(pattern, arguments);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,63,    },4,1,0,0,1,0,10,2,0,20,1,5,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,70,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,71,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,84,"        this(cause, new DummyLocalizable(pattern), arguments);",10,0,0,2,4,0,6,2,0,18,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,85,    },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,96,"        super(cause, pattern, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/ConvergenceException,67,97,    },4,0,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,57,    public MathException() {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,58,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,2,0,0,0,0,1,0,0,0,3,49,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,59,"        this.arguments = new Object[] { """" };",2,0,0,2,4,0,0,2,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,72,"      this(new DummyLocalizable(pattern), arguments);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,73,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,83,"    public MathException(Localizable pattern, Object ... arguments) {",6,0,0,1,3,1,0,4,0,11,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,84,      this.pattern   = pattern;,6,0,0,0,0,0,0,2,0,9,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,85,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,4,1,0,3,6,0,4,2,0,12,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,96,        super(rootCause);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,97,        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;,6,0,0,0,0,0,0,0,0,7,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,98,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };",4,1,0,4,8,0,4,2,0,13,84,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,99,    },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,114,"        this(rootCause, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,115,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,128,      super(rootCause);,2,0,0,1,2,0,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,129,      this.pattern   = pattern;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,130,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,4,1,0,3,6,0,4,2,0,12,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,131,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,141,        return pattern.getSourceString();,0,0,0,1,2,1,4,0,0,4,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,150,        return pattern;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,159,        return arguments.clone();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,170,        if (pattern != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,171,"            return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);",2,0,0,3,6,1,10,2,0,14,87,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,173,"        return """";",0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,179,        return getMessage(Locale.US);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,185,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,193,        printStackTrace(System.err);,4,0,0,1,2,0,2,0,0,6,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,194,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,203,        synchronized (out) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,204,"            PrintWriter pw = new PrintWriter(out, false);",4,0,0,1,2,0,0,4,0,9,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,205,            printStackTrace(pw);,0,0,0,1,2,0,4,0,0,4,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,207,            pw.flush();,0,0,0,1,2,0,4,0,0,4,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,208,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MathException,67,209,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,47,"        super(LocalizedFormats.EVALUATION_FAILED, argument);",0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,48,        this.argument = new double[] { argument };,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,59,"        super(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));",6,0,0,2,4,0,0,2,0,8,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,60,        this.argument = argument.clone();,6,0,0,1,2,0,10,0,0,17,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,73,"        this(argument, new DummyLocalizable(pattern), argument);",0,0,0,2,4,0,0,0,0,6,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,74,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,86,"        super(pattern, arguments);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,87,        this.argument = new double[] { argument };,4,0,0,2,4,0,0,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,88,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,100,"        this(argument, new DummyLocalizable(pattern), argument);",6,0,0,2,4,0,6,2,0,14,56,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,101,    },6,1,1,0,1,0,0,0,0,15,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,113,"        super(pattern, arguments);",4,0,1,1,2,0,0,0,0,11,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,114,        this.argument = argument.clone();,10,1,0,1,2,0,4,0,0,17,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,115,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,125,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,126,        this.argument = new double[] { argument };,8,0,0,2,4,0,8,2,0,19,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,127,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,137,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,138,        this.argument = argument.clone();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,139,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,153,"        this(cause, argument, new DummyLocalizable(pattern), argument);",8,0,0,2,4,0,0,2,0,10,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,154,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,168,"        super(cause, pattern, arguments);",8,1,0,1,2,0,0,0,0,9,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,169,        this.argument = new double[] { argument };,4,0,0,2,4,0,0,0,0,5,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,170,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,184,"        this(cause, argument, new DummyLocalizable(pattern), argument);",8,0,0,2,4,0,0,2,0,10,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,185,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,199,"        super(cause, pattern, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,200,        this.argument = argument.clone();,2,0,0,1,2,0,4,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,201,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,67,209,        return argument.clone();,0,0,0,1,2,1,4,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,45,"        super(LocalizedFormats.MAX_ITERATIONS_EXCEEDED, maxIterations);",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,46,        this.maxIterations = maxIterations;,8,0,0,0,0,0,0,0,0,10,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,47,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,60,"        this(maxIterations, new DummyLocalizable(pattern), arguments);",6,0,0,2,4,0,0,2,0,8,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,73,"        super(pattern, arguments);",8,1,0,1,2,0,0,0,0,9,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,74,        this.maxIterations = maxIterations;,4,0,0,0,0,0,0,0,0,5,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,75,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,67,81,        return maxIterations;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,46,"        this(new DummyLocalizable(specifier), parts);",0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,47,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,57,"        super(specifier, parts);",4,0,0,1,2,0,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,58,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,65,        super(cause);,0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/OptimizationException,67,66,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,92,        return optimizer.getFunctionValue();,0,0,0,1,2,1,4,0,0,4,36,5,0.0,1,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,97,        return optimizer.getResult();,0,0,0,1,2,1,4,0,0,4,29,5,0.0,1,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,102,        return optimizer.getAbsoluteAccuracy();,10,1,0,1,2,1,4,0,0,16,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,107,        return totalIterations;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,112,        return maxIterations;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,117,        return maxEvaluations;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,122,        return totalEvaluations;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,127,        return optimizer.getRelativeAccuracy();,0,0,0,1,2,1,4,0,0,4,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,132,        optimizer.resetAbsoluteAccuracy();,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,133,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,137,        optimizer.resetMaximalIterationCount();,0,0,0,1,2,0,4,0,0,4,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,138,    },2,1,1,0,1,0,0,0,0,8,1,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,142,        optimizer.resetRelativeAccuracy();,0,0,0,1,2,0,4,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,143,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,147,        optimizer.setAbsoluteAccuracy(accuracy);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,148,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,162,        optimizer.setRelativeAccuracy(accuracy);,0,0,0,1,2,0,6,0,0,6,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,163,    },6,1,0,0,1,0,0,0,0,8,1,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,194,            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);,2,1,0,1,2,0,0,0,0,3,97,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,196,        return optima.clone();,2,0,0,1,2,1,4,0,0,7,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,220,            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);,4,0,0,1,2,0,4,0,0,8,97,7,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,222,        return optimaValues.clone();,0,1,0,1,2,1,8,0,0,9,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,248,            } catch (FunctionEvaluationException fee) {,2,0,0,1,4,0,0,2,0,4,43,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,249,                optima[i]       = Double.NaN;,4,0,1,1,2,0,0,0,0,9,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,250,                optimaValues[i] = Double.NaN;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,251,            } catch (ConvergenceException ce) {,2,0,0,1,4,0,0,2,0,4,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,252,                optima[i]       = Double.NaN;,4,0,1,1,2,0,0,0,0,9,29,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,253,                optimaValues[i] = Double.NaN;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,265,                optima[i] = optima[--lastNaN];,2,0,1,2,4,0,0,0,0,10,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,266,                optima[lastNaN + 1] = Double.NaN;,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,267,                optimaValues[i] = optimaValues[--lastNaN];,2,0,1,2,4,0,0,0,0,10,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,268,                optimaValues[lastNaN + 1] = Double.NaN;,6,1,1,1,2,0,0,0,0,10,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,280,                int i = j - 1;,4,1,0,0,0,0,0,0,0,5,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,281,                double mIX = optima[i];,2,0,1,1,2,0,0,0,0,6,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,282,                double mIY = optimaValues[i];,6,0,1,1,2,0,4,0,0,16,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,283,                while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY))) {,2,1,0,5,11,0,0,0,0,4,71,5,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,284,                    optima[i + 1]       = mIX;,4,1,1,1,2,0,0,0,0,8,26,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,285,                    optimaValues[i + 1] = mIY;,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,286,                    if (i-- != 0) {,2,1,0,1,3,0,0,0,0,4,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,287,                        mIX = optima[i];,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,288,                        mIY = optimaValues[i];,2,0,1,1,2,0,0,0,0,7,22,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,290,                        mIX = Double.NaN;,6,0,0,0,0,0,0,0,0,7,17,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,291,                        mIY = Double.NaN;,6,0,0,0,0,0,0,0,0,7,17,12,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,294,                optima[i + 1]       = currX;,8,2,1,1,2,0,0,0,0,16,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,295,                optimaValues[i + 1] = currY;,4,1,1,1,2,0,0,0,0,8,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,296,                currX = optima[j];,2,0,1,1,2,0,0,0,0,7,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,297,                currY = optimaValues[j];,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,302,            throw new OptimizationException(,0,0,0,0,1,0,0,2,0,2,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,316,"        return optimize(f, goalType, min, max);",0,0,0,1,2,1,10,0,0,10,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,35,        setSeed((long) seed);,2,0,0,2,4,0,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,36,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,41,        final long prime = 4294967291l;,2,0,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,43,        long combined = 0l;,4,2,1,0,0,0,0,0,0,11,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,44,        for (int s : seed) {,4,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,45,            combined = combined * prime + s;,8,2,0,0,0,0,0,0,0,11,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,47,        setSeed(combined);,0,0,0,1,2,0,4,0,0,4,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,305,    private LocalizedFormats(final String sourceFormat) {,0,0,0,1,3,0,0,0,0,4,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,306,        this.sourceFormat = sourceFormat;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,307,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,44,"    ARGUMENT_OUTSIDE_DOMAIN(""Argument {0} outside domain [{1} ; {2}]""),",2,0,0,5,10,0,0,0,0,3,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,45,"    ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1(""array sizes should have difference 1 ({0} != {1} + 1)""),",4,0,0,4,8,0,0,0,0,5,94,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,46,"    ARRAY_SUMS_TO_ZERO(""array sums to zero""),",0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,47,"    ASSYMETRIC_EIGEN_NOT_SUPPORTED(""eigen decomposition of assymetric matrices not supported yet""),",18,25,0,1,2,0,0,0,0,45,95,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,48,"    AT_LEAST_ONE_COLUMN(""matrix must have at least one column""),",2,0,0,1,2,0,0,0,0,3,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,49,"    AT_LEAST_ONE_ROW(""matrix must have at least one row""),",2,0,0,1,2,0,0,0,0,3,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,50,"    BANDWIDTH_OUT_OF_INTERVAL(""bandwidth must be in the interval [0,1], but got {0}""),",6,0,0,3,6,0,0,0,0,9,82,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,51,"    BINOMIAL_INVALID_PARAMETERS_ORDER(""must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}""),",2,0,0,4,8,0,0,0,0,3,107,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,52,"    BINOMIAL_NEGATIVE_PARAMETER(""must have n >= 0 for binomial coefficient (n,k), got n = {0}""),",2,0,0,3,6,0,0,0,0,3,92,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,53,"    CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be cleared""),",2,0,0,1,2,0,0,0,0,3,123,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,54,"    CANNOT_COMPUTE_0TH_ROOT_OF_UNITY(""cannot compute 0-th root of unity, indefinite result""),",2,0,0,1,2,0,0,0,0,3,89,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,55,"    CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA(""cannot compute beta density at 0 when alpha = {0,number}""),",2,0,0,2,4,0,0,0,0,3,108,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,56,"    CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA(""cannot compute beta density at 1 when beta = %.3g""),",2,0,0,1,2,0,0,0,0,3,100,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,57,"    CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N(""cannot compute nth root for null or negative n: {0}""),",2,0,0,2,4,0,0,0,0,3,94,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,58,"    CANNOT_CONVERT_OBJECT_TO_FRACTION(""cannot convert given object to a fraction number: {0}""),",2,0,0,2,4,0,0,0,0,3,91,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,59,"    CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS(""cannot discard a negative number of elements ({0})""),",2,0,0,3,6,0,4,0,0,7,97,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,60,"    CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR(""cannot format a {0} instance as a 3D vector""),",2,0,0,2,4,0,0,0,0,3,83,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,61,"    CANNOT_FORMAT_INSTANCE_AS_COMPLEX(""cannot format a {0} instance as a complex number""),",2,0,0,2,4,0,0,0,0,3,86,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,62,"    CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR(""cannot format a {0} instance as a real vector""),",12,1,0,2,4,0,0,0,0,15,87,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,63,"    CANNOT_FORMAT_OBJECT_TO_FRACTION(""cannot format given object as a fraction number""),",2,0,0,1,2,0,0,0,0,3,84,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,64,"    CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be incremented""),",2,0,0,1,2,0,0,0,0,3,131,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,65,"    CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR(""cannot normalize a zero norm vector""),",0,0,0,1,2,0,0,0,0,3,75,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,66,"    CANNOT_RETRIEVE_AT_NEGATIVE_INDEX(""elements cannot be retrieved from a negative array index {0}""),",4,0,1,2,4,0,0,0,0,8,98,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,67,"    CANNOT_SET_AT_NEGATIVE_INDEX(""cannot set an element at a negative index {0}""),",2,0,0,2,4,0,0,0,0,3,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,68,"    CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY(""cannot substitute an element from an empty array""),",2,0,0,1,2,0,6,0,0,9,95,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,69,"    CANNOT_TRANSFORM_TO_DOUBLE(""Conversion Exception in Transformation: {0}""),",0,0,0,2,4,0,0,0,0,6,74,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,70,"    CARDAN_ANGLES_SINGULARITY(""Cardan angles singularity""),",0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,71,"    CLASS_DOESNT_IMPLEMENT_COMPARABLE(""class ({0}) does not implement Comparable""),",2,0,0,3,6,0,0,0,0,3,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,72,"    CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT(""the closest orthogonal matrix has a negative determinant {0}""),",2,0,0,2,4,0,0,0,0,3,115,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,73,"    COLUMN_INDEX_OUT_OF_RANGE(""column index {0} out of allowed range [{1}, {2}]""),",0,0,0,5,10,0,0,0,0,15,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,74,"    CONTINUED_FRACTION_INFINITY_DIVERGENCE(""Continued fraction convergents diverged to +/- infinity for value {0}""),",2,0,0,2,4,0,0,0,0,3,112,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,75,"    CONTINUED_FRACTION_NAN_DIVERGENCE(""Continued fraction diverged to NaN for value {0}""),",0,0,0,2,4,0,0,0,0,6,86,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,76,"    CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR(""contraction criteria ({0}) smaller than the expansion factor ({1}).  This would lead to a never ending loop of expansion and contraction as a newly expanded internal storage array would immediately satisfy the criteria for contraction.""),",0,0,0,5,10,0,0,0,0,15,290,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,77,"    CONTRACTION_CRITERIA_SMALLER_THAN_ONE(""contraction criteria smaller than one ({0}).  This would lead to a never ending loop of expansion and contraction as an internal storage array length equal to the number of elements would satisfy the contraction criteria.""),",2,0,0,3,6,0,0,0,0,3,263,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,78,"    CONVERGENCE_FAILED(""convergence failed""),",2,0,0,1,2,0,0,0,0,3,41,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,79,"    CUMULATIVE_PROBABILITY_RETURNED_NAN(""Cumulative probability function returned NaN for argument {0} p = {1}""),",3,0,0,3,6,1,0,0,0,5,109,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,80,"    DIFFERENT_ROWS_LENGTHS(""some rows have length {0} while others have length {1}""),",2,0,0,3,6,0,0,0,0,3,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,81,"    DIGEST_NOT_INITIALIZED(""digest not initialized""),",2,0,0,1,2,0,6,0,0,9,49,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,82,"    DIMENSIONS_MISMATCH_2x2(""dimensions mismatch: got {0}x{1} but expected {2}x{3}""),",2,0,0,5,10,0,0,0,0,3,81,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,83,"    DIMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""), /* keep */",2,0,0,3,6,0,8,0,0,11,72,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,84,"    DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN(""Discrete cumulative probability function returned NaN for argument {0}""),",2,0,0,2,4,0,0,0,0,3,119,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,85,"    DISTRIBUTION_NOT_LOADED(""distribution not loaded""),",2,0,0,1,2,0,0,0,0,3,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,86,"    DUPLICATED_ABSCISSA(""Abscissa {0} is duplicated at both indices {1} and {2}""),",2,0,0,4,8,0,0,0,0,3,78,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,87,"    EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY(""empty polynomials coefficients array""), /* keep */",2,0,0,1,2,0,0,0,0,3,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,88,"    EMPTY_SELECTED_COLUMN_INDEX_ARRAY(""empty selected column index array""),",2,0,0,1,2,0,0,0,0,3,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,89,"    EMPTY_SELECTED_ROW_INDEX_ARRAY(""empty selected row index array""),",2,0,0,1,2,0,0,0,0,3,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,90,"    EMPTY_STRING_FOR_IMAGINARY_CHARACTER(""empty string for imaginary character""),",6,0,0,1,2,0,0,0,0,7,77,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,91,"    ENDPOINTS_NOT_AN_INTERVAL(""endpoints do not specify an interval: [{0}, {1}]""),",0,0,0,4,8,0,0,0,0,12,78,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,92,"    EQUAL_VERTICES_IN_SIMPLEX(""equal vertices {0} and {1} in simplex configuration""),",0,0,0,3,6,0,0,0,0,9,81,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,93,"    EULER_ANGLES_SINGULARITY(""Euler angles singularity""),",2,0,0,1,2,0,0,0,0,3,53,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,94,"    EVALUATION_FAILED(""evaluation failed for argument = {0}""),",2,0,0,2,4,0,0,0,0,3,58,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,95,"    EXPANSION_FACTOR_SMALLER_THAN_ONE(""expansion factor smaller than one ({0})""),",2,0,0,3,6,0,0,0,0,3,77,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,96,"    FACTORIAL_NEGATIVE_PARAMETER(""must have n >= 0 for n!, got n = {0}""),",2,0,0,2,4,0,4,0,0,7,69,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,97,"    FAILED_BRACKETING(""number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4}, final a value={5}, final b value={6}, f(a)={7}, f(b)={8}""),",8,2,0,12,24,0,0,0,0,12,175,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,98,"    FAILED_FRACTION_CONVERSION(""Unable to convert {0} to fraction after {1} iterations""),",0,0,0,3,6,0,0,0,0,9,85,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,99,"    FIRST_COLUMNS_NOT_INITIALIZED_YET(""first {0} columns are not initialized yet""),",10,1,0,2,4,0,0,0,0,14,79,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,100,"    FIRST_ELEMENT_NOT_ZERO(""first element is not 0: {0}""),",2,0,0,2,4,0,0,0,0,3,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,101,"    FIRST_ROWS_NOT_INITIALIZED_YET(""first {0} rows are not initialized yet""),",2,0,0,2,4,0,0,0,0,3,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,102,"    FRACTION_CONVERSION_OVERFLOW(""Overflow trying to convert {0} to fraction ({1}/{2})""),",4,0,1,5,10,0,0,2,0,14,85,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,103,"    FUNCTION_NOT_DIFFERENTIABLE(""function is not differentiable""),",2,0,0,1,2,0,0,0,0,3,62,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,104,"    FUNCTION_NOT_POLYNOMIAL(""function is not polynomial""),",2,0,0,1,2,0,0,0,0,3,54,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,105,"    GCD_OVERFLOW_32_BITS(""overflow: gcd({0}, {1}) is 2^31""),",2,0,0,4,8,0,0,0,0,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,106,"    GCD_OVERFLOW_64_BITS(""overflow: gcd({0}, {1}) is 2^63""),",0,0,0,4,8,0,0,0,0,12,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,107,"    HOLE_BETWEEN_MODELS_TIME_RANGES(""{0} wide hole between models time ranges""),",2,0,0,2,4,0,0,0,0,3,76,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,108,"    IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero""),",2,0,0,6,12,0,0,0,0,3,107,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,109,"    INDEX_LARGER_THAN_MAX(""the index specified: {0} is larger than the current maximal index {1}""),",2,0,0,3,6,0,0,0,0,3,95,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,110,"    INDEX_NOT_POSITIVE(""index ({0}) is not positive""),",4,0,1,3,6,1,0,0,0,10,50,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,111,"    INDEX_OUT_OF_RANGE(""index {0} out of allowed range [{1}, {2}]""),",2,0,0,5,10,0,0,0,0,3,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,112,"    INFINITE_ARRAY_ELEMENT(""Array contains an infinite element, {0} at index {1}""),",2,0,0,3,6,0,0,0,0,3,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,113,"    INFINITE_VALUE_CONVERSION(""cannot convert infinite value""),",2,0,0,1,2,0,0,0,0,3,59,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,114,"    INITIAL_CAPACITY_NOT_POSITIVE(""initial capacity ({0}) is not positive""),",0,0,0,3,6,0,0,0,0,9,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,115,"    INITIAL_COLUMN_AFTER_FINAL_COLUMN(""initial column {0} after final column {1}""),",2,0,0,3,6,0,0,0,0,3,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,116,"    INITIAL_ROW_AFTER_FINAL_ROW(""initial row {0} after final row {1}""),",2,0,0,3,6,0,0,0,0,3,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,117,"    INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE(""input data comes from unsupported datasource: {0}, supported sources: {1}, {2}""),",2,0,0,4,8,0,0,0,0,3,121,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,118,"    INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES(""instance of class {0} not comparable to existing values""),",2,0,0,2,4,0,0,0,0,3,103,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,119,"    INSUFFICIENT_DATA_FOR_T_STATISTIC(""insufficient data for t statistic, needs at least 2, got {0}""),",10,1,0,2,4,0,0,0,0,13,98,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,120,"    INSUFFICIENT_DIMENSION(""insufficient dimension {0}, must be at least {1}""),",2,0,0,3,6,0,0,0,0,3,75,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,121,"    INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE(""sample contains {0} observed points, at least {1} are required""),",2,0,0,3,6,0,0,0,0,3,105,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,122,"    INSUFFICIENT_ROWS_AND_COLUMNS(""insufficient data: only {0} rows and {1} columns.""),",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,123,"    INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT(""{0} method needs at least one previous point""),",2,0,0,2,4,0,0,0,0,3,101,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,124,"    INTERNAL_ERROR(""internal error, please fill a bug report at {0}""),",2,0,0,2,4,0,0,0,0,3,66,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,125,"    INVALID_BRACKETING_PARAMETERS(""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}""),",2,0,0,4,8,0,0,0,0,3,112,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,126,"    INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS(""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}""),",2,0,0,4,8,0,0,0,0,3,124,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,127,"    INVALID_ITERATIONS_LIMITS(""invalid iteration limits: min={0}, max={1}""),",2,0,0,3,6,0,0,0,0,3,72,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,128,"    INVALID_MAX_ITERATIONS(""bad value for maximum iterations number: {0}""),",2,0,0,2,4,0,0,0,0,3,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,129,"    INVALID_ROUNDING_METHOD(""invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})""),",6,0,0,26,52,0,0,0,0,8,165,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,130,"    ITERATOR_EXHAUSTED(""iterator exhausted""),",6,0,0,1,2,0,0,0,0,8,41,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,131,"    LCM_OVERFLOW_32_BITS(""overflow: lcm({0}, {1}) is 2^31""),",2,0,0,4,8,0,0,0,0,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,132,"    LCM_OVERFLOW_64_BITS(""overflow: lcm({0}, {1}) is 2^63""),",2,0,0,4,8,0,0,0,0,3,56,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,133,"    LOESS_EXPECTS_AT_LEAST_ONE_POINT(""Loess expects at least 1 point""),",2,0,0,1,2,0,0,0,0,3,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,134,"    LOWER_BOUND_NOT_BELOW_UPPER_BOUND(""lower bound ({0}) must be strictly less than upper bound ({1})""), /* keep */",12,1,0,5,10,0,0,0,0,15,111,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,135,"    LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT(""lower endpoint ({0}) must be less than or equal to upper endpoint ({1})""),",2,0,0,5,10,0,0,0,0,3,111,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,136,"    MAP_MODIFIED_WHILE_ITERATING(""map has been modified while iterating""),",10,3,0,1,2,0,0,0,0,14,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,137,"    MAX_EVALUATIONS_EXCEEDED(""maximal number of evaluations ({0}) exceeded""),",2,0,0,3,6,0,0,0,0,3,73,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,138,"    MAX_ITERATIONS_EXCEEDED(""maximal number of iterations ({0}) exceeded""),",2,0,0,3,6,0,0,0,0,3,71,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,139,"    MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}""),",6,1,0,4,8,0,0,0,0,8,132,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,140,"    MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS(""Loess expects the abscissa and ordinate arrays to be of the same size, but got {0} abscissae and {1} ordinatae""),",2,0,0,3,6,0,0,0,0,3,156,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,141,"    NAN_ELEMENT_AT_INDEX(""element {0} is NaN""),",0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,142,"    NAN_VALUE_CONVERSION(""cannot convert NaN value""),",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,143,"    NEGATIVE_BRIGHTNESS_EXPONENT(""brightness exponent should be positive or null, but got {0}""),",4,0,1,2,4,0,0,0,0,7,92,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,144,"    NEGATIVE_COMPLEX_MODULE(""negative complex module {0}""),",0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,145,"    NEGATIVE_ELEMENT_AT_2D_INDEX(""element ({0}, {1}) is negative: {2}""),",0,0,0,5,10,0,0,0,0,15,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,146,"    NEGATIVE_ELEMENT_AT_INDEX(""element {0} is negative: {1}""),",0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,147,"    NEGATIVE_LENGTH(""length cannot be negative ({0})""),",2,0,0,3,6,0,0,0,0,3,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,148,"    NEGATIVE_NUMBER_OF_SUCCESSES(""number of successes must be non-negative ({0})""),",2,0,0,3,6,0,0,0,0,3,79,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,149,"    NEGATIVE_NUMBER_OF_TRIALS(""number of trials must be non-negative ({0})""),",8,2,0,3,6,0,0,0,0,11,73,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,150,"    NEGATIVE_ROBUSTNESS_ITERATIONS(""the number of robustness iterations must be non-negative, but got {0}""),",2,0,0,2,4,0,0,0,0,3,104,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,151,"    NEGATIVE_START_POSITION(""start position cannot be negative ({0})""),",2,0,0,3,6,0,0,0,0,3,67,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,152,"    NON_CONVERGENT_CONTINUED_FRACTION(""Continued fraction convergents failed to converge for value {0}""),",0,0,0,2,4,0,0,0,0,6,101,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,153,"    NON_POSITIVE_MICROSPHERE_ELEMENTS(""number of microsphere elements must be positive, but got {0}""),",2,0,0,2,4,0,0,0,0,3,98,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,154,"    NON_POSITIVE_POLYNOMIAL_DEGREE(""polynomial degree must be positive: degree={0}""),",8,1,0,2,4,1,10,0,0,21,81,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,155,"    NON_REAL_FINITE_ABSCISSA(""all abscissae must be finite real numbers, but {0}-th is {1}""),",4,0,0,3,6,0,0,0,0,5,89,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,156,"    NON_REAL_FINITE_ORDINATE(""all ordinatae must be finite real numbers, but {0}-th is {1}""),",2,0,0,3,6,0,0,0,0,3,89,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,157,"    NON_REAL_FINITE_WEIGHT(""all weights must be finite real numbers, but {0}-th is {1}""),",8,3,0,3,6,1,4,0,0,17,85,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,158,"    NON_SQUARE_MATRIX(""a {0}x{1} matrix was provided instead of a square matrix""),",8,0,0,3,6,0,4,0,0,14,78,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,159,"    NORMALIZE_INFINITE(""Cannot normalize to an infinite value""),",2,0,0,1,2,0,0,0,0,3,60,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,160,"    NORMALIZE_NAN(""Cannot normalize to NaN""),",0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,161,"    NOT_ADDITION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not addition compatible""),",0,0,0,5,10,0,0,0,0,15,93,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,162,"    NOT_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not decreasing ({2} < {3})""),",4,0,0,6,12,0,0,0,0,5,85,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,163,"    NOT_DECREASING_SEQUENCE(""points {3} and {2} are not decreasing ({1} < {0})""), /* keep */",2,0,0,6,12,0,0,0,0,3,88,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/LocalizedFormats,67,164,"    NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS(""not enough data ({0} rows) for this many predictors ({1} predictors)""),",4,0,0,5,10,0,0,0,0,5,113,0,0.0,0,0
