dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,282,                for (int k = 0; k < rows; ++k) {,8,1,0,1,3,0,0,0,0,10,32,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,283,                    sum += jacobian[k][i] * jacobian[k][j];,2,1,1,4,8,0,0,0,0,16,39,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,285,                jTj[i][j] = sum;,4,0,1,2,4,0,8,2,0,21,16,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,286,                jTj[j][i] = sum;,0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,292,            RealMatrix inverse =,4,1,0,0,0,0,4,2,0,12,20,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,312,        if (rows <= cols) {,4,1,0,1,3,0,0,0,0,5,19,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,44,    protected AbstractRealMatrix() {,2,0,0,1,3,1,0,0,0,3,32,2,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,45,        lu = null;,4,0,0,0,0,1,2,0,0,8,10,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,46,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,77,"        super(rowDimension, columnDimension);",0,0,0,1,2,0,0,0,0,3,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,78,        data = new double[rowDimension][columnDimension];,4,0,1,2,4,0,0,2,0,12,49,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,79,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,95,"        throws IllegalArgumentException, NullPointerException {",4,0,0,0,1,0,0,0,0,4,55,2,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,96,        copyIn(d);,0,0,0,1,2,0,4,0,0,4,10,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,97,    },0,0,0,0,1,0,2,0,0,2,1,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,298,        return copyOut();,2,0,0,1,2,1,2,0,0,6,17,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,316,        if (data == null) {,10,2,0,1,3,1,6,2,0,21,19,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,317,            if (row > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,321,            if (column > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,325,            final int nRows = subMatrix.length;,0,0,0,0,0,0,0,0,0,0,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,326,            if (nRows == 0) {,2,1,0,1,3,0,0,0,0,3,17,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,331,            final int nCols = subMatrix[0].length;,6,0,1,1,2,1,0,0,0,9,38,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,332,            if (nCols == 0) {,2,1,0,1,3,0,0,0,0,3,17,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,336,            data = new double[subMatrix.length][nCols];,6,0,1,2,4,0,0,0,0,9,43,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,337,            for (int i = 0; i < data.length; ++i) {,18,3,0,1,3,0,0,0,0,22,39,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,338,                if (subMatrix[i].length != nCols) {,0,0,0,2,5,0,0,0,0,7,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,342,"                System.arraycopy(subMatrix[i], 0, data[i + row], column, nCols);",10,2,1,3,6,0,8,0,0,26,64,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,344,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,348,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,367,            data[row][column] = value;,0,0,0,2,4,0,0,0,0,6,26,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,371,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,372,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,401,        return (data == null) ? 0 : data.length;,6,1,0,1,2,1,0,0,0,7,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,407,        return ((data == null) || (data[0] == null)) ? 0 : data[0].length;,4,3,1,5,10,1,0,0,0,11,66,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,597,        final int nRows = this.getRowDimension();,2,0,0,1,2,1,2,0,0,5,41,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,598,        final double[][] out = new double[nRows][this.getColumnDimension()];,2,0,1,5,10,1,2,0,0,7,68,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,600,        for (int i = 0; i < nRows; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,601,"            System.arraycopy(data[i], 0, out[i], 0, data[i].length);",2,0,1,4,8,0,4,0,0,18,56,7,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,603,        return out;,4,4,1,0,0,1,0,0,0,17,11,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,617,"        setSubMatrix(in, 0, 0);",0,0,0,1,2,0,0,0,0,3,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,618,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,361,            final int m = pivot.length;,6,0,0,0,0,1,0,0,0,7,27,5,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,362,            if (b.getRowDimension() != m) {,8,1,0,2,5,1,4,0,0,14,31,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,367,            if (singular) {,0,0,0,1,3,0,0,0,0,4,15,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,417,            return solve(MatrixUtils.createRealIdentityMatrix(pivot.length));,4,0,0,2,4,1,6,0,0,10,65,6,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,62,        return (rows * columns <= 4096) ?,10,2,0,1,2,1,0,0,0,13,33,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,107,        return (data.length * data[0].length <= 4096) ?,0,0,0,2,4,1,0,0,0,7,47,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,143,"        final RealMatrix m = createRealMatrix(dimension, dimension);",8,1,0,1,2,1,6,2,0,19,60,3,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,144,        for (int i = 0; i < dimension; ++i) {,8,1,0,1,3,0,0,0,0,10,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,145,"            m.setEntry(i, i, 1.0);",0,0,0,1,2,0,8,0,0,8,22,7,1.0,0,0
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,147,        return m;,6,0,0,0,0,1,0,0,0,7,9,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,152,        return evaluations;,2,1,0,0,0,1,6,0,0,9,19,3,9.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,43,"        super(100, 1E-10);",0,0,0,1,2,0,0,0,0,3,18,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,44,    },2,1,0,0,1,0,10,0,0,14,1,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,37,    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));,0,0,0,2,4,0,0,0,0,6,70,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,57,        clearResult();,0,0,0,1,2,0,2,0,0,2,14,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,58,"        return localMin(f, goalType, min, max, relativeAccuracy, absoluteAccuracy);",0,0,0,1,2,1,0,0,0,4,75,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,88,        double x = a + GOLDEN_SECTION * (b - a);,10,3,0,1,2,0,0,0,0,13,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,89,        double v = x;,4,0,0,0,0,0,0,0,0,4,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,90,        double w = x;,4,0,0,0,0,0,0,0,0,4,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,91,        double e = 0;,2,0,0,0,0,0,0,0,0,2,13,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,92,"        double fx = computeObjectiveValue(f, x);",2,0,0,1,2,0,6,0,0,8,40,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,93,        if (goalType == GoalType.MAXIMIZE) {,6,1,0,1,3,0,0,0,0,7,36,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,96,        double fv = fx;,0,0,0,0,0,0,0,0,0,0,15,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,97,        double fw = fx;,4,0,0,0,0,0,0,0,0,4,15,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,99,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,100,        while (count < maximalIterationCount) {,4,1,0,1,3,0,0,0,0,5,39,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,101,            double m = 0.5 * (a + b);,6,2,0,1,2,0,0,0,0,8,25,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,102,            double tol = eps * Math.abs(x) + t;,6,2,0,1,2,0,6,0,0,14,35,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,103,            double t2 = 2 * tol;,4,1,0,0,0,0,0,0,0,6,20,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,106,            if (Math.abs(x - m) > t2 - 0.5 * (b - a)) {,10,5,0,3,7,0,4,0,0,19,43,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,107,                double p = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,108,                double q = 0;,8,1,0,0,0,0,0,0,0,10,13,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,109,                double r = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,110,                double d = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,111,                double u = 0;,2,0,0,0,0,0,0,0,0,2,13,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,113,                if (Math.abs(e) > tol) { // Fit parabola.,2,1,0,2,5,0,6,0,0,9,41,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,114,                    r = (x - w) * (fx - fv);,10,3,0,2,4,0,0,0,0,14,24,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,115,                    q = (x - v) * (fx - fw);,14,3,0,2,4,0,0,0,0,19,24,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,116,                    p = (x - v) * q - (x - w) * r;,14,5,0,2,4,0,0,0,0,20,30,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,117,                    q = 2 * (q - r);,6,2,0,1,2,0,0,0,0,9,16,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,119,                    if (q > 0) {,2,1,0,1,3,0,0,0,0,3,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,120,                        p = -p;,6,0,0,0,0,0,4,0,0,13,7,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,122,                        q = -q;,4,0,0,0,0,0,0,0,0,6,7,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,125,                    r = e;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,126,                    e = d;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,129,                if (Math.abs(p) < Math.abs(0.5 * q * r) &&,4,4,0,2,5,0,10,0,0,18,42,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,139,                    e = ((x < m) ? b : a) - x;,12,2,0,2,4,0,0,0,0,15,26,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,140,                    d = GOLDEN_SECTION * e;,6,1,0,0,0,0,0,0,0,8,23,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,144,                u = x + ((Math.abs(d) > tol) ? d : ((d > 0) ? tol : -tol));,14,3,0,5,10,0,6,0,0,25,59,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,145,"                double fu = computeObjectiveValue(f, u);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,146,                if (goalType == GoalType.MAXIMIZE) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,151,                if (fu <= fx) {,4,1,0,1,3,0,0,0,0,5,15,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,152,                    if (u < x) {,4,1,0,1,3,0,0,0,0,5,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,153,                        b = x;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,155,                        a = x;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,157,                    v = w;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,158,                    fv = fw;,0,0,0,0,0,0,0,0,0,0,8,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,159,                    w = x;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,160,                    fw = fx;,4,0,0,0,0,0,0,0,0,5,8,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,161,                    x = u;,4,0,0,0,0,0,0,0,0,5,6,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,162,                    fx = fu;,4,0,0,0,0,0,0,0,0,5,8,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,164,                    if (u < x) {,4,1,0,1,3,0,0,0,0,5,12,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,165,                        a = u;,6,0,0,0,0,0,0,0,0,7,6,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,167,                        b = u;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,169,                    if ((fu <= fw) || (w == x)) {,8,3,0,3,7,0,0,0,0,11,29,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,170,                        v = w;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,171,                        fv = fw;,4,0,0,0,0,0,0,0,0,5,8,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,172,                        w = u;,4,0,0,0,0,0,0,0,0,5,6,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,173,                        fw = fu;,4,0,0,0,0,0,0,0,0,5,8,12,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,174,                    } else if ((fu <= fv) || (v == x) || (v == w)) {,12,4,0,4,10,0,0,0,0,16,48,11,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,175,                        v = u;,6,3,1,0,0,1,0,0,0,15,6,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,176,                        fv = fu;,10,1,1,0,0,0,6,0,0,24,8,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,179,            } else { // termination,0,0,0,0,2,0,0,0,0,2,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,180,"                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);",12,2,0,2,4,0,6,0,0,21,64,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,181,                return x;,2,0,0,0,0,1,0,0,0,2,9,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,184,            ++count;,4,0,0,0,0,0,0,4,0,9,8,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,185,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,63,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",8,0,0,1,2,0,0,0,0,9,61,0,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,64,        resultComputed = false;,2,0,0,0,0,0,0,0,0,4,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,65,        setMaxEvaluations(Integer.MAX_VALUE);,6,0,0,1,2,0,6,0,0,13,37,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,66,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,72,        if (!resultComputed) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,75,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,85,        checkResultComputed();,0,0,0,1,2,0,2,0,0,2,22,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,86,        return functionValue;,2,0,0,0,0,1,0,0,0,2,21,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,98,        this.result         = x;,4,1,0,0,0,0,0,0,0,6,24,10,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,99,        this.functionValue  = fx;,4,0,0,0,0,0,0,0,0,5,25,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,100,        this.iterationCount = iterationCount;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,101,        this.resultComputed = true;,0,0,0,0,0,0,0,0,0,0,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,102,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,108,        this.resultComputed = false;,2,0,0,0,0,0,0,0,0,4,28,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,109,    },2,0,0,0,1,0,0,0,0,3,1,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,113,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,114,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,123,        return evaluations;,2,0,0,0,0,1,0,0,0,2,19,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,137,        if (++evaluations > maxEvaluations) {,4,1,0,1,3,0,8,0,0,14,37,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,141,        return f.value(point);,0,0,0,1,2,1,6,0,0,6,22,5,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,61,                                      final double defaultAbsoluteAccuracy) {,2,0,0,0,2,1,0,0,0,3,39,3,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,0,0,0,0,0,0,0,0,0,0,55,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,63,        this.defaultRelativeAccuracy = 1.0e-14;,2,0,0,0,0,0,0,0,0,3,39,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,0,0,0,0,0,0,0,0,0,0,48,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,65,        this.relativeAccuracy = defaultRelativeAccuracy;,4,0,0,0,0,0,0,0,0,5,48,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,4,0,0,0,0,0,0,0,0,5,65,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,67,        this.maximalIterationCount = defaultMaximalIterationCount;,0,0,0,0,0,0,0,0,0,0,58,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,68,        this.iterationCount = 0;,2,0,0,0,0,1,6,0,0,9,24,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,69,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,73,        return iterationCount;,2,0,0,0,0,1,0,0,0,2,22,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,93,        maximalIterationCount = count;,4,0,0,0,0,0,0,0,0,5,30,4,1.0,0,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,94,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,27,public enum GoalType implements Serializable {,2,0,0,0,1,1,0,2,0,5,46,1,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,30,"    MAXIMIZE,",2,0,0,0,0,0,0,0,0,2,9,2,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/GoalType,67,33,    MINIMIZE,2,0,0,0,0,0,0,0,0,2,8,2,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,80,                                             final RandomGenerator generator) {,0,0,0,0,2,0,0,0,0,2,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,81,        this.optimizer        = optimizer;,0,0,0,0,0,0,0,0,0,0,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,82,        this.totalIterations  = 0;,6,1,0,0,0,0,0,0,0,8,26,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,83,        this.starts           = starts;,10,1,0,0,0,0,0,0,0,13,31,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,84,        this.generator        = generator;,10,1,0,0,0,0,0,0,0,13,34,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,85,        this.optima           = null;,8,0,0,0,0,0,0,0,0,10,29,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,86,        setMaximalIterationCount(Integer.MAX_VALUE);,10,0,0,1,2,0,2,0,0,13,44,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,87,        setMaxEvaluations(Integer.MAX_VALUE);,4,0,0,1,2,0,2,0,0,6,37,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,88,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,152,        this.maxIterations = count;,4,0,0,0,0,0,0,0,0,5,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,153,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,157,        this.maxEvaluations = maxEvaluations;,4,0,0,0,0,0,0,0,0,5,37,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,158,    },0,0,0,0,1,0,8,0,0,8,1,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,193,        if (optima == null) {,2,0,0,1,3,0,4,0,0,7,21,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,219,        if (optimaValues == null) {,2,1,0,1,3,0,0,0,0,3,27,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,231,        optima           = new double[starts];,2,0,1,1,2,0,0,0,0,5,38,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,232,        optimaValues     = new double[starts];,2,0,1,1,2,0,0,0,0,5,38,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,233,        totalIterations  = 0;,2,0,0,0,0,0,0,0,0,3,21,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,234,        totalEvaluations = 0;,4,0,0,0,0,3,0,0,0,8,21,1,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,237,        for (int i = 0; i < starts; ++i) {,8,1,0,1,3,0,0,0,0,10,34,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,240,                optimizer.setMaximalIterationCount(maxIterations - totalIterations);,4,1,0,1,2,0,4,0,0,9,68,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,241,                optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);,4,1,0,1,2,0,4,0,0,9,63,9,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,242,                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);,12,4,0,3,6,1,4,0,0,21,82,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,243,                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);,12,4,0,3,6,1,4,0,0,21,82,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,244,"                optima[i]       = optimizer.optimize(f, goalType,",0,0,1,1,3,0,8,0,0,13,49,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,247,                optimaValues[i] = optimizer.getFunctionValue();,0,0,1,2,4,0,4,0,0,9,47,8,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,254,            },4,0,0,0,1,0,0,0,0,5,1,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,256,            totalIterations  += optimizer.getIterationCount();,2,0,0,1,2,0,4,0,0,7,50,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,257,            totalEvaluations += optimizer.getEvaluations();,0,0,0,1,2,0,0,0,0,3,47,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,262,        int lastNaN = optima.length;,0,0,0,0,0,0,0,0,0,0,28,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,263,        for (int i = 0; i < lastNaN; ++i) {,8,1,0,1,3,0,0,0,0,10,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,264,            if (Double.isNaN(optima[i])) {,0,0,1,3,7,0,4,0,0,8,30,7,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,272,        double currX = optima[0];,8,1,1,1,2,0,0,0,0,12,25,3,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,273,        double currY = optimaValues[0];,2,0,1,1,2,0,0,0,0,4,31,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,274,        for (int j = 1; j < lastNaN; ++j) {,8,1,0,1,3,0,0,0,0,10,35,4,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,275,            final double prevY = currY;,4,0,0,0,0,1,0,0,0,5,27,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,276,            currX = optima[j];,2,0,1,1,2,0,0,0,0,7,18,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,277,            currY = optimaValues[j];,2,0,1,1,2,0,0,0,0,7,24,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,278,            if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {,10,3,0,3,7,0,0,0,0,13,56,6,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,301,        if (Double.isNaN(optima[0])) {,0,0,1,3,7,0,4,0,0,6,30,5,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,308,        return optima[0];,0,0,1,1,2,1,0,0,0,2,17,5,1.0,0,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,28,public class JDKRandomGenerator extends Random implements RandomGenerator {,2,0,0,0,1,1,0,4,0,7,75,1,1.0,0,0
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,381,                            tmp = 0.1;,2,1,0,0,0,0,12,0,0,16,10,3,0.28571,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,607,            } else if (fp < 0) {,2,1,0,1,4,0,0,0,0,3,20,7,0.28571,1,1
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,608,"                paru = Math.min(paru, lmPar);",6,0,0,1,2,0,16,0,0,23,29,3,0.28571,1,1
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,161,        TDistribution tDistribution = new TDistributionImpl(nObs - 2);,4,1,0,1,2,0,0,4,0,9,62,4,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,162,        int nVars = correlationMatrix.getColumnDimension();,2,0,0,1,2,0,4,0,0,6,51,5,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,163,        double[][] out = new double[nVars][nVars];,2,0,1,4,8,0,0,0,0,6,42,5,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,164,        for (int i = 0; i < nVars; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,165,            for (int j = 0; j < nVars; j++) {,10,1,0,1,3,0,0,0,0,12,33,3,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,166,                if (i == j) {,4,1,0,1,3,0,0,0,0,5,13,8,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,167,                    out[i][j] = 0d;,2,0,1,2,4,0,0,0,0,9,15,3,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,169,"                    double r = correlationMatrix.getEntry(i, j);",2,0,0,1,2,0,8,0,0,10,44,11,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,170,                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));,10,5,0,4,8,0,8,0,0,23,59,11,0.8,0,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,171,                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));,0,2,1,4,8,0,6,0,0,15,61,10,0.8,1,0
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,175,        return new BlockRealMatrix(out);,8,0,0,1,2,1,0,2,0,10,32,3,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,46,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,47,    },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,128,        double p0 = 1.0;,2,0,0,0,0,0,0,0,0,2,16,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,129,"        double p1 = getA(0, x);",2,0,0,1,2,0,4,0,0,6,23,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,130,        double q0 = 0.0;,2,0,0,0,0,0,0,0,0,2,16,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,131,        double q1 = 1.0;,2,0,0,0,0,0,0,0,0,2,16,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,132,        double c = p1 / q1;,6,1,0,0,0,0,0,0,0,7,19,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,133,        int n = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,134,        double relativeError = Double.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,40,5,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,135,        while (n < maxIterations && relativeError > epsilon) {,8,3,0,1,3,0,0,0,0,11,54,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,136,            ++n;,2,0,0,0,0,0,0,0,0,3,4,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,137,"            double a = getA(n, x);",2,0,0,1,2,0,6,0,0,8,22,7,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,138,"            double b = getB(n, x);",2,0,0,1,2,0,0,0,0,4,22,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,139,            double p2 = a * p1 + b * p0;,10,3,0,0,0,0,0,0,0,13,28,7,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,140,            double q2 = a * q1 + b * q0;,12,3,0,0,0,0,0,0,0,15,28,3,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,141,            boolean infinite = false;,2,0,0,0,0,0,0,0,0,3,25,7,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,142,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0,1,0,3,7,0,12,0,0,13,53,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,175,            if (infinite) {,2,0,0,1,3,0,0,0,0,2,15,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,182,            double r = p2 / q2;,6,1,0,0,0,0,0,0,0,7,19,7,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,184,            if (Double.isNaN(r)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,189,            relativeError = Math.abs(r / c - 1.0);,6,2,0,1,2,0,4,0,0,13,38,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,192,            c = p2 / q2;,6,1,0,0,0,0,0,0,0,8,12,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,193,            p0 = p1;,4,0,0,0,0,0,0,0,0,5,8,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,194,            p1 = p2;,4,0,0,0,0,0,0,0,0,5,8,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,195,            q0 = q1;,4,0,0,0,0,0,0,0,0,5,8,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,196,            q1 = q2;,4,0,0,0,0,0,0,0,0,5,8,6,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,199,        if (n >= maxIterations) {,10,2,0,1,3,1,0,0,0,13,25,3,0.8,0,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,205,        return c;,2,0,0,0,0,1,0,0,0,2,9,4,0.8,0,0
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,128,        if (x == 0.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.8,0,0
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,131,            double t =,2,0,0,0,0,0,0,0,0,2,10,7,0.8,0,0
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,136,            if (x < 0.0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.8,0,0
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,139,                ret = 1.0 - 0.5 * t;,4,2,0,0,0,0,0,0,0,7,20,8,0.8,0,0
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,143,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,41,    private static final double[] LANCZOS =,2,0,0,1,2,3,0,0,0,5,39,2,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,61,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,6,2,0,1,2,3,4,0,0,15,74,2,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,97,        if (Double.isNaN(x) || (x <= 0.0)) {,2,2,0,3,7,0,6,0,0,10,36,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,100,            double g = 607.0 / 128.0;,4,1,0,0,0,0,0,0,0,5,25,3,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,102,            double sum = 0.0;,2,0,0,0,0,0,0,0,0,2,17,7,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,103,            for (int i = LANCZOS.length - 1; i > 0; --i) {,10,2,0,1,3,0,0,0,0,13,46,6,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,104,                sum = sum + (LANCZOS[i] / (x + i));,0,0,0,3,6,0,0,0,0,9,35,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,106,            sum = sum + LANCZOS[0];,4,1,1,1,2,0,0,0,0,8,23,6,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,108,            double tmp = x + g + .5;,6,1,0,0,0,0,0,0,0,7,24,7,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,109,            ret = ((x + .5) * Math.log(tmp)) - tmp +,6,5,0,3,6,0,6,0,0,18,40,6,0.8,0,0
defect4j,math,org/apache/commons/math/special/Gamma,69,113,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,54,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);",28,11,0,1,2,2,10,0,0,50,68,3,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,121,        if (Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b) || (x < 0) ||,2,2,0,4,9,0,18,0,0,22,71,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,125,        } else if (x > (a + 1.0) / (a + b + 2.0)) {,0,0,0,3,8,0,0,0,0,11,43,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,128,            ContinuedFraction fraction = new ContinuedFraction() {,2,0,0,1,3,0,0,4,0,6,54,7,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,151,            ret = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) -,8,7,0,4,9,0,14,0,0,30,60,7,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,156,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,192,        if (Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0) || (b <= 0.0)) {,4,3,0,5,11,0,12,0,0,19,69,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,195,            ret = Gamma.logGamma(a) + Gamma.logGamma(b) -,2,2,0,2,4,0,12,0,0,17,45,6,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,199,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,128,            ContinuedFraction fraction = new ContinuedFraction() {,4,0,1,1,3,0,0,4,0,15,54,3,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,134,                    if (n % 2 == 0) { // even,0,0,0,1,3,0,0,0,0,4,25,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,135,                        m = n / 2.0;,4,1,0,0,0,0,0,0,0,6,12,15,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,136,                        ret = (m * (b - m) * x) /,10,3,0,2,4,0,0,0,0,14,25,15,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,139,                        m = (n - 1.0) / 2.0;,4,2,0,1,2,0,0,0,0,7,20,15,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,140,                        ret = -((a + m) * (a + b + m) * x) /,14,4,0,3,6,0,0,0,0,20,36,15,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,143,                    return ret;,6,4,0,0,0,1,4,0,0,14,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/special/Beta,69,148,                    return 1.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.8,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BisectionSolver,70,66,"        return solve(f, min, max);",0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,180,                loop     = false;,0,0,0,0,0,0,0,0,0,1,17,4,1.0,1,1
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,300,                  loop     = false;,2,0,0,0,0,0,0,0,0,4,17,14,1.0,1,1
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,196,        return (start < mid) && (mid < end);,8,3,0,2,4,1,0,0,0,11,36,4,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,225,"        if (!isSequence(lower, initial, upper)) {",2,0,0,2,5,0,12,2,0,17,41,3,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,230,    },0,0,0,0,1,0,8,0,0,8,1,5,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,102,        clearResult();,2,0,1,1,2,1,0,0,0,5,14,4,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,103,"        verifySequence(min, initial, max);",2,0,0,1,2,0,8,0,0,10,34,3,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,106,        double yInitial = f.value(initial);,2,0,0,1,2,0,6,0,0,8,35,5,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,107,        if (Math.abs(yInitial) <= functionValueAccuracy) {,2,1,0,2,5,0,6,0,0,9,50,4,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,113,        double yMin = f.value(min);,2,0,0,1,2,0,6,0,0,8,27,5,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,114,        if (Math.abs(yMin) <= functionValueAccuracy) {,2,1,0,2,5,0,6,0,0,9,46,4,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,180,            if (Math.abs(yMin) <= functionValueAccuracy) {,2,1,0,2,5,0,6,0,0,9,46,6,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,183,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,2,1,0,2,6,0,6,0,0,9,53,7,0.5,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,196,        return (start < mid) && (mid < end);,0,0,0,2,4,1,0,0,0,7,36,4,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,225,"        if (!isSequence(lower, initial, upper)) {",2,0,0,2,5,0,4,0,0,6,41,5,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,230,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,102,        clearResult();,0,0,0,1,2,0,0,0,0,3,14,4,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,103,"        verifySequence(min, initial, max);",4,1,1,1,2,0,8,0,0,15,34,3,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,106,        double yInitial = f.value(initial);,2,0,0,1,2,0,6,0,0,8,35,5,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,107,        if (Math.abs(yInitial) <= functionValueAccuracy) {,2,1,0,2,5,0,6,0,0,9,50,4,1.0,0,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,113,        double yMin = f.value(min);,2,0,0,1,2,0,6,0,0,8,27,5,1.0,0,0
