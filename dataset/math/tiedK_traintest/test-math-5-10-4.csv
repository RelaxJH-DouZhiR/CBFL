dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,math,org/apache/commons/math/util/FastMath,55,226,                EXP_INT_TABLE_B[750-i] = recip[1];,2,1,1,2,4,0,0,0,0,8,34,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,231,        for (i = 0; i < EXP_FRAC_TABLE_A.length; i++) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,232,"            slowexp(i/1024.0, tmp);",2,1,0,1,2,0,4,0,0,7,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,233,            EXP_FRAC_TABLE_A[i] = tmp[0];,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,234,            EXP_FRAC_TABLE_B[i] = tmp[1];,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,238,        for (i = 0; i < LN_MANT.length; i++) {,10,1,0,1,3,0,0,0,0,13,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,239,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,4,2,0,4,8,0,4,0,0,10,79,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,240,            LN_MANT[i] = slowLog(d);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,244,        buildSinCosTables();,2,2,1,1,2,0,0,0,0,13,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,245,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,263,        if (d > -MathUtils.SAFE_MIN && d < MathUtils.SAFE_MIN){,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,264,            return d; // These are un-normalised - don't try to convert,2,0,0,0,0,1,0,0,0,2,59,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,266,        long xl = Double.doubleToLongBits(d);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,267,        xl = xl & MASK_30BITS; // Drop low order bits,8,1,0,0,0,0,4,0,0,15,45,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,268,        return Double.longBitsToDouble(xl);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,277,        return Math.sqrt(a);,2,0,0,1,2,1,12,0,0,15,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,285,      if (x != x) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,286,          return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,289,      if (x > 20.0) {,4,1,0,1,3,0,0,0,0,6,15,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,290,          return exp(x)/2.0;,0,0,0,1,2,1,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,293,      if (x < -20) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,294,          return exp(-x)/2.0;,2,1,0,1,2,1,2,0,0,6,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,297,      double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,298,      if (x < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,299,          x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,301,"      exp(x, 0.0, hiPrec);",0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,303,      double ya = hiPrec[0] + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,304,      double yb = -(ya - hiPrec[0] - hiPrec[1]);,6,1,1,3,6,0,0,0,0,13,42,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,306,      double temp = ya * HEX_40000000;,12,2,0,0,0,0,0,0,0,15,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,307,      double yaa = ya + temp - temp;,8,2,0,0,0,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,308,      double yab = ya - yaa;,6,1,0,0,0,0,0,0,0,7,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,311,      double recip = 1.0/ya;,14,3,0,0,0,0,0,0,0,18,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,312,      temp = recip * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,313,      double recipa = recip + temp - temp;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,314,      double recipb = recip - recipa;,6,1,0,0,0,0,0,0,0,7,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,317,      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,20,9,0,1,2,0,0,0,0,30,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,319,      recipb += -yb * recip * recip;,8,1,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,322,      temp = ya + recipa;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,323,      yb += -(temp - ya - recipa);,8,1,0,1,2,0,0,0,0,11,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,324,      ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,325,      temp = ya + recipb;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,326,      yb += -(temp - ya - recipb);,8,1,0,1,2,0,0,0,0,11,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,327,      ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,329,      double result = ya + yb;,6,1,0,0,0,0,0,0,0,7,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,330,      result *= 0.5;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,331,      return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,339,      boolean negate = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,340,      if (x != x) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,341,          return x;,12,1,0,0,0,1,0,0,0,14,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,344,      if (x > 20.0) {,0,1,1,1,3,0,0,0,0,10,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,345,          return exp(x)/2.0;,0,1,0,1,2,1,4,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,348,      if (x < -20) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,349,          return -exp(-x)/2.0;,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,352,      if (x == 0) {,4,1,1,1,3,0,0,2,0,10,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,353,          return x;,6,1,0,0,0,1,0,0,0,7,9,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,356,      if (x < 0.0) {,4,2,1,1,3,0,4,0,0,17,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,357,          x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,358,          negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,363,      if (x > 0.25) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,364,          double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,365,"          exp(x, 0.0, hiPrec);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,367,          double ya = hiPrec[0] + hiPrec[1];,2,1,1,2,4,0,0,0,0,7,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,368,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,4,1,1,3,6,0,0,0,0,10,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,370,          double temp = ya * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,371,          double yaa = ya + temp - temp;,10,3,0,0,0,0,8,0,0,22,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,372,          double yab = ya - yaa;,6,1,0,0,0,0,8,0,0,15,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,375,          double recip = 1.0/ya;,6,1,0,0,0,0,0,0,0,8,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,376,          temp = recip * HEX_40000000;,0,0,1,0,0,0,0,0,0,6,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,377,          double recipa = recip + temp - temp;,8,2,0,0,0,0,4,0,0,14,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,378,          double recipb = recip - recipa;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,381,          recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,22,9,1,1,2,0,0,0,0,39,76,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,383,          recipb += -yb * recip * recip;,8,1,0,0,0,0,0,0,0,11,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,385,          recipa = -recipa;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,386,          recipb = -recipb;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,389,          temp = ya + recipa;,6,1,0,0,0,0,0,0,0,8,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,390,          yb += -(temp - ya - recipa);,8,1,0,1,2,0,0,0,0,11,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,391,          ya = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,392,          temp = ya + recipb;,6,1,0,0,0,0,0,0,0,8,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,393,          yb += -(temp - ya - recipb);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,394,          ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,396,          result = ya + yb;,12,2,0,0,0,0,0,0,0,16,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,397,          result *= 0.5;,10,3,0,0,0,0,0,0,0,15,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,398,      },0,0,1,0,1,0,0,0,0,5,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,400,          double hiPrec[] = new double[2];,0,0,1,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,401,"          expm1(x, hiPrec);",0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,403,          double ya = hiPrec[0] + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,404,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,2,1,1,3,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,407,          double denom = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,408,          double denomr = 1.0 / denom;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,409,          double denomb = -(denom - 1.0 - ya) + yb;,8,2,0,1,2,0,0,0,0,11,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,410,          double ratio = ya * denomr;,0,0,1,0,0,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,411,          double temp = ratio * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,412,          double ra = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,413,          double rb = ratio - ra;,10,2,0,0,0,0,0,0,0,12,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,415,          temp = denom * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,416,          double za = denom + temp - temp;,8,2,0,0,0,0,0,0,0,10,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,417,          double zb = denom - za;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,419,          rb += (ya - za*ra - za*rb - zb*ra - zb*rb) * denomr;,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,422,          rb += yb*denomr;                        // numerator,0,0,0,0,0,0,0,0,0,0,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,423,          rb += -ya * denomb * denomr * denomr;   // denominator,10,1,0,0,0,0,6,0,0,19,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,426,          temp = ya + ra;,12,3,1,0,0,1,0,2,0,23,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,427,          yb += -(temp - ya - ra);,14,2,0,1,2,0,0,2,0,20,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,428,          ya = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,429,          temp = ya + rb;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,430,          yb += -(temp - ya - rb);,2,0,0,1,2,0,0,0,0,3,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,431,          ya = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,433,          result = ya + yb;,8,1,0,0,0,0,0,0,0,11,17,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,434,          result *= 0.5;,8,2,1,0,0,1,4,0,0,20,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,437,      if (negate) {,2,0,0,1,3,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,438,          result = -result;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,441,      return result;,2,0,1,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,449,      boolean negate = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,451,      if (x != x) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,452,          return x;,4,1,0,0,0,1,0,0,0,5,9,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,455,      if (x > 20.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,456,          return 1.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,459,      if (x < -20) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,460,          return -1.0;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,463,      if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,464,          return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,467,      if (x < 0.0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,468,          x = -x;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,469,          negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,473,      if (x >= 0.5) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,474,          double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,476,"          exp(x*2.0, 0.0, hiPrec);",0,0,1,1,2,0,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,478,          double ya = hiPrec[0] + hiPrec[1];,2,1,1,2,4,0,0,0,0,7,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,479,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,482,          double na = -1.0 + ya;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,483,          double nb = -(na + 1.0 - ya);,6,2,0,1,2,0,0,0,0,9,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,484,          double temp = na + yb;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,485,          nb += -(temp - na - yb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,486,          na = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,489,          double da = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,490,          double db = -(da - 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,491,          temp = da + yb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,492,          db += -(temp - da - yb);,14,1,0,1,2,1,0,0,0,18,24,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,493,          da = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,495,          temp = da * HEX_40000000;,8,2,0,0,0,0,0,0,0,11,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,496,          double daa = da + temp - temp;,10,0,0,0,0,0,6,0,0,16,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,497,          double dab = da - daa;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,500,          double ratio = na/da;,16,2,0,0,0,0,0,0,0,19,21,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,501,          temp = ratio * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,502,          double ratioa = ratio + temp - temp;,10,2,0,0,0,0,0,0,0,12,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,503,          double ratiob = ratio - ratioa;,4,0,0,0,0,0,0,0,0,4,31,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,506,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,22,9,1,1,2,3,0,0,0,41,72,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,509,          ratiob += nb / da;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,511,          ratiob += -db * na / da / da;,2,0,0,0,0,0,0,0,0,3,29,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,513,          result = ratioa + ratiob;,8,1,0,0,0,0,2,0,0,12,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,514,      },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,516,          double hiPrec[] = new double[2];,8,2,1,2,4,0,0,0,0,12,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,518,"          expm1(x*2.0, hiPrec);",4,1,0,1,2,0,4,0,0,9,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,520,          double ya = hiPrec[0] + hiPrec[1];,4,1,1,2,4,0,0,0,0,10,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,521,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,4,1,1,3,6,0,0,0,0,10,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,524,          double na = ya;,2,0,0,0,0,0,0,0,0,3,15,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,525,          double nb = yb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,528,          double da = 2.0 + ya;,4,1,0,0,0,0,0,0,0,5,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,529,          double db = -(da - 2.0 - ya);,14,3,0,1,2,0,0,0,0,18,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,530,          double temp = da + yb;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,531,          db += -(temp - da - yb);,12,2,1,1,2,0,0,0,0,21,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,532,          da = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,534,          temp = da * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,535,          double daa = da + temp - temp;,8,2,0,0,0,0,0,0,0,10,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,536,          double dab = da - daa;,6,1,0,0,0,0,0,0,0,7,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,539,          double ratio = na/da;,6,1,0,0,0,0,0,0,0,7,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,540,          temp = ratio * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,541,          double ratioa = ratio + temp - temp;,14,4,0,0,0,1,0,0,0,19,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,542,          double ratiob = ratio - ratioa;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,545,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,30,12,1,1,2,0,4,0,0,50,72,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,548,          ratiob += nb / da;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,550,          ratiob += -db * na / da / da;,18,4,0,0,0,0,0,0,0,26,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,552,          result = ratioa + ratiob;,6,1,0,0,0,0,8,0,0,16,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,555,      if (negate) {,8,0,1,1,3,1,0,2,0,14,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,556,          result = -result;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,559,      return result;,4,1,0,0,0,1,0,0,0,5,14,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,567,        return FastMath.log(a + FastMath.sqrt(a * a - 1));,6,3,0,2,4,1,8,0,0,17,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,576,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,577,        if (a < 0) {,6,1,0,1,3,0,0,0,0,7,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,578,            negative = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,579,            a = -a;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,583,        if (a > 0.167) {,8,2,0,1,3,0,0,0,0,11,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,584,            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);,10,3,0,2,4,0,8,0,0,22,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,586,            final double a2 = a * a;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,587,            if (a > 0.097) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,588,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,0,0,0,9,18,0,0,0,0,27,264,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,589,            } else if (a > 0.036) {,0,0,0,1,4,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,590,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,0,0,0,7,14,0,0,0,0,21,196,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,591,            } else if (a > 0.0036) {,4,1,1,1,4,1,0,2,0,12,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,592,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,12,17,0,5,10,0,0,0,0,30,129,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,594,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);,8,9,0,3,6,0,0,0,0,18,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,598,        return negative ? -absAsinh : absAsinh;,6,0,0,0,0,1,0,0,0,7,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,608,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,609,        if (a < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,610,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,611,            a = -a;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,615,        if (a > 0.15) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,616,            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));,0,0,0,3,6,0,0,0,0,9,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,618,            final double a2 = a * a;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,619,            if (a > 0.087) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,620,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));,20,25,0,9,18,0,0,0,0,46,175,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,621,            } else if (a > 0.031) {,8,5,0,1,4,0,0,0,0,13,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,622,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));,0,0,0,7,14,0,0,0,0,21,135,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,623,            } else if (a > 0.003) {,10,2,0,1,4,3,0,0,0,16,23,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,624,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));,26,16,0,5,10,0,0,0,0,43,95,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,626,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));,10,7,0,3,6,0,8,4,0,30,57,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,630,        return negative ? -absAtanh : absAtanh;,0,0,0,0,0,1,0,0,0,1,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,640,        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a); // return +0.0/-0.0/NaN depending on a,16,5,0,3,6,2,0,0,0,24,87,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,649,        return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a); // return +0.0/-0.0/NaN depending on a,6,2,0,3,6,2,0,0,0,9,91,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,657,"        return nextAfter(a, Double.POSITIVE_INFINITY);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,665,"        return nextAfter(a, Float.POSITIVE_INFINITY);",4,0,0,1,2,1,4,0,0,8,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,673,        return Math.random();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,697,"        return exp(x, 0.0, null);",4,3,0,1,2,1,4,0,0,12,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,716,        if (x < 0.0) {,2,2,0,1,3,0,6,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,717,            intVal = (int) -x;,4,0,0,1,2,0,0,0,0,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,719,            if (intVal > 746) {,8,3,1,1,3,1,4,0,0,19,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,720,                if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,721,                    hiPrec[0] = 0.0;,8,1,1,1,2,0,0,0,0,15,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,722,                    hiPrec[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,724,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,727,            if (intVal > 709) {,6,1,0,1,3,0,0,0,0,10,19,0,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,729,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,730,                if (hiPrec != null) {,2,1,0,1,3,0,2,0,0,6,21,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,731,                    hiPrec[0] /= 285040095144011776.0;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,732,                    hiPrec[1] /= 285040095144011776.0;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,734,                return result;,2,0,0,0,0,1,0,0,0,2,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,737,            if (intVal == 709) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,739,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,740,                if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,741,                    hiPrec[0] /= 4.455505956692756620;,6,0,0,1,2,0,0,0,0,7,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,742,                    hiPrec[1] /= 4.455505956692756620;,2,0,1,1,2,0,0,2,0,8,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,744,                return result;,2,0,0,0,0,4,4,2,0,11,14,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,747,            intVal++;,2,0,0,0,0,0,2,0,0,5,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,749,            intPartA = EXP_INT_TABLE_A[750-intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,750,            intPartB = EXP_INT_TABLE_B[750-intVal];,4,1,1,1,2,0,0,0,0,8,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,752,            intVal = -intVal;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,754,            intVal = (int) x;,8,0,0,1,2,0,0,0,0,9,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,756,            if (intVal > 709) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,757,                if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,758,                    hiPrec[0] = Double.POSITIVE_INFINITY;,6,0,1,1,2,0,0,0,0,10,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,759,                    hiPrec[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,761,                return Double.POSITIVE_INFINITY;,6,1,0,0,0,1,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,764,            intPartA = EXP_INT_TABLE_A[750+intVal];,4,1,1,1,2,0,4,0,0,12,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,765,            intPartB = EXP_INT_TABLE_B[750+intVal];,4,1,1,1,2,0,0,0,0,8,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,772,        final int intFrac = (int) ((x - intVal) * 1024.0);,6,2,0,3,6,1,0,0,0,9,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,773,        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];,2,0,1,1,2,1,0,0,0,7,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,774,        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];,2,0,0,1,2,0,0,0,0,2,51,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,780,        final double epsilon = x - (intVal + intFrac / 1024.0);,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,789,        double z = 0.04168701738764507;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,790,        z = z * epsilon + 0.1666666505023083;,6,2,0,0,0,0,0,0,0,9,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,791,        z = z * epsilon + 0.5000000000042687;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,792,        z = z * epsilon + 1.0;,2,0,0,0,0,1,6,0,0,9,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,793,        z = z * epsilon + -3.940510424527919E-20;,0,0,0,0,0,0,0,0,0,0,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,800,        double tempA = intPartA * fracPartA;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,801,        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;,0,0,0,0,0,0,0,0,0,0,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,807,        final double tempC = tempB + tempA;,6,1,0,0,0,1,0,0,0,8,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,809,        if (extra != 0.0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,810,            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;,20,7,0,0,0,0,0,0,0,28,63,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,812,            result = tempC*z + tempB + tempA;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,815,        if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,817,            hiPrec[0] = tempA;,10,1,1,1,2,0,2,0,0,16,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,818,            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;,2,0,1,1,2,1,0,0,0,5,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,821,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,829,"      return expm1(x, null);",0,0,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,838,        if (x != x || x == 0.0) { // NaN or zero,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,839,            return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,842,        if (x <= -1.0 || x >= 1.0) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,845,            double hiPrec[] = new double[2];,2,1,1,2,4,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,846,"            exp(x, 0.0, hiPrec);",0,0,0,1,2,0,6,0,0,6,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,847,            if (x > 0.0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,848,                return -1.0 + hiPrec[0] + hiPrec[1];,0,1,1,2,4,1,0,0,0,6,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,850,                final double ra = -1.0 + hiPrec[0];,2,1,1,1,2,1,0,0,0,7,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,851,                double rb = -(ra + 1.0 - hiPrec[0]);,10,3,1,2,4,0,0,0,0,16,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,852,                rb += hiPrec[1];,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,853,                return ra + rb;,6,1,1,0,0,1,0,0,0,10,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,860,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,862,        if (x < 0.0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,863,            x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,864,            negative = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,868,            int intFrac = (int) (x * 1024.0);,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,869,            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;,16,2,1,1,2,0,4,0,0,26,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,870,            double tempB = EXP_FRAC_TABLE_B[intFrac];,2,0,1,1,2,0,0,0,0,6,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,872,            double temp = tempA + tempB;,4,1,1,0,0,0,0,0,0,10,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,873,            tempB = -(temp - tempA - tempB);,8,1,0,1,2,0,0,0,0,11,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,874,            tempA = temp;,4,0,0,0,0,0,0,0,0,5,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,876,            temp = tempA * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,877,            baseA = tempA + temp - temp;,8,2,0,0,0,0,0,0,0,11,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,878,            baseB = tempB + (tempA - baseA);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,880,            epsilon = x - intFrac/1024.0;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,885,        double zb = 0.008336750013465571;,2,0,1,0,0,0,0,0,0,5,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,886,        zb = zb * epsilon + 0.041666663879186654;,6,2,0,0,0,0,4,0,0,13,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,887,        zb = zb * epsilon + 0.16666666666745392;,6,2,0,0,0,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,888,        zb = zb * epsilon + 0.49999999999999994;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,889,        zb = zb * epsilon;,0,1,0,0,0,0,8,0,0,10,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,890,        zb = zb * epsilon;,6,1,0,0,0,0,0,0,0,8,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,892,        double za = epsilon;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,893,        double temp = za + zb;,2,0,0,0,0,0,0,0,0,3,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,894,        zb = -(temp - za - zb);,8,1,0,1,2,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,895,        za = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,897,        temp = za * HEX_40000000;,8,2,0,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,898,        temp = za + temp - temp;,2,0,0,0,0,0,0,0,0,4,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,899,        zb += za - temp;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,900,        za = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,903,        double ya = za * baseA;,6,1,0,0,0,0,0,0,0,7,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,905,        temp = ya + za * baseB;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,906,        double yb = -(temp - ya - za * baseB);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,907,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,909,        temp = ya + zb * baseA;,8,2,0,0,0,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,910,        yb += -(temp - ya - zb * baseA);,16,2,0,1,2,1,0,0,0,21,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,911,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,913,        temp = ya + zb * baseB;,6,1,0,0,0,0,0,0,0,7,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,914,        yb += -(temp - ya - zb*baseB);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,915,        ya = temp;,12,2,0,0,0,0,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,919,        temp = ya + baseA;,6,1,0,0,0,0,0,0,0,8,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,920,        yb += -(temp - baseA - ya);,8,1,0,1,2,0,0,0,0,11,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,921,        ya = temp;,4,0,0,0,0,0,4,0,0,9,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,923,        temp = ya + za;,6,1,0,0,0,0,0,0,0,7,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,925,        yb += -(temp - ya - za);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,926,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,928,        temp = ya + baseB;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,930,        yb += -(temp - ya - baseB);,8,1,0,1,2,0,12,0,0,23,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,931,        ya = temp;,0,0,1,0,0,0,0,0,0,6,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,933,        temp = ya + zb;,12,2,0,0,0,0,0,0,0,17,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,935,        yb += -(temp - ya - zb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,936,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,938,        if (negative) {,6,0,0,1,3,0,0,0,0,7,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,940,            double denom = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,941,            double denomr = 1.0 / denom;,4,1,0,0,0,0,0,0,0,5,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,942,            double denomb = -(denom - 1.0 - ya) + yb;,2,0,0,1,2,0,0,0,0,2,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,943,            double ratio = ya * denomr;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,944,            temp = ratio * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,945,            final double ra = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,946,            double rb = ratio - ra;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,948,            temp = denom * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,949,            za = denom + temp - temp;,8,2,0,0,0,0,0,0,0,11,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,950,            zb = denom - za;,2,0,0,0,0,0,4,0,0,6,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,952,            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;,28,9,0,1,2,0,0,0,0,39,60,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,963,            rb += yb * denomr;                      // numerator,6,1,0,0,0,0,0,0,0,8,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,964,            rb += -ya * denomb * denomr * denomr;   // denominator,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,967,            ya = -ra;,2,0,0,0,0,2,0,0,0,4,9,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,968,            yb = -rb;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,971,        if (hiPrecOut != null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,972,            hiPrecOut[0] = ya;,6,1,0,1,2,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,973,            hiPrecOut[1] = yb;,8,2,1,1,2,0,0,0,0,14,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,976,        return ya + yb;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,987,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,988,        final double ys[] = new double[2];,4,1,0,2,4,1,0,0,0,6,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,989,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,990,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,991,"        split(x, xs);",0,0,0,1,2,0,6,0,0,6,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,992,        ys[0] = ys[1] = 0.0;,2,0,0,2,4,0,4,0,0,7,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,994,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,995,"            splitMult(xs, ys, as);",0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,996,            ys[0] = as[0];,0,0,1,2,4,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,997,            ys[1] = as[1];,0,0,0,2,4,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,999,"            split(FACT[i], as);",0,0,0,2,4,0,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1000,"            splitReciprocal(as, facts);",8,1,0,1,2,0,0,0,0,11,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1002,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,8,0,0,9,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1003,            ys[0] = as[0];,0,0,0,2,4,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1004,            ys[1] = as[1];,0,0,1,2,4,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1007,        if (result != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1008,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1009,            result[1] = ys[1];,4,0,1,2,4,0,0,2,0,11,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1012,        return ys[0] + ys[1];,0,1,1,2,4,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1021,        if (d < 8e298 && d > -8e298) {,8,5,1,1,3,0,4,0,0,22,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1022,            final double a = d * HEX_40000000;,4,0,0,0,0,0,0,0,0,5,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1023,            split[0] = (d + a) - a;,0,0,0,2,4,0,0,0,0,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1024,            split[1] = d - split[0];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1025,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1026,            final double a = d * 9.31322574615478515625E-10;,4,1,0,0,0,1,0,0,0,6,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1027,            split[0] = (d + a - d) * HEX_40000000;,14,3,1,2,4,0,0,4,0,25,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1028,            split[1] = d - split[0];,0,0,0,2,4,0,6,0,0,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1030,    },8,2,0,0,1,0,0,0,0,11,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1037,        final double c = a[0] + a[1];,2,1,1,2,4,1,0,0,0,8,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1038,        final double d = -(c - a[0] - a[1]);,16,10,1,3,6,1,0,0,0,35,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1040,        if (c < 8e298 && c > -8e298) {,18,19,0,1,3,0,0,0,0,39,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1041,            double z = c * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1042,            a[0] = (c + z) - z;,0,0,0,2,4,0,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1043,            a[1] = c - a[0] + d;,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1044,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1045,            double z = c * 9.31322574615478515625E-10;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1046,            a[0] = (c + z - c) * HEX_40000000;,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1047,            a[1] = c - a[0] + d;,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1049,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1057,        ans[0] = a[0] * b[0];,0,0,0,3,6,0,0,0,0,9,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1058,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,0,0,0,7,14,0,0,0,0,21,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1061,        resplit(ans);,0,0,0,1,2,0,4,0,0,4,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1062,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1070,        ans[0] = a[0] + b[0];,0,0,0,3,6,0,0,0,0,9,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1071,        ans[1] = a[1] + b[1];,0,0,0,3,6,0,0,0,0,9,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1073,        resplit(ans);,0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1074,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1095,        final double b = 1.0/4194304.0;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1096,        final double a = 1.0 - b;,4,1,0,0,0,1,0,0,0,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1098,        if (in[0] == 0.0) {,0,1,1,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1099,            in[0] = in[1];,2,1,1,2,4,0,4,0,0,12,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1100,            in[1] = 0.0;,0,0,1,1,2,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1103,        result[0] = a / in[0];,2,1,1,2,4,0,0,0,0,8,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1104,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,0,0,0,9,18,0,0,0,0,27,60,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1106,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,4,9,0,0,0,0,5,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1107,            result[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1111,        resplit(result);,0,0,0,1,2,0,4,0,0,4,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1113,        for (int i = 0; i < 2; i++) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1115,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,2,6,1,4,8,0,2,0,0,27,58,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1118,            err = err * (result[0] + result[1]);,4,2,1,3,6,0,0,0,0,11,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1120,            result[1] += err;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1122,    },6,1,0,0,1,1,0,0,0,8,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1130,        final double xs[] = new double[2];,12,0,0,2,4,1,0,0,0,13,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1131,        final double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1132,        final double zs[] = new double[2];,2,0,0,2,4,0,0,0,0,3,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1135,"        split(a[0], xs);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1136,"        split(b[0], ys);",6,1,1,2,4,0,4,0,0,14,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1137,"        splitMult(xs, ys, zs);",2,0,0,1,2,0,8,0,0,11,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1139,        result[0] = zs[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1140,        result[1] = zs[1];,0,0,1,2,4,0,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1143,"        split(b[1], ys);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1144,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1146,        double tmp = result[0] + zs[0];,8,3,1,2,4,0,6,0,0,23,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1147,        result[1] = result[1] - (tmp - result[0] - zs[0]);,6,1,0,5,10,0,0,0,0,8,50,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1148,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1149,        tmp = result[0] + zs[1];,2,0,0,2,4,0,0,0,0,2,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1150,        result[1] = result[1] - (tmp - result[0] - zs[1]);,2,2,1,5,10,0,0,0,0,13,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1151,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1154,"        split(a[1], xs);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1155,"        split(b[0], ys);",6,0,1,2,4,0,4,0,0,18,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1156,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1158,        tmp = result[0] + zs[0];,6,1,1,2,4,1,0,0,0,15,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1159,        result[1] = result[1] - (tmp - result[0] - zs[0]);,0,0,0,5,10,0,0,0,0,15,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1160,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1161,        tmp = result[0] + zs[1];,8,2,1,2,4,0,0,0,0,16,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1162,        result[1] = result[1] - (tmp - result[0] - zs[1]);,0,0,0,5,10,0,4,0,0,4,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1163,        result[0] = tmp;,4,2,1,1,2,0,18,0,0,27,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1166,"        split(a[1], xs);",0,0,1,2,4,0,4,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1167,"        split(b[1], ys);",0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1168,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1170,        tmp = result[0] + zs[0];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1171,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,2,1,5,10,0,0,0,0,13,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1172,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1173,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1174,        result[1] = result[1] - (tmp - result[0] - zs[1]);,8,2,1,5,10,0,6,2,0,27,50,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1175,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1176,    },6,1,0,0,1,0,0,0,0,7,1,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1185,        final double xs[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1186,        final double as[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1187,        final double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1196,        xs[0] = 2.718281828459045;,6,1,0,1,2,1,0,0,0,8,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1197,        xs[1] = 1.4456468917292502E-16;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1199,"        split(1.0, ys);",10,3,0,1,2,0,4,0,0,19,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1201,        while (p > 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1202,            if ((p & 1) != 0) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1203,"                quadMult(ys, xs, as);",8,9,0,1,2,0,8,0,0,26,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1204,                ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1207,"            quadMult(xs, xs, as);",0,0,0,1,2,0,8,0,0,8,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1208,            xs[0] = as[0]; xs[1] = as[1];,0,0,0,4,8,0,0,0,0,12,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1210,            p >>= 1;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1213,        if (result != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1214,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1215,            result[1] = ys[1];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1217,            resplit(result);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1220,        return ys[0] + ys[1];,0,1,1,2,4,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1231,"        return log(x, null);",0,0,0,1,2,1,4,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1241,        if (x==0) { // Handle special case of +0/-0,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1242,            return Double.NEGATIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1244,        long bits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1247,        if ((bits & 0x8000000000000000L) != 0 || x != x) {,0,0,0,2,5,0,0,0,0,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1248,            if (x != 0.0) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1249,                if (hiPrec != null) {,18,3,0,1,3,1,0,0,0,24,21,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1250,                    hiPrec[0] = Double.NaN;,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1253,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1258,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1259,            if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1260,                hiPrec[0] = Double.POSITIVE_INFINITY;,4,0,1,1,2,0,0,0,0,7,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1263,            return Double.POSITIVE_INFINITY;,8,1,0,0,0,1,0,0,0,10,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1267,        int exp = (int)(bits >> 52)-1023;,6,0,0,2,4,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1269,        if ((bits & 0x7ff0000000000000L) == 0) {,2,2,0,2,5,0,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1271,            if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1273,                if (hiPrec != null) {,2,0,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1274,                    hiPrec[0] = Double.NEGATIVE_INFINITY;,8,1,0,1,2,0,0,0,0,11,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1277,                return Double.NEGATIVE_INFINITY;,4,0,0,0,0,1,0,0,0,6,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1281,            bits <<= 1;,6,0,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1282,            while ( (bits & 0x0010000000000000L) == 0) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1283,                exp--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1284,                bits <<= 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1289,        if (exp == -1 || exp == 0) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1290,            if (x < 1.01 && x > 0.99 && hiPrec == null) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1295,                double xa = x - 1.0;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1296,                double xb = xa - x + 1.0;,10,3,0,0,0,0,0,0,0,13,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1297,                double tmp = xa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1298,                double aa = xa + tmp - tmp;,8,2,0,0,0,0,0,0,0,10,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1299,                double ab = xa - aa;,6,0,0,0,0,0,10,0,0,17,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1300,                xa = aa;,12,5,0,0,0,0,4,0,0,22,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1301,                xb = ab;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1303,                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1304,                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1306,                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,53,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1308,                    aa = ya * xa;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1309,                    ab = ya * xb + yb * xa + yb * xb;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1311,                    tmp = aa * HEX_40000000;,6,1,0,0,0,0,6,0,0,14,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1312,                    ya = aa + tmp - tmp;,6,1,0,0,0,0,0,0,0,7,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1313,                    yb = aa - ya + ab;,8,2,0,0,0,0,4,0,0,16,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1316,                    aa = ya + LN_QUICK_COEF[i][0];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1317,                    ab = yb + LN_QUICK_COEF[i][1];,4,1,1,2,4,0,0,0,0,10,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1319,                    tmp = aa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1320,                    ya = aa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1321,                    yb = aa - ya + ab;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1325,                aa = ya * xa;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1326,                ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1328,                tmp = aa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1329,                ya = aa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1330,                yb = aa - ya + ab;,8,2,0,0,0,0,0,0,0,11,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1332,                return ya + yb;,6,1,0,0,0,1,0,0,0,7,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1337,        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];,4,2,1,5,10,0,0,0,0,8,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1348,        double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));,0,0,0,3,6,0,0,0,0,9,89,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1350,        double lnza = 0.0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1351,        double lnzb = 0.0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1353,        if (hiPrec != null) {,4,1,0,1,3,0,0,0,0,6,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1355,            double tmp = epsilon * HEX_40000000;,8,1,0,0,0,2,0,4,0,15,36,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1356,            double aa = epsilon + tmp - tmp;,10,4,0,0,0,0,0,0,0,14,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1357,            double ab = epsilon - aa;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1358,            double xa = aa;,6,0,0,0,0,0,6,0,0,12,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1359,            double xb = ab;,8,0,1,0,0,1,0,0,0,12,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1362,            double numer = bits & 0x3ffffffffffL;,12,2,0,0,0,0,0,0,0,15,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1363,            double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);,6,2,0,1,2,0,0,0,0,8,59,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1364,            aa = numer - xa*denom - xb * denom;,12,4,0,0,0,0,0,0,0,17,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1365,            xb += aa / denom;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1368,            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];,6,2,1,2,4,0,0,0,0,11,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1369,            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];,6,1,1,2,4,0,0,0,0,9,57,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1371,            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,55,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1373,                aa = ya * xa;,6,1,0,0,0,0,0,0,0,8,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1374,                ab = ya * xb + yb * xa + yb * xb;,16,5,0,0,0,0,0,0,0,22,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1376,                tmp = aa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1377,                ya = aa + tmp - tmp;,6,0,0,0,0,0,0,4,0,10,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1378,                yb = aa - ya + ab;,8,2,0,0,0,0,0,0,0,11,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1381,                aa = ya + LN_HI_PREC_COEF[i][0];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1382,                ab = yb + LN_HI_PREC_COEF[i][1];,4,2,0,2,4,0,0,0,0,6,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1384,                tmp = aa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1385,                ya = aa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1386,                yb = aa - ya + ab;,4,0,0,0,0,0,0,0,0,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1390,            aa = ya * xa;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1391,            ab = ya * xb + yb * xa + yb * xb;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1399,            lnza = aa + ab;,6,1,0,0,0,0,0,0,0,8,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1400,            lnzb = -(lnza - aa - ab);,8,1,0,1,2,0,0,0,0,11,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1401,        } else {,2,0,0,0,2,0,0,0,0,3,8,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1404,            lnza = -0.16624882440418567;,8,1,1,0,0,0,0,0,0,15,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1405,            lnza = lnza * epsilon + 0.19999954120254515;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1406,            lnza = lnza * epsilon + -0.2499999997677497;,12,3,0,0,0,1,0,0,0,18,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1407,            lnza = lnza * epsilon + 0.3333333333332802;,2,0,0,0,0,0,0,0,0,2,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1408,            lnza = lnza * epsilon + -0.5;,6,2,0,0,0,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1409,            lnza = lnza * epsilon + 1.0;,12,3,1,0,0,1,0,0,0,19,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1410,            lnza = lnza * epsilon;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1427,        double a = LN_2_A*exp;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1428,        double b = 0.0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1429,        double c = a+lnm[0];,4,1,1,1,2,0,0,0,0,7,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1430,        double d = -(c-a-lnm[0]);,8,1,1,2,4,0,0,0,0,12,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1431,        a = c;,8,1,0,0,0,0,0,0,0,11,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1432,        b = b + d;,10,1,0,0,0,0,0,0,0,13,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1434,        c = a + lnza;,10,1,0,0,0,0,0,0,0,13,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1435,        d = -(c - a - lnza);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1436,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1437,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1439,        c = a + LN_2_B*exp;,8,2,0,0,0,0,0,0,0,11,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1440,        d = -(c - a - LN_2_B*exp);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1441,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1442,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1444,        c = a + lnm[1];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1445,        d = -(c - a - lnm[1]);,6,1,1,2,4,0,0,0,0,11,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1446,        a = c;,4,2,0,0,0,0,0,0,0,6,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1447,        b = b + d;,8,2,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1449,        c = a + lnzb;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1450,        d = -(c - a - lnzb);,14,2,0,1,2,0,0,0,0,18,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1451,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1452,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1454,        if (hiPrec != null) {,10,2,0,1,3,0,10,0,0,23,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1455,            hiPrec[0] = a;,0,0,0,1,2,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1456,            hiPrec[1] = b;,2,0,1,1,2,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1459,        return a + b;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1467,        double xpa = 1.0 + x;,4,1,0,0,0,0,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1468,        double xpb = -(xpa - 1.0 - x);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1470,        if (x == -1) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1471,            return x/0.0;   // -Infinity,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1474,        if (x > 0 && 1/x == 0) { // x = Infinity,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1475,            return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1478,        if (x>1e-6 || x<-1e-6) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1479,            double hiPrec[] = new double[2];,2,0,0,2,4,0,0,0,0,2,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1481,"            final double lores = log(xpa, hiPrec);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1482,            if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,0,0,0,0,7,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1483,                return lores;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1488,            double fx1 = xpb/xpa;,6,1,0,0,0,0,0,0,0,7,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1490,            double epsilon = 0.5 * fx1 + 1.0;,6,2,0,0,0,1,0,0,0,9,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1491,            epsilon = epsilon * fx1;,6,1,0,0,0,0,0,0,0,8,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1493,            return epsilon + hiPrec[1] + hiPrec[0];,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1497,        double y = x * 0.333333333333333 - 0.5;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1498,        y = y * x + 1.0;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1499,        y = y * x;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1501,        return y;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1509,        final double hiPrec[] = new double[2];,2,0,0,2,4,1,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1511,"        final double lores = log(x, hiPrec);",8,1,1,1,2,0,0,0,0,12,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1512,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,0,0,0,0,7,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1513,            return lores;,0,0,0,0,0,1,6,0,0,6,13,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1516,        final double tmp = hiPrec[0] * HEX_40000000;,0,0,1,1,2,0,0,0,0,5,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1517,        final double lna = hiPrec[0] + tmp - tmp;,14,5,1,1,2,1,0,0,0,25,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1518,        final double lnb = hiPrec[0] - lna + hiPrec[1];,0,1,1,2,4,0,0,0,0,5,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1520,        final double rln10a = 0.4342944622039795;,2,0,0,0,0,1,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1521,        final double rln10b = 1.9699272335463627E-8;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1523,        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;,0,0,0,0,0,1,0,0,0,1,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1534,        final double lns[] = new double[2];,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1536,        if (y == 0.0) {,2,1,1,1,3,0,0,2,0,9,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1537,            return 1.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1540,        if (x != x) { // X is NaN,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1541,            return x;,6,1,0,0,0,1,0,2,0,9,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1545,        if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1546,            long bits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1547,            if ((bits & 0x8000000000000000L) != 0) {,2,2,0,2,5,0,0,0,0,4,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1549,                long yi = (long) y;,10,1,0,1,2,0,0,0,0,11,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1551,                if (y < 0 && y == yi && (yi & 1) == 1) {,8,6,0,2,5,0,0,0,0,14,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1552,                    return Double.NEGATIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1555,                if (y < 0 && y == yi && (yi & 1) == 1) {,10,6,0,2,5,1,4,4,0,25,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1556,                    return -0.0;,4,1,0,0,0,1,0,0,0,5,12,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1559,                if (y > 0 && y == yi && (yi & 1) == 1) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1560,                    return -0.0;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1564,            if (y < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1565,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1567,            if (y > 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1568,                return 0.0;,2,0,0,0,0,1,4,2,0,8,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1571,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1574,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1575,            if (y != y) { // y is NaN,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1576,                return y;,6,2,0,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1578,            if (y < 0.0) {,2,1,0,1,3,0,4,0,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1579,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1581,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1585,        if (y == Double.POSITIVE_INFINITY) {,10,1,0,1,3,0,0,0,0,11,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1586,            if (x * x == 1.0),0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1587,              return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1589,            if (x * x > 1.0) {,4,2,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1590,                return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1592,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1596,        if (x == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1597,            if (y != y) { // y is NaN,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1598,                return y;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1601,            if (y < 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1602,                long yi = (long) y;,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1603,                if (y == yi && (yi & 1) == 1) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1604,                    return -0.0;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1607,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1610,            if (y > 0)  {,2,1,0,1,3,0,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1611,                long yi = (long) y;,8,0,0,1,2,0,0,0,0,8,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1612,                if (y == yi && (yi & 1) == 1) {,6,4,0,2,5,0,0,0,0,10,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1613,                    return Double.NEGATIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1616,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1620,        if (y == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1622,            if (x * x == 1.0) {,2,0,0,1,3,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1623,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1626,            if (x * x < 1.0) {,4,2,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1627,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1629,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1634,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1636,            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {,8,3,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1637,"                return pow(-x, y);",6,1,1,1,2,1,4,0,0,14,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1640,            if (y == (long) y) {,4,1,0,2,5,0,0,0,0,5,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1642,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);",6,2,0,4,8,1,8,0,0,19,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1644,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1651,        if (y < 8e298 && y > -8e298) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1652,            double tmp1 = y * HEX_40000000;,6,1,0,0,0,0,0,0,0,7,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1653,            ya = y + tmp1 - tmp1;,8,2,0,0,0,0,0,0,0,11,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1654,            yb = y - ya;,8,2,0,0,0,0,10,0,0,21,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1655,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1656,            double tmp1 = y * 9.31322574615478515625E-10;,4,1,0,0,0,0,0,0,0,5,45,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1657,            double tmp2 = tmp1 * 9.31322574615478515625E-10;,2,0,0,0,0,0,0,0,0,2,48,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1658,            ya = (tmp1 + tmp2 - tmp1) * HEX_40000000 * HEX_40000000;,0,0,0,1,2,0,0,0,0,3,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1659,            yb = y - ya;,6,1,0,0,0,0,0,0,0,8,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1663,"        final double lores = log(x, lns);",0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1664,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,2,1,0,2,5,0,6,0,0,9,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1665,            return lores;,2,0,0,0,0,1,4,2,0,8,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1668,        double lna = lns[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1669,        double lnb = lns[1];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1672,        double tmp1 = lna * HEX_40000000;,6,1,0,0,0,0,0,0,0,7,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1673,        double tmp2 = lna + tmp1 - tmp1;,14,3,0,0,0,0,0,0,0,17,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1674,        lnb += lna - tmp2;,18,14,0,0,0,0,0,0,0,34,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1675,        lna = tmp2;,6,0,0,0,0,0,0,0,0,7,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1678,        final double aa = lna * ya;,6,1,0,0,0,1,0,0,0,8,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1679,        final double ab = lna * yb + lnb * ya + lnb * yb;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1681,        lna = aa+ab;,2,0,0,0,0,0,0,2,0,4,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1682,        lnb = -(lna - aa - ab);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1684,        double z = 1.0 / 120.0;,6,1,0,0,0,0,0,0,0,7,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1685,        z = z * lnb + (1.0 / 24.0);,10,4,1,1,2,1,0,0,0,20,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1686,        z = z * lnb + (1.0 / 6.0);,6,3,0,1,2,0,0,0,0,10,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1687,        z = z * lnb + 0.5;,4,0,0,0,0,0,6,0,0,10,18,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1688,        z = z * lnb + 1.0;,6,2,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1689,        z = z * lnb;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1691,"        final double result = exp(lna, z, null);",10,1,0,1,2,0,0,0,0,12,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1693,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1716,        double x[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1717,        double x2[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1718,        double y[] = new double[2];,2,0,0,2,4,0,0,0,0,2,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1719,        double a[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1721,"        split(xi, x);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1724,        x[0] += 1.0;,0,0,1,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1725,        resplit(x);,8,1,0,1,2,0,4,0,0,15,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1726,"        splitReciprocal(x, a);",8,1,0,1,2,0,0,0,0,10,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1727,        x[0] -= 2.0;,0,0,1,1,2,0,0,0,0,6,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1728,        resplit(x);,2,0,0,1,2,1,2,0,0,5,11,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1729,"        splitMult(x, a, y);",2,0,0,1,2,0,8,0,0,12,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1730,        x[0] = y[0];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1731,        x[1] = y[1];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1734,"        splitMult(x, x, x2);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1740,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,4,1,1,3,6,0,0,0,0,10,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1741,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,4,1,1,3,6,0,0,0,0,10,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1743,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1744,"            splitMult(y, x2, a);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1745,            y[0] = a[0];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1746,            y[1] = a[1];,2,0,0,2,4,0,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1747,"            splitAdd(y, LN_SPLIT_COEF[i], a);",0,1,1,2,4,0,6,0,0,18,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1748,            y[0] = a[0];,28,13,1,2,4,0,0,0,0,47,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1749,            y[1] = a[1];,0,0,1,2,4,0,0,0,0,5,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1752,"        splitMult(y, x, a);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1753,        y[0] = a[0];,0,0,0,2,4,0,0,0,0,6,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1754,        y[1] = a[1];,8,1,1,2,4,0,0,0,0,15,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1756,        return y;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1766,        final double xs[] = new double[2];,0,0,0,2,4,0,6,0,0,6,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1767,        final double ys[] = new double[2];,2,0,0,2,4,1,0,2,0,5,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1768,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1769,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1770,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1771,        ys[0] = ys[1] = 0.0;,0,0,1,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1773,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1774,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1775,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1777,            if ( (i & 1) == 0) {,0,0,0,2,5,0,6,0,0,6,20,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1778,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1781,"            split(FACT[i], as);",4,1,0,2,4,1,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1782,"            splitReciprocal(as, facts);",0,0,0,1,2,0,6,0,0,6,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1784,            if ( (i & 2) != 0 ) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1785,                facts[0] = -facts[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1786,                facts[1] = -facts[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1789,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1790,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1793,        if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1794,            result[0] = ys[0];,0,0,1,2,4,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1795,            result[1] = ys[1];,0,0,1,2,4,0,8,0,0,13,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1798,        return ys[0] + ys[1];,0,1,1,2,4,1,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1809,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1810,        final double ys[] = new double[2];,4,0,0,2,4,0,6,0,0,10,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1811,        final double facts[] = new double[2];,0,0,0,2,4,0,0,0,0,6,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1812,        final double as[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1813,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1814,        ys[0] = ys[1] = 0.0;,10,1,1,2,4,0,20,0,0,39,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1816,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1817,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1818,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1820,            if ( (i & 1) != 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1821,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1824,"            split(FACT[i], as);",0,0,0,2,4,0,0,0,0,6,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1825,"            splitReciprocal(as, facts);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1827,            if ( (i & 2) != 0 ) {,6,3,0,2,5,0,0,0,0,10,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1828,                facts[0] = -facts[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1829,                facts[1] = -facts[1];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1832,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1833,            ys[0] = as[0]; ys[1] = as[1];,2,0,1,4,8,1,0,0,0,7,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1836,        if (result != null) {,8,1,0,1,3,0,0,0,0,10,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1837,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1838,            result[1] = ys[1];,0,0,1,2,4,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1841,        return ys[0] + ys[1];,0,0,0,2,4,1,24,0,0,24,21,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1847,        final double result[] = new double[2];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1850,        for (int i = 0; i < 7; i++) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1851,            double x = i / 8.0;,10,3,0,0,0,0,0,0,0,13,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1853,"            slowSin(x, result);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1854,            SINE_TABLE_A[i] = result[0];,0,0,1,2,4,0,0,0,0,7,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1855,            SINE_TABLE_B[i] = result[1];,14,3,1,2,4,0,0,0,0,28,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1857,"            slowCos(x, result);",2,1,0,1,2,0,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1858,            COSINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1859,            COSINE_TABLE_B[i] = result[1];,0,0,1,2,4,0,0,0,0,7,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1863,        for (int i = 7; i < 14; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1864,            double xs[] = new double[2];,2,0,0,2,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1865,            double ys[] = new double[2];,10,1,0,2,4,0,6,0,0,19,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1866,            double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1867,            double bs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1868,            double temps[] = new double[2];,0,0,1,2,4,0,0,0,0,4,31,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1870,            if ( (i & 1) == 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1872,                xs[0] = SINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1873,                xs[1] = SINE_TABLE_B[i/2];,2,1,1,2,4,0,0,0,0,8,26,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1874,                ys[0] = COSINE_TABLE_A[i/2];,6,1,1,2,4,0,0,0,0,12,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1875,                ys[1] = COSINE_TABLE_B[i/2];,2,1,1,2,4,0,0,0,0,8,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1878,"                splitMult(xs, ys, result);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1879,                SINE_TABLE_A[i] = result[0] * 2.0;,4,2,1,2,4,0,0,0,0,14,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1880,                SINE_TABLE_B[i] = result[1] * 2.0;,0,1,1,2,4,0,0,0,0,8,34,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1883,"                splitMult(ys, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1884,"                splitMult(xs, xs, temps);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1885,                temps[0] = -temps[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1886,                temps[1] = -temps[1];,4,1,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1887,"                splitAdd(as, temps, result);",0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1888,                COSINE_TABLE_A[i] = result[0];,20,6,1,2,4,1,0,4,0,40,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1889,                COSINE_TABLE_B[i] = result[1];,0,0,1,2,4,0,0,0,0,7,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1891,                xs[0] = SINE_TABLE_A[i/2];,10,3,1,2,4,1,0,0,0,20,26,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1892,                xs[1] = SINE_TABLE_B[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1893,                ys[0] = COSINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1894,                ys[1] = COSINE_TABLE_B[i/2];,2,1,1,2,4,0,0,0,0,8,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1895,                as[0] = SINE_TABLE_A[i/2+1];,2,2,1,2,4,0,0,0,0,9,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1896,                as[1] = SINE_TABLE_B[i/2+1];,4,2,1,2,4,0,0,0,0,11,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1897,                bs[0] = COSINE_TABLE_A[i/2+1];,2,2,1,2,4,0,0,0,0,9,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1898,                bs[1] = COSINE_TABLE_B[i/2+1];,2,0,0,2,4,0,6,0,0,11,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1901,"                splitMult(xs, bs, temps);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1902,"                splitMult(ys, as, result);",0,0,0,1,2,0,8,0,0,8,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1903,"                splitAdd(result, temps, result);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1904,                SINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1905,                SINE_TABLE_B[i] = result[1];,6,1,0,2,4,0,0,0,0,8,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1908,"                splitMult(ys, bs, result);",0,0,0,1,2,0,8,0,0,8,26,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1909,"                splitMult(xs, as, temps);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1910,                temps[0] = -temps[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1911,                temps[1] = -temps[1];,2,0,0,2,4,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1912,"                splitAdd(result, temps, result);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1913,                COSINE_TABLE_A[i] = result[0];,6,1,0,2,4,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1914,                COSINE_TABLE_B[i] = result[1];,0,0,1,2,4,0,0,0,0,7,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1919,        for (int i = 0; i < 14; i++) {,6,1,0,1,3,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1920,            double xs[] = new double[2];,2,0,0,2,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1921,            double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1922,            double as[] = new double[2];,10,1,0,2,4,0,0,0,0,13,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1924,            as[0] = COSINE_TABLE_A[i];,0,0,1,2,4,0,0,0,0,7,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1925,            as[1] = COSINE_TABLE_B[i];,12,0,0,2,4,0,0,0,0,15,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1927,"            splitReciprocal(as, ys);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1929,            xs[0] = SINE_TABLE_A[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1930,            xs[1] = SINE_TABLE_B[i];,12,4,1,2,4,1,0,0,0,24,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1932,"            splitMult(xs, ys, as);",2,0,1,1,2,0,8,0,0,13,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1934,            TANGENT_TABLE_A[i] = as[0];,4,1,0,2,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1935,            TANGENT_TABLE_B[i] = as[1];,0,0,1,2,4,0,0,0,0,7,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1938,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1948,        double x2 = x*x;,8,1,0,0,0,1,0,0,0,10,16,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1950,        double p = 2.7553817452272217E-6;,2,0,0,0,0,0,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1951,        p = p * x2 + -1.9841269659586505E-4;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1952,        p = p * x2 + 0.008333333333329196;,6,2,0,0,0,0,0,0,0,9,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1953,        p = p * x2 + -0.16666666666666666;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1956,        p = p * x2 * x;,10,1,0,0,0,0,0,0,0,12,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1958,        return p;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1968,        double x2 = x*x;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1970,        double p = 2.479773539153719E-5;,6,1,1,0,0,0,0,0,0,12,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1971,        p = p * x2 + -0.0013888888689039883;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1972,        p = p * x2 + 0.041666666666621166;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1973,        p = p * x2 + -0.49999999999999994;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1974,        p *= x2;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1976,        return p;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1987,        int idx = (int) ((xa * 8.0) + 0.5);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1988,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,4,1,1,1,2,1,0,0,0,10,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1991,        final double sintA = SINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1992,        final double sintB = SINE_TABLE_B[idx];,4,0,1,1,2,1,4,0,0,14,39,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1993,        final double costA = COSINE_TABLE_A[idx];,2,0,1,1,2,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1994,        final double costB = COSINE_TABLE_B[idx];,2,0,1,1,2,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1997,        double sinEpsA = epsilon;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1998,        double sinEpsB = polySine(epsilon);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,1999,        final double cosEpsA = 1.0;,2,1,0,0,0,0,12,0,0,15,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2000,        final double cosEpsB = polyCosine(epsilon);,12,3,0,1,2,2,8,0,0,25,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2003,        final double temp = sinEpsA * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2004,        double temp2 = (sinEpsA + temp) - temp;,8,2,0,1,2,0,0,0,0,10,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2005,        sinEpsB +=  sinEpsA - temp2;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2006,        sinEpsA = temp2;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2032,        double a = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2033,        double b = 0;,2,0,1,0,0,0,0,0,0,7,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2035,        double t = sintA;,6,0,0,0,0,0,0,0,0,7,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2036,        double c = a + t;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2037,        double d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2038,        a = c;,0,0,0,0,0,0,6,0,0,6,6,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2039,        b = b + d;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2041,        t = costA * sinEpsA;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2042,        c = a + t;,12,3,0,0,0,0,0,0,0,17,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2043,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2044,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2045,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2047,        b = b + sintA * cosEpsB + costA * sinEpsB;,12,4,0,0,0,0,0,0,0,17,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2062,        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;,0,0,0,0,0,0,0,0,0,0,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2089,        if (xb != 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2090,            t = ((costA + costB) * (cosEpsA + cosEpsB) -,10,5,0,2,5,0,0,0,0,16,44,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2092,            c = a + t;,6,1,0,0,0,0,0,0,0,8,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2093,            d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2094,            a = c;,8,3,0,0,0,1,4,0,0,16,6,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2095,            b = b + d;,8,2,0,0,0,1,0,0,0,12,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2098,        result = a + b;,8,1,0,0,0,1,18,2,0,31,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2100,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2111,        final double pi2a = 1.5707963267948966;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2112,        final double pi2b = 6.123233995736766E-17;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2114,        final double a = pi2a - xa;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2115,        double b = -(a - pi2a + xa);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2116,        b += pi2b - xb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2118,"        return sinQ(a, b);",0,0,0,1,2,1,6,0,0,6,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2131,        int idx = (int) ((xa * 8.0) + 0.5);,4,2,0,3,6,0,0,0,0,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2132,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,4,1,1,1,2,1,0,0,0,13,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2135,        final double sintA = SINE_TABLE_A[idx];,6,1,1,1,2,1,4,0,0,16,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2136,        final double sintB = SINE_TABLE_B[idx];,8,1,0,1,2,0,0,0,0,10,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2137,        final double costA = COSINE_TABLE_A[idx];,4,0,1,1,2,1,0,0,0,10,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2138,        final double costB = COSINE_TABLE_B[idx];,2,0,1,1,2,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2141,        double sinEpsA = epsilon;,0,0,0,0,0,0,6,0,0,7,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2142,        double sinEpsB = polySine(epsilon);,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2143,        final double cosEpsA = 1.0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2144,        final double cosEpsB = polyCosine(epsilon);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2147,        double temp = sinEpsA * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2148,        double temp2 = (sinEpsA + temp) - temp;,8,2,0,1,2,0,0,0,0,10,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2149,        sinEpsB +=  sinEpsA - temp2;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2150,        sinEpsA = temp2;,2,0,0,0,0,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2175,        double a = 0;,16,5,0,0,0,0,0,0,0,22,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2176,        double b = 0;,8,1,0,0,0,0,6,0,0,17,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2179,        double t = sintA;,8,0,0,0,0,0,0,0,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2180,        double c = a + t;,22,4,0,0,0,0,0,0,0,28,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2181,        double d = -(c - a - t);,8,1,0,1,2,0,0,0,0,10,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2182,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2183,        b = b + d;,8,1,0,0,0,0,6,0,0,16,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2185,        t = costA*sinEpsA;,2,0,1,0,0,1,8,0,0,16,18,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2186,        c = a + t;,6,1,0,0,0,0,0,0,0,7,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2187,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2188,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2189,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2191,        b = b + sintA*cosEpsB + costA*sinEpsB;,12,4,0,0,0,0,0,0,0,17,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2192,        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;,0,0,0,0,0,0,0,0,0,0,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2194,        double sina = a + b;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2195,        double sinb = -(sina - a - b);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2199,        a = b = c = d = 0.0;,8,0,0,0,0,0,0,0,0,12,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2201,        t = costA*cosEpsA;,10,1,1,0,0,1,0,0,0,21,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2202,        c = a + t;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2203,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2204,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2205,        b = b + d;,10,1,0,0,0,0,6,4,0,23,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2207,        t = -sintA*sinEpsA;,2,1,0,0,0,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2208,        c = a + t;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2209,        d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2210,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2211,        b = b + d;,12,1,0,0,0,0,4,0,0,19,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2213,        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2214,        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);,16,6,0,1,2,0,0,0,0,23,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2216,        double cosa = a + b;,6,1,0,0,0,0,0,0,0,7,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2217,        double cosb = -(cosa - a - b);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2219,        if (cotanFlag) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2221,            tmp = cosa; cosa = sina; sina = tmp;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2222,            tmp = cosb; cosb = sinb; sinb = tmp;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2236,        double est = sina/cosa;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2239,        temp = est * HEX_40000000;,10,3,0,0,0,0,8,0,0,22,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2240,        double esta = (est + temp) - temp;,2,0,0,1,2,0,0,0,0,3,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2241,        double estb =  est - esta;,6,1,0,0,0,0,0,0,0,7,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2243,        temp = cosa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2244,        double cosaa = (cosa + temp) - temp;,8,2,0,1,2,0,0,0,0,10,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2245,        double cosab =  cosa - cosaa;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2248,        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding,6,1,0,1,2,0,0,0,0,8,114,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2249,        err += sinb/cosa;                     // Change in est due to sinb,0,0,0,0,0,0,0,0,0,0,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2250,        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb,0,0,0,0,0,0,0,0,0,0,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2252,        if (xb != 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2255,            double xbadj = xb + est*est*xb;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2256,            if (cotanFlag) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2257,                xbadj = -xbadj;,6,1,0,0,0,0,0,0,0,9,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2260,            err += xbadj;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2263,        return est+err;,4,1,0,0,0,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2280,        long inbits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2281,        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,6,1,0,3,6,0,0,0,0,7,53,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2284,        inbits &= 0x000fffffffffffffL;,2,0,0,0,0,0,0,0,0,3,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2285,        inbits |= 0x0010000000000000L;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2288,        exponent++;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2289,        inbits <<= 11;,2,0,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2295,        int idx = exponent >> 6;,8,1,0,0,0,0,0,0,0,11,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2296,        int shift = exponent - (idx << 6);,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2298,        if (shift != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2299,            shpi0 = (idx == 0) ? 0 : (RECIP_2PI[idx-1] << shift);,14,4,1,3,6,0,0,0,0,22,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2300,            shpi0 |= RECIP_2PI[idx] >>> (64-shift);,4,2,1,2,4,0,0,0,0,11,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2301,            shpiA = (RECIP_2PI[idx] << shift) | (RECIP_2PI[idx+1] >>> (64-shift));,10,5,1,5,10,0,0,0,0,23,70,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2302,            shpiB = (RECIP_2PI[idx+1] << shift) | (RECIP_2PI[idx+2] >>> (64-shift));,0,0,0,5,10,0,0,0,0,15,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2304,            shpi0 = (idx == 0) ? 0 : RECIP_2PI[idx-1];,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2305,            shpiA = RECIP_2PI[idx];,2,0,1,1,2,0,0,0,0,7,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2306,            shpiB = RECIP_2PI[idx+1];,4,1,1,1,2,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2310,        long a = inbits >>> 32;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2311,        long b = inbits & 0xffffffffL;,4,1,0,0,0,0,0,0,0,5,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2313,        long c = shpiA >>> 32;,2,0,0,0,0,0,0,0,0,4,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2314,        long d = shpiA & 0xffffffffL;,4,1,0,0,0,0,0,0,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2316,        long ac = a * c;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2317,        long bd = b * d;,6,3,0,0,0,0,8,0,0,17,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2318,        long bc = b * c;,0,0,0,0,0,0,6,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2319,        long ad = a * d;,26,6,0,0,0,0,0,0,0,34,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2321,        long prodB = bd + (ad << 32);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2322,        long prodA = ac + (ad >>> 32);,14,6,0,1,2,0,4,2,0,28,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2324,        boolean bita = (bd & 0x8000000000000000L) != 0;,8,3,0,1,2,1,0,0,0,12,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2325,        boolean bitb = (ad & 0x80000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2326,        boolean bitsum = (prodB & 0x8000000000000000L) != 0;,18,3,0,1,2,0,0,0,0,23,52,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2329,        if ( (bita && bitb) ||,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2331,            prodA++;,4,0,0,0,0,1,0,0,0,6,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2334,        bita = (prodB & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2335,        bitb = (bc & 0x80000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2337,        prodB = prodB + (bc << 32);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2338,        prodA = prodA + (bc >>> 32);,18,19,0,1,2,0,0,0,0,39,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2340,        bitsum = (prodB & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2343,        if ( (bita && bitb) ||,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2345,            prodA++;,10,1,0,0,0,0,0,0,0,14,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2349,        c = shpiB >>> 32;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2350,        d = shpiB & 0xffffffffL;,4,0,0,0,0,1,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2351,        ac = a * c;,20,3,0,0,0,0,0,0,0,26,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2352,        bc = b * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2353,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2356,        ac = ac + ((bc + ad) >>> 32);,8,3,0,2,4,0,0,0,0,12,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2358,        bita = (prodB & 0x8000000000000000L) != 0;,10,3,0,1,2,1,0,0,0,15,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2359,        bitb = (ac & 0x8000000000000000L ) != 0;,2,1,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2360,        prodB += ac;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2361,        bitsum = (prodB & 0x8000000000000000L) != 0;,8,1,0,1,2,0,0,0,0,11,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2363,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2365,            prodA++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2369,        c = shpi0 >>> 32;,8,3,0,0,0,0,0,0,0,12,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2370,        d = shpi0 & 0xffffffffL;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2372,        bd = b * d;,6,1,0,0,0,0,6,0,0,15,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2373,        bc = b * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2374,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2376,        prodA += bd + ((bc + ad) << 32);,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2388,        int intPart = (int)(prodA >>> 62);,4,1,0,2,4,0,0,0,0,5,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2391,        prodA <<= 2;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2392,        prodA |= prodB >>> 62;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2393,        prodB <<= 2;,4,0,0,0,0,0,0,0,0,5,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2396,        a = prodA >>> 32;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2397,        b = prodA & 0xffffffffL;,2,0,0,0,0,0,4,0,0,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2399,        c = PI_O_4_BITS[0] >>> 32;,4,0,0,1,2,0,0,4,0,8,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2400,        d = PI_O_4_BITS[0] & 0xffffffffL;,4,0,0,1,2,0,10,0,0,14,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2402,        ac = a * c;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2403,        bd = b * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2404,        bc = b * c;,18,3,1,0,0,0,0,0,0,27,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2405,        ad = a * d;,4,1,0,0,0,0,0,0,0,5,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2407,        long prod2B = bd + (ad << 32);,18,3,0,1,2,0,0,0,0,23,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2408,        long prod2A = ac + (ad >>> 32);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2410,        bita = (bd & 0x8000000000000000L) != 0;,4,2,0,1,2,0,0,0,0,7,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2411,        bitb = (ad & 0x80000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2412,        bitsum = (prod2B & 0x8000000000000000L) != 0;,10,3,0,1,2,0,0,0,0,15,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2415,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2417,            prod2A++;,6,0,0,0,0,0,0,0,0,7,9,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2420,        bita = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2421,        bitb = (bc & 0x80000000L ) != 0;,4,2,0,1,2,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2423,        prod2B = prod2B + (bc << 32);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2424,        prod2A = prod2A + (bc >>> 32);,14,4,0,1,2,0,0,0,0,19,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2426,        bitsum = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2429,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2431,            prod2A++;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2435,        c = PI_O_4_BITS[1] >>> 32;,2,1,1,1,2,0,0,0,0,6,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2436,        d = PI_O_4_BITS[1] & 0xffffffffL;,10,5,0,1,2,0,0,0,0,16,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2437,        ac = a * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2438,        bc = b * c;,8,1,0,0,0,0,0,0,0,12,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2439,        ad = a * d;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2442,        ac = ac + ((bc + ad) >>> 32);,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2444,        bita = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2445,        bitb = (ac & 0x8000000000000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2446,        prod2B += ac;,4,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2447,        bitsum = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2449,        if ( (bita && bitb) ||,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2451,            prod2A++;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2455,        a = prodB >>> 32;,4,1,0,0,0,0,0,0,0,6,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2456,        b = prodB & 0xffffffffL;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2457,        c = PI_O_4_BITS[0] >>> 32;,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2458,        d = PI_O_4_BITS[0] & 0xffffffffL;,2,1,1,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2459,        ac = a * c;,4,1,1,0,0,0,0,0,0,8,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2460,        bc = b * c;,6,1,0,0,0,0,0,0,0,8,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2461,        ad = a * d;,10,2,0,0,0,0,0,0,0,14,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2464,        ac = ac + ((bc + ad) >>> 32);,14,4,0,2,4,0,0,0,0,20,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2466,        bita = (prod2B & 0x8000000000000000L) != 0;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2467,        bitb = (ac & 0x8000000000000000L ) != 0;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2468,        prod2B += ac;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2469,        bitsum = (prod2B & 0x8000000000000000L) != 0;,12,4,0,1,2,1,0,0,0,18,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2471,        if ( (bita && bitb) ||,2,0,0,1,3,1,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2473,            prod2A++;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2477,        double tmpA = (prod2A >>> 12) / TWO_POWER_52;  // High order 52 bits,6,2,0,1,2,0,0,0,0,8,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2478,        double tmpB = (((prod2A & 0xfffL) << 40) + (prod2B >>> 24)) / TWO_POWER_52 / TWO_POWER_52; // Low bits,10,5,0,4,8,0,0,0,0,15,102,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2480,        double sumA = tmpA + tmpB;,6,1,0,0,0,0,0,0,0,7,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2481,        double sumB = -(sumA - tmpA - tmpB);,6,1,0,1,2,0,0,0,0,8,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2484,        result[0] = intPart;,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2485,        result[1] = sumA * 2.0;,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2486,        result[2] = sumB * 2.0;,14,5,1,1,2,1,6,0,0,30,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2487,    },12,1,0,0,1,1,2,0,0,17,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2495,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2496,        int quadrant = 0;,8,2,0,0,0,0,0,0,0,11,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2498,        double xb = 0.0;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2501,        xa = x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2502,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2503,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2504,            xa = -xa;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2508,        if (xa == 0.0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2509,            long bits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2510,            if (bits < 0) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2511,                return -0.0;,12,5,1,0,0,2,0,0,0,23,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2513,            return 0.0;,12,2,1,0,0,1,0,0,0,20,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2516,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2517,            return Double.NaN;,8,1,0,0,0,1,0,0,0,9,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2521,        if (xa > 3294198.0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2525,            double reduceResults[] = new double[3];,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2526,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2527,            quadrant = ((int) reduceResults[0]) & 3;,2,1,1,3,6,0,0,0,0,6,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2528,            xa = reduceResults[1];,6,0,0,1,2,0,0,2,0,8,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2529,            xb = reduceResults[2];,2,0,1,1,2,0,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2530,        } else if (xa > 1.5707963267948966) {,12,3,1,1,4,0,0,0,0,18,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2535,            int k = (int)(xa * 0.6366197723675814);,6,1,0,2,4,0,0,0,0,8,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2541,                double a = -k * 1.570796251296997;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2542,                remA = xa + a;,6,1,0,0,0,0,0,0,0,8,14,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2543,                remB = -(remA - xa - a);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2545,                a = -k * 7.549789948768648E-8;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2546,                double b = remA;,4,0,0,0,0,0,0,0,0,4,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2547,                remA = a + b;,18,3,0,0,0,0,0,0,0,24,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2548,                remB += -(remA - b - a);,14,3,0,1,2,0,0,0,0,20,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2550,                a = -k * 6.123233995736766E-17;,10,3,0,0,0,0,0,0,0,16,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2551,                b = remA;,4,0,0,0,0,0,0,0,0,5,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2552,                remA = a + b;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2553,                remB += -(remA - b - a);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2555,                if (remA > 0.0),2,1,0,1,2,0,0,0,0,3,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2556,                    break;,6,1,0,0,0,0,0,0,0,8,6,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2561,                k--;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2562,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2563,            quadrant = k & 3;,8,2,0,0,0,0,0,0,0,10,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2564,            xa = remA;,4,0,0,0,0,0,0,0,0,5,10,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2565,            xb = remB;,6,0,1,0,0,0,0,0,0,10,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2568,        if (negative) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2569,            quadrant ^= 2;  // Flip bit 1,2,0,0,0,0,0,0,0,0,3,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2572,        switch (quadrant) {,12,3,0,1,3,0,0,0,0,17,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2574,"                return sinQ(xa, xb);",0,0,0,1,2,1,6,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2576,"                return cosQ(xa, xb);",4,1,1,1,2,1,0,0,0,9,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2578,"                return -sinQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2580,"                return -cosQ(xa, xb);",10,3,0,1,2,1,6,0,0,20,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2582,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2592,        int quadrant = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2595,        double xa = x;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2596,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2597,            xa = -xa;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2600,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2601,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2605,        double xb = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2606,        if (xa > 3294198.0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2610,            double reduceResults[] = new double[3];,2,0,0,2,4,0,0,0,0,2,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2611,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2612,            quadrant = ((int) reduceResults[0]) & 3;,0,0,0,3,6,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2613,            xa = reduceResults[1];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2614,            xb = reduceResults[2];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2615,        } else if (xa > 1.5707963267948966) {,10,3,0,1,4,0,0,0,0,13,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2620,            int k = (int)(xa * 0.6366197723675814);,4,1,0,2,4,0,0,0,0,5,39,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2626,                double a = -k * 1.570796251296997;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2627,                remA = xa + a;,0,0,0,0,0,0,6,0,0,6,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2628,                remB = -(remA - xa - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2630,                a = -k * 7.549789948768648E-8;,6,1,0,0,0,1,8,2,0,20,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2631,                double b = remA;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2632,                remA = a + b;,6,1,0,0,0,0,0,0,0,8,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2633,                remB += -(remA - b - a);,2,1,0,1,2,0,0,0,0,3,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2635,                a = -k * 6.123233995736766E-17;,6,1,0,0,0,0,0,0,0,8,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2636,                b = remA;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2637,                remA = a + b;,4,1,0,0,0,0,0,0,0,6,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2638,                remB += -(remA - b - a);,4,0,0,1,2,0,0,0,0,5,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2640,                if (remA > 0.0),2,1,0,1,2,0,0,0,0,3,15,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2641,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2646,                k--;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2647,            },0,0,1,0,1,0,4,0,0,13,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2648,            quadrant = k & 3;,4,1,0,0,0,0,0,0,0,6,17,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2649,            xa = remA;,18,4,0,0,0,0,4,0,0,28,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2650,            xb = remB;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2656,        switch (quadrant) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2658,"                return cosQ(xa, xb);",0,0,0,1,2,1,6,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2660,"                return -sinQ(xa, xb);",2,1,0,1,2,1,8,0,0,14,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2662,"                return -cosQ(xa, xb);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2664,"                return sinQ(xa, xb);",0,0,0,1,2,1,6,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2666,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2676,        boolean negative = false;,6,1,1,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2677,        int quadrant = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2680,        double xa = x;,10,1,0,0,0,0,0,0,0,12,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2681,        if (x < 0) {,4,1,0,1,3,0,0,0,0,5,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2682,            negative = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2683,            xa = -xa;,6,1,0,0,0,0,0,0,0,9,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2687,        if (xa == 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2688,            long bits = Double.doubleToLongBits(x);,6,0,1,1,2,0,6,0,0,15,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2689,            if (bits < 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2690,                return -0.0;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2692,            return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2695,        if (xa != xa || xa == Double.POSITIVE_INFINITY) {,10,3,0,1,3,0,0,0,0,13,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2696,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2700,        double xb = 0;,6,0,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2701,        if (xa > 3294198.0) {,18,4,0,1,3,0,0,0,0,23,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2705,            double reduceResults[] = new double[3];,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2706,"            reducePayneHanek(xa, reduceResults);",0,0,0,1,2,0,6,0,0,6,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2707,            quadrant = ((int) reduceResults[0]) & 3;,2,1,0,3,6,0,0,0,0,3,40,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2708,            xa = reduceResults[1];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2709,            xb = reduceResults[2];,2,0,1,1,2,0,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2710,        } else if (xa > 1.5707963267948966) {,8,2,0,1,4,0,0,0,0,11,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2715,            int k = (int)(xa * 0.6366197723675814);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2721,                double a = -k * 1.570796251296997;,4,1,0,0,0,0,0,0,0,6,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2722,                remA = xa + a;,8,1,0,0,0,0,0,0,0,12,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2723,                remB = -(remA - xa - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2725,                a = -k * 7.549789948768648E-8;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2726,                double b = remA;,8,3,0,0,0,0,0,0,0,11,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2727,                remA = a + b;,4,0,0,0,0,0,0,0,0,6,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2728,                remB += -(remA - b - a);,8,1,0,1,2,0,0,0,0,11,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2730,                a = -k * 6.123233995736766E-17;,4,1,0,0,0,0,0,0,0,7,31,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2731,                b = remA;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2732,                remA = a + b;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2733,                remB += -(remA - b - a);,14,2,0,1,2,0,0,0,0,18,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2735,                if (remA > 0.0),0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2736,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2741,                k--;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2742,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2743,            quadrant = k & 3;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2744,            xa = remA;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2745,            xb = remB;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2748,        if (xa > 1.5) {,6,0,0,1,3,0,2,0,0,10,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2750,            final double pi2a = 1.5707963267948966;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2751,            final double pi2b = 6.123233995736766E-17;,2,0,1,0,0,0,6,0,0,13,42,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2753,            final double a = pi2a - xa;,10,1,0,0,0,1,0,0,0,12,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2754,            double b = -(a - pi2a + xa);,8,2,0,1,2,0,0,0,0,11,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2755,            b += pi2b - xb;,16,4,0,0,0,0,0,0,0,21,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2757,            xa = a + b;,6,1,0,0,0,0,0,0,0,8,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2758,            xb = -(xa - a - b);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2759,            quadrant ^= 1;,2,0,1,0,0,1,4,2,0,22,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2760,            negative ^= true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2764,        if ((quadrant & 1) == 0) {,12,3,0,2,5,0,0,0,0,17,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2765,"            result = tanQ(xa, xb, false);",12,4,0,1,2,0,6,0,0,25,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2767,"            result = -tanQ(xa, xb, true);",2,0,0,1,2,0,6,0,0,11,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2770,        if (negative) {,2,1,1,1,3,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2771,            result = -result;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2774,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2783,"        return atan(x, 0.0, false);",0,0,0,1,2,1,4,0,0,5,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2793,        boolean negate = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2796,        if (xa == 0.0) { // Matches +/- 0.0; return correct sign,0,0,0,1,3,1,0,0,0,5,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2797,"            return leftPlane ? copySign(Math.PI, xa) : xa;",8,0,0,1,2,1,4,0,0,12,46,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2800,        if (xa < 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2802,            xa = -xa;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2803,            xb = -xb;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2804,            negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2807,        if (xa > 1.633123935319537E16) { // Very large input,8,1,0,1,3,0,0,0,0,11,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2808,            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);,14,4,0,3,6,1,0,0,0,19,61,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2812,        if (xa < 1.0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2813,            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);,8,4,0,4,8,0,0,0,0,14,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2815,            double temp = 1.0/xa;,4,1,0,0,0,0,0,0,0,5,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2816,            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);,0,0,0,4,8,0,0,0,0,12,74,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2818,        double epsA = xa - TANGENT_TABLE_A[idx];,12,5,1,1,2,0,0,0,0,23,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2819,        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);,6,1,0,2,4,1,0,0,0,8,50,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2820,        epsB += xb - TANGENT_TABLE_B[idx];,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2822,        double temp = epsA + epsB;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2823,        epsB = -(temp - epsA - epsB);,8,1,0,1,2,0,0,0,0,11,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2824,        epsA = temp;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2827,        temp = xa * HEX_40000000;,2,0,0,0,0,1,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2828,        double ya = xa + temp - temp;,10,2,1,0,0,0,0,0,0,17,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2829,        double yb = xb + xa - ya;,4,0,1,0,0,0,0,0,0,7,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2830,        xa = ya;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2831,        xb += yb;,8,0,0,0,0,0,0,0,0,9,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2834,        if (idx == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2837,            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,10,5,1,5,10,0,0,0,0,23,87,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2839,            ya = epsA * denom;,14,2,0,0,0,0,0,0,0,18,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2840,            yb = epsB * denom;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2841,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2842,            double temp2 = xa * TANGENT_TABLE_A[idx];,6,2,1,1,2,0,0,0,0,12,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2843,            double za = 1.0 + temp2;,4,1,0,0,0,0,0,0,0,5,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2844,            double zb = -(za - 1.0 - temp2);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2845,            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];,0,0,0,2,4,0,0,0,0,6,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2846,            temp = za + temp2;,8,2,0,0,0,0,0,0,0,11,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2847,            zb += -(temp - za - temp2);,8,1,0,1,2,0,0,0,0,11,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2848,            za = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2850,            zb += xb * TANGENT_TABLE_B[idx];,4,0,0,1,2,0,16,0,0,22,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2851,            ya = epsA / za;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2853,            temp = ya * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2854,            final double yaa = (ya + temp) - temp;,8,2,0,1,2,1,12,0,0,23,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2855,            final double yab = ya - yaa;,8,2,1,0,0,1,0,0,0,16,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2857,            temp = za * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2858,            final double zaa = (za + temp) - temp;,4,2,1,1,2,0,0,0,0,9,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2859,            final double zab = za - zaa;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2862,            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;,22,9,0,1,2,0,0,0,0,32,65,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2864,            yb += -epsA * zb / za / za;,12,4,0,0,0,0,0,0,0,17,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2865,            yb += epsB / za;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2869,        epsA = ya;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2870,        epsB = yb;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2873,        double epsA2 = epsA*epsA;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2884,        yb = 0.07490822288864472;,6,1,1,0,0,0,0,0,0,9,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2885,        yb = yb * epsA2 + -0.09088450866185192;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2886,        yb = yb * epsA2 + 0.11111095942313305;,2,0,0,0,0,1,6,4,0,13,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2887,        yb = yb * epsA2 + -0.1428571423679182;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2888,        yb = yb * epsA2 + 0.19999999999923582;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2889,        yb = yb * epsA2 + -0.33333333333333287;,6,2,0,0,0,0,0,0,0,10,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2890,        yb = yb * epsA2 * epsA;,10,2,0,0,0,0,0,0,0,13,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2893,        ya = epsA;,12,1,0,0,0,0,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2895,        temp = ya + yb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2896,        yb = -(temp - ya - yb);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2897,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2900,        yb += epsB / (1.0 + epsA * epsA);,4,3,0,1,2,0,0,0,0,8,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2906,        double za = EIGHTHS[idx] + ya;,8,1,1,1,2,0,0,0,0,14,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2907,        double zb = -(za - EIGHTHS[idx] - ya);,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2908,        temp = za + yb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2909,        zb += -(temp - za - yb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2910,        za = temp;,8,2,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2912,        result = za + zb;,6,1,0,0,0,0,0,0,0,8,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2913,        resultb = -(result - za - zb);,10,2,1,1,2,0,0,0,0,17,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2915,        if (leftPlane) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2917,            final double pia = 1.5707963267948966*2.0;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2918,            final double pib = 6.123233995736766E-17*2.0;,0,0,0,0,0,0,0,0,0,0,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2920,            za = pia - result;,10,2,1,0,0,1,0,0,0,17,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2921,            zb = -(za - pia + result);,8,2,0,1,2,0,0,0,0,12,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2922,            zb += pib - resultb;,2,0,0,0,0,0,0,0,0,2,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2924,            result = za + zb;,14,3,0,0,0,0,0,0,0,19,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2925,            resultb = -(result - za - zb);,10,2,0,1,2,0,0,0,0,14,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2929,        if (negate ^ leftPlane) {,6,0,0,1,3,1,0,0,0,7,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2930,            result = -result;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2933,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2943,        if (x !=x || y != y) {,4,1,0,1,3,0,4,2,0,11,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2944,            return Double.NaN;,4,2,0,0,0,1,0,0,0,7,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2947,        if (y == 0.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2948,            double result = x*y;,6,1,0,0,0,0,0,0,0,7,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2949,            double invx = 1.0/x;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2950,            double invy = 1.0/y;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2952,            if (invx == 0.0) { // X is infinite,10,3,0,1,3,1,0,0,0,14,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2953,                if (x > 0) {,2,1,0,1,3,0,0,0,0,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2954,                    return y; // return +/- 0.0,6,0,0,0,0,3,10,0,0,18,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2956,"                    return copySign(Math.PI, y);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2960,            if (x < 0.0 || invx < 0.0) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2961,                if (y < 0.0 || invy < 0.0) {,4,3,0,1,3,0,0,0,0,7,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2962,                    return -Math.PI;,4,0,0,0,0,1,0,0,0,5,16,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2964,                    return Math.PI;,3,0,0,0,0,1,0,0,0,3,15,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2967,                return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2973,        if (y == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2974,            if (x == Double.POSITIVE_INFINITY) {,2,0,0,1,3,0,0,0,0,2,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2975,                return Math.PI/4.0;,4,1,0,0,0,1,4,0,0,10,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2978,            if (x == Double.NEGATIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2979,                return Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,6,23,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2982,            return Math.PI/2.0;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2985,        if (y == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2986,            if (x == Double.POSITIVE_INFINITY) {,14,3,0,1,3,1,0,0,0,18,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2987,                return -Math.PI/4.0;,6,1,0,0,0,1,4,0,0,12,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2990,            if (x == Double.NEGATIVE_INFINITY) {,6,1,0,1,3,0,0,0,0,7,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2991,                return -Math.PI*3.0/4.0;,4,2,0,0,0,1,0,0,0,7,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2994,            return -Math.PI/2.0;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2997,        if (x == Double.POSITIVE_INFINITY) {,10,1,0,1,3,0,0,0,0,11,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2998,            if (y > 0.0 || 1/y > 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,2999,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3002,            if (y < 0.0 || 1/y < 0.0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3003,                return -0.0;,12,3,0,0,0,1,0,0,0,17,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3007,        if (x == Double.NEGATIVE_INFINITY),8,2,0,1,2,0,0,0,0,10,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3009,            if (y > 0.0 || 1/y > 0.0) {,10,4,1,1,3,0,0,0,0,18,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3010,                return Math.PI;,6,0,0,0,0,1,6,0,0,12,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3013,            if (y < 0.0 || 1/y < 0.0) {,6,5,0,1,3,0,0,0,0,11,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3014,                return -Math.PI;,6,0,0,0,0,1,4,2,0,14,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3020,        if (x == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3021,            if (y > 0.0 || 1/y > 0.0) {,4,4,0,1,3,0,0,0,0,8,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3022,                return Math.PI/2.0;,4,1,0,0,0,1,0,0,0,5,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3025,            if (y < 0.0 || 1/y < 0.0) {,4,1,1,1,3,0,0,0,0,8,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3026,                return -Math.PI/2.0;,4,1,0,0,0,1,0,0,0,6,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3031,        final double r = y/x;,6,1,0,0,0,1,0,0,0,8,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3032,        if (Double.isInfinite(r)) { // bypass calculations that can create NaN,0,0,0,2,5,0,6,0,0,6,70,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3033,"            return atan(r, 0, x < 0);",2,1,0,1,2,1,4,0,0,7,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3036,        double ra = doubleHighPart(r);,12,2,1,1,2,0,8,0,0,25,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3037,        double rb = r - ra;,6,1,0,0,0,0,0,0,0,7,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3040,        final double xa = doubleHighPart(x);,2,0,0,1,2,1,4,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3041,        final double xb = x - xa;,6,1,0,0,0,1,0,0,0,8,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3043,        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;,4,1,0,1,2,1,0,0,0,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3045,        double temp = ra + rb;,2,0,1,0,0,0,0,0,0,5,22,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3046,        rb = -(temp - ra - rb);,18,2,0,1,2,0,0,0,0,22,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3047,        ra = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3049,        if (ra == 0) { // Fix up the sign so atan works correctly,2,1,0,1,3,0,0,0,0,3,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3050,"            ra = copySign(0.0, y);",4,0,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3054,"        double result = atan(ra, rb, x < 0);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3056,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3064,      if (x != x) {,6,2,0,1,3,0,6,0,0,14,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3065,          return Double.NaN;,8,3,0,0,0,1,4,0,0,16,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3068,      if (x > 1.0 || x < -1.0) {,4,3,0,1,3,0,0,0,0,8,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3069,          return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3072,      if (x == 1.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3073,          return Math.PI/2.0;,10,1,0,0,0,2,0,4,0,16,19,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3076,      if (x == -1.0) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3077,          return -Math.PI/2.0;,4,1,0,0,0,1,0,0,0,6,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3080,      if (x == 0.0) { // Matches +/- 0.0; return correct sign,2,1,0,1,3,1,0,0,0,3,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3081,          return x;,10,2,1,0,0,1,0,0,0,15,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3087,      double temp = x * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3088,      final double xa = x + temp - temp;,8,2,0,0,0,1,0,2,0,13,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3089,      final double xb = x - xa;,4,0,0,0,0,0,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3092,      double ya = xa*xa;,8,2,1,0,0,0,0,0,0,15,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3093,      double yb = xa*xb*2.0 + xb*xb;,6,1,0,0,0,0,0,0,0,7,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3096,      ya = -ya;,4,0,0,0,0,0,0,0,0,6,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3097,      yb = -yb;,2,1,0,0,0,0,0,0,0,4,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3099,      double za = 1.0 + ya;,0,0,1,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3100,      double zb = -(za - 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3102,      temp = za + yb;,10,1,0,0,0,0,0,0,0,14,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3103,      zb += -(temp - za - yb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3104,      za = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3108,      y = sqrt(za);,6,0,0,1,2,0,4,0,0,13,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3109,      temp = y * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3110,      ya = y + temp - temp;,8,2,0,0,0,0,0,0,0,11,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3111,      yb = y - ya;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3114,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,4,0,0,2,4,0,0,0,0,4,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3117,      double dx = zb / (2.0*y);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3120,      double r = x/y;,4,0,1,0,0,2,4,0,0,14,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3121,      temp = r * HEX_40000000;,16,2,0,0,0,0,4,0,0,22,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3122,      double ra = r + temp - temp;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3123,      double rb = r - ra;,12,2,0,0,0,0,0,0,0,15,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3125,      rb += (x - ra*ya - ra*yb - rb*ya - rb*yb) / y;  // Correct for rounding in division,22,9,0,1,2,0,0,0,0,32,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3126,      rb += -x * dx / y / y;  // Add in effect additional bits of sqrt.,10,3,0,0,0,0,0,0,0,15,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3128,      temp = ra + rb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3129,      rb = -(temp - ra - rb);,4,1,0,1,2,0,0,0,0,5,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3130,      ra = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3132,"      return atan(ra, rb, false);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3140,      if (x != x) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3141,          return Double.NaN;,18,3,0,0,0,2,0,0,0,23,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3144,      if (x > 1.0 || x < -1.0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3145,          return Double.NaN;,10,1,0,0,0,1,0,0,0,12,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3148,      if (x == -1.0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3149,          return Math.PI;,4,0,0,0,0,1,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3152,      if (x == 1.0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3153,          return 0.0;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3156,      if (x == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3157,          return Math.PI/2.0;,6,1,0,0,0,1,0,0,0,7,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3163,      double temp = x * HEX_40000000;,6,1,0,0,0,0,0,0,0,7,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3164,      final double xa = x + temp - temp;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3165,      final double xb = x - xa;,6,1,0,0,0,1,0,0,0,8,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3168,      double ya = xa*xa;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3169,      double yb = xa*xb*2.0 + xb*xb;,10,3,0,0,0,0,0,0,0,13,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3172,      ya = -ya;,8,0,0,0,0,1,0,4,0,15,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3173,      yb = -yb;,4,0,0,0,0,0,0,0,0,6,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3175,      double za = 1.0 + ya;,4,1,0,0,0,0,0,0,0,5,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3176,      double zb = -(za - 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3178,      temp = za + yb;,4,1,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3179,      zb += -(temp - za - yb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3180,      za = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3183,      double y = sqrt(za);,2,0,0,1,2,0,4,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3184,      temp = y * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3185,      ya = y + temp - temp;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3186,      yb = y - ya;,6,1,0,0,0,0,0,0,0,8,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3189,      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);,18,8,0,2,4,0,6,0,0,33,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3192,      yb += zb / (2.0*y);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3193,      y = ya+yb;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3194,      yb = -(y - ya - yb);,8,1,0,1,2,0,8,0,0,19,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3197,      double r = y/x;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3200,      if (Double.isInfinite(r)) { // x is effectively zero,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3201,          return Math.PI/2; // so return the appropriate value,4,1,0,0,0,2,0,0,0,5,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3204,      double ra = doubleHighPart(r);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3205,      double rb = r - ra;,0,0,0,0,0,0,4,0,0,4,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3207,      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division,0,0,0,1,2,0,0,0,0,3,83,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3208,      rb += yb / x;  // Add in effect additional bits of sqrt.,6,1,0,0,0,0,0,0,0,8,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3210,      temp = ra + rb;,16,3,0,0,0,1,0,0,0,21,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3211,      rb = -(temp - ra - rb);,4,0,0,1,2,0,0,0,0,4,23,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3212,      ra = temp;,12,1,0,0,0,0,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3214,"      return atan(ra, rb, x<0);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3223,      long inbits = Double.doubleToLongBits(x);,8,1,0,1,2,0,6,0,0,16,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3224,      int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,0,0,0,3,6,0,0,0,0,9,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3225,      boolean subnormal = false;,6,2,0,0,0,0,0,0,0,10,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3227,      if (exponent == -1023) {,2,1,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3228,          if (x == 0) {,8,2,0,1,3,0,0,0,0,10,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3229,              return x;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3233,          subnormal = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3234,          x *= 1.8014398509481984E16;  // 2^54,2,0,0,0,0,0,0,0,0,3,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3235,          inbits = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3236,          exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,4,3,0,3,6,0,0,0,0,8,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3239,      if (exponent == 1024) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3241,          return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3245,      int exp3 = exponent / 3;,14,3,0,0,0,1,0,0,0,18,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3248,      double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) |,4,2,0,1,3,0,4,0,0,10,68,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3252,      final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);,0,0,0,2,4,0,0,0,0,6,98,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3255,      double est = -0.010714690733195933;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3256,      est = est * mant + 0.0875862700108075;,6,2,0,0,0,0,0,0,0,9,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3257,      est = est * mant + -0.3058015757857271;,8,4,0,0,0,0,12,0,0,26,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3258,      est = est * mant + 0.7249995199969751;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3259,      est = est * mant + 0.5039018405998233;,6,2,0,0,0,0,0,0,0,9,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3261,      est *= CBRTTWO[exponent % 3 + 2];,4,2,1,1,2,0,0,0,0,9,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3266,      final double xs = x / (p2*p2*p2);,2,0,0,1,2,0,0,0,0,2,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3267,      est += (xs - est*est*est) / (3*est*est);,14,4,0,2,4,0,0,0,0,19,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3268,      est += (xs - est*est*est) / (3*est*est);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3271,      double temp = est * HEX_40000000;,14,2,0,0,0,0,0,0,0,17,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3272,      double ya = est + temp - temp;,8,2,0,0,0,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3273,      double yb = est - ya;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3275,      double za = ya * ya;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3276,      double zb = ya * yb * 2.0 + yb * yb;,10,3,0,0,0,0,0,0,0,13,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3277,      temp = za * HEX_40000000;,10,3,0,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3278,      double temp2 = za + temp - temp;,8,2,0,0,0,0,0,0,0,10,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3279,      zb += za - temp2;,6,1,0,0,0,0,0,0,0,8,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3280,      za = temp2;,4,0,0,0,0,0,0,0,0,5,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3282,      zb = za * yb + ya * zb + zb * yb;,28,7,0,0,0,0,0,0,0,39,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3283,      za = za * ya;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3285,      double na = xs - za;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3286,      double nb = -(na - xs + za);,16,3,0,1,2,0,0,0,0,20,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3287,      nb -= zb;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3289,      est += (na+nb)/(3*est*est);,10,3,0,2,4,0,0,0,0,14,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3292,      est *= p2;,14,4,0,0,0,0,0,0,0,20,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3294,      if (subnormal) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3295,          est *= 3.814697265625E-6;  // 2^-18,2,0,0,0,0,0,0,0,0,3,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3298,      return est;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3308,        if (Double.isInfinite(x) || x == 0.0) { // Matches +/- 0.0; return correct sign,0,0,0,2,5,1,0,0,0,8,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3309,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3313,        final double facta = 0.01745329052209854;,6,0,0,0,0,1,0,0,0,9,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3314,        final double factb = 1.997844754509471E-9;,2,0,0,0,0,1,10,0,0,14,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3316,        double xa = doubleHighPart(x);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3317,        double xb = x - xa;,8,1,0,0,0,0,6,0,0,16,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3319,        double result = xb * factb + xb * facta + xa * factb + xa * facta;,0,0,0,0,0,0,0,0,0,0,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3320,        if (result == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3321,            result = result * x; // ensure correct sign if calculation underflows,8,1,1,0,0,1,6,4,0,23,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3323,        return result;,8,0,0,0,0,2,0,2,0,11,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3333,        if (Double.isInfinite(x) || x == 0.0) { // Matches +/- 0.0; return correct sign,14,5,1,2,5,1,6,0,0,29,79,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3334,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3338,        final double facta = 57.2957763671875;,2,1,0,0,0,0,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3339,        final double factb = 3.145894820876798E-6;,2,0,0,0,0,1,0,0,0,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3341,        double xa = doubleHighPart(x);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3342,        double xb = x - xa;,8,1,0,0,0,0,6,0,0,15,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3344,        return xb * factb + xb * facta + xa * factb + xa * facta;,0,0,0,0,0,1,0,0,0,1,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3353,        return (x < 0) ? -x : x;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3362,        return (x < 0l) ? -x : x;,18,3,0,1,2,2,0,0,0,24,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3371,        return (x < 0.0f) ? -x : (x == 0.0f) ? 0.0f : x; // -0.0 => +0.0,0,0,0,2,4,1,0,0,0,7,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3380,        return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0,6,0,0,2,4,1,0,0,0,7,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3389,        if (Double.isInfinite(x)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3390,            return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3392,        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));,2,2,0,3,6,1,12,0,0,16,72,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3401,        if (Float.isInfinite(x)) {,20,8,0,2,5,0,14,0,0,44,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3402,            return Float.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3404,        return abs(x - Float.intBitsToFloat(Float.floatToIntBits(x) ^ 1));,2,2,0,3,6,1,12,0,0,16,66,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3416,        if ((n > -1023) && (n < 1024)) {,4,3,0,3,7,0,0,0,0,8,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3417,            return d * Double.longBitsToDouble(((long) (n + 1023)) << 52);,12,2,0,4,8,1,0,0,0,14,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3421,        if (Double.isNaN(d) || Double.isInfinite(d) || (d == 0)) {,4,1,0,4,9,0,0,0,0,5,58,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3422,            return d;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3424,        if (n < -2098) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3425,            return (d > 0) ? 0.0 : -0.0;,4,1,0,1,2,1,0,0,0,6,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3427,        if (n > 2097) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3428,            return (d > 0) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,10,1,0,1,2,1,0,0,0,11,69,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3432,        final long bits = Double.doubleToLongBits(d);,6,0,0,1,2,1,12,0,0,19,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3433,        final long sign = bits & 0x8000000000000000L;,4,1,0,0,0,1,0,0,0,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3434,        int  exponent   = ((int) (bits >>> 52)) & 0x7ff;,0,0,0,3,6,0,0,0,0,9,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3435,        long mantissa   = bits & 0x000fffffffffffffL;,4,1,0,0,0,1,0,0,0,6,45,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3438,        int scaledExponent = exponent + n;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3440,        if (n < 0) {,8,2,0,1,3,0,10,0,0,22,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3442,            if (scaledExponent > 0) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3444,                return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,6,2,0,4,8,1,4,0,0,12,82,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3445,            } else if (scaledExponent > -53) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3449,                mantissa = mantissa | (1L << 52);,8,2,0,1,2,0,0,0,0,12,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3452,                final long mostSignificantLostBit = mantissa & (1L << (-scaledExponent));,12,4,0,2,4,1,0,0,0,20,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3453,                mantissa = mantissa >>> (1 - scaledExponent);,6,2,0,1,2,0,0,0,0,9,45,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3454,                if (mostSignificantLostBit != 0) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3456,                    mantissa++;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3458,                return Double.longBitsToDouble(sign | mantissa);,0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3462,                return (sign == 0L) ? 0.0 : -0.0;,6,1,0,1,2,1,0,0,0,7,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3466,            if (exponent == 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3469,                while ((mantissa >>> 52) != 1) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3470,                    mantissa = mantissa << 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3471,                    --scaledExponent;,2,0,0,0,0,0,0,0,0,3,17,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3473,                ++scaledExponent;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3474,                mantissa = mantissa & 0x000fffffffffffffL;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3476,                if (scaledExponent < 2047) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3477,                    return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,6,2,0,4,8,1,4,0,0,12,82,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3479,                    return (sign == 0L) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,10,1,0,1,2,1,0,0,0,11,74,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3482,            } else if (scaledExponent < 2047) {,6,1,0,1,4,0,0,0,0,9,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3483,                return Double.longBitsToDouble(sign | (((long) scaledExponent) << 52) | mantissa);,6,2,0,4,8,1,4,0,0,12,82,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3485,                return (sign == 0L) ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY;,10,1,0,1,2,1,0,0,0,11,74,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3500,        if ((n > -127) && (n < 128)) {,4,3,0,3,7,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3501,            return f * Float.intBitsToFloat((n + 127) << 23);,4,3,0,2,4,1,4,0,0,11,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3505,        if (Float.isNaN(f) || Float.isInfinite(f) || (f == 0f)) {,2,2,0,4,9,0,12,0,0,16,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3506,            return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3508,        if (n < -277) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3509,            return (f > 0) ? 0.0f : -0.0f;,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3511,        if (n > 276) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3512,            return (f > 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,8,2,0,1,2,1,0,0,0,10,67,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3516,        final int bits = Float.floatToIntBits(f);,4,0,0,1,2,1,6,0,0,11,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3517,        final int sign = bits & 0x80000000;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3518,        int  exponent  = (bits >>> 23) & 0xff;,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3519,        int mantissa   = bits & 0x007fffff;,4,1,0,0,0,0,0,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3522,        int scaledExponent = exponent + n;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3524,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3526,            if (scaledExponent > 0) {,4,1,0,1,3,0,0,0,0,5,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3528,                return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,6,2,0,2,4,1,4,0,0,12,70,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3529,            } else if (scaledExponent > -24) {,14,4,0,1,4,0,0,0,0,20,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3533,                mantissa = mantissa | (1 << 23);,4,2,0,1,2,0,0,0,0,7,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3536,                final int mostSignificantLostBit = mantissa & (1 << (-scaledExponent));,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3537,                mantissa = mantissa >>> (1 - scaledExponent);,6,2,0,1,2,0,0,0,0,9,45,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3538,                if (mostSignificantLostBit != 0) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3540,                    mantissa++;,2,0,0,0,0,0,0,0,0,3,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3542,                return Float.intBitsToFloat(sign | mantissa);,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3546,                return (sign == 0) ? 0.0f : -0.0f;,2,1,0,1,2,1,0,0,0,4,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3550,            if (exponent == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3553,                while ((mantissa >>> 23) != 1) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3554,                    mantissa = mantissa << 1;,10,3,0,0,0,0,0,0,0,15,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3555,                    --scaledExponent;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3557,                ++scaledExponent;,8,1,0,0,0,0,0,0,0,11,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3558,                mantissa = mantissa & 0x007fffff;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3560,                if (scaledExponent < 255) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3561,                    return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,0,0,0,2,4,1,0,0,0,7,70,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3563,                    return (sign == 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,16,2,0,1,2,1,0,0,0,19,71,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3566,            } else if (scaledExponent < 255) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3567,                return Float.intBitsToFloat(sign | (scaledExponent << 23) | mantissa);,6,2,0,2,4,1,4,0,0,12,70,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3569,                return (sign == 0) ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY;,10,1,0,1,2,1,0,0,0,11,71,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3609,        if (Double.isNaN(d) || Double.isNaN(direction)) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3610,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3611,        } else if (d == direction) {,6,1,0,1,4,0,0,2,0,9,28,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3612,            return direction;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3613,        } else if (Double.isInfinite(d)) {,0,0,0,2,6,0,0,0,0,8,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3614,            return (d < 0) ? -Double.MAX_VALUE : Double.MAX_VALUE;,10,1,0,1,2,1,0,0,0,12,54,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3615,        } else if (d == 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3616,            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;,0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3621,        final long bits = Double.doubleToLongBits(d);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3622,        final long sign = bits & 0x8000000000000000L;,4,1,0,0,0,1,0,0,0,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3623,        if ((direction < d) ^ (sign == 0L)) {,6,3,0,3,7,0,8,0,0,17,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3624,            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));,4,3,0,3,6,1,4,0,0,11,74,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3626,            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));,4,3,0,3,6,1,4,0,0,11,74,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3665,        if (Double.isNaN(f) || Double.isNaN(direction)) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3666,            return Float.NaN;,6,0,0,0,0,2,6,2,0,15,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3667,        } else if (f == direction) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3668,            return (float) direction;,2,0,0,1,2,1,0,0,0,2,25,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3669,        } else if (Float.isInfinite(f)) {,0,0,0,2,6,0,0,0,0,8,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3670,            return (f < 0f) ? -Float.MAX_VALUE : Float.MAX_VALUE;,30,34,0,1,2,1,4,0,0,70,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3671,        } else if (f == 0f) {,8,2,1,1,4,0,2,0,0,15,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3672,            return (direction < 0) ? -Float.MIN_VALUE : Float.MIN_VALUE;,10,1,0,1,2,1,0,0,0,12,60,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3677,        final int bits = Float.floatToIntBits(f);,2,0,0,1,2,1,6,0,0,9,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3678,        final int sign = bits & 0x80000000;,4,2,0,0,0,0,0,0,0,7,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3679,        if ((direction < f) ^ (sign == 0)) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3680,            return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));,0,0,0,3,6,1,0,0,0,10,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3682,            return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));,8,1,0,3,6,1,0,0,0,11,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3694,        if (x != x) { // NaN,10,2,0,1,3,0,0,0,0,12,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3695,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3698,        if (x >= TWO_POWER_52 || x <= -TWO_POWER_52) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3699,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3702,        y = (long) x;,6,1,0,1,2,0,0,0,0,7,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3703,        if (x < 0 && y != x) {,2,1,0,1,3,0,12,0,0,17,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3704,            y--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3707,        if (y == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3708,            return x*y;,4,1,0,0,0,1,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3711,        return y;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3721,        if (x != x) { // NaN,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3722,            return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3725,        y = floor(x);,2,0,0,1,2,0,4,0,0,7,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3726,        if (y == x) {,10,6,1,1,3,1,0,0,0,21,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3727,            return y;,6,1,0,0,0,1,0,0,0,7,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3730,        y += 1.0;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3732,        if (y == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3733,            return x*y;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3736,        return y;,16,2,0,0,0,2,0,0,0,21,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3744,        double y = floor(x);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3745,        double d = x - y;,6,1,0,0,0,0,0,0,0,7,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3747,        if (d > 0.5) {,12,1,0,1,3,1,6,2,0,23,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3748,            if (y == -1.0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3749,                return -0.0; // Preserve sign of operand,4,2,0,0,0,1,6,0,0,14,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3751,            return y+1.0;,2,1,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3753,        if (d < 0.5) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3754,            return y;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3758,        long z = (long) y;,16,1,0,1,2,0,4,0,0,22,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3759,        return (z & 1) == 0 ? y : y + 1.0;,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3767,        return (long) floor(x + 0.5);,2,1,0,2,4,1,2,0,0,5,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3775,        return (int) floor(x + 0.5f);,0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3784,        return (a <= b) ? a : b;,8,1,0,1,2,1,0,0,0,9,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3793,        return (a <= b) ? a : b;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3802,        if (a > b) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3803,            return b;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3805,        if (a < b) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3806,            return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3809,        if (a != b) {,6,2,0,1,3,0,6,0,0,14,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3810,            return Float.NaN;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3814,        int bits = Float.floatToRawIntBits(a);,2,0,0,1,2,0,6,0,0,8,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3815,        if (bits == 0x80000000) {,8,2,1,1,3,1,0,0,0,16,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3816,            return a;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3818,        return b;,10,2,0,0,0,1,0,0,0,13,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3827,        if (a > b) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3828,            return b;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3830,        if (a < b) {,10,2,0,1,3,0,0,0,0,12,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3831,            return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3834,        if (a != b) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3835,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3839,        long bits = Double.doubleToRawLongBits(a);,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3840,        if (bits == 0x8000000000000000L) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3841,            return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3843,        return b;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3852,        return (a <= b) ? b : a;,8,1,0,1,2,1,0,0,0,9,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3861,        return (a <= b) ? b : a;,14,1,0,1,2,1,6,0,0,23,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3870,        if (a > b) {,12,4,0,1,3,0,0,0,0,17,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3871,            return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3873,        if (a < b) {,8,2,0,1,3,0,0,0,0,11,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3874,            return b;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3877,        if (a != b) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3878,            return Float.NaN;,4,0,1,0,0,1,4,0,0,15,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3882,        int bits = Float.floatToRawIntBits(a);,6,0,0,1,2,0,6,4,0,17,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3883,        if (bits == 0x80000000) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3884,            return b;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3886,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3895,        if (a > b) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3896,            return a;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3898,        if (a < b) {,2,1,0,1,3,0,0,0,0,4,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3899,            return b;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3902,        if (a != b) {,6,1,0,1,3,0,0,0,0,7,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3903,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3907,        long bits = Double.doubleToRawLongBits(a);,2,0,0,1,2,0,6,0,0,8,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3908,        if (bits == 0x8000000000000000L) {,2,1,0,1,3,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3909,            return b;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3911,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3929,        if (Double.isInfinite(x) || Double.isInfinite(y)) {,2,1,0,3,7,0,0,0,0,3,51,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3930,            return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3931,        } else if (Double.isNaN(x) || Double.isNaN(y)) {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3932,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3935,            final int expX = getExponent(x);,2,0,0,1,2,1,0,0,0,3,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3936,            final int expY = getExponent(y);,6,2,1,1,2,1,4,0,0,18,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3937,            if (expX > expY + 27) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3939,                return abs(x);,0,0,0,1,2,1,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3940,            } else if (expY > expX + 27) {,4,2,0,1,4,0,0,0,0,6,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3942,                return abs(y);,0,0,0,1,2,1,4,0,0,4,14,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3946,                final int middleExp = (expX + expY) / 2;,6,2,0,1,2,1,0,0,0,9,40,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3949,"                final double scaledX = scalb(x, -middleExp);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3950,"                final double scaledY = scalb(y, -middleExp);",6,0,1,1,2,2,12,0,0,25,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3953,                final double scaledH = sqrt(scaledX * scaledX + scaledY * scaledY);,14,3,0,1,2,1,2,0,0,20,67,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3956,"                return scalb(scaledH, middleExp);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3984,"        return StrictMath.IEEEremainder(dividend, divisor); // TODO provide our own implementation",0,0,0,1,2,1,0,0,0,4,90,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3996,        long m = Double.doubleToLongBits(magnitude);,2,0,0,1,2,0,6,0,0,8,44,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3997,        long s = Double.doubleToLongBits(sign);,8,3,0,1,2,0,6,0,0,18,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3998,        if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK,0,0,0,3,7,0,0,0,0,10,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,3999,            return magnitude;,4,0,0,0,0,1,2,0,0,6,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4001,        return -magnitude; // flip sign,2,0,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4013,        int m = Float.floatToIntBits(magnitude);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4014,        int s = Float.floatToIntBits(sign);,2,0,0,1,2,0,6,0,0,8,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4015,        if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK,14,8,0,3,7,0,6,0,0,29,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4016,            return magnitude;,8,1,0,0,0,1,0,0,0,10,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4018,        return -magnitude; // flip sign,4,1,0,0,0,1,0,0,0,6,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4031,        return (int) ((Double.doubleToLongBits(d) >>> 52) & 0x7ff) - 1023;,4,3,0,4,8,1,4,0,0,11,66,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,55,4044,        return ((Float.floatToIntBits(f) >>> 23) & 0xff) - 127;,0,3,0,3,6,1,6,0,0,9,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,107,"  public Vector3D(double alpha, double delta) {",6,0,0,1,3,1,0,0,0,7,45,2,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,108,    double cosDelta = FastMath.cos(delta);,2,0,0,1,2,0,6,0,0,8,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,109,    this.x = FastMath.cos(alpha) * cosDelta;,4,1,0,1,2,0,6,0,0,12,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,110,    this.y = FastMath.sin(alpha) * cosDelta;,4,1,0,1,2,0,6,0,0,12,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,111,    this.z = FastMath.sin(delta);,2,0,0,1,2,0,6,0,0,9,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,112,  },6,1,0,0,1,1,0,0,0,8,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,120,"  public Vector3D(double a, Vector3D u) {",6,0,0,1,3,1,0,2,0,9,39,2,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,121,    this.x = a * u.x;,10,2,0,0,0,0,0,0,0,13,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,122,    this.y = a * u.y;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,123,    this.z = a * u.z;,8,1,0,0,0,0,0,0,0,10,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,124,  },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,134,"  public Vector3D(double a1, Vector3D u1, double a2, Vector3D u2) {",10,0,0,1,3,1,0,4,0,15,65,2,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,135,    this.x = a1 * u1.x + a2 * u2.x;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,136,    this.y = a1 * u1.y + a2 * u2.y;,22,4,0,0,0,0,0,0,0,28,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,137,    this.z = a1 * u1.z + a2 * u2.z;,16,3,0,0,0,1,0,0,0,21,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,138,  },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,151,"                  double a3, Vector3D u3) {",0,0,0,0,2,0,0,0,0,2,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,152,    this.x = a1 * u1.x + a2 * u2.x + a3 * u3.x;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,153,    this.y = a1 * u1.y + a2 * u2.y + a3 * u3.y;,20,5,0,0,0,0,0,0,0,26,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,154,    this.z = a1 * u1.z + a2 * u2.z + a3 * u3.z;,20,5,0,0,0,0,0,0,0,26,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,155,  },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,170,"                  double a3, Vector3D u3, double a4, Vector3D u4) {",8,0,0,0,2,0,0,4,0,12,49,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,171,    this.x = a1 * u1.x + a2 * u2.x + a3 * u3.x + a4 * u4.x;,28,7,0,0,0,1,0,0,0,37,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,172,    this.y = a1 * u1.y + a2 * u2.y + a3 * u3.y + a4 * u4.y;,26,7,0,0,0,0,0,0,0,34,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,173,    this.z = a1 * u1.z + a2 * u2.z + a3 * u3.z + a4 * u4.z;,0,0,0,0,0,0,0,0,0,0,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,174,  },4,0,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,204,    return FastMath.abs(x) + FastMath.abs(y) + FastMath.abs(z);,0,0,0,3,6,1,6,0,0,6,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,211,    return FastMath.sqrt (x * x + y * y + z * z);,12,5,0,1,2,1,4,0,0,21,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,218,    return x * x + y * y + z * z;,12,5,0,0,0,1,0,0,0,17,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,225,"    return FastMath.max(FastMath.max(FastMath.abs(x), FastMath.abs(y)), FastMath.abs(z));",0,0,0,5,10,1,26,0,0,26,85,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,233,"    return FastMath.atan2(y, x);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,241,    return FastMath.asin(z / getNorm());,2,1,0,2,4,1,6,0,0,9,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,249,"    return new Vector3D(x + v.x, y + v.y, z + v.z);",18,3,0,1,2,1,0,2,0,23,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,258,"    return new Vector3D(x + factor * v.x, y + factor * v.y, z + factor * v.z);",0,0,0,1,2,1,0,0,0,4,74,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,266,"    return new Vector3D(x - v.x, y - v.y, z - v.z);",18,3,0,1,2,1,0,2,0,23,47,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,275,"    return new Vector3D(x - factor * v.x, y - factor * v.y, z - factor * v.z);",26,6,0,1,2,1,0,2,0,34,74,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,283,    double s = getNorm();,2,0,0,1,2,0,2,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,284,    if (s == 0) {,6,1,0,1,3,0,0,0,0,8,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,285,      throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);,8,3,0,1,2,0,0,2,0,13,88,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,287,    return scalarMultiply(1 / s);,2,1,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,307,    double threshold = 0.6 * getNorm();,2,1,0,1,2,0,2,0,0,5,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,308,    if (threshold == 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,309,      throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);,6,1,0,1,2,0,0,2,0,9,62,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,312,    if ((x >= -threshold) && (x <= threshold)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,313,      double inverse  = 1 / FastMath.sqrt(y * y + z * z);,12,4,0,1,2,0,4,0,0,20,51,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,314,"      return new Vector3D(0, inverse * z, -inverse * y);",8,2,0,1,2,1,0,2,0,13,50,7,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,315,    } else if ((y >= -threshold) && (y <= threshold)) {,8,3,0,3,8,0,0,0,0,12,51,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,316,      double inverse  = 1 / FastMath.sqrt(x * x + z * z);,14,4,0,1,2,0,4,0,0,23,51,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,317,"      return new Vector3D(-inverse * z, 0, inverse * x);",8,2,0,1,2,1,0,2,0,13,50,8,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,319,    double inverse  = 1 / FastMath.sqrt(x * x + y * y);,10,4,0,1,2,0,4,0,0,18,51,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,320,"    return new Vector3D(inverse * y, -inverse * x, 0);",8,2,0,1,2,1,0,2,0,13,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,337,    double normProduct = v1.getNorm() * v2.getNorm();,2,1,0,2,4,0,8,0,0,11,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,338,    if (normProduct == 0) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,339,      throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);,12,3,0,1,2,0,4,2,0,22,62,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,342,"    double dot = dotProduct(v1, v2);",2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,343,    double threshold = normProduct * 0.9999;,4,1,0,0,0,0,0,0,0,5,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,344,    if ((dot < -threshold) || (dot > threshold)) {,16,10,0,3,7,0,0,0,0,27,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,346,"      Vector3D v3 = crossProduct(v1, v2);",2,0,0,1,2,0,6,2,0,10,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,347,      if (dot >= 0) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,348,        return FastMath.asin(v3.getNorm() / normProduct);,2,1,0,2,4,1,8,0,0,11,49,9,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,350,      return FastMath.PI - FastMath.asin(v3.getNorm() / normProduct);,6,2,0,2,4,1,8,0,0,16,63,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,354,    return FastMath.acos(dot / normProduct);,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,362,"    return new Vector3D(-x, -y, -z);",6,0,0,1,2,1,0,2,0,11,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,370,"    return new Vector3D(a * x, a * y, a * z);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,378,      return Double.isNaN(x) || Double.isNaN(y) || Double.isNaN(z);,2,1,0,3,6,1,8,4,0,15,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,388,      return !isNaN() && (Double.isInfinite(x) || Double.isInfinite(y) || Double.isInfinite(z));,0,2,0,5,10,1,20,0,0,23,90,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,413,    if (this == other) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,414,      return true;,6,1,0,0,0,1,0,0,0,9,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,417,    if (other instanceof Vector3D) {,2,0,0,1,3,0,0,2,0,4,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,418,      final Vector3D rhs = (Vector3D)other;,6,0,0,1,2,1,0,4,0,12,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,419,      if (rhs.isNaN()) {,0,0,0,2,5,0,4,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,420,          return this.isNaN();,0,0,0,1,2,1,2,0,0,2,20,9,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,423,      return (x == rhs.x) && (y == rhs.y) && (z == rhs.z);,18,4,0,3,6,1,0,0,0,22,52,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,425,    return false;,6,1,0,0,0,2,6,0,0,15,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,437,      if (isNaN()) {,4,0,0,2,5,0,6,0,0,11,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,438,          return 8;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,440,      return 31 * (23 * MathUtils.hash(x) +  19 * MathUtils.hash(y) +  MathUtils.hash(z));,6,6,0,4,8,1,18,0,0,31,84,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,449,    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;,2,0,0,0,0,1,0,2,0,4,47,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,486,    final double dx = FastMath.abs(v2.x - v1.x);,10,1,0,1,2,1,4,0,0,16,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,487,    final double dy = FastMath.abs(v2.y - v1.y);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,488,    final double dz = FastMath.abs(v2.z - v1.z);,10,1,0,1,2,1,4,0,0,16,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,489,    return dx + dy + dz;,8,2,0,0,0,1,2,0,0,12,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,501,    final double dx = v2.x - v1.x;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,502,    final double dy = v2.y - v1.y;,10,1,0,0,0,1,0,0,0,12,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,503,    final double dz = v2.z - v1.z;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,504,    return FastMath.sqrt(dx * dx + dy * dy + dz * dz);,0,0,0,1,2,1,0,0,0,4,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,516,    final double dx = FastMath.abs(v2.x - v1.x);,12,1,0,1,2,1,4,0,0,18,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,517,    final double dy = FastMath.abs(v2.y - v1.y);,10,1,0,1,2,1,4,0,0,16,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,518,    final double dz = FastMath.abs(v2.z - v1.z);,10,1,0,1,2,1,4,0,0,16,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,519,"    return FastMath.max(FastMath.max(dx, dy), dz);",4,4,0,2,4,1,14,0,0,22,46,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,531,    final double dx = v2.x - v1.x;,10,1,0,0,0,1,4,0,0,16,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,532,    final double dy = v2.y - v1.y;,10,1,0,0,0,1,0,0,0,12,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,533,    final double dz = v2.z - v1.z;,10,1,0,0,0,1,0,0,0,12,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,534,    return dx * dx + dy * dy + dz * dz;,12,5,0,0,0,1,0,0,0,17,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,542,      return DEFAULT_FORMAT.format(this);,0,0,0,1,2,1,4,0,0,4,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,71,"        this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR,",10,1,1,0,1,1,0,0,0,16,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,73,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,91,"        this(prefix, suffix, separator, CompositeFormat.getDefaultNumberFormat());",0,0,0,2,4,0,0,0,0,6,74,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,92,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,119,        return NumberFormat.getAvailableLocales();,0,0,0,1,2,1,4,0,0,4,42,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,127,        return prefix;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,135,        return suffix;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,143,        return separator;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,151,        return format;,2,0,1,0,0,2,0,0,0,7,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,178,"        return format(v, new StringBuffer(), new FieldPosition(0)).toString();",0,0,0,4,8,1,6,4,0,10,70,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,192,        pos.setBeginIndex(0);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,193,        pos.setEndIndex(0);,0,0,0,1,2,0,4,0,0,4,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,196,        toAppendTo.append(prefix);,0,0,0,1,2,0,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,199,"        CompositeFormat.formatDouble(vector.getX(), format, toAppendTo, pos);",0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,200,        toAppendTo.append(separator);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,201,"        CompositeFormat.formatDouble(vector.getY(), format, toAppendTo, pos);",4,0,0,2,4,0,14,0,0,18,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,202,        toAppendTo.append(separator);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,203,"        CompositeFormat.formatDouble(vector.getZ(), format, toAppendTo, pos);",16,3,0,2,4,0,14,0,0,34,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,206,        toAppendTo.append(suffix);,0,0,0,1,2,0,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,208,        return toAppendTo;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,219,        ParsePosition parsePosition = new ParsePosition(0);,2,1,0,1,2,0,12,4,0,19,51,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,220,"        Vector3D result = parse(source, parsePosition);",4,0,0,1,2,0,6,2,0,12,47,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,221,        if (parsePosition.getIndex() == 0) {,0,1,0,2,5,0,4,0,0,5,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,222,"            throw new MathParseException(source,",0,0,0,0,1,0,0,0,0,1,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,226,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,236,        int initialIndex = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,239,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",2,0,0,1,2,0,0,0,0,2,54,6,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,240,"        if (!CompositeFormat.parseFixedstring(source, trimmedPrefix, pos)) {",0,0,0,2,5,0,10,0,0,11,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,241,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,245,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",0,0,0,1,2,0,8,0,0,8,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,246,"        Number x = CompositeFormat.parseNumber(source, format, pos);",2,0,0,1,2,0,10,2,0,14,60,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,247,        if (x == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,250,            pos.setIndex(initialIndex);,2,0,0,1,2,0,6,0,0,8,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,251,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,255,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",0,0,0,1,2,0,8,0,0,8,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,256,"        if (!CompositeFormat.parseFixedstring(source, trimmedSeparator, pos)) {",0,0,0,2,5,0,0,0,0,7,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,257,            return null;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,259,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",4,0,0,1,2,0,8,2,0,14,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,260,"        Number y = CompositeFormat.parseNumber(source, format, pos);",2,0,0,1,2,0,10,2,0,15,60,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,261,        if (y == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,264,            pos.setIndex(initialIndex);,2,0,0,1,2,0,6,0,0,8,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,265,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,269,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,270,"        if (!CompositeFormat.parseFixedstring(source, trimmedSeparator, pos)) {",2,0,0,2,5,0,14,2,0,19,71,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,271,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,273,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",2,1,0,1,2,0,8,0,0,11,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,274,"        Number z = CompositeFormat.parseNumber(source, format, pos);",4,0,0,1,2,1,14,2,0,21,60,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,275,        if (z == null) {,2,1,0,1,3,0,4,0,0,7,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,278,            pos.setIndex(initialIndex);,0,0,0,1,2,0,6,0,0,6,27,7,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,279,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,283,"        CompositeFormat.parseAndIgnoreWhitespace(source, pos);",0,0,0,1,2,0,8,0,0,8,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,284,"        if (!CompositeFormat.parseFixedstring(source, trimmedSuffix, pos)) {",0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,285,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/geometry/Vector3DFormat,55,288,"        return new Vector3D(x.doubleValue(), y.doubleValue(), z.doubleValue());",12,3,0,4,8,1,12,2,0,30,71,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,85,        Iterator() {,0,0,0,1,3,0,0,0,0,4,12,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,75,        private final int[] counter = new int[dimension];,2,0,1,2,4,2,0,0,0,6,49,3,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,79,        private int count = -1;,2,0,0,0,0,1,0,0,0,4,23,3,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,86,            counter[last] = -1;,0,0,1,1,2,0,0,0,0,6,19,5,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,87,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,147,            return counter[dim];,0,0,1,1,2,1,0,0,0,4,20,6,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,196,        return new Iterator();,0,0,0,1,2,1,0,0,0,4,22,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,205,        return dimension;,0,0,0,0,0,1,0,0,0,1,17,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,217,        if (index < 0 ||,0,0,0,0,1,0,0,0,0,1,16,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,272,        return count + c[last];,2,1,1,1,2,1,0,0,0,7,23,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,46,public class MultidimensionalCounter implements Iterable<Integer> {,4,3,0,0,1,0,0,0,0,7,67,4,1.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,260,        if (c.length != dimension) {,6,1,0,1,3,0,0,0,0,7,28,4,0.5,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,263,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.5,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,264,        for (int i = 0; i < dimension; i++) {,10,1,0,1,3,3,0,4,0,19,37,1,0.5,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,265,            final int index = c[i];,2,0,1,1,2,1,0,0,0,7,23,6,0.5,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,266,            if (index < 0 ||,4,0,0,0,1,0,0,0,0,6,16,6,0.5,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,270,            count += uniCounterOffset[i] * c[i];,0,0,0,2,4,0,0,0,0,6,36,4,0.5,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,44,public final class MathUtils {,0,0,0,0,1,0,0,0,0,1,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,89,    private static final long[] FACTORIALS = new long[] {,2,0,0,2,5,3,0,0,0,5,53,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2220,"         return copyOf(source, source.length);",6,0,0,1,2,1,4,0,0,10,37,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2243,         final int[] output = new int[len];,4,0,1,2,4,1,2,0,0,9,34,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2244,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",4,0,0,2,4,0,14,0,0,18,73,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2245,         return output;,2,0,0,0,0,1,0,0,0,2,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,165,    public MultidimensionalCounter(int ... size) {,4,0,0,1,3,1,0,0,0,5,46,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,166,        dimension = size.length;,6,0,0,0,0,0,0,0,0,7,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,167,        this.size = MathUtils.copyOf(size);,2,0,0,1,2,0,6,0,0,9,35,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,169,        uniCounterOffset = new int[dimension];,2,0,1,1,2,0,0,0,0,5,38,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,171,        last = dimension - 1;,4,1,0,0,0,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,172,        int tS = size[last];,2,0,1,1,2,0,0,0,0,6,20,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,173,        for (int i = 0; i < last; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,174,            int count = 1;,2,0,0,0,0,0,0,0,0,2,14,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,175,            for (int j = i + 1; j < dimension; j++) {,10,2,0,1,3,0,0,0,0,13,41,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,176,                count *= size[j];,2,0,1,1,2,0,0,0,0,7,17,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,178,            uniCounterOffset[i] = count;,2,0,1,1,2,0,0,0,0,7,28,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,179,            tS *= size[i];,2,0,1,1,2,0,0,0,0,7,14,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,181,        uniCounterOffset[last] = 0;,0,0,1,1,2,0,0,0,0,5,27,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,183,        if (tS <= 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,187,        totalSize = tS;,4,0,0,0,0,0,0,0,0,5,15,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,188,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,55,    private static final double EXP_INT_TABLE_A[] = new double[1500];,0,0,0,2,4,0,0,0,0,6,65,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,60,    private static final double EXP_INT_TABLE_B[] = new double[1500];,2,0,1,2,4,3,4,0,0,13,65,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,65,    private static final double EXP_FRAC_TABLE_A[] = new double[1025];,2,0,0,2,4,3,0,0,0,5,66,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,70,    private static final double EXP_FRAC_TABLE_B[] = new double[1025];,0,0,0,2,4,0,0,0,0,6,66,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,73,    private static final double FACT[] = new double[20];,2,0,0,2,4,3,0,0,0,5,52,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,76,    private static final double LN_MANT[][] = new double[1024][];,0,0,0,4,8,0,0,0,0,12,61,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,85,    private static final double LN_SPLIT_COEF[][] = {,2,0,0,2,5,3,0,0,0,5,49,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,105,    private static final double LN_QUICK_COEF[][] = {,2,0,0,2,5,3,6,0,0,11,49,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,118,    private static final double LN_HI_PREC_COEF[][] = {,10,1,0,2,5,0,0,0,0,12,51,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,128,    private static final double SINE_TABLE_A[] = new double[14];,0,0,0,2,4,0,0,0,0,6,60,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,131,    private static final double SINE_TABLE_B[] = new double[14];,2,0,0,2,4,3,0,0,0,5,60,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,134,    private static final double COSINE_TABLE_A[] = new double[14];,4,0,0,2,4,3,0,0,0,8,62,0,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,137,    private static final double COSINE_TABLE_B[] = new double[14];,0,0,0,2,4,0,0,0,0,6,62,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,140,    private static final double TANGENT_TABLE_A[] = new double[14];,2,0,0,2,4,0,6,0,0,9,63,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,143,    private static final double TANGENT_TABLE_B[] = new double[14];,0,0,0,2,4,0,0,0,0,6,63,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,146,    private static final long RECIP_2PI[] = new long[] {,0,0,0,2,5,0,0,0,0,7,52,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,167,    private static final long PI_O_4_BITS[] = new long[] {,0,0,0,2,5,0,0,0,0,7,54,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,175,"    private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",0,0,0,2,4,0,0,0,0,6,126,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,178,"    private static final double CBRTTWO[] = { 0.6299605249474366,",6,0,0,1,3,3,0,0,0,9,61,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,208,        FACT[0] = 1.0;,0,0,1,1,2,0,0,0,0,3,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,209,        for (i = 1; i < FACT.length; i++) {,10,1,0,1,3,0,0,0,0,13,35,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,210,            FACT[i] = FACT[i-1] * i;,0,0,0,2,4,0,0,0,0,6,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,213,        double tmp[] = new double[2];,0,0,0,2,4,0,0,0,0,6,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,214,        double recip[] = new double[2];,0,0,0,2,4,0,0,0,0,6,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,217,        for (i = 0; i < 750; i++) {,0,0,0,1,3,0,0,0,0,4,27,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,218,"            expint(i, tmp);",4,0,0,1,2,0,2,2,0,8,15,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,219,            EXP_INT_TABLE_A[i+750] = tmp[0];,2,1,1,2,4,0,0,0,0,8,32,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,220,            EXP_INT_TABLE_B[i+750] = tmp[1];,0,0,0,2,4,0,0,0,0,6,32,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,222,            if (i != 0) {,2,1,0,1,3,0,0,0,0,3,13,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,224,"                splitReciprocal(tmp, recip);",0,0,0,1,2,0,0,0,0,3,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,225,                EXP_INT_TABLE_A[750-i] = recip[0];,2,1,1,2,4,0,0,0,0,8,34,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,226,                EXP_INT_TABLE_B[750-i] = recip[1];,6,2,1,2,4,0,0,0,0,13,34,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,231,        for (i = 0; i < EXP_FRAC_TABLE_A.length; i++) {,0,0,0,1,3,0,0,0,0,4,47,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,232,"            slowexp(i/1024.0, tmp);",4,1,0,1,2,1,6,0,0,12,23,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,233,            EXP_FRAC_TABLE_A[i] = tmp[0];,4,2,1,2,4,0,0,0,0,13,29,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,234,            EXP_FRAC_TABLE_B[i] = tmp[1];,0,0,0,2,4,0,0,0,0,6,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,238,        for (i = 0; i < LN_MANT.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,239,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,4,2,0,4,8,0,4,0,0,10,79,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,240,            LN_MANT[i] = slowLog(d);,2,0,0,2,4,3,0,0,0,5,24,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,244,        buildSinCosTables();,12,4,1,1,2,0,2,0,0,24,20,1,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,245,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,987,        final double xs[] = new double[2];,4,0,0,2,4,1,0,0,0,6,34,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,988,        final double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,989,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,990,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,991,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,992,        ys[0] = ys[1] = 0.0;,0,0,1,2,4,0,0,0,0,6,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,994,        for (int i = 19; i >= 0; i--) {,10,1,0,1,3,3,0,0,0,16,31,0,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,995,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,996,            ys[0] = as[0];,0,0,0,2,4,0,0,0,0,6,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,997,            ys[1] = as[1];,0,0,0,2,4,0,0,0,0,6,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,999,"            split(FACT[i], as);",0,0,1,2,4,0,4,0,0,8,19,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1000,"            splitReciprocal(as, facts);",0,0,0,1,2,0,0,0,0,3,27,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1002,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,8,0,0,8,24,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1003,            ys[0] = as[0];,2,1,1,2,4,0,0,0,0,8,14,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1004,            ys[1] = as[1];,0,0,0,2,4,0,0,0,0,6,14,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1007,        if (result != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1008,            result[0] = ys[0];,4,1,1,2,4,0,0,0,0,10,18,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1009,            result[1] = ys[1];,0,0,0,2,4,0,0,0,0,6,18,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1012,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1021,        if (d < 8e298 && d > -8e298) {,8,1,0,1,3,0,0,0,0,10,30,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1022,            final double a = d * HEX_40000000;,6,1,0,0,0,1,0,0,0,8,34,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1023,            split[0] = (d + a) - a;,0,0,0,2,4,0,0,0,0,6,23,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1024,            split[1] = d - split[0];,2,1,1,2,4,0,0,0,0,8,24,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1025,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1030,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1037,        final double c = a[0] + a[1];,0,0,0,2,4,0,0,0,0,6,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1038,        final double d = -(c - a[0] - a[1]);,4,1,1,3,6,1,0,0,0,11,36,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1040,        if (c < 8e298 && c > -8e298) {,0,0,0,1,3,0,0,0,0,4,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1041,            double z = c * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1042,            a[0] = (c + z) - z;,6,2,1,2,4,0,0,0,0,11,19,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1043,            a[1] = c - a[0] + d;,4,2,1,2,4,0,0,0,0,11,20,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1044,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1045,            double z = c * 9.31322574615478515625E-10;,0,0,0,0,0,0,2,0,0,2,42,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1046,            a[0] = (c + z - c) * HEX_40000000;,28,4,1,2,4,0,0,0,0,36,34,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1047,            a[1] = c - a[0] + d;,0,0,0,2,4,0,0,0,0,6,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1049,    },4,3,1,0,1,0,0,0,0,11,1,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1057,        ans[0] = a[0] * b[0];,0,1,1,3,6,0,0,0,0,8,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1058,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,2,5,1,7,14,0,6,2,0,30,49,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1061,        resplit(ans);,0,0,0,1,2,0,4,0,0,4,13,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1062,    },2,0,0,0,1,1,0,0,0,3,1,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1070,        ans[0] = a[0] + b[0];,0,0,0,3,6,0,0,0,0,9,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1071,        ans[1] = a[1] + b[1];,0,1,1,3,6,0,0,0,0,8,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1073,        resplit(ans);,4,0,0,1,2,0,4,0,0,8,13,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1074,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1095,        final double b = 1.0/4194304.0;,2,1,0,0,0,1,0,0,0,4,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1096,        final double a = 1.0 - b;,0,0,0,0,0,0,0,0,0,0,25,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1098,        if (in[0] == 0.0) {,0,1,1,2,5,0,0,0,0,3,19,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1103,        result[0] = a / in[0];,8,3,1,2,4,0,0,0,0,16,22,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1104,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,20,3,0,9,18,0,2,6,0,31,60,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1106,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,4,9,0,0,0,0,6,63,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1107,            result[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1111,        resplit(result);,0,0,0,1,2,0,0,0,0,3,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1113,        for (int i = 0; i < 2; i++) {,0,0,0,1,3,0,0,0,0,4,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1115,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,0,0,0,4,8,0,0,0,0,12,58,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1118,            err = err * (result[0] + result[1]);,0,0,0,3,6,0,0,0,0,9,36,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1120,            result[1] += err;,0,0,0,1,2,0,0,0,0,3,17,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1122,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1130,        final double xs[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1131,        final double ys[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1132,        final double zs[] = new double[2];,4,0,0,2,4,1,0,0,0,6,34,0,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1135,"        split(a[0], xs);",0,0,0,2,4,0,0,0,0,6,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1136,"        split(b[0], ys);",0,0,1,2,4,0,4,0,0,6,16,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1137,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1139,        result[0] = zs[0];,2,0,0,2,4,1,0,0,0,3,18,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1140,        result[1] = zs[1];,2,0,1,2,4,0,0,0,0,12,18,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1143,"        split(b[1], ys);",0,0,0,2,4,0,0,0,0,6,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1144,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1146,        double tmp = result[0] + zs[0];,0,0,0,2,4,0,0,0,0,6,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1147,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,2,1,5,10,0,0,0,0,13,50,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1148,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1149,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1150,        result[1] = result[1] - (tmp - result[0] - zs[1]);,2,2,1,5,10,0,0,0,0,13,50,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1151,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1154,"        split(a[1], xs);",0,0,0,2,4,1,0,0,0,1,16,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1155,"        split(b[0], ys);",12,4,1,2,4,1,4,0,0,23,16,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1156,"        splitMult(xs, ys, zs);",2,0,0,1,2,0,0,0,0,2,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1158,        tmp = result[0] + zs[0];,2,1,1,2,4,0,0,0,0,8,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1159,        result[1] = result[1] - (tmp - result[0] - zs[0]);,4,1,0,5,10,0,0,0,0,5,50,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1160,        result[0] = tmp;,2,0,0,1,2,0,4,0,0,6,16,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1161,        tmp = result[0] + zs[1];,4,1,1,2,4,0,0,0,0,10,24,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1162,        result[1] = result[1] - (tmp - result[0] - zs[1]);,6,4,0,5,10,0,0,0,0,10,50,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1163,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1166,"        split(a[1], xs);",0,0,1,2,4,0,4,0,0,6,16,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1167,"        split(b[1], ys);",4,1,1,2,4,0,4,0,0,11,16,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1168,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1170,        tmp = result[0] + zs[0];,2,1,1,2,4,0,0,0,0,8,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1171,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,2,1,5,10,0,0,0,0,13,50,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1172,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1173,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1174,        result[1] = result[1] - (tmp - result[0] - zs[1]);,2,2,1,5,10,0,0,0,0,13,50,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1175,        result[0] = tmp;,4,1,0,1,2,0,4,0,0,9,16,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1176,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1185,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1186,        final double as[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1187,        final double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1196,        xs[0] = 2.718281828459045;,0,0,1,1,2,0,0,0,0,3,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1197,        xs[1] = 1.4456468917292502E-16;,0,0,0,1,2,0,0,0,0,3,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1199,"        split(1.0, ys);",6,2,0,1,2,0,4,0,0,13,15,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1201,        while (p > 0) {,10,3,0,1,3,0,0,2,0,17,15,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1202,            if ((p & 1) != 0) {,0,0,0,2,5,0,0,0,0,7,19,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1203,"                quadMult(ys, xs, as);",0,0,0,1,2,0,0,0,0,3,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1204,                ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,2,0,0,12,29,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1207,"            quadMult(xs, xs, as);",0,0,0,1,2,0,0,0,0,3,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1208,            xs[0] = as[0]; xs[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1210,            p >>= 1;,2,0,0,0,0,0,0,0,0,3,8,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1213,        if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1214,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1215,            result[1] = ys[1];,0,0,0,2,4,0,0,0,0,6,18,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1217,            resplit(result);,0,0,0,1,2,0,0,0,0,3,16,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1220,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1716,        double x[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1717,        double x2[] = new double[2];,6,1,0,2,4,0,0,0,0,7,28,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1718,        double y[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1719,        double a[] = new double[2];,2,0,0,2,4,0,0,0,0,2,27,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1721,"        split(xi, x);",0,0,0,1,2,0,6,0,0,6,13,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1724,        x[0] += 1.0;,0,0,1,1,2,0,0,0,0,3,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1725,        resplit(x);,0,0,0,1,2,0,4,0,0,4,11,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1726,"        splitReciprocal(x, a);",4,2,1,1,2,0,0,0,0,13,22,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1727,        x[0] -= 2.0;,0,0,0,1,2,0,0,0,0,3,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1728,        resplit(x);,0,0,0,1,2,0,0,0,0,3,11,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1729,"        splitMult(x, a, y);",0,0,0,1,2,0,0,0,0,3,19,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1730,        x[0] = y[0];,10,2,1,2,4,0,0,0,0,18,12,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1731,        x[1] = y[1];,0,0,1,2,4,0,0,0,0,5,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1734,"        splitMult(x, x, x2);",0,0,0,1,2,0,8,0,0,8,20,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1740,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,0,0,0,3,6,0,0,0,0,9,48,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1741,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,0,0,0,3,6,0,0,0,0,9,48,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1743,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,51,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1744,"            splitMult(y, x2, a);",0,0,0,1,2,0,0,0,0,3,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1745,            y[0] = a[0];,0,0,0,2,4,0,0,0,0,6,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1746,            y[1] = a[1];,4,2,0,2,4,0,4,0,0,10,12,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1747,"            splitAdd(y, LN_SPLIT_COEF[i], a);",0,0,1,2,4,0,6,0,0,10,33,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1748,            y[0] = a[0];,0,0,1,2,4,0,10,0,0,13,12,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1749,            y[1] = a[1];,0,0,1,2,4,0,0,0,0,5,12,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1752,"        splitMult(y, x, a);",0,0,0,1,2,0,8,0,0,8,19,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1753,        y[0] = a[0];,0,0,0,2,4,0,0,0,0,6,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1754,        y[1] = a[1];,0,0,0,2,4,0,0,0,0,6,12,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1756,        return y;,2,0,0,0,0,1,0,0,0,2,9,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1766,        final double xs[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1767,        final double ys[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1768,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1769,        final double as[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1770,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1771,        ys[0] = ys[1] = 0.0;,8,1,1,2,4,0,0,0,0,16,20,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1773,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1774,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1775,            ys[0] = as[0]; ys[1] = as[1];,10,1,0,4,8,0,0,0,0,12,29,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1777,            if ( (i & 1) == 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1778,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1781,"            split(FACT[i], as);",0,0,0,2,4,0,0,0,0,6,19,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1782,"            splitReciprocal(as, facts);",0,0,0,1,2,0,6,0,0,6,27,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1784,            if ( (i & 2) != 0 ) {,2,2,0,2,5,0,0,0,0,4,21,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1785,                facts[0] = -facts[0];,4,0,1,2,4,0,0,0,0,11,21,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1786,                facts[1] = -facts[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1789,"            splitAdd(ys, facts, as);",6,3,1,1,2,0,0,0,0,14,24,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1790,            ys[0] = as[0]; ys[1] = as[1];,0,0,0,4,8,0,0,0,0,12,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1793,        if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1794,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1795,            result[1] = ys[1];,0,0,1,2,4,0,0,0,0,5,18,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1798,        return ys[0] + ys[1];,2,0,0,2,4,1,0,0,0,3,21,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1809,        final double xs[] = new double[2];,4,0,0,2,4,1,6,2,0,13,34,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1810,        final double ys[] = new double[2];,4,0,0,2,4,2,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1811,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1812,        final double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1813,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1814,        ys[0] = ys[1] = 0.0;,0,0,1,2,4,0,0,0,0,6,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1816,        for (int i = 19; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1817,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1818,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1820,            if ( (i & 1) != 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1821,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1824,"            split(FACT[i], as);",2,0,1,2,4,0,8,0,0,15,19,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1825,"            splitReciprocal(as, facts);",2,1,1,1,2,0,10,0,0,15,27,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1827,            if ( (i & 2) != 0 ) {,0,0,0,2,5,0,0,0,0,7,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1828,                facts[0] = -facts[0];,0,0,1,2,4,0,0,0,0,6,21,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1829,                facts[1] = -facts[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1832,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,8,0,0,8,24,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1833,            ys[0] = as[0]; ys[1] = as[1];,0,0,0,4,8,0,0,0,0,12,29,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1836,        if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1837,            result[0] = ys[0];,0,0,1,2,4,0,0,0,0,5,18,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1838,            result[1] = ys[1];,0,0,1,2,4,0,0,0,0,5,18,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1841,        return ys[0] + ys[1];,4,1,1,2,4,1,0,0,0,10,21,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1847,        final double result[] = new double[2];,0,0,0,2,4,0,0,0,0,6,38,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1850,        for (int i = 0; i < 7; i++) {,4,0,0,1,3,0,0,0,0,5,29,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1851,            double x = i / 8.0;,10,2,0,0,0,0,0,0,0,13,19,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1853,"            slowSin(x, result);",6,3,0,1,2,1,8,0,0,18,19,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1854,            SINE_TABLE_A[i] = result[0];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1855,            SINE_TABLE_B[i] = result[1];,0,0,1,2,4,0,0,0,0,7,28,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1857,"            slowCos(x, result);",2,0,0,1,2,0,0,0,0,2,19,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1858,            COSINE_TABLE_A[i] = result[0];,0,0,1,2,4,0,0,0,0,7,30,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1859,            COSINE_TABLE_B[i] = result[1];,2,1,0,2,4,0,0,0,0,3,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1863,        for (int i = 7; i < 14; i++) {,8,1,0,1,3,0,0,0,0,10,30,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1864,            double xs[] = new double[2];,2,0,0,2,4,0,0,0,0,2,28,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1865,            double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1866,            double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1867,            double bs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1868,            double temps[] = new double[2];,0,0,0,2,4,0,0,0,0,6,31,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1870,            if ( (i & 1) == 0) {,0,0,0,2,5,0,0,0,0,7,20,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1872,                xs[0] = SINE_TABLE_A[i/2];,2,1,1,2,4,0,0,0,0,8,26,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1873,                xs[1] = SINE_TABLE_B[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1874,                ys[0] = COSINE_TABLE_A[i/2];,2,1,1,2,4,0,0,0,0,8,28,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1875,                ys[1] = COSINE_TABLE_B[i/2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1878,"                splitMult(xs, ys, result);",0,0,0,1,2,0,0,0,0,3,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1879,                SINE_TABLE_A[i] = result[0] * 2.0;,0,0,0,2,4,0,0,0,0,6,34,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1880,                SINE_TABLE_B[i] = result[1] * 2.0;,0,1,1,2,4,0,0,0,0,8,34,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1883,"                splitMult(ys, ys, as);",0,0,0,1,2,0,8,0,0,8,22,9,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1884,"                splitMult(xs, xs, temps);",0,0,1,1,2,0,0,0,0,11,25,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1885,                temps[0] = -temps[0];,0,0,0,2,4,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1886,                temps[1] = -temps[1];,0,0,0,2,4,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1887,"                splitAdd(as, temps, result);",0,0,0,1,2,0,0,0,0,3,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1888,                COSINE_TABLE_A[i] = result[0];,2,0,1,2,4,0,0,0,0,10,30,0,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1889,                COSINE_TABLE_B[i] = result[1];,0,0,0,2,4,0,0,0,0,6,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1891,                xs[0] = SINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1892,                xs[1] = SINE_TABLE_B[i/2];,4,1,1,2,4,0,0,2,0,12,26,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1893,                ys[0] = COSINE_TABLE_A[i/2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1894,                ys[1] = COSINE_TABLE_B[i/2];,2,0,0,2,4,0,0,0,0,3,28,2,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1895,                as[0] = SINE_TABLE_A[i/2+1];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1896,                as[1] = SINE_TABLE_B[i/2+1];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1897,                bs[0] = COSINE_TABLE_A[i/2+1];,0,0,0,2,4,0,0,0,0,6,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1898,                bs[1] = COSINE_TABLE_B[i/2+1];,2,2,1,2,4,0,6,0,0,19,30,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1901,"                splitMult(xs, bs, temps);",0,0,0,1,2,0,8,0,0,8,25,9,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1902,"                splitMult(ys, as, result);",6,1,0,1,2,0,8,0,0,16,26,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1903,"                splitAdd(result, temps, result);",6,1,0,1,2,0,8,0,0,16,32,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1904,                SINE_TABLE_A[i] = result[0];,0,0,1,2,4,0,0,0,0,7,28,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1905,                SINE_TABLE_B[i] = result[1];,8,2,1,2,4,0,0,0,0,18,28,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1908,"                splitMult(ys, bs, result);",0,0,1,1,2,0,0,0,0,3,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1909,"                splitMult(xs, as, temps);",0,0,0,1,2,0,8,0,0,8,25,9,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1910,                temps[0] = -temps[0];,0,0,0,2,4,0,0,0,0,6,21,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1911,                temps[1] = -temps[1];,10,2,1,2,4,0,0,0,0,21,21,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1912,"                splitAdd(result, temps, result);",0,0,0,1,2,0,8,0,0,8,32,9,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1913,                COSINE_TABLE_A[i] = result[0];,0,0,1,2,4,0,0,0,0,7,30,8,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1914,                COSINE_TABLE_B[i] = result[1];,0,0,0,2,4,0,0,0,0,6,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1919,        for (int i = 0; i < 14; i++) {,6,1,0,1,3,0,0,0,0,8,30,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1920,            double xs[] = new double[2];,2,0,0,2,4,0,8,0,0,10,28,5,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1921,            double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1922,            double as[] = new double[2];,0,0,0,2,4,0,0,0,0,6,28,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1924,            as[0] = COSINE_TABLE_A[i];,0,0,0,2,4,0,0,0,0,6,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1925,            as[1] = COSINE_TABLE_B[i];,0,0,0,2,4,0,0,0,0,6,26,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1927,"            splitReciprocal(as, ys);",0,0,0,1,2,0,6,0,0,6,24,7,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1929,            xs[0] = SINE_TABLE_A[i];,6,1,1,2,4,0,0,0,0,15,24,3,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1930,            xs[1] = SINE_TABLE_B[i];,0,0,1,2,4,0,0,0,0,7,24,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1932,"            splitMult(xs, ys, as);",0,0,0,1,2,0,0,0,0,3,22,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1934,            TANGENT_TABLE_A[i] = as[0];,0,0,1,2,4,0,0,0,0,7,27,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1935,            TANGENT_TABLE_B[i] = as[1];,0,0,1,2,4,0,0,0,0,7,27,6,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1938,    },4,0,0,0,1,0,0,0,0,5,1,4,0.25,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,3784,        return (a <= b) ? a : b;,0,0,0,1,2,1,0,0,0,4,24,4,0.25,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,56,37,"        super(value, 0, true);",2,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,56,38,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,56,47,"        super(specific, value, 0, true);",4,0,0,1,2,0,0,0,0,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotPositiveException,56,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,50,        this(boundIsAllowed ?,0,0,0,0,1,0,0,0,0,1,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,54,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,68,"        super(specific, wrong, min);",6,0,0,1,2,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,70,        this.min = min;,6,0,0,0,0,0,0,0,0,8,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,71,        this.boundIsAllowed = boundIsAllowed;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,72,    },6,1,0,0,1,0,0,0,0,7,1,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,78,        return boundIsAllowed;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,56,85,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,56,46,"        super(pattern, wrong, arguments);",6,0,0,1,2,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,56,47,        argument = wrong;,4,0,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,56,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,56,54,        return argument;,20,7,0,0,0,1,0,0,0,28,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,56,40,                                        Object ... args) {,2,0,0,0,2,0,0,2,0,4,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,56,41,"        addMessage(pattern, args);",0,0,0,1,2,0,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,56,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,63,    public MathRuntimeException() {},4,0,0,2,4,1,0,0,0,6,32,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,47,    private List<Localizable> msgPatterns = new ArrayList<Localizable>();,2,0,0,1,2,1,0,8,0,11,69,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,53,    private List<Object[]> msgArguments = new ArrayList<Object[]>();,2,0,0,3,6,1,0,8,0,11,64,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,58,"    private Map<String, Object> context = new HashMap<String, Object>();",2,0,0,1,2,1,0,12,0,15,68,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,71,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,72,    },6,2,0,0,1,0,0,0,0,9,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,77,        msgPatterns.add(pattern);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,78,        msgArguments.add(ArgUtils.flatten(arguments));,0,0,0,2,4,0,10,0,0,10,46,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,83,"        context.put(key, value);",0,0,0,1,2,0,8,0,0,8,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,84,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,88,        return context.get(key);,0,0,0,1,2,1,6,0,0,6,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,93,        return context.keySet();,0,2,0,1,2,1,28,0,0,30,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,103,"        return buildMessage(locale, "": "");",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,115,"        return buildMessage(locale, separator);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,121,        return getMessage(Locale.US);,4,0,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,127,        return getMessage(Locale.getDefault());,0,0,0,2,4,1,6,0,0,6,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,139,        final StringBuilder sb = new StringBuilder();,2,0,0,1,2,1,0,4,0,7,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,140,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,141,        final int len = msgPatterns.size();,2,0,0,1,2,1,4,0,0,7,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,142,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,143,            final Localizable pat = msgPatterns.get(i);,10,2,0,1,2,2,6,2,0,22,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,144,            final Object[] args = msgArguments.get(i);,2,0,0,2,4,1,6,2,0,11,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,145,"            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),",2,0,0,1,3,1,6,4,0,13,75,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,147,            sb.append(fmt.format(args));,0,0,0,2,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,148,            if (++count < len) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,150,                sb.append(separator);,4,4,0,1,2,0,6,0,0,14,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,154,        return sb.toString();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,165,        serializeMessages(out);,2,0,0,1,2,3,4,0,0,9,23,1,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,166,        serializeContext(out);,0,0,0,1,2,0,4,0,0,4,22,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,167,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,178,        deSerializeMessages(in);,4,0,0,1,2,0,14,0,0,18,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,179,        deSerializeContext(in);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,180,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,191,        final int len = msgPatterns.size();,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,192,        out.writeInt(len);,0,0,0,1,2,0,6,0,0,6,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,194,        for (int i = 0; i < len; i++) {,2,0,0,1,3,0,0,0,0,3,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,195,            final Localizable pat = msgPatterns.get(i);,2,0,0,1,2,1,6,2,0,11,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,197,            out.writeObject(pat);,0,0,0,1,2,0,6,0,0,6,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,198,            final Object[] args = msgArguments.get(i);,8,0,0,2,4,2,6,2,0,18,42,1,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,199,            final int aLen = args.length;,8,0,0,0,0,1,0,0,0,9,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,201,            out.writeInt(aLen);,6,1,0,1,2,0,0,0,0,7,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,202,            for (int j = 0; j < aLen; j++) {,8,1,0,1,3,0,0,0,0,10,32,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,203,                if (args[j] instanceof Serializable) {,0,0,1,2,5,0,4,2,0,11,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,205,                    out.writeObject(args[j]);,0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,208,                    out.writeObject(nonSerializableReplacement(args[j]));,0,0,1,3,6,0,6,0,0,10,53,11,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,212,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,225,        final int len = in.readInt();,0,0,0,1,2,0,2,2,0,4,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,226,        msgPatterns = new ArrayList<Localizable>(len);,4,0,1,1,2,0,0,4,0,13,46,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,227,        msgArguments = new ArrayList<Object[]>(len);,0,0,0,2,4,0,0,0,0,6,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,229,        for (int i = 0; i < len; i++) {,14,1,0,1,3,0,0,0,0,17,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,231,            final Localizable pat = (Localizable) in.readObject();,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,232,            msgPatterns.add(pat);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,234,            final int aLen = in.readInt();,2,0,0,1,2,1,4,0,0,7,30,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,235,            final Object[] args = new Object[aLen];,2,0,1,2,4,1,0,4,0,9,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,236,            for (int j = 0; j < aLen; j++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,238,                args[j] = in.readObject();,0,0,1,2,4,0,4,0,0,9,26,8,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,240,            msgArguments.add(args);,4,3,0,1,2,0,6,0,0,14,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,242,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,253,        final int len = context.keySet().size();,2,0,0,2,4,1,6,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,254,        out.writeInt(len);,8,1,0,1,2,0,6,0,0,16,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,255,        for (String key : context.keySet()) {,2,0,0,2,5,0,4,2,0,8,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,257,            out.writeObject(key);,0,0,0,1,2,0,6,0,0,6,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,258,            final Object value = context.get(key);,2,0,0,1,2,1,6,2,0,11,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,259,            if (value instanceof Serializable) {,2,0,0,1,3,0,0,2,0,4,36,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,261,                out.writeObject(value);,2,0,0,1,2,0,6,0,0,9,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,264,                out.writeObject(nonSerializableReplacement(value));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,266,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,267,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,280,        final int len = in.readInt();,2,0,0,1,2,1,4,0,0,7,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,281,"        context = new HashMap<String, Object>();",2,0,0,1,2,0,0,6,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,282,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,284,            final String key = (String) in.readObject();,4,0,0,2,4,1,18,4,0,27,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,286,            final Object value = in.readObject();,10,1,0,1,2,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,287,"            context.put(key, value);",0,0,0,1,2,0,8,0,0,8,24,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,289,    },0,0,1,0,1,0,4,0,0,23,1,10,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathRuntimeException,56,299,"        return ""[Object could not be serialized: "" + obj.getClass().getName() + ""]"";",8,4,0,3,6,1,6,0,0,21,76,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,56,41,        this(LocalizedFormats.NULL_NOT_ALLOWED);,6,0,0,1,2,0,0,0,0,6,40,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,56,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,56,50,"        super(pattern, arguments);",4,0,0,1,2,0,0,0,0,4,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,56,51,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,44,"        super(specific, wrong, expected);",14,2,0,1,2,0,0,0,0,16,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,45,        dimension = expected;,8,0,0,0,0,0,0,2,0,11,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,46,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,56,"        this(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, wrong, expected);",8,0,0,1,2,0,0,0,0,8,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,57,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/DimensionMismatchException,56,63,        return dimension;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,61,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);",12,0,0,1,2,0,0,0,0,13,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,62,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,80,        super(direction == MathUtils.OrderDirection.INCREASING ?,8,1,0,0,1,0,0,0,0,9,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,89,        this.direction = direction;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,90,        this.strict = strict;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,91,        this.index = index;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,92,        this.previous = previous;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,93,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,99,        return direction;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,105,        return strict;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,113,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,56,119,        return previous;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1899,    public static enum OrderDirection {,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1901,"        INCREASING,",0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1903,        DECREASING,2,0,0,0,0,0,0,0,0,2,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,38,    public MathArithmeticException() {,16,5,0,1,3,1,0,0,0,23,34,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,39,        addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);,4,0,0,1,2,0,2,0,0,6,50,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,40,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,50,                                   Object ... args) {,0,0,0,0,2,0,0,0,0,2,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,51,"        addMessage(pattern, args);",0,0,0,1,2,0,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/exception/MathArithmeticException,56,52,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,56,38,"        super(value, 0, false);",2,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,56,39,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,56,48,"        super(specific, value, 0, false);",0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,56,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,46,"        this(LocalizedFormats.OUT_OF_RANGE_SIMPLE, wrong, lo, hi);",0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,47,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,62,"        super(specific, wrong, lo, hi);",8,0,0,1,2,0,0,0,0,8,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,63,        this.lo = lo;,4,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,64,        this.hi = hi;,28,9,0,0,0,0,0,2,0,41,13,2,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,65,    },2,2,1,0,1,0,0,0,0,13,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,71,        return lo;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,56,77,        return hi;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,56,40,"        this(LocalizedFormats.NOT_FINITE_NUMBER, wrong, args);",2,1,0,1,2,0,0,0,0,3,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,56,41,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,56,53,"        super(specific, wrong, args);",10,0,0,1,2,0,0,0,0,11,29,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NotFiniteNumberException,56,54,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,50,        this(boundIsAllowed ?,8,1,0,0,1,0,0,0,0,10,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,54,    },10,3,0,0,1,1,0,0,0,15,1,0,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,67,"        super(specific, wrong, max);",6,0,0,1,2,0,0,0,0,6,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,69,        this.max = max;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,70,        this.boundIsAllowed = boundIsAllowed;,4,0,0,0,0,0,0,0,0,5,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,71,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,77,        return boundIsAllowed;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooLargeException,56,84,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2182,"            = new Comparator<Pair<Double, double[]>>() {",8,1,0,2,5,0,0,6,0,17,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2186,                switch (dir) {,10,1,0,1,3,0,0,0,0,13,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2188,                    val = o1.getKey().compareTo(o2.getKey());,10,1,0,3,6,0,10,0,0,23,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2189,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2191,                    val = o2.getKey().compareTo(o1.getKey());,2,0,0,3,6,0,10,0,0,13,41,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2192,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2195,                    throw new IllegalArgumentException();,0,0,0,1,2,0,0,2,0,2,37,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2197,                return val;,2,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,102,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,103,    },2,0,0,0,1,1,18,2,0,23,1,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,116,        long s = (long)x + (long)y;,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,117,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,0,0,0,1,3,0,0,0,0,4,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,118,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);",16,1,0,1,2,0,0,2,0,21,79,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,120,        return (int)s;,2,0,0,1,2,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,134,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);",6,2,0,1,2,1,6,0,0,14,64,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,150,        if (a > b) {,8,1,1,1,3,1,0,0,0,12,12,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,152,"            ret = addAndCheck(b, a, pattern);",0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,156,            if (a < 0) {,8,1,0,1,3,0,0,0,0,10,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,157,                if (b < 0) {,4,1,1,1,3,0,0,0,0,8,12,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,159,                    if (Long.MIN_VALUE - b <= a) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,160,                        ret = a + b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,162,"                        throw new MathArithmeticException(pattern, a, b);",6,0,0,1,2,0,0,2,0,8,49,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,166,                    ret = a + b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,173,                if (a <= Long.MAX_VALUE - b) {,8,2,0,1,3,0,0,0,0,10,30,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,174,                    ret = a + b;,0,0,0,0,0,0,6,0,0,6,12,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,176,"                    throw new MathArithmeticException(pattern, a, b);",6,0,0,1,2,0,0,2,0,8,49,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,180,        return ret;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,209,"        checkBinomial(n, k);",0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,210,        if ((n == k) || (k == 0)) {,6,3,0,3,7,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,211,            return 1;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,213,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,214,            return n;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,217,        if (k > n / 2),4,1,0,1,2,0,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,218,"            return binomialCoefficient(n, n - k);",4,1,0,1,2,1,4,0,0,9,37,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,225,        long result = 1;,2,0,1,0,0,0,0,0,0,5,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,226,        if (n <= 61) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,228,            int i = n - k + 1;,8,3,0,0,0,0,0,0,0,12,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,229,            for (int j = 1; j <= k; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,230,                result = result * i / j;,8,2,0,0,0,0,0,0,0,11,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,231,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,233,        } else if (n <= 66) {,2,1,0,1,4,0,0,0,0,3,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,236,            int i = n - k + 1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,237,            for (int j = 1; j <= k; j++) {,8,1,0,1,3,0,0,0,0,10,30,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,244,"                final long d = gcd(i, j);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,245,                result = (result / (j / d)) * (i / d);,34,13,0,3,6,0,0,0,0,49,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,246,                i++;,2,0,0,0,0,0,0,0,0,3,4,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,248,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,252,            int i = n - k + 1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,253,            for (int j = 1; j <= k; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,254,"                final long d = gcd(i, j);",0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,255,"                result = mulAndCheck(result / (j / d), i / d);",12,3,0,2,4,0,2,0,0,18,46,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,256,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,259,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,285,"        checkBinomial(n, k);",0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,286,        if ((n == k) || (k == 0)) {,16,4,0,3,7,0,0,0,0,21,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,287,            return 1d;,6,1,0,0,0,2,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,289,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,11,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,290,            return n;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,292,        if (k > n/2) {,4,2,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,293,"            return binomialCoefficientDouble(n, n - k);",6,1,0,1,2,2,6,0,0,14,43,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,295,        if (n < 67) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,296,"            return binomialCoefficient(n,k);",0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,299,        double result = 1d;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,300,        for (int i = 1; i <= k; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,301,             result *= (double)(n - k + i) / (double)i;,10,3,0,3,6,0,0,0,0,14,42,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,304,        return FastMath.floor(result + 0.5);,2,1,0,1,2,1,4,0,0,7,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,326,"        checkBinomial(n, k);",2,1,0,1,2,0,0,0,0,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,327,        if ((n == k) || (k == 0)) {,8,4,0,3,7,0,0,0,0,12,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,328,            return 0;,6,1,0,0,0,1,0,0,0,7,9,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,330,        if ((k == 1) || (k == n - 1)) {,6,4,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,331,            return FastMath.log(n);,0,0,0,1,2,1,6,0,0,6,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,338,        if (n < 67) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,339,"            return FastMath.log(binomialCoefficient(n,k));",0,0,0,2,4,1,16,0,0,16,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,346,        if (n < 1030) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,347,"            return FastMath.log(binomialCoefficientDouble(n, k));",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,350,        if (k > n / 2) {,2,1,1,1,3,1,0,0,0,7,16,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,351,"            return binomialCoefficientLog(n, n - k);",2,0,1,1,2,1,0,0,0,5,40,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,357,        double logSum = 0;,4,0,0,0,0,0,0,0,0,5,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,360,        for (int i = n - k + 1; i <= n; i++) {,16,3,0,1,3,0,0,0,0,21,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,361,            logSum += FastMath.log(i);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,365,        for (int i = 2; i <= k; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,366,            logSum -= FastMath.log(i);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,369,        return logSum;,6,1,0,0,0,1,0,0,0,7,14,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,381,        if (n < k) {,24,10,0,1,3,0,0,0,0,35,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,382,"            throw new NumberIsTooLargeException(LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,",0,0,0,0,1,0,0,0,0,1,87,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,385,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,386,"            throw new NotPositiveException(LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER, n);",6,0,0,1,2,0,0,2,0,8,80,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,388,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,401,"        if (equals(x, y, eps)) {",0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,402,            return 0;,4,2,1,0,0,1,0,0,0,9,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,403,        } else if (x < y) {,4,1,0,1,4,0,4,0,0,10,19,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,404,          return -1;,0,0,1,0,0,1,0,0,0,7,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,406,        return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,417,        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,429,"        return equals(x, y, 1);",2,0,0,1,2,1,6,0,0,9,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,442,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, 1);",4,1,0,4,8,1,0,0,0,5,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,456,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",6,3,0,2,4,1,10,0,0,19,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,471,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",4,0,0,3,6,1,0,0,0,5,64,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,495,        assert maxUlps > 0 && maxUlps < NAN_GAP;,2,0,0,0,0,0,0,0,0,2,40,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,497,        int xInt = Float.floatToIntBits(x);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,498,        int yInt = Float.floatToIntBits(y);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,501,        if (xInt < 0) {,8,1,1,1,3,0,0,0,0,12,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,502,            xInt = SGN_MASK_FLOAT - xInt;,6,1,0,0,0,0,0,0,0,8,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,504,        if (yInt < 0) {,4,1,0,1,3,0,0,0,0,5,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,505,            yInt = SGN_MASK_FLOAT - yInt;,6,1,0,0,0,0,0,0,0,8,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,508,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,22,4,0,1,2,1,4,0,0,32,61,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,510,        return isEqual && !Float.isNaN(x) && !Float.isNaN(y);,4,2,0,2,4,1,12,0,0,20,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,526,"        return (Float.isNaN(x) && Float.isNaN(y)) || equals(x, y, maxUlps);",0,0,0,4,8,1,0,0,0,13,67,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,540,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,541,            return !((x == null) ^ (y == null));,6,3,0,3,6,1,0,0,0,10,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,543,        if (x.length != y.length) {,10,1,0,1,3,0,0,0,0,12,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,544,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,546,        for (int i = 0; i < x.length; ++i) {,12,1,0,1,3,1,6,0,0,21,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,547,"            if (!equals(x[i], y[i])) {",4,3,1,4,9,0,2,0,0,22,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,548,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,551,        return true;,6,1,1,0,0,1,0,0,0,12,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,566,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,567,            return !((x == null) ^ (y == null));,8,3,0,3,6,2,0,2,0,15,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,569,        if (x.length != y.length) {,2,0,0,1,3,1,6,2,0,11,27,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,570,            return false;,6,3,0,0,0,1,8,0,0,18,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,572,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,573,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,1,4,9,0,2,0,0,11,38,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,574,                return false;,6,1,0,0,0,1,0,0,0,8,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,577,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,589,"        return equals(x, y, 1);",0,0,0,1,2,1,6,0,0,6,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,602,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);",0,2,0,4,8,1,18,0,0,20,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,617,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;",6,3,0,2,4,1,10,2,0,21,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,632,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);",6,3,0,3,6,1,10,0,0,19,64,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,655,        assert maxUlps > 0 && maxUlps < NAN_GAP;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,657,        long xInt = Double.doubleToLongBits(x);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,658,        long yInt = Double.doubleToLongBits(y);,2,1,1,1,2,0,6,0,0,16,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,661,        if (xInt < 0) {,6,0,1,1,3,1,0,0,0,9,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,662,            xInt = SGN_MASK - xInt;,6,1,0,0,0,0,0,0,0,8,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,664,        if (yInt < 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,665,            yInt = SGN_MASK - yInt;,6,1,0,0,0,0,0,0,0,8,23,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,668,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,670,        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);,12,3,0,2,4,1,12,0,0,31,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,686,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);",2,3,0,4,8,1,20,0,0,25,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,700,        if ((x == null) || (y == null)) {,4,3,0,3,7,0,0,0,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,701,            return !((x == null) ^ (y == null));,4,3,0,3,6,1,0,0,0,8,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,703,        if (x.length != y.length) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,704,            return false;,6,0,1,0,0,1,0,0,0,10,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,706,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,707,"            if (!equals(x[i], y[i])) {",0,0,0,4,9,0,0,0,0,13,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,708,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,711,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,726,        if ((x == null) || (y == null)) {,14,4,0,3,7,0,0,0,0,20,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,727,            return !((x == null) ^ (y == null));,4,3,0,3,6,1,0,0,0,8,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,729,        if (x.length != y.length) {,8,1,0,1,3,0,6,0,0,15,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,730,            return false;,18,2,0,0,0,3,8,2,0,33,13,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,732,        for (int i = 0; i < x.length; ++i) {,10,1,0,1,3,0,0,0,0,12,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,733,"            if (!equalsIncludingNaN(x[i], y[i])) {",0,0,0,4,9,0,0,0,0,13,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,734,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,737,        return true;,4,0,0,0,0,1,0,0,0,4,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,765,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,766,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",12,1,0,0,1,0,0,2,0,16,77,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,769,        if (n > 20) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,770,            throw new MathArithmeticException();,0,0,0,1,2,0,0,2,0,2,36,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,772,        return FACTORIALS[n];,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,789,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,790,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",6,0,0,0,1,0,0,2,0,9,77,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,793,        if (n < 21) {,6,1,0,1,3,0,6,0,0,13,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,794,            return factorial(n);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,796,        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);,0,1,0,3,6,1,12,0,0,13,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,807,        if (n < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,808,"            throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,",12,2,1,0,1,1,0,2,0,19,77,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,811,        if (n < 21) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,812,            return FastMath.log(factorial(n));,16,5,0,2,4,1,8,0,0,29,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,814,        double logSum = 0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,815,        for (int i = 2; i <= n; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,816,            logSum += FastMath.log(i);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,818,        return logSum;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,851,        int u = p;,20,2,1,0,0,3,2,4,0,33,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,852,        int v = q;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,853,        if ((u == 0) || (v == 0)) {,10,4,0,3,7,1,0,0,0,15,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,854,            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {,22,5,0,3,7,0,0,0,0,28,59,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,855,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",4,0,0,0,1,0,0,2,0,6,72,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,858,            return FastMath.abs(u) + FastMath.abs(v);,6,1,0,2,4,1,0,0,0,7,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,865,        if (u > 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,866,            u = -u;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,868,        if (v > 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,869,            v = -v;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,872,        int k = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,873,        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are,12,9,0,3,7,0,8,0,0,30,69,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,875,            u /= 2;,2,0,0,0,0,0,0,0,0,3,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,876,            v /= 2;,4,0,1,0,0,0,0,0,0,12,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,877,            k++; // cast out twos.,6,1,0,0,0,0,0,0,0,8,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,879,        if (k == 31) {,6,2,0,1,3,0,0,0,0,9,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,880,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,",4,0,0,0,1,0,0,2,0,6,72,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,885,        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,0,0,0,3,6,0,0,0,0,9,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,891,            while ((t & 1) == 0) { // while t is even..,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,892,                t /= 2; // cast out twos,0,1,0,0,0,0,12,0,0,13,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,895,            if (t > 0) {,8,1,0,1,3,0,0,0,0,10,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,896,                u = -t;,8,0,0,0,0,0,0,0,0,11,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,898,                v = t;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,901,            t = (v - u) / 2;,6,2,0,1,2,0,0,0,0,9,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,904,        } while (t != 0);,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,905,        return -u * (1 << k); // gcd is u*2^k,4,2,0,1,2,1,0,0,0,7,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,938,        long u = p;,4,0,0,0,0,0,0,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,939,        long v = q;,4,0,0,0,0,0,0,0,0,4,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,940,        if ((u == 0) || (v == 0)) {,10,4,0,3,7,0,0,0,0,15,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,941,            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,942,"                throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",6,1,1,0,1,0,0,2,0,18,72,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,945,            return FastMath.abs(u) + FastMath.abs(v);,0,1,0,2,4,1,12,0,0,13,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,952,        if (u > 0) {,16,4,0,1,3,0,0,0,0,22,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,953,            u = -u;,4,0,0,0,0,0,0,0,0,6,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,955,        if (v > 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,956,            v = -v;,10,1,0,0,0,0,0,0,0,14,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,959,        int k = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,960,        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are,6,7,0,3,7,0,0,0,0,13,69,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,962,            u /= 2;,6,0,0,0,0,0,0,0,0,7,7,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,963,            v /= 2;,6,0,0,0,0,0,0,0,0,7,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,964,            k++; // cast out twos.,8,0,0,0,0,0,0,0,0,9,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,966,        if (k == 63) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,967,"            throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,",4,0,0,0,1,0,0,2,0,6,72,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,972,        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;,0,0,0,3,6,0,0,0,0,9,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,978,            while ((t & 1) == 0) { // while t is even..,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,979,                t /= 2; // cast out twos,2,0,0,0,0,0,0,0,0,3,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,982,            if (t > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,983,                u = -t;,4,0,0,0,0,0,0,0,0,6,7,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,985,                v = t;,6,1,1,0,0,0,0,0,0,13,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,988,            t = (v - u) / 2;,6,2,0,1,2,0,0,0,0,9,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,991,        } while (t != 0);,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,992,        return -u * (1L << k); // gcd is u*2^k,4,2,0,1,2,1,6,0,0,13,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1002,        return new Double(value).hashCode();,8,1,0,2,4,1,2,2,0,14,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1013,        return Arrays.hashCode(value);,2,0,1,1,2,2,6,0,0,13,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1024,        return (x >= ZB) ? PB : NB;,8,1,0,1,2,1,0,0,0,9,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1036,        if (Double.isNaN(x)) {,4,1,0,2,5,0,6,0,0,12,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1037,            return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1039,        return (x >= 0.0) ? 1.0 : -1.0;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1050,        if (Float.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1051,            return Float.NaN;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1053,        return (x >= 0.0F) ? 1.0F : -1.0F;,2,1,0,1,2,1,0,0,0,4,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1063,        return (x >= 0) ? 1 : -1;,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1073,        return (x >= 0L) ? 1L : -1L;,6,1,0,1,2,1,0,0,0,10,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1084,        return (x >= ZS) ? PS : NS;,2,0,0,1,2,1,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1110,        if (a == 0 || b == 0){,4,3,0,1,3,0,0,0,0,7,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1111,            return 0;,4,1,0,0,0,1,0,0,0,5,9,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1113,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",4,1,0,3,6,0,14,0,0,19,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1114,        if (lcm == Integer.MIN_VALUE) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1115,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,",0,0,0,0,1,0,0,0,0,1,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1118,        return lcm;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1144,        if (a == 0 || b == 0){,4,3,0,1,3,0,0,0,0,7,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1145,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1147,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));",0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1148,        if (lcm == Long.MIN_VALUE){,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1149,"            throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,",4,0,0,0,1,0,0,2,0,6,72,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1152,        return lcm;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1172,        return FastMath.log(x)/FastMath.log(base);,0,1,0,2,4,1,20,0,0,21,42,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1186,        long m = ((long)x) * ((long)y);,12,1,0,4,8,0,0,2,0,15,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1187,        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1188,            throw new MathArithmeticException();,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1190,        return (int)m;,10,0,0,1,2,1,0,0,0,10,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1205,        if (a > b) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1207,"            ret = mulAndCheck(b, a);",2,0,0,1,2,0,6,0,0,9,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1209,            if (a < 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1210,                if (b < 0) {,2,1,0,1,3,0,0,0,0,3,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1212,                    if (a >= Long.MAX_VALUE / b) {,8,2,0,1,3,0,0,0,0,10,30,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1213,                        ret = a * b;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1215,                        throw new MathArithmeticException();,2,0,0,1,2,1,2,2,0,7,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1217,                } else if (b > 0) {,2,1,0,1,4,0,0,0,0,3,19,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1219,                    if (Long.MIN_VALUE / b <= a) {,18,3,0,1,3,0,0,0,0,22,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1220,                        ret = a * b;,2,0,0,0,0,0,0,0,0,2,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1222,                        throw new MathArithmeticException();,0,0,0,1,2,0,0,2,0,2,36,15,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1227,                    ret = 0;,6,0,0,0,0,0,0,0,0,8,8,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1229,            } else if (a > 0) {,8,2,0,1,4,0,0,0,0,10,19,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1234,                if (a <= Long.MAX_VALUE / b) {,8,2,0,1,3,0,0,0,0,10,30,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1235,                    ret = a * b;,6,1,0,0,0,0,0,0,0,8,12,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1237,                    throw new MathArithmeticException();,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1241,                ret = 0;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1244,        return ret;,12,2,0,0,0,2,0,0,0,16,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1267,         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);,0,0,0,2,4,1,0,0,0,7,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1292,         if (Double.isInfinite(normalizedSum)) {,8,1,0,2,5,0,6,0,0,16,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1293,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);,6,0,0,1,2,0,0,2,0,8,76,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1295,         if (Double.isNaN(normalizedSum)) {,0,0,0,2,5,0,6,0,0,6,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1296,             throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);,4,0,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1298,         double sum = 0d;,8,2,1,0,0,1,2,0,0,17,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1299,         final int len = values.length;,6,0,0,0,0,1,0,0,0,7,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1300,         double[] out = new double[len];,4,0,1,2,4,2,0,0,0,8,31,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1301,         for (int i = 0; i < len; i++) {,6,0,0,1,3,0,0,0,0,6,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1302,             if (Double.isInfinite(values[i])) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1303,"                 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);",6,0,1,2,4,0,0,2,0,12,94,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1305,             if (!Double.isNaN(values[i])) {,0,0,0,3,7,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1306,                 sum += values[i];,2,0,1,1,2,0,0,0,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1309,         if (sum == 0) {,10,1,0,1,3,0,0,0,0,14,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1310,             throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);,6,0,0,1,2,0,6,2,0,14,71,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1312,         for (int i = 0; i < len; i++) {,10,2,0,1,3,0,0,0,0,13,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1313,             if (Double.isNaN(values[i])) {,2,0,1,3,7,0,4,0,0,12,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1314,                 out[i] = Double.NaN;,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1316,                 out[i] = values[i] * normalizedSum / sum;,10,3,1,2,4,0,0,0,0,22,41,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1319,         return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1332,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",4,0,0,1,2,1,6,0,0,10,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1349,            return (new BigDecimal,0,0,0,0,1,1,0,2,0,2,22,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1353,        } catch (NumberFormatException ex) {,2,0,0,1,4,0,0,2,0,4,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1354,            if (Double.isInfinite(x)) {,8,3,0,2,5,0,26,0,0,38,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1355,                return x;,8,1,0,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1357,                return Double.NaN;,2,0,0,0,0,1,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1359,        } catch (RuntimeException ex) {,10,2,0,1,4,0,0,2,0,15,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1360,            throw new MathRuntimeException(ex);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1374,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);",6,0,0,1,2,2,6,0,0,13,49,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1390,        float sign = indicator(x);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1391,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;",4,1,0,2,4,0,6,0,0,11,56,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1392,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;",0,0,0,2,4,1,0,0,0,7,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1409,        switch (roundingMethod) {,6,0,0,1,3,0,0,0,0,8,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1411,            if (sign == -1) {,6,1,0,1,3,0,0,0,0,8,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1412,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",6,0,0,2,4,0,10,0,0,17,82,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1414,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",16,2,1,2,4,0,10,0,0,36,81,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1416,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1418,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",0,0,0,2,4,0,0,0,0,6,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1419,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1421,            if (sign == -1) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1422,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));",8,0,0,2,4,0,10,0,0,20,81,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1424,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));",8,0,0,2,4,0,14,0,0,24,82,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1426,            break;,6,1,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1428,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);",6,0,0,1,2,0,6,0,0,13,66,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1429,            double fraction = unscaled - FastMath.floor(unscaled);,6,1,0,1,2,0,6,0,0,13,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1430,            if (fraction > 0.5) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1431,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1433,                unscaled = FastMath.floor(unscaled);,4,1,0,1,2,0,6,0,0,12,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1435,            break;,0,0,0,0,0,0,6,0,0,6,6,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1438,            double fraction = unscaled - FastMath.floor(unscaled);,4,1,0,1,2,0,6,0,0,11,54,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1439,            if (fraction > 0.5) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1440,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1441,            } else if (fraction < 0.5) {,2,1,0,1,4,0,0,0,0,3,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1442,                unscaled = FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1445,                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math,16,5,0,1,4,0,12,2,0,37,57,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1447,                    unscaled = FastMath.floor(unscaled);,2,0,0,1,2,0,6,0,0,9,36,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1449,                    unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1452,            break;,4,0,0,0,0,0,0,0,0,4,6,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1455,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);",6,0,0,1,2,0,14,0,0,21,66,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1456,            double fraction = unscaled - FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1457,            if (fraction >= 0.5) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1458,                unscaled = FastMath.ceil(unscaled);,2,0,0,1,2,0,6,0,0,9,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1460,                unscaled = FastMath.floor(unscaled);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1462,            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1465,            if (unscaled != FastMath.floor(unscaled)) {,2,1,0,2,5,0,6,0,0,9,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1466,                throw new MathArithmeticException();,0,0,0,1,2,0,0,2,0,2,36,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1470,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));",8,1,1,2,4,0,10,0,0,24,82,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1471,            break;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1473,"            throw new MathIllegalArgumentException(LocalizedFormats.INVALID_ROUNDING_METHOD,",2,0,0,0,1,1,8,0,0,11,80,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1484,        return unscaled;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1498,        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;,6,1,0,2,4,1,0,0,0,7,43,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1514,        if (Double.isNaN(x)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1515,            return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1517,        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;,4,2,0,2,4,1,0,0,0,7,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1532,        if (Float.isNaN(x)) {,0,0,0,2,5,0,6,0,0,6,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1533,            return Float.NaN;,10,1,0,0,0,1,12,0,0,23,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1535,        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;,4,2,0,2,4,1,0,0,0,7,54,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1549,        return (x == 0) ? 0 : (x > 0) ? 1 : -1;,6,2,0,2,4,1,4,0,0,14,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1563,        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;,4,2,0,2,4,1,8,0,0,15,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1574,        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;,14,2,0,2,4,1,0,0,0,16,43,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1585,        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;,2,2,0,3,6,1,10,0,0,15,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1599,        long s = (long)x - (long)y;,10,2,0,2,4,0,0,0,0,12,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1600,        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {,20,4,0,1,3,0,0,0,0,26,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1601,"            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1603,        return (int)s;,2,0,0,1,2,1,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1618,        if (b == Long.MIN_VALUE) {,10,1,0,1,3,0,6,0,0,18,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1619,            if (a < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1620,                ret = a - b;,6,1,0,0,0,0,0,0,0,8,12,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1622,"                throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, a, -b);",8,0,0,1,2,0,0,2,0,11,80,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1626,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);",12,0,0,1,2,0,4,0,0,19,64,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1628,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1640,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1641,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",6,0,0,1,2,0,0,2,0,8,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1644,        int result = 1;,8,1,0,0,0,0,0,0,0,11,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1645,        int k2p    = k;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1646,        while (e != 0) {,6,1,0,1,3,0,0,0,0,8,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1647,            if ((e & 0x1) != 0) {,0,0,0,2,5,0,0,0,0,1,21,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1648,                result *= k2p;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1650,            k2p *= k2p;,12,13,0,0,0,0,4,0,0,30,11,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1651,            e = e >> 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1654,        return result;,2,0,1,0,0,1,0,0,0,5,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1666,        if (e < 0) {,0,0,0,1,3,0,12,0,0,12,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1667,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1670,        int result = 1;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1671,        int k2p    = k;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1672,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1673,            if ((e & 0x1) != 0) {,2,2,0,2,5,0,0,0,0,4,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1674,                result *= k2p;,8,1,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1676,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1677,            e = e >> 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1680,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1692,        if (e < 0) {,2,1,1,1,3,0,8,0,0,15,12,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1693,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",6,0,0,1,2,0,0,2,0,8,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1696,        long result = 1l;,4,0,0,0,0,0,12,4,0,20,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1697,        long k2p    = k;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1698,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1699,            if ((e & 0x1) != 0) {,16,4,0,2,5,0,0,0,0,23,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1700,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1702,            k2p *= k2p;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1703,            e = e >> 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1706,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1718,        if (e < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1719,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",6,0,0,1,2,0,0,2,0,8,61,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1722,        long result = 1l;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1723,        long k2p    = k;,4,0,0,0,0,0,0,0,0,4,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1724,        while (e != 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1725,            if ((e & 0x1) != 0) {,8,0,1,2,5,1,0,0,0,13,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1726,                result *= k2p;,4,0,0,0,0,0,0,0,0,5,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1728,            k2p *= k2p;,6,1,0,0,0,0,0,0,0,8,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1729,            e = e >> 1;,0,0,1,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1732,        return result;,4,0,0,0,0,1,0,4,0,9,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1744,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1745,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1748,        return k.pow(e);,0,0,0,1,2,1,6,0,0,6,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1760,        if (e < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1761,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1764,        BigInteger result = BigInteger.ONE;,4,1,1,0,0,0,0,0,0,8,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1765,        BigInteger k2p    = k;,6,0,0,0,0,1,2,2,0,11,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1766,        while (e != 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1767,            if ((e & 0x1) != 0) {,4,2,0,2,5,0,0,0,0,7,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1768,                result = result.multiply(k2p);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1770,            k2p = k2p.multiply(k2p);,2,0,0,1,2,0,6,0,0,9,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1771,            e = e >> 1;,4,1,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1774,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1787,        if (e.compareTo(BigInteger.ZERO) < 0) {,4,1,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1788,"            throw new NotPositiveException(LocalizedFormats.EXPONENT, e);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1791,        BigInteger result = BigInteger.ONE;,6,0,0,0,0,0,0,2,0,8,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1792,        BigInteger k2p    = k;,4,0,0,0,0,0,0,2,0,6,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1793,        while (!BigInteger.ZERO.equals(e)) {,6,0,1,2,5,0,0,0,0,8,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1794,            if (e.testBit(0)) {,0,0,0,2,5,0,4,0,0,4,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1795,                result = result.multiply(k2p);,4,0,1,1,2,1,6,0,0,14,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1797,            k2p = k2p.multiply(k2p);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1798,            e = e.shiftRight(1);,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1801,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1812,        double sum = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1813,        for (int i = 0; i < p1.length; i++) {,18,2,0,1,3,0,0,0,0,22,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1814,            sum += FastMath.abs(p1[i] - p2[i]);,2,1,1,3,6,0,4,0,0,16,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1816,        return sum;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1827,      int sum = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1828,      for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1829,          sum += FastMath.abs(p1[i] - p2[i]);,2,1,1,3,6,0,4,0,0,16,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1831,      return sum;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1842,        double sum = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1843,        for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,6,0,0,18,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1844,            final double dp = p1[i] - p2[i];,20,5,1,2,4,1,4,0,0,40,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1845,            sum += dp * dp;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1847,        return FastMath.sqrt(sum);,0,0,1,1,2,1,6,0,0,13,26,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1858,      double sum = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1859,      for (int i = 0; i < p1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1860,          final double dp = p1[i] - p2[i];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1861,          sum += dp * dp;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1863,      return FastMath.sqrt(sum);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1874,        double max = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1875,        for (int i = 0; i < p1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1876,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",2,1,1,4,8,0,10,0,0,22,53,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1878,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1889,        int max = 0;,2,0,0,0,0,0,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1890,        for (int i = 0; i < p1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1891,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));",0,0,0,4,8,0,0,0,0,12,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1893,        return max;,8,2,0,0,0,1,6,0,0,16,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1919,        double previous = val[0];,2,0,1,1,2,0,0,0,0,4,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1920,        boolean ok = true;,2,0,0,0,0,0,0,0,0,3,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1922,        int max = val.length;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1923,        for (int i = 1; i < max; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1924,            switch (dir) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1926,                if (strict) {,6,3,0,1,3,0,8,0,0,17,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1927,                    if (val[i] <= previous) {,2,1,1,2,5,0,0,0,0,7,25,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1928,                        ok = false;,2,0,0,0,0,0,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1931,                    if (val[i] < previous) {,2,1,0,2,5,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1932,                        ok = false;,4,0,0,0,0,0,0,0,0,6,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1937,                if (strict) {,4,0,0,1,3,0,0,0,0,5,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1938,                    if (val[i] >= previous) {,6,1,1,2,5,0,0,0,0,13,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1939,                        ok = false;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1942,                    if (val[i] > previous) {,2,1,1,2,5,0,0,0,0,7,24,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1943,                        ok = false;,2,0,0,0,0,0,0,0,0,4,11,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1949,                throw new IllegalArgumentException();,2,0,0,1,2,0,0,2,0,4,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1952,            if (!ok &&,10,2,0,0,1,0,0,0,0,14,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1954,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);",8,0,1,2,4,0,0,2,0,14,75,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1956,            previous = val[i];,2,0,1,1,2,0,0,0,0,7,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1959,        return ok;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1973,"        checkOrder(val, dir, strict, true);",0,0,0,1,2,0,8,0,0,9,35,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1974,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1984,"        checkOrder(val, OrderDirection.INCREASING, true);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1985,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1995,        if (Double.isInfinite(x) || Double.isNaN(x)) {,0,1,0,3,7,0,12,0,0,13,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1996,            throw new NotFiniteNumberException(x);,2,0,0,1,2,0,0,2,0,4,38,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1998,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2008,        for (int i = 0; i < val.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2009,            final double x = val[i];,24,9,1,1,2,1,8,0,0,46,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2010,            if (Double.isInfinite(x) || Double.isNaN(x)) {,0,0,0,3,7,0,0,0,0,10,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2011,"                throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);",4,0,0,1,2,0,0,0,0,5,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2014,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2077,        double rdwarf = 3.834e-20;,2,0,0,0,0,0,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2078,        double rgiant = 1.304e+19;,2,0,0,0,0,0,0,0,0,2,26,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2079,        double s1 = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2080,        double s2 = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2081,        double s3 = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2082,        double x1max = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2083,        double x3max = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2084,        double floatn = (double) v.length;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2085,        double agiant = rgiant / floatn;,6,1,0,0,0,0,0,0,0,7,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2086,        for (int i = 0; i < v.length; i++) {,20,2,0,1,3,0,0,0,0,24,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2087,            double xabs = Math.abs(v[i]);,2,0,1,2,4,0,4,0,0,10,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2088,            if (xabs < rdwarf || xabs > agiant) {,10,3,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2089,                if (xabs > rdwarf) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2090,                    if (xabs > x1max) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2091,                        double r = x1max / xabs;,6,1,0,0,0,0,0,0,0,7,24,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2092,                        s1= 1 + s1 * r * r;,8,2,0,0,0,0,0,0,0,11,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2093,                        x1max = xabs;,4,0,0,0,0,0,0,0,0,5,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2094,                    } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2095,                        double r = xabs / x1max;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2096,                        s1 += r * r;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2097,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2099,                    if (xabs > x3max) {,4,1,0,1,3,0,0,0,0,5,19,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2100,                        double r = x3max / xabs;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2101,                        s3= 1 + s3 * r * r;,8,2,0,0,0,0,0,0,0,11,19,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2102,                        x3max = xabs;,4,0,0,0,0,0,0,0,0,5,13,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2103,                    } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2104,                        if (xabs != 0) {,2,1,0,1,3,0,0,0,0,3,16,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2105,                            double r = xabs / x3max;,6,1,0,0,0,0,0,0,0,7,24,15,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2106,                            s3 += r * r;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2107,                        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2111,                s2 += xabs * xabs;,6,1,0,0,0,0,0,0,0,8,18,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2115,        if (s1 != 0) {,2,1,0,1,3,0,6,0,0,9,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2116,            norm = x1max * Math.sqrt(s1 + (s2 / x1max) / x1max);,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2118,            if (s2 == 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2119,                norm = x3max * Math.sqrt(s3);,4,1,0,1,2,0,6,0,0,12,29,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2121,                if (s2 >= x3max) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2122,                    norm = Math.sqrt(s2 * (1 + (x3max / s2) * (x3max * s3)));,12,5,0,4,8,0,4,0,0,22,57,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2124,                    norm = Math.sqrt(x3max * ((s2 / x3max) + (x3max * s3)));,0,0,0,4,8,0,0,0,0,12,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2128,        return norm;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2143,"        sortInPlace(x, OrderDirection.INCREASING, yList);",4,0,0,1,2,0,6,0,0,10,49,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2159,        if (x == null ||,14,3,0,0,1,1,2,0,0,21,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2161,            throw new NullArgumentException();,0,0,0,1,2,0,0,2,0,2,34,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2164,        final int len = x.length;,6,0,0,0,0,1,0,0,0,7,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2165,"        final List<Pair<Double, double[]>> list",2,0,0,1,2,1,0,6,0,9,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2168,        final int yListLen = yList.length;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2169,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2170,            final double[] yValues = new double[yListLen];,10,1,1,2,4,1,0,0,0,15,46,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2171,            for (int j = 0; j < yListLen; j++) {,12,1,0,1,3,1,4,0,0,19,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2172,                double[] y = yList[j];,8,1,0,2,4,1,0,0,0,10,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2173,                if (y.length != len) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2174,"                    throw new DimensionMismatchException(y.length, len);",6,0,0,1,2,0,0,2,0,8,52,11,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2176,                yValues[j] = y[i];,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2178,"            list.add(new Pair<Double, double[]>(x[i], yValues));",0,0,0,4,8,0,0,0,0,12,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2181,"        final Comparator<Pair<Double, double[]>> comp",4,2,0,1,2,0,0,0,0,6,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2201,"        Collections.sort(list, comp);",0,0,0,1,2,0,8,0,0,8,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2203,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2204,"            final Pair<Double, double[]> e = list.get(i);",6,1,0,2,4,1,6,4,0,19,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2205,            x[i] = e.getKey();,0,0,1,2,4,0,4,0,0,9,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2206,            final double[] yValues = e.getValue();,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2207,            for (int j = 0; j < yListLen; j++) {,8,1,0,1,3,0,0,0,0,10,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2208,                yList[j][i] = yValues[j];,12,2,1,3,6,0,0,0,0,28,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2211,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2230,"         return copyOf(source, source.length);",4,0,0,1,2,1,4,0,0,8,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2258,         final double[] output = new double[len];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2259,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",0,0,0,2,4,0,0,0,0,6,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2260,         return output;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2274,        if (o == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2275,"            throw new NullArgumentException(pattern, args);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2277,    },8,2,0,0,1,1,0,0,0,11,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2286,        if (o == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2287,            throw new NullArgumentException();,2,0,0,1,2,0,0,2,0,4,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,2289,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MathUtils,56,1924,            switch (dir) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,93,            for (int i = 0; i < dimension; i++) {,8,1,0,1,3,0,4,0,0,15,37,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,94,                if (counter[i] != size[i] - 1) {,4,3,1,3,7,0,0,0,0,16,32,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,95,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,98,            return false;,0,0,0,0,0,1,0,0,0,1,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,106,            for (int i = last; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,107,                if (counter[i] == size[i] - 1) {,0,2,1,3,7,0,0,0,0,10,32,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,108,                    counter[i] = 0;,2,0,0,1,2,1,2,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,110,                    ++counter[i];,0,0,1,1,2,0,0,0,0,5,13,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,111,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,115,            return ++count;,2,0,0,0,0,1,0,0,0,3,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,124,            return count;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,132,            return MathUtils.copyOf(counter);,0,0,0,1,2,1,6,0,0,6,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,154,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,71,    public class Iterator implements java.util.Iterator<Integer> {,0,0,0,0,1,0,0,0,0,1,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,184,            throw new NotStrictlyPositiveException(tS);,2,0,0,1,2,0,0,2,0,4,43,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,219,"            throw new OutOfRangeException(index, 0, totalSize);",4,0,0,1,2,0,0,0,0,5,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,222,        final int[] indices = new int[dimension];,2,0,1,2,4,1,0,0,0,5,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,224,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,225,        for (int i = 0; i < last; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,226,            int idx = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,227,            final int offset = uniCounterOffset[i];,2,0,1,1,2,1,0,0,0,7,39,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,228,            while (count <= index) {,4,1,0,1,3,0,0,0,0,5,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,229,                count += offset;,10,3,1,0,0,0,0,0,0,19,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,230,                ++idx;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,232,            --idx;,2,0,0,0,0,0,0,0,0,3,6,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,233,            count -= offset;,12,2,1,0,0,0,0,0,0,21,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,234,            indices[i] = idx;,6,0,0,1,2,0,0,0,0,6,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,237,        int idx = 1;,4,0,0,0,0,1,8,0,0,13,12,3,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,238,        while (count < index) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,239,            count += idx;,6,1,0,0,0,0,14,0,0,23,13,3,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,240,            ++idx;,6,2,0,0,0,0,0,0,0,9,6,3,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,242,        --idx;,2,0,0,0,0,0,0,0,0,3,6,4,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,243,        indices[last] = idx;,0,0,0,1,2,0,0,0,0,3,20,4,0.0,1,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,245,        return indices;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,261,"            throw new DimensionMismatchException(c.length, dimension);",6,0,0,1,2,0,0,2,0,8,58,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,268,"                throw new OutOfRangeException(index, 0, size[i] - 1);",2,1,1,2,4,0,0,2,0,9,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,281,        return totalSize;,4,1,0,0,0,1,0,0,0,5,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,289,        return MathUtils.copyOf(size);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,297,        final StringBuilder sb = new StringBuilder();,8,1,0,1,2,1,0,4,0,15,45,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,298,        for (int i = 0; i < dimension; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,299,"            sb.append(""["").append(getCount(i)).append(""]"");",0,0,0,5,10,0,12,0,0,14,47,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,301,        return sb.toString();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,250,    private FastMath() {,4,0,0,1,3,1,12,0,0,18,20,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,251,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,263,        if (d > -MathUtils.SAFE_MIN && d < MathUtils.SAFE_MIN){,12,3,0,1,3,0,0,0,0,16,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,264,            return d; // These are un-normalised - don't try to convert,0,0,0,0,0,1,0,0,0,1,59,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,266,        long xl = Double.doubleToLongBits(d);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,267,        xl = xl & MASK_30BITS; // Drop low order bits,8,1,0,0,0,0,0,0,0,10,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,268,        return Double.longBitsToDouble(xl);,6,2,0,1,2,1,0,0,0,9,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,277,        return Math.sqrt(a);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,285,      if (x != x) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,286,          return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,289,      if (x > 20.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,290,          return exp(x)/2.0;,0,1,0,1,2,1,4,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,293,      if (x < -20) {,4,2,0,1,3,0,4,0,0,11,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,294,          return exp(-x)/2.0;,0,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,297,      double hiPrec[] = new double[2];,6,2,0,2,4,0,0,0,0,8,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,298,      if (x < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,299,          x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,301,"      exp(x, 0.0, hiPrec);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,303,      double ya = hiPrec[0] + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,304,      double yb = -(ya - hiPrec[0] - hiPrec[1]);,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,306,      double temp = ya * HEX_40000000;,8,2,1,0,0,0,4,0,0,19,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,307,      double yaa = ya + temp - temp;,8,2,0,0,0,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,308,      double yab = ya - yaa;,6,2,1,0,0,0,0,0,0,12,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,311,      double recip = 1.0/ya;,10,2,0,0,0,0,0,0,0,13,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,312,      temp = recip * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,313,      double recipa = recip + temp - temp;,8,2,0,0,0,0,0,0,0,10,36,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,314,      double recipb = recip - recipa;,8,1,0,0,0,0,0,0,0,10,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,317,      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,319,      recipb += -yb * recip * recip;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,322,      temp = ya + recipa;,6,1,0,0,0,0,0,0,0,8,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,323,      yb += -(temp - ya - recipa);,16,5,0,1,2,0,0,0,0,22,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,324,      ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,325,      temp = ya + recipb;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,326,      yb += -(temp - ya - recipb);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,327,      ya = temp;,2,0,1,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,329,      double result = ya + yb;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,330,      result *= 0.5;,8,1,0,0,0,1,0,0,0,11,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,331,      return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,339,      boolean negate = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,340,      if (x != x) {,2,1,0,1,3,0,0,0,0,3,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,341,          return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,344,      if (x > 20.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,345,          return exp(x)/2.0;,8,4,0,1,2,1,4,0,0,17,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,348,      if (x < -20) {,4,1,0,1,3,0,0,0,0,7,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,349,          return -exp(-x)/2.0;,2,1,0,1,2,1,2,0,0,7,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,352,      if (x == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,353,          return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,356,      if (x < 0.0) {,2,0,0,1,3,0,0,0,0,2,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,357,          x = -x;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,358,          negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,363,      if (x > 0.25) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,364,          double hiPrec[] = new double[2];,6,3,0,2,4,0,0,0,0,9,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,365,"          exp(x, 0.0, hiPrec);",2,0,0,1,2,1,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,367,          double ya = hiPrec[0] + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,368,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,4,1,1,3,6,0,0,0,0,10,42,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,370,          double temp = ya * HEX_40000000;,10,1,0,0,0,0,0,0,0,11,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,371,          double yaa = ya + temp - temp;,12,3,1,0,0,0,0,0,0,20,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,372,          double yab = ya - yaa;,8,1,1,0,0,0,0,0,0,12,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,375,          double recip = 1.0/ya;,10,2,0,0,0,1,0,0,0,13,22,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,376,          temp = recip * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,28,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,377,          double recipa = recip + temp - temp;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,378,          double recipb = recip - recipa;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,381,          recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;,0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,383,          recipb += -yb * recip * recip;,8,1,0,0,0,0,0,0,0,9,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,385,          recipa = -recipa;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,386,          recipb = -recipb;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,389,          temp = ya + recipa;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,390,          yb += -(temp - ya - recipa);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,391,          ya = temp;,8,1,0,0,0,0,0,0,0,10,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,392,          temp = ya + recipb;,6,1,0,0,0,0,0,0,0,8,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,393,          yb += -(temp - ya - recipb);,4,0,0,1,2,0,4,0,0,8,28,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,394,          ya = temp;,6,1,0,0,0,0,0,0,0,7,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,396,          result = ya + yb;,8,1,0,0,0,0,0,0,0,10,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,397,          result *= 0.5;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,398,      },6,0,0,0,1,1,0,0,0,7,1,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,400,          double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,401,"          expm1(x, hiPrec);",0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,403,          double ya = hiPrec[0] + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,404,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,407,          double denom = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,408,          double denomr = 1.0 / denom;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,409,          double denomb = -(denom - 1.0 - ya) + yb;,4,0,0,1,2,0,0,0,0,4,41,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,410,          double ratio = ya * denomr;,8,2,0,0,0,0,0,0,0,10,27,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,411,          double temp = ratio * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,412,          double ra = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,413,          double rb = ratio - ra;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,415,          temp = denom * HEX_40000000;,12,2,0,0,0,0,0,0,0,16,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,416,          double za = denom + temp - temp;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,417,          double zb = denom - za;,14,2,0,0,0,0,0,0,0,16,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,419,          rb += (ya - za*ra - za*rb - zb*ra - zb*rb) * denomr;,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,422,          rb += yb*denomr;                        // numerator,0,0,0,0,0,0,0,0,0,0,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,423,          rb += -ya * denomb * denomr * denomr;   // denominator,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,426,          temp = ya + ra;,6,1,0,0,0,0,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,427,          yb += -(temp - ya - ra);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,428,          ya = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,429,          temp = ya + rb;,8,1,0,0,0,0,0,0,0,10,15,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,430,          yb += -(temp - ya - rb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,431,          ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,433,          result = ya + yb;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,434,          result *= 0.5;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,437,      if (negate) {,12,5,0,1,3,0,4,0,0,22,13,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,438,          result = -result;,4,0,0,0,0,0,0,0,0,6,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,441,      return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,449,      boolean negate = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,451,      if (x != x) {,4,1,0,1,3,0,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,452,          return x;,10,1,0,0,0,2,2,0,0,16,9,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,455,      if (x > 20.0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,456,          return 1.0;,6,1,0,0,0,1,0,0,0,8,11,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,459,      if (x < -20) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,460,          return -1.0;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,463,      if (x == 0) {,2,0,0,1,3,0,0,0,0,2,13,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,464,          return x;,0,0,0,0,0,1,8,0,0,8,9,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,467,      if (x < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,468,          x = -x;,6,0,0,0,0,0,0,0,0,9,7,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,469,          negate = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,473,      if (x >= 0.5) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,474,          double hiPrec[] = new double[2];,4,0,0,2,4,0,0,0,0,5,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,476,"          exp(x*2.0, 0.0, hiPrec);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,478,          double ya = hiPrec[0] + hiPrec[1];,4,1,1,2,4,0,6,0,0,15,34,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,479,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,482,          double na = -1.0 + ya;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,483,          double nb = -(na + 1.0 - ya);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,484,          double temp = na + yb;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,485,          nb += -(temp - na - yb);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,486,          na = temp;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,489,          double da = 1.0 + ya;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,490,          double db = -(da - 1.0 - ya);,6,1,0,1,2,0,0,0,0,8,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,491,          temp = da + yb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,492,          db += -(temp - da - yb);,8,4,0,1,2,0,8,0,0,21,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,493,          da = temp;,2,0,0,0,0,1,2,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,495,          temp = da * HEX_40000000;,14,2,0,0,0,0,0,0,0,19,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,496,          double daa = da + temp - temp;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,497,          double dab = da - daa;,6,1,0,0,0,0,0,0,0,7,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,500,          double ratio = na/da;,22,4,0,0,0,1,2,0,0,32,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,501,          temp = ratio * HEX_40000000;,2,0,0,0,0,0,0,0,0,2,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,502,          double ratioa = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,503,          double ratiob = ratio - ratioa;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,506,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,509,          ratiob += nb / da;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,511,          ratiob += -db * na / da / da;,10,3,0,0,0,0,0,0,0,15,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,513,          result = ratioa + ratiob;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,514,      },22,9,0,0,1,0,0,0,0,32,1,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,516,          double hiPrec[] = new double[2];,12,17,0,2,4,0,0,0,0,30,32,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,518,"          expm1(x*2.0, hiPrec);",4,2,1,1,2,0,4,0,0,13,21,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,520,          double ya = hiPrec[0] + hiPrec[1];,2,1,1,2,4,0,0,0,0,7,34,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,521,          double yb = -(ya - hiPrec[0] - hiPrec[1]);,0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,524,          double na = ya;,4,0,0,0,0,0,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,525,          double nb = yb;,4,0,0,0,0,0,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,528,          double da = 2.0 + ya;,4,1,0,0,0,0,0,0,0,5,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,529,          double db = -(da - 2.0 - ya);,6,1,0,1,2,0,0,0,0,8,29,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,530,          double temp = da + yb;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,531,          db += -(temp - da - yb);,10,2,0,1,2,0,0,0,0,14,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,532,          da = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,534,          temp = da * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,535,          double daa = da + temp - temp;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,536,          double dab = da - daa;,6,1,0,0,0,0,0,0,0,7,22,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,539,          double ratio = na/da;,6,1,0,0,0,0,0,0,0,7,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,540,          temp = ratio * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,541,          double ratioa = ratio + temp - temp;,10,1,0,0,0,0,0,0,0,12,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,542,          double ratiob = ratio - ratioa;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,545,          ratiob += (na - daa*ratioa - daa*ratiob - dab*ratioa - dab*ratiob) / da;,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,548,          ratiob += nb / da;,6,1,0,0,0,0,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,550,          ratiob += -db * na / da / da;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,552,          result = ratioa + ratiob;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,555,      if (negate) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,556,          result = -result;,6,2,0,0,0,0,0,0,0,10,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,559,      return result;,9,2,1,0,0,2,0,2,0,19,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,567,        return FastMath.log(a + FastMath.sqrt(a * a - 1));,0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,576,        boolean negative = false;,8,3,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,577,        if (a < 0) {,2,1,0,1,3,0,0,0,0,3,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,578,            negative = true;,2,0,0,0,0,0,0,0,0,4,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,579,            a = -a;,6,0,0,0,0,0,0,0,0,9,7,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,583,        if (a > 0.167) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,584,            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,586,            final double a2 = a * a;,10,1,0,0,0,1,4,0,0,16,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,587,            if (a > 0.097) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,588,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,2,1,0,9,18,0,0,0,0,3,264,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,589,            } else if (a > 0.036) {,0,0,0,1,4,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,590,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,10,2,0,7,14,1,0,0,0,13,196,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,591,            } else if (a > 0.0036) {,4,1,1,1,4,0,0,0,0,8,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,592,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);,4,1,0,5,10,0,0,0,0,7,129,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,594,                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);,10,10,0,3,6,0,0,0,0,21,71,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,598,        return negative ? -absAsinh : absAsinh;,6,0,0,0,0,1,0,0,0,7,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,608,        boolean negative = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,609,        if (a < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,610,            negative = true;,8,1,0,0,0,0,0,0,0,12,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,611,            a = -a;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,615,        if (a > 0.15) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,616,            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));,6,4,0,3,6,0,4,0,0,15,49,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,618,            final double a2 = a * a;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,619,            if (a > 0.087) {,12,2,0,1,3,0,0,0,0,17,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,620,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));,20,25,0,9,18,0,0,0,0,46,175,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,621,            } else if (a > 0.031) {,4,2,0,1,4,0,0,0,0,6,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,622,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));,0,0,0,7,14,0,0,0,0,21,135,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,623,            } else if (a > 0.003) {,0,0,0,1,4,0,0,0,0,5,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,624,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));,0,0,0,5,10,0,0,0,0,15,95,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,626,                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));,6,1,0,3,6,0,0,0,0,8,57,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,630,        return negative ? -absAtanh : absAtanh;,0,0,0,0,0,1,0,0,0,1,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,640,        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a); // return +0.0/-0.0/NaN depending on a,10,1,0,3,6,2,18,0,0,31,87,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,649,        return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a); // return +0.0/-0.0/NaN depending on a,6,2,0,3,6,2,0,0,0,9,91,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,657,"        return nextAfter(a, Double.POSITIVE_INFINITY);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,665,"        return nextAfter(a, Float.POSITIVE_INFINITY);",4,0,0,1,2,1,4,0,0,8,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,673,        return Math.random();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,697,"        return exp(x, 0.0, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,716,        if (x < 0.0) {,2,1,0,1,3,0,0,0,0,3,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,717,            intVal = (int) -x;,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,719,            if (intVal > 746) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,720,                if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,721,                    hiPrec[0] = 0.0;,8,2,1,1,2,1,0,0,0,14,16,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,722,                    hiPrec[1] = 0.0;,10,2,0,1,2,0,0,0,0,13,16,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,724,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,727,            if (intVal > 709) {,6,1,0,1,3,0,0,0,0,9,19,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,729,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;",6,1,0,1,2,0,0,0,0,8,79,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,730,                if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,731,                    hiPrec[0] /= 285040095144011776.0;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,732,                    hiPrec[1] /= 285040095144011776.0;,0,0,1,1,2,0,0,0,0,3,34,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,734,                return result;,8,2,0,0,0,1,0,0,0,11,14,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,737,            if (intVal == 709) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,739,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;",2,0,0,1,2,1,2,0,0,5,79,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,740,                if (hiPrec != null) {,4,1,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,741,                    hiPrec[0] /= 4.455505956692756620;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,742,                    hiPrec[1] /= 4.455505956692756620;,26,10,1,1,2,1,0,0,0,41,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,744,                return result;,4,1,0,0,0,2,6,0,0,12,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,747,            intVal++;,6,2,0,0,0,0,0,0,0,9,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,749,            intPartA = EXP_INT_TABLE_A[750-intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,750,            intPartB = EXP_INT_TABLE_B[750-intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,752,            intVal = -intVal;,16,3,0,0,0,0,0,0,0,23,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,754,            intVal = (int) x;,4,0,0,1,2,0,0,0,0,5,17,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,756,            if (intVal > 709) {,2,1,0,1,3,0,0,0,0,3,19,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,757,                if (hiPrec != null) {,8,5,0,1,3,0,6,0,0,19,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,758,                    hiPrec[0] = Double.POSITIVE_INFINITY;,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,759,                    hiPrec[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,761,                return Double.POSITIVE_INFINITY;,8,1,0,0,0,1,0,0,0,10,32,12,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,764,            intPartA = EXP_INT_TABLE_A[750+intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,765,            intPartB = EXP_INT_TABLE_B[750+intVal];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,772,        final int intFrac = (int) ((x - intVal) * 1024.0);,0,0,0,3,6,0,0,0,0,9,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,773,        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,774,        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,780,        final double epsilon = x - (intVal + intFrac / 1024.0);,8,3,0,1,2,1,0,0,0,12,55,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,789,        double z = 0.04168701738764507;,2,0,0,0,0,0,0,0,0,2,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,790,        z = z * epsilon + 0.1666666505023083;,2,0,0,0,0,1,0,4,0,7,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,791,        z = z * epsilon + 0.5000000000042687;,2,1,0,0,0,0,4,0,0,7,37,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,792,        z = z * epsilon + 1.0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,793,        z = z * epsilon + -3.940510424527919E-20;,8,1,0,0,0,0,0,0,0,10,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,800,        double tempA = intPartA * fracPartA;,20,4,0,0,0,0,0,0,0,25,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,801,        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;,2,0,1,0,0,0,0,0,0,6,82,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,807,        final double tempC = tempB + tempA;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,809,        if (extra != 0.0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,810,            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;,0,0,0,0,0,0,0,0,0,0,63,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,812,            result = tempC*z + tempB + tempA;,14,3,0,0,0,0,0,0,0,18,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,815,        if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,817,            hiPrec[0] = tempA;,2,0,1,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,818,            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;,0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,821,        return result;,8,1,0,0,0,1,4,0,0,13,14,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,829,"      return expm1(x, null);",0,0,0,1,2,1,8,0,0,9,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,838,        if (x != x || x == 0.0) { // NaN or zero,8,4,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,839,            return x;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,842,        if (x <= -1.0 || x >= 1.0) {,4,3,0,1,3,0,0,0,0,8,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,845,            double hiPrec[] = new double[2];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,846,"            exp(x, 0.0, hiPrec);",0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,847,            if (x > 0.0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,848,                return -1.0 + hiPrec[0] + hiPrec[1];,0,0,0,2,4,1,0,0,0,7,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,850,                final double ra = -1.0 + hiPrec[0];,2,1,1,1,2,1,0,0,0,7,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,851,                double rb = -(ra + 1.0 - hiPrec[0]);,2,0,0,2,4,0,0,0,0,3,36,2,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,852,                rb += hiPrec[1];,4,0,0,1,2,0,0,0,0,5,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,853,                return ra + rb;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,860,        boolean negative = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,862,        if (x < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,863,            x = -x;,4,0,0,0,0,0,0,0,0,5,7,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,864,            negative = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,868,            int intFrac = (int) (x * 1024.0);,4,1,0,2,4,0,0,0,0,5,33,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,869,            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;,12,3,0,1,2,0,0,0,0,16,47,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,870,            double tempB = EXP_FRAC_TABLE_B[intFrac];,2,0,1,1,2,0,0,0,0,6,41,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,872,            double temp = tempA + tempB;,2,0,0,0,0,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,873,            tempB = -(temp - tempA - tempB);,4,2,0,1,2,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,874,            tempA = temp;,8,0,0,0,0,0,0,2,0,11,13,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,876,            temp = tempA * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,877,            baseA = tempA + temp - temp;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,878,            baseB = tempB + (tempA - baseA);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,880,            epsilon = x - intFrac/1024.0;,6,2,0,0,0,0,0,0,0,9,29,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,885,        double zb = 0.008336750013465571;,2,0,0,0,0,0,0,0,0,2,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,886,        zb = zb * epsilon + 0.041666663879186654;,6,2,0,0,0,0,0,0,0,9,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,887,        zb = zb * epsilon + 0.16666666666745392;,6,2,0,0,0,0,0,0,0,9,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,888,        zb = zb * epsilon + 0.49999999999999994;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,889,        zb = zb * epsilon;,12,2,1,0,0,0,0,0,0,19,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,890,        zb = zb * epsilon;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,892,        double za = epsilon;,2,1,0,0,0,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,893,        double temp = za + zb;,10,1,0,0,0,0,0,0,0,12,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,894,        zb = -(temp - za - zb);,10,2,0,1,2,0,0,0,0,13,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,895,        za = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,897,        temp = za * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,898,        temp = za + temp - temp;,8,2,0,0,0,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,899,        zb += za - temp;,4,4,0,0,0,0,0,0,0,8,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,900,        za = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,903,        double ya = za * baseA;,4,1,0,0,0,0,0,0,0,6,23,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,905,        temp = ya + za * baseB;,8,2,0,0,0,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,906,        double yb = -(temp - ya - za * baseB);,14,3,1,1,2,0,0,0,0,22,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,907,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,909,        temp = ya + zb * baseA;,8,2,0,0,0,0,0,0,0,11,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,910,        yb += -(temp - ya - zb * baseA);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,911,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,913,        temp = ya + zb * baseB;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,914,        yb += -(temp - ya - zb*baseB);,18,4,0,1,2,1,0,0,0,25,30,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,915,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,919,        temp = ya + baseA;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,920,        yb += -(temp - baseA - ya);,8,1,0,1,2,0,0,0,0,11,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,921,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,923,        temp = ya + za;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,925,        yb += -(temp - ya - za);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,926,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,928,        temp = ya + baseB;,22,5,0,0,0,0,0,0,0,30,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,930,        yb += -(temp - ya - baseB);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,931,        ya = temp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,933,        temp = ya + zb;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,935,        yb += -(temp - ya - zb);,8,1,0,1,2,0,0,0,0,11,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,936,        ya = temp;,4,0,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,938,        if (negative) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,940,            double denom = 1.0 + ya;,8,2,0,0,0,0,0,0,0,10,24,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,941,            double denomr = 1.0 / denom;,2,0,0,0,0,0,0,0,0,2,28,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,942,            double denomb = -(denom - 1.0 - ya) + yb;,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,943,            double ratio = ya * denomr;,8,1,0,0,0,0,0,0,0,9,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,944,            temp = ratio * HEX_40000000;,10,2,0,0,0,0,0,0,0,14,28,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,945,            final double ra = ratio + temp - temp;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,946,            double rb = ratio - ra;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,948,            temp = denom * HEX_40000000;,12,2,0,0,0,1,0,0,0,16,28,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,949,            za = denom + temp - temp;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,950,            zb = denom - za;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,952,            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;,22,9,0,1,2,0,0,0,0,32,60,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,963,            rb += yb * denomr;                      // numerator,0,0,0,0,0,0,0,0,0,0,52,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,964,            rb += -ya * denomb * denomr * denomr;   // denominator,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,967,            ya = -ra;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,968,            yb = -rb;,4,0,0,0,0,0,0,0,0,6,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,971,        if (hiPrecOut != null) {,6,2,0,1,3,0,0,0,0,8,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,972,            hiPrecOut[0] = ya;,8,0,1,1,2,0,0,0,0,12,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,973,            hiPrecOut[1] = yb;,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,976,        return ya + yb;,4,1,0,0,0,1,0,0,0,5,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1026,            final double a = d * 9.31322574615478515625E-10;,4,1,0,0,0,1,0,0,0,6,48,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1027,            split[0] = (d + a - d) * HEX_40000000;,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1028,            split[1] = d - split[0];,2,1,1,2,4,0,4,0,0,12,24,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1099,            in[0] = in[1];,0,0,1,2,4,0,0,0,0,5,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1100,            in[1] = 0.0;,10,1,1,1,2,0,0,0,0,15,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1231,"        return log(x, null);",0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1241,        if (x==0) { // Handle special case of +0/-0,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1242,            return Double.NEGATIVE_INFINITY;,18,4,0,0,0,1,8,0,0,31,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1244,        long bits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1247,        if ((bits & 0x8000000000000000L) != 0 || x != x) {,0,0,0,2,5,0,0,0,0,7,50,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1248,            if (x != 0.0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1249,                if (hiPrec != null) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1250,                    hiPrec[0] = Double.NaN;,8,0,1,1,2,0,0,0,0,13,23,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1253,                return Double.NaN;,4,3,0,0,0,1,0,0,0,8,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1258,        if (x == Double.POSITIVE_INFINITY) {,16,2,0,1,3,0,0,0,0,19,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1259,            if (hiPrec != null) {,0,0,0,1,3,0,6,0,0,6,21,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1260,                hiPrec[0] = Double.POSITIVE_INFINITY;,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1263,            return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1267,        int exp = (int)(bits >> 52)-1023;,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1269,        if ((bits & 0x7ff0000000000000L) == 0) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1271,            if (x == 0) {,2,1,0,1,3,0,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1273,                if (hiPrec != null) {,12,3,0,1,3,0,0,0,0,16,21,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1274,                    hiPrec[0] = Double.NEGATIVE_INFINITY;,14,5,0,1,2,0,0,0,0,20,37,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1277,                return Double.NEGATIVE_INFINITY;,0,1,1,0,0,1,0,0,0,5,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1281,            bits <<= 1;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1282,            while ( (bits & 0x0010000000000000L) == 0) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1283,                exp--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1284,                bits <<= 1;,8,1,0,0,0,0,0,0,0,11,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1289,        if (exp == -1 || exp == 0) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1290,            if (x < 1.01 && x > 0.99 && hiPrec == null) {,2,2,0,1,3,0,12,0,0,16,45,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1295,                double xa = x - 1.0;,0,0,0,0,0,0,8,0,0,8,20,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1296,                double xb = xa - x + 1.0;,8,2,0,0,0,1,2,0,0,13,25,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1297,                double tmp = xa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1298,                double aa = xa + tmp - tmp;,8,2,0,0,0,0,0,0,0,10,27,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1299,                double ab = xa - aa;,12,2,0,0,0,1,0,0,0,15,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1300,                xa = aa;,2,0,0,0,0,0,0,0,0,2,8,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1301,                xb = ab;,12,2,0,0,0,0,0,0,0,16,8,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1303,                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1304,                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1306,                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,53,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1308,                    aa = ya * xa;,6,1,0,0,0,0,0,0,0,8,13,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1309,                    ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1311,                    tmp = aa * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1312,                    ya = aa + tmp - tmp;,14,3,0,0,0,0,0,0,0,18,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1313,                    yb = aa - ya + ab;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1316,                    aa = ya + LN_QUICK_COEF[i][0];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1317,                    ab = yb + LN_QUICK_COEF[i][1];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1319,                    tmp = aa * HEX_40000000;,2,1,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1320,                    ya = aa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1321,                    yb = aa - ya + ab;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1325,                aa = ya * xa;,6,1,0,0,0,0,0,0,0,8,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1326,                ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1328,                tmp = aa * HEX_40000000;,6,2,0,0,0,0,0,0,0,9,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1329,                ya = aa + tmp - tmp;,8,1,1,0,0,1,0,0,0,14,20,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1330,                yb = aa - ya + ab;,14,3,0,0,0,0,0,0,0,19,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1332,                return ya + yb;,4,1,0,0,0,1,0,0,0,5,15,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1337,        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];,0,0,0,5,10,0,0,0,0,15,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1348,        double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));,2,0,0,3,6,0,10,4,0,16,89,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1350,        double lnza = 0.0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1351,        double lnzb = 0.0;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1353,        if (hiPrec != null) {,0,0,0,1,3,0,4,0,0,4,21,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1355,            double tmp = epsilon * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1356,            double aa = epsilon + tmp - tmp;,10,1,0,0,0,0,0,0,0,12,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1357,            double ab = epsilon - aa;,4,0,0,0,0,0,0,2,0,6,25,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1358,            double xa = aa;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1359,            double xb = ab;,2,1,0,0,0,0,0,0,0,4,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1362,            double numer = bits & 0x3ffffffffffL;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1363,            double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1364,            aa = numer - xa*denom - xb * denom;,12,4,0,0,0,0,0,0,0,17,35,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1365,            xb += aa / denom;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1368,            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];,0,0,0,2,4,0,0,0,0,6,57,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1369,            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];,8,2,0,2,4,0,0,0,0,10,57,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1371,            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {,14,3,0,1,3,0,0,0,0,18,55,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1373,                aa = ya * xa;,6,1,0,0,0,0,0,0,0,8,13,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1374,                ab = ya * xb + yb * xa + yb * xb;,14,5,0,0,0,0,0,0,0,20,33,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1376,                tmp = aa * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,24,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1377,                ya = aa + tmp - tmp;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1378,                yb = aa - ya + ab;,6,2,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1381,                aa = ya + LN_HI_PREC_COEF[i][0];,4,1,1,2,4,0,0,0,0,10,32,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1382,                ab = yb + LN_HI_PREC_COEF[i][1];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1384,                tmp = aa * HEX_40000000;,8,1,0,0,0,0,0,0,0,10,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1385,                ya = aa + tmp - tmp;,8,2,0,0,0,0,0,0,0,11,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1386,                yb = aa - ya + ab;,20,6,0,0,0,1,0,0,0,28,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1390,            aa = ya * xa;,6,1,0,0,0,0,0,0,0,8,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1391,            ab = ya * xb + yb * xa + yb * xb;,12,2,0,0,0,0,0,0,0,14,33,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1399,            lnza = aa + ab;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1400,            lnzb = -(lnza - aa - ab);,2,0,0,1,2,1,8,0,0,11,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1401,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1404,            lnza = -0.16624882440418567;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1405,            lnza = lnza * epsilon + 0.19999954120254515;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1406,            lnza = lnza * epsilon + -0.2499999997677497;,8,1,0,0,0,0,0,0,0,11,44,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1407,            lnza = lnza * epsilon + 0.3333333333332802;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1408,            lnza = lnza * epsilon + -0.5;,6,2,0,0,0,0,0,0,0,10,29,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1409,            lnza = lnza * epsilon + 1.0;,10,3,0,0,0,0,0,0,0,14,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1410,            lnza = lnza * epsilon;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1427,        double a = LN_2_A*exp;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1428,        double b = 0.0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1429,        double c = a+lnm[0];,4,1,1,1,2,0,0,0,0,7,20,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1430,        double d = -(c-a-lnm[0]);,6,1,1,2,4,0,0,0,0,10,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1431,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1432,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1434,        c = a + lnza;,2,0,0,0,0,0,0,0,0,3,13,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1435,        d = -(c - a - lnza);,8,1,0,1,2,0,0,0,0,11,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1436,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1437,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1439,        c = a + LN_2_B*exp;,8,2,0,0,0,0,0,0,0,11,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1440,        d = -(c - a - LN_2_B*exp);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1441,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1442,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1444,        c = a + lnm[1];,10,3,0,1,2,0,0,0,0,13,15,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1445,        d = -(c - a - lnm[1]);,4,0,0,2,4,0,0,0,0,4,22,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1446,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1447,        b = b + d;,8,2,1,0,0,0,0,0,0,15,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1449,        c = a + lnzb;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1450,        d = -(c - a - lnzb);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1451,        a = c;,4,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1452,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1454,        if (hiPrec != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1455,            hiPrec[0] = a;,2,1,0,1,2,0,0,0,0,3,14,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1456,            hiPrec[1] = b;,2,0,0,1,2,0,0,0,0,3,14,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1459,        return a + b;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1467,        double xpa = 1.0 + x;,0,0,0,0,0,0,0,0,0,1,21,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1468,        double xpb = -(xpa - 1.0 - x);,6,1,0,1,2,0,0,0,0,8,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1470,        if (x == -1) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1471,            return x/0.0;   // -Infinity,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1474,        if (x > 0 && 1/x == 0) { // x = Infinity,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1475,            return x;,4,0,0,0,0,1,0,0,0,4,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1478,        if (x>1e-6 || x<-1e-6) {,4,3,0,1,3,0,0,0,0,8,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1479,            double hiPrec[] = new double[2];,4,0,0,2,4,0,0,0,0,4,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1481,"            final double lores = log(xpa, hiPrec);",10,4,1,1,2,1,6,0,0,30,38,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1482,            if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,6,1,0,2,5,0,6,0,0,14,73,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1483,                return lores;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1488,            double fx1 = xpb/xpa;,2,0,0,0,0,0,4,0,0,7,21,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1490,            double epsilon = 0.5 * fx1 + 1.0;,4,2,0,0,0,0,0,0,0,6,33,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1491,            epsilon = epsilon * fx1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1493,            return epsilon + hiPrec[1] + hiPrec[0];,2,0,0,2,4,1,0,0,0,2,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1497,        double y = x * 0.333333333333333 - 0.5;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1498,        y = y * x + 1.0;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1499,        y = y * x;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1501,        return y;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1509,        final double hiPrec[] = new double[2];,6,2,0,2,4,1,0,0,0,10,38,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1511,"        final double lores = log(x, hiPrec);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1512,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,0,0,0,0,7,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1513,            return lores;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1516,        final double tmp = hiPrec[0] * HEX_40000000;,20,3,1,1,2,2,0,0,0,27,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1517,        final double lna = hiPrec[0] + tmp - tmp;,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1518,        final double lnb = hiPrec[0] - lna + hiPrec[1];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1520,        final double rln10a = 0.4342944622039795;,2,0,0,0,0,1,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1521,        final double rln10b = 1.9699272335463627E-8;,14,3,1,0,0,2,0,0,0,24,44,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1523,        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;,16,7,0,0,0,1,0,0,0,23,65,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1534,        final double lns[] = new double[2];,2,0,0,2,4,1,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1536,        if (y == 0.0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1537,            return 1.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1540,        if (x != x) { // X is NaN,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1541,            return x;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1545,        if (x == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1546,            long bits = Double.doubleToLongBits(x);,18,2,0,1,2,0,6,0,0,27,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1547,            if ((bits & 0x8000000000000000L) != 0) {,2,2,0,2,5,0,0,0,0,4,40,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1549,                long yi = (long) y;,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1551,                if (y < 0 && y == yi && (yi & 1) == 1) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1552,                    return Double.NEGATIVE_INFINITY;,6,0,0,0,0,1,0,0,0,7,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1555,                if (y < 0 && y == yi && (yi & 1) == 1) {,2,1,0,2,5,0,0,0,0,3,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1556,                    return -0.0;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1559,                if (y > 0 && y == yi && (yi & 1) == 1) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1560,                    return -0.0;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1564,            if (y < 0) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1565,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1567,            if (y > 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1568,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1571,            return Double.NaN;,6,0,0,0,0,1,0,2,0,8,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1574,        if (x == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1575,            if (y != y) { // y is NaN,4,1,0,1,3,0,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1576,                return y;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1578,            if (y < 0.0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1579,                return 0.0;,8,1,0,0,0,1,0,0,0,10,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1581,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1585,        if (y == Double.POSITIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1586,            if (x * x == 1.0),0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1587,              return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1589,            if (x * x > 1.0) {,4,2,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1590,                return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1592,                return 0.0;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1596,        if (x == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1597,            if (y != y) { // y is NaN,4,1,0,1,3,0,0,0,0,5,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1598,                return y;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1601,            if (y < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1602,                long yi = (long) y;,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1603,                if (y == yi && (yi & 1) == 1) {,2,0,0,2,5,0,0,0,0,3,31,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1604,                    return -0.0;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1607,                return 0.0;,6,2,1,0,0,1,0,0,0,12,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1610,            if (y > 0)  {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1611,                long yi = (long) y;,4,0,0,1,2,0,0,0,0,4,19,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1612,                if (y == yi && (yi & 1) == 1) {,8,5,0,2,5,0,0,0,0,13,31,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1613,                    return Double.NEGATIVE_INFINITY;,14,2,1,0,0,1,0,0,0,21,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1616,                return Double.POSITIVE_INFINITY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1620,        if (y == Double.NEGATIVE_INFINITY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1622,            if (x * x == 1.0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1623,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1626,            if (x * x < 1.0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1627,                return Double.POSITIVE_INFINITY;,4,0,0,0,0,1,0,0,0,4,32,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1629,                return 0.0;,12,2,0,0,0,2,0,0,0,16,11,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1634,        if (x < 0) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1636,            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {,8,3,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1637,"                return pow(-x, y);",0,0,0,1,2,1,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1640,            if (y == (long) y) {,6,1,0,2,5,0,0,0,0,8,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1642,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);",6,2,0,4,8,1,8,0,0,19,53,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1644,                return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1651,        if (y < 8e298 && y > -8e298) {,4,3,0,1,3,0,0,0,0,8,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1652,            double tmp1 = y * HEX_40000000;,20,4,0,0,0,1,0,0,0,26,31,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1653,            ya = y + tmp1 - tmp1;,0,0,0,0,0,0,0,0,0,1,21,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1654,            yb = y - ya;,4,0,0,0,0,0,0,0,0,5,12,10,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1655,        } else {,6,2,0,0,2,0,0,0,0,8,8,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1656,            double tmp1 = y * 9.31322574615478515625E-10;,6,1,0,0,0,0,0,0,0,7,45,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1657,            double tmp2 = tmp1 * 9.31322574615478515625E-10;,0,0,0,0,0,0,0,0,0,0,48,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1658,            ya = (tmp1 + tmp2 - tmp1) * HEX_40000000 * HEX_40000000;,0,0,0,1,2,0,0,0,0,3,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1659,            yb = y - ya;,6,1,0,0,0,0,0,0,0,8,12,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1663,"        final double lores = log(x, lns);",0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1664,        if (Double.isInfinite(lores)){ // don't allow this to be converted to NaN,0,0,0,2,5,0,0,0,0,7,73,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1665,            return lores;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1668,        double lna = lns[0];,2,0,0,1,2,0,0,0,0,2,20,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1669,        double lnb = lns[1];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1672,        double tmp1 = lna * HEX_40000000;,6,1,0,0,0,0,0,0,0,7,33,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1673,        double tmp2 = lna + tmp1 - tmp1;,8,2,0,0,0,0,0,0,0,10,32,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1674,        lnb += lna - tmp2;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1675,        lna = tmp2;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1678,        final double aa = lna * ya;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1679,        final double ab = lna * yb + lnb * ya + lnb * yb;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1681,        lna = aa+ab;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1682,        lnb = -(lna - aa - ab);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1684,        double z = 1.0 / 120.0;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1685,        z = z * lnb + (1.0 / 24.0);,2,0,0,1,2,0,0,0,0,2,27,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1686,        z = z * lnb + (1.0 / 6.0);,6,3,0,1,2,0,0,0,0,10,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1687,        z = z * lnb + 0.5;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1688,        z = z * lnb + 1.0;,6,2,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1689,        z = z * lnb;,16,5,1,0,0,2,4,0,0,33,12,1,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1691,"        final double result = exp(lna, z, null);",2,0,0,1,2,1,6,0,0,10,40,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1693,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1948,        double x2 = x*x;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1950,        double p = 2.7553817452272217E-6;,4,0,0,0,0,0,0,2,0,7,33,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1951,        p = p * x2 + -1.9841269659586505E-4;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1952,        p = p * x2 + 0.008333333333329196;,6,1,0,0,0,0,0,0,0,8,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1953,        p = p * x2 + -0.16666666666666666;,10,3,0,0,0,0,0,0,0,15,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1956,        p = p * x2 * x;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1958,        return p;,2,0,0,0,0,2,0,0,0,3,9,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1968,        double x2 = x*x;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1970,        double p = 2.479773539153719E-5;,12,1,0,0,0,0,0,0,0,14,32,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1971,        p = p * x2 + -0.0013888888689039883;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1972,        p = p * x2 + 0.041666666666621166;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1973,        p = p * x2 + -0.49999999999999994;,10,3,0,0,0,0,0,0,0,15,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1974,        p *= x2;,4,0,0,0,0,0,0,0,0,5,8,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1976,        return p;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1987,        int idx = (int) ((xa * 8.0) + 0.5);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1988,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,4,1,0,1,2,0,0,0,0,5,54,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1991,        final double sintA = SINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1992,        final double sintB = SINE_TABLE_B[idx];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1993,        final double costA = COSINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1994,        final double costB = COSINE_TABLE_B[idx];,2,0,1,1,2,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1997,        double sinEpsA = epsilon;,4,1,0,0,0,0,0,0,0,6,25,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1998,        double sinEpsB = polySine(epsilon);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,1999,        final double cosEpsA = 1.0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2000,        final double cosEpsB = polyCosine(epsilon);,2,1,0,1,2,0,0,0,0,3,43,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2003,        final double temp = sinEpsA * HEX_40000000;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2004,        double temp2 = (sinEpsA + temp) - temp;,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2005,        sinEpsB +=  sinEpsA - temp2;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2006,        sinEpsA = temp2;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2032,        double a = 0;,8,2,0,0,0,0,0,0,0,11,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2033,        double b = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2035,        double t = sintA;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2036,        double c = a + t;,12,2,1,0,0,1,0,0,0,17,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2037,        double d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2038,        a = c;,16,7,0,0,0,0,0,0,0,23,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2039,        b = b + d;,12,2,0,0,0,1,0,0,0,16,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2041,        t = costA * sinEpsA;,6,1,1,0,0,0,6,0,0,19,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2042,        c = a + t;,8,1,0,0,0,0,0,0,0,12,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2043,        d = -(c - a - t);,14,3,0,1,2,0,0,0,0,20,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2044,        a = c;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2045,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2047,        b = b + sintA * cosEpsB + costA * sinEpsB;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2062,        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;,24,9,0,0,0,0,0,0,0,34,68,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2089,        if (xb != 0.0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2090,            t = ((costA + costB) * (cosEpsA + cosEpsB) -,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2092,            c = a + t;,4,0,0,0,0,0,0,0,0,4,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2093,            d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2094,            a = c;,10,2,0,0,0,0,0,0,0,13,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2095,            b = b + d;,12,2,0,0,0,0,0,0,0,15,10,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2098,        result = a + b;,2,0,0,0,0,0,6,0,0,8,15,7,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2100,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2111,        final double pi2a = 1.5707963267948966;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2112,        final double pi2b = 6.123233995736766E-17;,0,0,0,0,0,0,0,0,0,0,42,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2114,        final double a = pi2a - xa;,8,1,0,0,0,1,6,0,0,17,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2115,        double b = -(a - pi2a + xa);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2116,        b += pi2b - xb;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2118,"        return sinQ(a, b);",0,0,0,1,2,1,0,0,0,4,18,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2131,        int idx = (int) ((xa * 8.0) + 0.5);,6,1,0,3,6,1,6,0,0,14,35,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2132,        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;,4,1,1,1,2,1,6,0,0,16,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2135,        final double sintA = SINE_TABLE_A[idx];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2136,        final double sintB = SINE_TABLE_B[idx];,10,1,1,1,2,1,0,0,0,17,39,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2137,        final double costA = COSINE_TABLE_A[idx];,2,0,1,1,2,1,0,0,0,7,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2138,        final double costB = COSINE_TABLE_B[idx];,18,8,0,1,2,0,0,0,0,27,41,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2141,        double sinEpsA = epsilon;,2,2,0,0,0,0,12,0,0,16,25,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2142,        double sinEpsB = polySine(epsilon);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2143,        final double cosEpsA = 1.0;,6,2,0,0,0,2,16,0,0,26,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2144,        final double cosEpsB = polyCosine(epsilon);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2147,        double temp = sinEpsA * HEX_40000000;,2,0,0,0,0,0,6,0,0,8,37,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2148,        double temp2 = (sinEpsA + temp) - temp;,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2149,        sinEpsB +=  sinEpsA - temp2;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2150,        sinEpsA = temp2;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2175,        double a = 0;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2176,        double b = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2179,        double t = sintA;,4,0,0,0,0,0,0,0,0,4,17,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2180,        double c = a + t;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2181,        double d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2182,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2183,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2185,        t = costA*sinEpsA;,8,1,0,0,0,0,0,0,0,10,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2186,        c = a + t;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2187,        d = -(c - a - t);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2188,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2189,        b = b + d;,18,5,0,0,0,0,0,2,0,29,10,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2191,        b = b + sintA*cosEpsB + costA*sinEpsB;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2192,        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;,18,6,0,0,0,0,0,0,0,25,62,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2194,        double sina = a + b;,2,0,0,0,0,0,0,0,0,2,20,8,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2195,        double sinb = -(sina - a - b);,8,1,0,1,2,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2199,        a = b = c = d = 0.0;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2201,        t = costA*cosEpsA;,10,1,0,0,0,0,2,0,0,14,18,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2202,        c = a + t;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2203,        d = -(c - a - t);,8,2,0,1,2,0,0,0,0,12,17,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2204,        a = c;,10,1,0,0,0,0,0,0,0,12,6,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2205,        b = b + d;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2207,        t = -sintA*sinEpsA;,6,1,0,0,0,0,0,0,0,9,19,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2208,        c = a + t;,10,3,0,0,0,0,0,0,0,15,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2209,        d = -(c - a - t);,8,1,0,1,2,0,0,0,0,11,17,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2210,        a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2211,        b = b + d;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2213,        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;,18,6,0,0,0,0,0,0,0,25,54,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2214,        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);,16,6,0,1,2,0,0,0,0,23,56,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2216,        double cosa = a + b;,12,2,0,0,0,0,0,0,0,14,20,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2217,        double cosb = -(cosa - a - b);,8,1,0,1,2,0,0,0,0,10,30,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2219,        if (cotanFlag) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2221,            tmp = cosa; cosa = sina; sina = tmp;,12,0,0,0,0,0,0,0,0,15,36,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2222,            tmp = cosb; cosb = sinb; sinb = tmp;,4,1,0,0,0,0,0,0,0,6,36,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2236,        double est = sina/cosa;,6,1,0,0,0,0,0,0,0,7,23,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2239,        temp = est * HEX_40000000;,6,1,0,0,0,0,0,0,0,8,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2240,        double esta = (est + temp) - temp;,12,3,0,1,2,0,0,0,0,15,34,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2241,        double estb =  est - esta;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2243,        temp = cosa * HEX_40000000;,24,8,0,0,0,0,0,0,0,33,27,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2244,        double cosaa = (cosa + temp) - temp;,16,3,1,1,2,1,0,2,0,27,36,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2245,        double cosab =  cosa - cosaa;,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2248,        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding,22,9,0,1,2,0,0,0,0,31,114,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2249,        err += sinb/cosa;                     // Change in est due to sinb,6,1,0,0,0,0,0,0,0,8,66,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2250,        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb,16,3,0,0,0,1,0,2,0,24,66,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2252,        if (xb != 0.0) {,6,2,0,1,3,1,0,0,0,10,16,9,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2255,            double xbadj = xb + est*est*xb;,6,1,1,0,0,0,0,0,0,12,31,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2256,            if (cotanFlag) {,6,1,0,1,3,0,0,0,0,8,16,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2257,                xbadj = -xbadj;,12,1,0,0,0,0,0,4,0,19,15,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2260,            err += xbadj;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2263,        return est+err;,6,1,0,0,0,1,0,0,0,8,15,6,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2280,        long inbits = Double.doubleToLongBits(x);,2,0,0,1,2,0,6,0,0,8,41,5,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2281,        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;,6,3,0,3,6,0,0,0,0,9,53,3,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2284,        inbits &= 0x000fffffffffffffL;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2285,        inbits |= 0x0010000000000000L;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2288,        exponent++;,6,1,0,0,0,0,0,0,0,7,11,13,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2289,        inbits <<= 11;,6,1,0,0,0,0,0,0,0,8,14,4,0.0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,56,2295,        int idx = exponent >> 6;,12,2,0,0,0,1,6,0,0,23,24,3,0.0,0,0
