project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/apache/commons/math/MathException,85,106,"      super(buildMessage(Locale.US, pattern, arguments));",1.0,0,,0
org/apache/commons/math/MathException,85,107,      this.pattern   = pattern;,1.0,0,,0
org/apache/commons/math/MathException,85,108,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,1.0,0,,0
org/apache/commons/math/MathException,85,109,    },1.0,0,,0
org/apache/commons/math/MathException,85,60,            ResourceBundle bundle =,1.0,0,,0
org/apache/commons/math/MathException,85,67,        } catch (MissingResourceException mre) {,1.0,0,,0
org/apache/commons/math/MathException,85,73,        return s;,1.0,0,,0
org/apache/commons/math/MathException,85,85,"        return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        ",1.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,43,"        super(""Maximal number of iterations ({0}) exceeded"", maxIterations);",1.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,44,        this.maxIterations = maxIterations;,1.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,45,    },1.0,0,,0
org/apache/commons/math/ConvergenceException,85,45,"        super(pattern, arguments);",1.0,0,,0
org/apache/commons/math/ConvergenceException,85,46,    },1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,128,        } catch (MaxIterationsExceededException ex) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,129,            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,131,            } else if (x > (mean + 20 * standardDeviation)) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,132,                return 1.0d;,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,178,        if (p < .5) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,181,            ret = getMean();,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,184,        return ret;,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,200,        if (p < .5) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,203,            ret = Double.MAX_VALUE;,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,206,        return ret;,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,221,        if (p < .5) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,223,        } else if (p > .5) {,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,224,            ret = getMean() + getStandardDeviation();,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,229,        return ret;,1.0,0,,0
org/apache/commons/math/special/Gamma,85,181,                throw new MaxIterationsExceededException(maxIterations);,1.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,162,        return super.inverseCumulativeProbability(p);,0.5,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,156,        if (p == 0) {,0.33333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,159,        if (p == 1) {,0.33333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,72,        return mean;,0.16667,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,88,        return standardDeviation;,0.16667,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,126,            return 0.5 * (1.0 + Erf.erf((x - mean) /,0.14286,0,,0
org/apache/commons/math/special/Erf,85,51,"        double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);",0.14286,0,,0
org/apache/commons/math/special/Erf,85,52,        if (x < 0) {,0.14286,0,,0
org/apache/commons/math/special/Erf,85,55,        return ret;,0.14286,0,,0
org/apache/commons/math/special/Gamma,85,162,            ret = 0.0;,0.14286,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,54,        super();,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,43,    private double mean = 0;,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,46,    private double standardDeviation = 1;,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,55,        setMean(mean);,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,56,        setStandardDeviation(sd);,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,57,    },0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,40,    private static final double SQRT2PI = Math.sqrt(2 * Math.PI);,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,80,        this.mean = mean;,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,81,    },0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,97,        if (sd <= 0.0) {,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,102,        standardDeviation = sd;,0.08333,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,103,    },0.08333,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,69,        UnivariateRealFunction rootFindingFunction =,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,81,        double lowerBound = getDomainLowerBound(p);,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,82,        double upperBound = getDomainUpperBound(p);,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,83,        double[] bracket = null;,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,85,            bracket = UnivariateRealSolverUtils.bracket(,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,70,            new UnivariateRealFunction() {,0.06667,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,73,                    return cumulativeProbability(x) - p;,0.06667,0,,0
org/apache/commons/math/special/Gamma,85,159,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,161,        } else if (x == 0.0) {,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,163,        } else if (a >= 1.0 && x > a) {,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,169,            double n = 0.0; // current element index,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,170,            double an = 1.0 / a; // n-th element in the series,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,171,            double sum = an; // partial sum,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,172,            while (Math.abs(an) > epsilon && n < maxIterations) {,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,174,                n = n + 1.0;,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,175,                an = an * (x / (a + n));,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,178,                sum = sum + an;,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,180,            if (n >= maxIterations) {,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,183,                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;,0.0625,0,,0
org/apache/commons/math/special/Gamma,85,187,        return ret;,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,182,        double a = initial;,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,183,        double b = initial;,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,186,        int numIterations = 0 ;,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,189,"            a = Math.max(a - 1.0, lowerBound);",0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,190,"            b = Math.min(b + 1.0, upperBound);",0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,191,            fa = function.value(a);,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,193,            fb = function.value(b);,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,194,            numIterations++ ;,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,195,        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ,0.0625,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,198,        if (fa * fb >= 0.0 ) {,0.0625,1,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,127,"        return bracket( function, initial, lowerBound, upperBound,",0.05882,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,170,        if (function == null) {,0.05882,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,173,        if (maximumIterations <= 0)  {,0.05882,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,177,        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {,0.05882,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,62,        if (p < 0.0 || p > 1.0) {,0.05,0,,0
org/apache/commons/math/special/Gamma,85,41,    private static final double[] lanczos =,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,61,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,91,        if (Double.isNaN(x) || (x <= 0.0)) {,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,94,            double g = 607.0 / 128.0;,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,96,            double sum = 0.0;,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,97,            for (int i = lanczos.length - 1; i > 0; --i) {,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,98,                sum = sum + (lanczos[i] / (x + i));,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,100,            sum = sum + lanczos[0];,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,102,            double tmp = x + g + .5;,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,103,            ret = ((x + .5) * Math.log(tmp)) - tmp +,0.02703,0,,0
org/apache/commons/math/special/Gamma,85,107,        return ret;,0.02703,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,46,        super();,0.01587,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,47,    },0.01587,0,,0
org/apache/commons/math/distribution/AbstractDistribution,85,39,        super();,0.01587,0,,0
org/apache/commons/math/distribution/AbstractDistribution,85,40,    },0.01587,0,,0
org/apache/commons/math/FunctionEvaluationException,85,44,"        super(""evaluation failed for argument = {0}"", argument);",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,45,        this.argument = new double[] { argument };,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,46,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,56,"        super(""evaluation failed for argument = {0}"", new ArrayRealVector(argument));",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,57,        this.argument = argument.clone();,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,58,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,70,"        super(pattern, arguments);",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,71,        this.argument = new double[] { argument };,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,72,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,84,"        super(pattern, arguments);",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,85,        this.argument = argument.clone();,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,86,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,96,        super(cause);,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,97,        this.argument = new double[] { argument };,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,98,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,108,        super(cause);,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,109,        this.argument = argument.clone();,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,110,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,124,"        super(cause, pattern, arguments);",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,125,        this.argument = new double[] { argument };,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,126,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,140,"        super(cause, pattern, arguments);",0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,141,        this.argument = argument.clone();,0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,142,    },0.0,0,,0
org/apache/commons/math/FunctionEvaluationException,85,150,        return argument.clone();,0.0,0,,0
org/apache/commons/math/MathException,85,93,        super();,0.0,0,,0
org/apache/commons/math/MathException,85,94,        this.pattern   = null;,0.0,0,,0
org/apache/commons/math/MathException,85,95,        this.arguments = new Object[0];,0.0,0,,0
org/apache/commons/math/MathException,85,96,    },0.0,0,,0
org/apache/commons/math/MathException,85,119,        super(rootCause);,0.0,0,,0
org/apache/commons/math/MathException,85,120,        this.pattern   = getMessage();,0.0,0,,0
org/apache/commons/math/MathException,85,121,        this.arguments = new Object[0];,0.0,0,,0
org/apache/commons/math/MathException,85,122,    },0.0,0,,0
org/apache/commons/math/MathException,85,135,"      super(buildMessage(Locale.US, pattern, arguments), rootCause);",0.0,0,,0
org/apache/commons/math/MathException,85,136,      this.pattern   = pattern;,0.0,0,,0
org/apache/commons/math/MathException,85,137,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,0.0,0,,0
org/apache/commons/math/MathException,85,138,    },0.0,0,,0
org/apache/commons/math/MathException,85,62,            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {,0.0,0,,0
org/apache/commons/math/MathException,85,64,                return bundle.getString(s);,0.0,0,,0
org/apache/commons/math/MathException,85,69,        },0.0,0,,0
org/apache/commons/math/MathException,85,146,        return pattern;,0.0,0,,0
org/apache/commons/math/MathException,85,155,        return arguments.clone();,0.0,0,,0
org/apache/commons/math/MathException,85,166,"        return buildMessage(locale, pattern, arguments);",0.0,0,,0
org/apache/commons/math/MathException,85,172,        return getMessage(Locale.getDefault());,0.0,0,,0
org/apache/commons/math/MathException,85,180,        printStackTrace(System.err);,0.0,0,,0
org/apache/commons/math/MathException,85,181,    },0.0,0,,0
org/apache/commons/math/MathException,85,190,        synchronized (out) {,0.0,0,,0
org/apache/commons/math/MathException,85,191,"            PrintWriter pw = new PrintWriter(out, false);",0.0,0,,0
org/apache/commons/math/MathException,85,192,            printStackTrace(pw);,0.0,0,,0
org/apache/commons/math/MathException,85,194,            pw.flush();,0.0,0,,0
org/apache/commons/math/MathException,85,195,        },0.0,0,,0
org/apache/commons/math/MathException,85,196,    },0.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,56,"        super(pattern, arguments);",0.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,57,        this.maxIterations = maxIterations;,0.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,58,    },0.0,0,,0
org/apache/commons/math/MaxIterationsExceededException,85,64,        return maxIterations;,0.0,0,,0
org/apache/commons/math/ConvergenceException,85,34,"        super(""Convergence failed"");",0.0,0,,0
org/apache/commons/math/ConvergenceException,85,35,    },0.0,0,,0
org/apache/commons/math/ConvergenceException,85,53,        super(cause);,0.0,0,,0
org/apache/commons/math/ConvergenceException,85,54,    },0.0,0,,0
org/apache/commons/math/ConvergenceException,85,65,"        super(cause, pattern, arguments);",0.0,0,,0
org/apache/commons/math/ConvergenceException,85,66,    },0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,64,"        this(0.0, 1.0);",0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,65,    },0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,98,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,112,        double x0 = x - getMean();,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,113,        return Math.exp(-x0 * x0 / (2 * getStandardDeviation() * getStandardDeviation())) / (getStandardDeviation() * SQRT2PI);,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,130,                return 0.0d;,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,134,                throw ex;,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,157,            return Double.NEGATIVE_INFINITY;,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,160,            return Double.POSITIVE_INFINITY;,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,179,            ret = -Double.MAX_VALUE;,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,201,            ret = getMean();,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,222,            ret = getMean() - getStandardDeviation();,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,226,            ret = getMean();,0.0,0,,0
org/apache/commons/math/distribution/NormalDistributionImpl,85,33,public class NormalDistributionImpl extends AbstractContinuousDistribution ,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,63,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,105,        },0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,88,        }  catch (ConvergenceException ex) {,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,97,            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,98,                return lowerBound;,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,100,            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,101,                return upperBound;,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,104,            throw new MathException(ex);,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,108,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,",0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,110,        return root;,0.0,0,,0
org/apache/commons/math/distribution/AbstractDistribution,85,61,        if (x0 > x1) {,0.0,0,,0
org/apache/commons/math/distribution/AbstractDistribution,85,62,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/distribution/AbstractDistribution,85,66,        return cumulativeProbability(x1) - cumulativeProbability(x0);,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,74,                } catch (MathException ex) {,0.0,0,,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,85,75,"                    throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,46,        super();,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,47,    },0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,74,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,85,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,96,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,128,        double p0 = 1.0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,129,"        double p1 = getA(0, x);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,130,        double q0 = 0.0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,131,        double q1 = 1.0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,132,        double c = p1 / q1;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,133,        int n = 0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,134,        double relativeError = Double.MAX_VALUE;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,135,        while (n < maxIterations && relativeError > epsilon) {,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,136,            ++n;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,137,"            double a = getA(n, x);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,138,"            double b = getB(n, x);",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,139,            double p2 = a * p1 + b * p0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,140,            double q2 = a * q1 + b * q0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,141,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,143,                if (a != 0.0) {,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,144,                    p2 = p1 + (b / a * p0);,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,145,                    q2 = q1 + (b / a * q0);,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,146,                } else if (b != 0) {,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,147,                    p2 = (a / b * p1) + p0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,148,                    q2 = (a / b * q1) + q0;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,151,                    throw new ConvergenceException(,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,156,            double r = p2 / q2;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,157,            relativeError = Math.abs(r / c - 1.0);,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,160,            c = p2 / q2;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,161,            p0 = p1;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,162,            p1 = p2;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,163,            q0 = q1;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,164,            q1 = q2;,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,165,        },0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,167,        if (n >= maxIterations) {,0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,168,"            throw new MaxIterationsExceededException(maxIterations,",0.0,0,,0
org/apache/commons/math/util/ContinuedFraction,85,173,        return c;,0.0,0,,0
org/apache/commons/math/special/Erf,85,33,        super();,0.0,0,,0
org/apache/commons/math/special/Erf,85,34,    },0.0,0,,0
org/apache/commons/math/special/Erf,85,53,            ret = -ret;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,244,            ContinuedFraction cf = new ContinuedFraction() {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,248,                    return ((2.0 * n) + 1.0) - a + x;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,253,                    return n * (a - n);,0.0,0,,0
org/apache/commons/math/special/Gamma,85,68,        super();,0.0,0,,0
org/apache/commons/math/special/Gamma,85,69,    },0.0,0,,0
org/apache/commons/math/special/Gamma,85,92,            ret = Double.NaN;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,121,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,,0
org/apache/commons/math/special/Gamma,85,160,            ret = Double.NaN;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,166,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",0.0,0,,0
org/apache/commons/math/special/Gamma,85,201,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,,0
org/apache/commons/math/special/Gamma,85,234,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,235,            ret = Double.NaN;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,236,        } else if (x == 0.0) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,237,            ret = 1.0;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,238,        } else if (x < a || a < 1.0) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,241,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",0.0,0,,0
org/apache/commons/math/special/Gamma,85,244,            ContinuedFraction cf = new ContinuedFraction() {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,257,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",0.0,0,,0
org/apache/commons/math/special/Gamma,85,258,            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,261,        return ret;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,292,        if (x > 0 && x <= S_LIMIT) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,295,            return -GAMMA - 1 / x;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,298,        if (x >= C_LIMIT) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,300,            double inv = 1 / (x * x);,0.0,0,,0
org/apache/commons/math/special/Gamma,85,304,            return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));,0.0,0,,0
org/apache/commons/math/special/Gamma,85,307,        return digamma(x + 1) - 1 / x;,0.0,0,,0
org/apache/commons/math/special/Gamma,85,321,        if (x > 0 && x <= S_LIMIT) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,322,            return 1 / (x * x);,0.0,0,,0
org/apache/commons/math/special/Gamma,85,325,        if (x >= C_LIMIT) {,0.0,0,,0
org/apache/commons/math/special/Gamma,85,326,            double inv = 1 / (x * x);,0.0,0,,0
org/apache/commons/math/special/Gamma,85,331,            return 1 / x + inv / 2 + inv / x * (1.0 / 6 - inv * (1.0 / 30 + inv / 42));,0.0,0,,0
org/apache/commons/math/special/Gamma,85,334,        return trigamma(x + 1) + 1 / (x * x);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,32,    public UnivariateRealSolverFactoryImpl() {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,33,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,38,        return newBrentSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,44,        return new BisectionSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,50,        return new BrentSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,56,        return new NewtonSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,62,        return new SecantSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,44,    protected UnivariateRealSolverFactory() {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,45,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,52,        return new UnivariateRealSolverFactoryImpl();,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,49,"        super(f, 100, 1E-6);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,50,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,56,"        super(100, 1E-6);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,57,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,63,"        return solve(f, min, max);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,70,"        return solve(f, min, max, initial);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,97,        clearResult();,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,98,"        verifySequence(min, initial, max);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,101,        double yInitial = f.value(initial);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,102,        if (Math.abs(yInitial) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,103,"            setResult(initial, 0);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,104,            return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,108,        double yMin = f.value(min);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,109,        if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,110,"            setResult(yMin, 0);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,111,            return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,115,        if (yInitial * yMin < 0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,116,"            return solve(f, min, yMin, initial, yInitial, min, yMin);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,120,        double yMax = f.value(max);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,121,        if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,122,"            setResult(yMax, 0);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,123,            return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,127,        if (yInitial * yMax < 0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,128,"            return solve(f, initial, yInitial, max, yMax, initial, yInitial);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,132,"        return solve(f, min, yMin, max, yMax, initial, yInitial);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,158,        clearResult();,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,159,"        verifyInterval(min, max);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,161,        double ret = Double.NaN;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,163,        double yMin = f.value(min);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,164,        double yMax = f.value(max);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,167,        double sign = yMin * yMax;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,168,        if (sign > 0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,170,            if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,171,"                setResult(min, 0);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,172,                ret = min;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,173,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,174,"                setResult(max, 0);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,175,                ret = max;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,178,                throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,183,        } else if (sign < 0){,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,185,"            ret = solve(f, min, yMin, max, yMax, min, yMin);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,188,            if (yMin == 0.0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,189,                ret = min;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,191,                ret = max;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,195,        return ret;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,221,        double delta = x1 - x0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,222,        double oldDelta = delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,224,        int i = 0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,225,        while (i < maximalIterationCount) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,226,            if (Math.abs(y2) < Math.abs(y1)) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,228,                x0 = x1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,229,                x1 = x2;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,230,                x2 = x0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,231,                y0 = y1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,232,                y1 = y2;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,233,                y2 = y0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,235,            if (Math.abs(y1) <= functionValueAccuracy) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,239,"                setResult(x1, i);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,240,                return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,242,            double dx = (x2 - x1);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,243,            double tolerance =,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,245,            if (Math.abs(dx) <= tolerance) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,246,"                setResult(x1, i);",0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,247,                return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,249,            if ((Math.abs(oldDelta) < tolerance) ||,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,252,                delta = 0.5 * dx;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,253,                oldDelta = delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,255,                double r3 = y1 / y0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,261,                if (x0 == x2) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,263,                    p = dx * r3;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,264,                    p1 = 1.0 - r3;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,267,                    double r1 = y0 / y2;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,268,                    double r2 = y1 / y2;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,269,                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,270,                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,272,                if (p > 0.0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,273,                    p1 = -p1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,275,                    p = -p;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,277,                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,282,                    delta = 0.5 * dx;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,283,                    oldDelta = delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,285,                    oldDelta = delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,286,                    delta = p / p1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,290,            x0 = x1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,291,            y0 = y1;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,293,            if (Math.abs(delta) > tolerance) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,294,                x1 = x1 + delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,295,            } else if (dx > 0.0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,296,                x1 = x1 + 0.5 * tolerance;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,297,            } else if (dx <= 0.0) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,298,                x1 = x1 - 0.5 * tolerance;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,300,            y1 = f.value(x1);,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,301,            if ((y1 > 0) == (y2 > 0)) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,302,                x2 = x0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,303,                y2 = y0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,304,                delta = x1 - x0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,305,                oldDelta = delta;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,307,            i++;,0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,308,        },0.0,0,,0
org/apache/commons/math/analysis/solvers/BrentSolver,85,309,        throw new MaxIterationsExceededException(maximalIterationCount);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,74,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,41,    protected boolean resultComputed = false;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,75,        if (f == null) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,76,"            throw MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,78,        this.f = f;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,79,        this.defaultFunctionValueAccuracy = 1.0e-15;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,80,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,81,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,93,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,94,        this.defaultFunctionValueAccuracy = 1.0e-15;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,95,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,96,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,102,        if (!resultComputed) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,103,"            throw MathRuntimeException.createIllegalStateException(""no result available"");",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,105,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,109,        checkResultComputed();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,110,        return result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,115,        checkResultComputed();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,116,        return functionValue;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,121,        functionValueAccuracy = accuracy;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,122,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,126,        return functionValueAccuracy;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,131,        functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,132,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,141,        this.result         = result;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,142,        this.iterationCount = iterationCount;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,143,        this.resultComputed = true;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,144,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,155,        this.result         = x;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,156,        this.functionValue  = fx;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,157,        this.iterationCount = iterationCount;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,158,        this.resultComputed = true;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,159,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,165,        this.iterationCount = 0;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,166,        this.resultComputed = false;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,167,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,182,        final double f1 = f.value(lower);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,183,        final double f2 = f.value(upper);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,184,        return ((f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0));,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,196,        return (start < mid) && (mid < end);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,208,        if (lower >= upper) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,209,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,213,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,225,"        if (!isSequence(lower, initial, upper)) {",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,226,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,230,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,247,"        verifyInterval(lower, upper);",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,248,"        if (!isBracketing(lower, upper, f)) {",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,249,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,254,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,61,                                      final double defaultAbsoluteAccuracy) {,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,63,        this.defaultRelativeAccuracy = 1.0e-14;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,65,        this.relativeAccuracy = defaultRelativeAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,67,        this.maximalIterationCount = defaultMaximalIterationCount;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,68,        this.iterationCount = 0;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,69,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,73,        return iterationCount;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,78,        absoluteAccuracy = accuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,79,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,83,        return absoluteAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,88,        absoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,89,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,93,        maximalIterationCount = count;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,94,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,98,        return maximalIterationCount;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,103,        maximalIterationCount = defaultMaximalIterationCount;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,104,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,108,        relativeAccuracy = accuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,109,    },0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,113,        return relativeAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,118,        relativeAccuracy = defaultRelativeAccuracy;,0.0,0,,0
org/apache/commons/math/ConvergingAlgorithmImpl,85,119,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,235,    private static class LazyHolder {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,237,        private static final UnivariateRealSolverFactory FACTORY =,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,34,        super();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,35,    },0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,53,        setup(f);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,54,"        return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,77,        setup(f);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,78,        UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,79,        solver.setAbsoluteAccuracy(absoluteAccuracy);,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,80,"        return solver.solve(f, x0, x1);",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,171,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,174,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,178,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,199,            throw new ConvergenceException(,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,207,"        return new double[]{a, b};",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,218,        return (a + b) * .5;,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,227,        if (f == null) {,0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,228,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");",0.0,0,,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,230,    },0.0,0,,0
