dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,62,        int thisYear = get(instant);,2,0,0,1,2,0,4,0,0,6,28,5,0.06188,0,0,-1
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,63,"        int newYear = FieldUtils.safeAdd(thisYear, years);",2,0,0,1,2,0,8,0,0,10,50,5,0.06188,0,0,-1
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,64,"        return set(instant, newYear);",0,0,0,1,2,1,0,0,0,4,29,4,0.06188,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,3,64,        int sum = val1 + val2;,0,0,0,0,0,0,0,0,0,0,22,4,0.06188,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,3,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.06188,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,3,70,        return sum;,2,0,0,0,0,1,0,0,0,2,11,4,0.06188,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,3,543,            daysSince19700101 = instant / DateTimeConstants.MILLIS_PER_DAY;,0,0,0,0,0,0,0,0,0,0,63,4,0.06068,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,3,552,        return 1 + (int) ((daysSince19700101 + 3) % 7);,0,0,0,3,6,1,14,0,0,14,47,5,0.06068,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,3,520,                    return chronology.minuteOfHour();,0,0,0,1,2,1,0,0,0,4,33,4,0.05938,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,3,516,                    return chronology.hourOfDay();,0,0,0,1,2,1,4,0,0,4,30,7,0.05855,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,3,498,                    return chronology.dayOfMonth();,0,0,0,1,2,1,4,0,0,4,31,7,0.05841,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatter,3,164,        return iPrinter;,10,0,0,0,0,1,0,0,0,11,16,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatter,3,182,        return iParser;,4,0,0,0,0,1,0,0,0,4,15,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2730,            return iParsedLengthEstimate;,4,0,0,0,0,1,4,0,0,8,29,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2763,"                    addArrayToList(printerList, ((Composite)element).iPrinters);",4,0,0,3,6,0,4,2,0,10,60,10,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2770,"                    addArrayToList(parserList, ((Composite)element).iParsers);",2,0,0,3,6,0,8,0,0,11,58,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2778,            if (array != null) {,2,1,0,1,3,0,4,0,0,7,20,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2779,                for (int i=0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,36,7,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2780,                    list.add(array[i]);,0,0,0,2,4,0,0,0,0,6,19,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2783,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,153,        Object f = getFormatter();,10,3,0,1,2,0,6,4,0,24,26,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,154,        if (isParser(f)) {,0,0,0,2,5,0,0,0,0,7,18,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,155,            return (DateTimeParser) f;,6,0,0,1,2,1,0,2,0,9,26,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,217,        if (formatter == null) {,4,3,0,1,3,0,0,0,0,7,24,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,220,"        return append0(formatter.getPrinter(), formatter.getParser());",0,0,0,3,6,1,0,0,0,10,62,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,257,        checkParser(parser);,0,0,0,1,2,0,4,0,0,4,20,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,258,"        return append0(null, parser);",0,0,0,1,2,1,4,0,0,5,29,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,305,        if (printer != null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,308,        if (parsers == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,311,        int length = parsers.length;,0,0,0,0,0,0,8,0,0,8,28,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,312,        if (length == 1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,319,        DateTimeParser[] copyOfParsers = new DateTimeParser[length];,0,0,0,2,4,0,0,0,0,6,60,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,321,        for (i = 0; i < length - 1; i++) {,8,2,0,1,3,0,0,0,0,12,34,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,322,            if ((copyOfParsers[i] = parsers[i]) == null) {,0,0,0,4,9,0,0,0,0,13,46,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,326,        copyOfParsers[i] = parsers[i];,0,0,0,2,4,0,0,0,0,6,30,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,328,"        return append0(printer, new MatchingParser(copyOfParsers));",2,0,0,2,4,1,4,2,0,8,59,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,345,        checkParser(parser);,0,0,0,1,2,0,0,0,0,3,20,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,346,"        DateTimeParser[] parsers = new DateTimeParser[] {parser, null};",4,0,0,3,6,0,0,4,0,8,63,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,347,"        return append0(null, new MatchingParser(parsers));",2,0,0,2,4,1,2,2,0,8,50,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,357,        if (parser == null) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,360,    },4,1,0,0,1,0,0,0,0,5,1,7,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,383,        iFormatter = null;,0,0,0,0,0,0,0,0,0,0,18,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,384,        iElementPairs.add(printer);,0,0,0,1,2,0,0,0,0,3,27,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,385,        iElementPairs.add(parser);,0,0,0,1,2,0,6,0,0,6,26,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,386,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,464,        if (fieldType == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,467,        if (numDigits <= 0) {,2,0,0,1,3,0,6,4,0,12,21,9,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,470,"        return append0(new FixedNumber(fieldType, numDigits, false));",4,0,0,2,4,1,2,2,0,9,61,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,614,"        return appendFraction(DateTimeFieldType.minuteOfDay(), minDigits, maxDigits);",0,0,0,2,4,1,0,0,0,7,77,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,631,"        return appendFraction(DateTimeFieldType.hourOfDay(), minDigits, maxDigits);",0,0,0,2,4,1,10,0,0,10,75,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,785,"        return appendDecimal(DateTimeFieldType.dayOfYear(), minDigits, 3);",0,0,0,2,4,1,8,0,0,8,66,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,795,"        return appendDecimal(DateTimeFieldType.weekOfWeekyear(), minDigits, 2);",2,1,0,2,4,1,8,0,0,11,71,3,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,807,"        return appendSignedDecimal(DateTimeFieldType.weekyear(), minDigits, maxDigits);",0,0,0,2,4,1,0,0,0,7,79,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1150,                    f = parser;,6,0,0,0,0,0,0,0,0,7,11,3,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1171,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2794,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2795,            iParsers = parsers;,6,1,0,0,0,0,0,0,0,8,19,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2796,            int est = 0;,6,1,1,0,0,0,4,0,0,17,12,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2797,            for (int i=parsers.length; --i>=0 ;) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2798,                DateTimeParser parser = parsers[i];,2,0,1,1,2,0,0,2,0,8,35,7,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2799,                if (parser != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2800,                    int len = parser.estimateParsedLength();,2,0,0,1,2,0,4,0,0,6,40,10,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2801,                    if (len > est) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2802,                        est = len;,4,0,0,0,0,0,0,0,0,5,10,11,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2805,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2806,            iParsedLengthEstimate = est;,0,0,0,0,0,0,0,0,0,0,28,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2807,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2810,            return iParsedLengthEstimate;,2,0,0,0,0,1,0,0,0,2,29,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1522,"            super(fieldType, numDigits, signed, numDigits);",10,1,0,1,2,0,0,0,0,11,47,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1523,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1136,    static final class Constants {,4,0,0,0,1,2,4,2,0,12,30,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1138,"            ye = yearElement(),  // year element (yyyy)",2,0,0,2,4,0,2,0,0,4,43,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1139,"            mye = monthElement(), // monthOfYear element (-MM)",0,0,0,2,4,0,0,0,0,6,50,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1140,"            dme = dayOfMonthElement(), // dayOfMonth element (-dd)",2,0,0,2,4,0,8,0,0,10,54,2,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1141,"            we = weekyearElement(),  // weekyear element (xxxx)",2,0,0,2,4,0,2,2,0,6,51,2,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1142,"            wwe = weekElement(), // weekOfWeekyear element (-ww)",4,1,1,2,4,0,0,0,0,8,52,8,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1143,"            dwe = dayOfWeekElement(), // dayOfWeek element (-ee)",2,0,0,2,4,0,2,0,0,4,52,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1144,"            dye = dayOfYearElement(), // dayOfYear element (-DDD)",0,0,0,2,4,0,0,0,0,6,53,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1145,"            hde = hourElement(), // hourOfDay element (HH)",2,0,0,2,4,0,2,0,0,4,46,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1146,"            mhe = minuteElement(), // minuteOfHour element (:mm)",2,0,0,2,4,0,2,0,0,4,52,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1147,"            sme = secondElement(), // secondOfMinute element (:ss)",2,0,0,2,4,0,2,0,0,4,54,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1148,"            fse = fractionElement(), // fractionOfSecond element (.SSSSSSSSS)",2,0,0,2,4,0,2,0,0,4,65,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1149,"            ze = offsetElement(),  // zone offset element",4,0,0,1,2,0,2,0,0,6,45,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1150,"            lte = literalTElement(), // literal 'T' element",4,1,0,1,2,0,8,0,0,13,47,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1153,"            ym = yearMonth(),  // year month",2,0,0,1,2,0,2,0,0,4,32,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1154,"            ymd = yearMonthDay(), // year month day",2,0,0,1,2,0,0,0,0,3,39,6,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1157,"            ww = weekyearWeek(),  // weekyear week",2,0,0,1,2,0,2,0,0,4,38,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1158,"            wwd = weekyearWeekDay(), // weekyear week day",2,0,0,1,2,0,16,0,0,18,45,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1161,"            hm = hourMinute(),   // hour minute",2,0,0,1,2,0,2,0,0,4,35,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1162,"            hms = hourMinuteSecond(),  // hour minute second",2,0,0,1,2,0,2,0,0,4,48,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1163,"            hmsl = hourMinuteSecondMillis(), // hour minute second millis",0,0,0,1,2,0,0,0,0,3,61,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1164,"            hmsf = hourMinuteSecondFraction(), // hour minute second fraction",2,0,0,1,2,0,10,0,0,12,65,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1166,"            dh = dateHour(),    // date hour",2,0,0,1,2,0,2,0,0,4,32,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1167,"            dhm = dateHourMinute(),   // date hour minute",2,0,0,1,2,0,2,0,0,4,45,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1168,"            dhms = dateHourMinuteSecond(),  // date hour minute second",2,0,0,1,2,0,2,0,0,4,58,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1169,"            dhmsl = dateHourMinuteSecondMillis(), // date hour minute second millis",0,0,0,1,2,0,0,0,0,3,71,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1170,"            dhmsf = dateHourMinuteSecondFraction(), // date hour minute second fraction",2,0,0,1,2,0,2,0,0,4,75,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1173,"            t = time(),  // time",2,0,0,1,2,0,2,0,0,4,20,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1174,"            tx = timeNoMillis(),  // time no millis",4,0,0,1,2,0,2,4,0,11,39,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1175,"            tt = tTime(),  // Ttime",2,0,0,1,2,0,2,0,0,4,23,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1176,"            ttx = tTimeNoMillis(),  // Ttime no millis",2,0,0,1,2,0,2,0,0,4,42,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1177,"            dt = dateTime(), // date time",2,0,0,1,2,0,2,0,0,4,29,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1178,"            dtx = dateTimeNoMillis(), // date time no millis",2,0,0,1,2,0,2,0,0,4,48,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1181,"            wdt = weekDateTime(), // week date time",2,0,0,1,2,0,2,0,0,4,39,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1182,"            wdtx = weekDateTimeNoMillis(), // week date time no millis",2,0,0,1,2,3,0,12,0,17,58,2,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1184,"            od = ordinalDate(),  // ordinal date (same as yd)",0,0,0,2,4,0,0,0,0,6,49,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1185,"            odt = ordinalDateTime(), // ordinal date time",2,0,0,1,2,0,2,0,0,4,45,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1186,"            odtx = ordinalDateTimeNoMillis(), // ordinal date time no millis",2,0,0,1,2,0,2,0,0,4,64,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1188,"            bd = basicDate(),  // basic date",6,0,0,1,2,0,2,4,0,12,32,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1189,"            bt = basicTime(),  // basic time",10,0,0,1,2,0,6,0,0,17,32,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1190,"            btx = basicTimeNoMillis(),  // basic time no millis",2,0,0,1,2,0,2,0,0,4,51,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1191,"            btt = basicTTime(), // basic Ttime",4,0,0,1,2,2,2,2,0,10,34,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1192,"            bttx = basicTTimeNoMillis(), // basic Ttime no millis",4,1,0,1,2,0,2,0,0,7,53,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1193,"            bdt = basicDateTime(), // basic date time",4,0,0,1,2,0,2,0,0,6,41,2,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1194,"            bdtx = basicDateTimeNoMillis(), // basic date time no millis",0,0,0,1,2,0,0,0,0,3,60,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1196,"            bod = basicOrdinalDate(),  // basic ordinal date",2,0,0,1,2,0,2,0,0,4,48,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1197,"            bodt = basicOrdinalDateTime(), // basic ordinal date time",2,0,0,1,2,0,2,0,0,4,57,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1198,"            bodtx = basicOrdinalDateTimeNoMillis(), // basic ordinal date time no millis",2,0,0,1,2,0,2,0,0,4,76,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1200,"            bwd = basicWeekDate(),  // basic week date",2,0,0,1,2,0,2,0,0,4,42,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1201,"            bwdt = basicWeekDateTime(), // basic week date time",0,0,0,1,2,0,0,0,0,3,51,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1202,"            bwdtx = basicWeekDateTimeNoMillis(), // basic week date time no millis",2,0,0,1,2,0,2,0,0,4,70,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1204,"            dpe = dateElementParser(), // date parser element",2,0,0,1,2,0,2,0,0,4,49,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1205,"            tpe = timeElementParser(), // time parser element",0,0,0,1,2,0,0,0,0,3,49,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1206,"            dp = dateParser(),  // date parser",2,0,0,1,2,0,2,0,0,4,34,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1207,"            ldp = localDateParser(), // local date parser",0,0,0,1,2,0,0,0,0,3,45,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1208,"            tp = timeParser(),  // time parser",0,0,0,1,2,0,4,0,0,4,34,7,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1209,"            ltp = localTimeParser(), // local time parser",2,0,0,1,2,0,2,0,0,4,45,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1210,"            dtp = dateTimeParser(), // date time parser",2,0,0,1,2,0,2,0,0,4,43,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1211,"            dotp = dateOptionalTimeParser(), // date optional time parser",2,0,0,1,2,0,2,0,0,4,61,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1212,            ldotp = localDateOptionalTimeParser(); // local date optional time parser,0,0,0,1,2,0,0,0,0,3,73,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1216,            if (dp == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1217,                DateTimeParser tOffset = new DateTimeFormatterBuilder(),2,0,0,1,2,0,0,4,0,6,55,7,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1220,                return new DateTimeFormatterBuilder(),0,0,0,1,2,1,0,0,0,4,37,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1229,            if (ldp == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1230,                return dateElementParser().withZoneUTC();,0,0,0,2,4,1,0,0,0,7,41,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1236,            if (dpe == null) {,2,0,0,1,3,0,0,0,0,3,18,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1237,                return new DateTimeFormatterBuilder(),0,0,0,1,2,1,0,2,0,2,37,11,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1259,            return dpe;,2,0,0,0,0,1,0,0,0,2,11,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1263,            if (tp == null) {,6,1,0,1,3,0,0,0,0,8,17,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1264,                return new DateTimeFormatterBuilder(),0,0,0,1,2,1,0,0,0,4,37,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1274,            if (ltp == null) {,2,1,0,1,3,0,8,0,0,11,18,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1275,                return new DateTimeFormatterBuilder(),4,0,0,1,2,1,0,2,0,6,37,1,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1284,            if (tpe == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1286,                DateTimeParser decimalPoint = new DateTimeFormatterBuilder(),6,0,0,1,2,0,0,4,0,11,60,4,0.0576,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1297,                return new DateTimeFormatterBuilder(),0,0,0,1,2,1,0,2,0,2,37,12,0.0576,0,0,-1
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,4,148,        return getWrappedField().getMaximumValue() + 1;,4,2,0,2,4,1,16,0,0,23,47,1,0.5,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,514,                    return chronology.clockhourOfDay();,0,0,0,1,2,1,0,0,0,4,35,4,0.25,0,0,-1
defect4j,time,org/joda/time/Partial,4,447,                            DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);,2,0,0,2,4,0,0,0,0,2,82,5,0.2,0,0,-1
defect4j,time,org/joda/time/Partial,4,448,                            DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);,10,1,0,2,4,0,20,2,0,34,85,3,0.2,0,0,-1
defect4j,time,org/joda/time/Partial,4,449,                            if (rangeField.compareTo(loopRangeField) > 0) {,0,1,0,2,5,0,6,0,0,7,47,15,0.2,0,0,-1
defect4j,time,org/joda/time/Partial,4,445,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.16667,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,150,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.11111,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,457,            return iRangeType;,2,0,0,0,0,1,0,0,0,2,18,5,0.05556,0,0,-1
defect4j,time,org/joda/time/Partial,4,446,                        } else if (compare == 0) {,6,4,0,1,4,0,0,0,0,10,26,4,0.05263,0,0,-1
defect4j,time,org/joda/time/Partial,4,443,                        int compare = unitField.compareTo(loopUnitField);,2,0,0,1,2,0,6,0,0,8,49,13,0.05,0,0,-1
defect4j,time,org/joda/time/Partial,4,444,                        if (compare > 0) {,4,1,0,1,3,0,0,0,0,6,18,3,0.05,0,0,-1
defect4j,time,org/joda/time/Partial,4,439,                for (; i < iTypes.length; i++) {,8,1,0,1,3,0,0,0,0,10,32,8,0.04348,0,0,-1
defect4j,time,org/joda/time/Partial,4,440,                    DateTimeFieldType loopType = iTypes[i];,2,1,0,1,2,0,0,0,0,3,39,4,0.04348,0,0,-1
defect4j,time,org/joda/time/Partial,4,441,                    DurationField loopUnitField = loopType.getDurationType().getField(iChronology);,0,0,0,2,4,0,0,0,0,6,79,4,0.04348,0,0,-1
defect4j,time,org/joda/time/Partial,4,442,                    if (loopUnitField.isSupported()) {,0,0,0,2,5,0,6,0,0,6,34,6,0.04348,0,0,-1
defect4j,time,org/joda/time/Partial,4,432,            DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];,2,0,0,2,4,1,0,2,0,5,72,8,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,433,            int[] newValues = new int[newTypes.length];,10,0,0,2,4,0,0,0,0,11,43,3,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,436,            int i = 0;,2,0,0,0,0,0,0,0,0,2,10,7,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,437,            DurationField unitField = fieldType.getDurationType().getField(iChronology);,8,0,0,2,4,0,8,2,0,19,76,3,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,438,            if (unitField.isSupported()) {,0,0,0,2,5,0,4,0,0,4,30,7,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,456,"            System.arraycopy(iTypes, 0, newTypes, 0, i);",0,0,0,1,2,0,0,0,0,3,44,4,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,457,"            System.arraycopy(iValues, 0, newValues, 0, i);",0,0,0,1,2,0,10,0,0,10,46,7,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,458,            newTypes[i] = fieldType;,0,0,0,1,2,0,0,0,0,3,24,4,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,459,            newValues[i] = value;,2,0,1,1,2,0,0,0,0,7,21,6,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,460,"            System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",8,2,0,1,2,0,10,0,0,20,70,7,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,461,"            System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",10,2,0,1,2,0,18,0,0,31,73,3,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,464,"            Partial newPartial = new Partial(iChronology, newTypes, newValues);",0,0,0,1,2,0,0,0,0,3,67,4,0.04167,1,0,-1
defect4j,time,org/joda/time/Partial,4,465,"            iChronology.validate(newPartial, newValues);",0,0,0,1,2,0,8,0,0,8,44,7,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,466,            return newPartial;,16,2,0,0,0,1,2,0,0,22,18,3,0.04167,0,0,-1
defect4j,time,org/joda/time/Partial,4,430,        int index = indexOf(fieldType);,6,0,0,1,2,0,4,0,0,10,31,3,0.03846,0,0,-1
defect4j,time,org/joda/time/Partial,4,431,        if (index == -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.03846,0,0,-1
defect4j,time,org/joda/time/Partial,4,427,        if (fieldType == null) {,4,1,0,1,3,0,0,0,0,6,24,3,0.03704,0,0,-1
defect4j,time,org/joda/time/Partial,4,296,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.03333,0,0,-1
defect4j,time,org/joda/time/Partial,4,297,        iChronology = chronology;,0,0,0,0,0,0,0,0,0,0,25,4,0.03333,0,0,-1
defect4j,time,org/joda/time/Partial,4,298,        iTypes = types;,0,0,0,0,0,0,0,0,0,0,15,4,0.03333,0,0,-1
defect4j,time,org/joda/time/Partial,4,299,        iValues = values;,0,0,0,0,0,0,0,0,0,0,17,4,0.03333,0,0,-1
defect4j,time,org/joda/time/Partial,4,300,    },10,0,0,0,1,0,6,2,0,19,1,4,0.03333,0,0,-1
defect4j,time,org/joda/time/base/AbstractPartial,4,175,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.01493,0,0,-1
defect4j,time,org/joda/time/Partial,4,217,                int compare = lastUnitField.compareTo(loopUnitField);,2,0,0,1,2,0,6,0,0,8,53,5,0.00826,0,0,-1
defect4j,time,org/joda/time/Partial,4,218,                if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {,4,5,0,3,7,0,4,0,0,14,76,8,0.00826,0,0,-1
defect4j,time,org/joda/time/Partial,4,221,                } else if (compare == 0) {,0,0,0,1,4,0,0,0,0,5,26,4,0.00826,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,4,298,                    return chronology.days();,0,0,0,1,2,1,0,0,0,4,25,4,0.00787,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,155,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.00787,0,0,-1
defect4j,time,org/joda/time/Partial,4,248,        iValues = (int[]) values.clone();,2,0,0,3,6,0,4,0,0,7,33,4,0.00769,0,0,-1
defect4j,time,org/joda/time/Partial,4,249,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00769,0,0,-1
defect4j,time,org/joda/time/Partial,4,246,        iTypes = (DateTimeFieldType[]) types.clone();,4,0,0,3,6,0,4,4,0,14,45,3,0.00763,0,0,-1
defect4j,time,org/joda/time/Partial,4,247,"        chronology.validate(this, values);",0,0,0,1,2,0,6,0,0,6,34,5,0.00763,0,0,-1
defect4j,time,org/joda/time/Partial,4,212,        DurationField lastUnitField = null;,2,0,0,0,0,0,0,2,0,4,35,4,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,213,        for (int i = 0; i < types.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,214,            DateTimeFieldType loopType = types[i];,2,0,1,1,2,0,0,2,0,8,38,6,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,215,            DurationField loopUnitField = loopType.getDurationType().getField(iChronology);,2,0,0,2,4,0,4,0,0,7,79,8,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,216,            if (i > 0) {,6,1,0,1,3,0,6,0,0,15,12,3,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,243,            lastUnitField = loopUnitField;,0,0,0,0,0,0,0,0,0,0,30,4,0.00752,0,0,-1
defect4j,time,org/joda/time/Partial,4,207,        for (int i = 0; i < types.length; i++) {,18,1,0,1,3,0,0,0,0,22,40,3,0.00746,0,0,-1
defect4j,time,org/joda/time/Partial,4,208,            if (types[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.00746,0,0,-1
defect4j,time,org/joda/time/Partial,4,202,        if (types.length == 0) {,6,1,0,1,3,0,6,0,0,13,24,3,0.00741,0,0,-1
defect4j,time,org/joda/time/Partial,4,199,        if (values.length != types.length) {,8,1,0,1,3,0,0,0,0,9,36,4,0.00735,0,0,-1
defect4j,time,org/joda/time/Partial,4,196,        if (values == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0073,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,146,        long otherMillis = otherField.getUnitMillis();,2,0,0,1,2,0,4,0,0,6,46,5,0.0073,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,147,        long thisMillis = getUnitMillis();,2,0,0,1,2,0,2,0,0,4,34,5,0.0073,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,149,        if (thisMillis == otherMillis) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0073,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,152,        if (thisMillis < otherMillis) {,2,0,0,1,3,0,0,0,0,3,31,8,0.0073,0,0,-1
defect4j,time,org/joda/time/field/BaseDurationField,4,38,public abstract class BaseDurationField extends DurationField implements Serializable {,2,1,0,0,1,0,0,0,0,3,87,4,0.0073,0,0,-1
defect4j,time,org/joda/time/Partial,4,190,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00725,0,0,-1
defect4j,time,org/joda/time/Partial,4,191,        chronology = DateTimeUtils.getChronology(chronology).withUTC();,2,0,0,2,4,0,8,0,0,11,63,4,0.00725,0,0,-1
defect4j,time,org/joda/time/Partial,4,192,        iChronology = chronology;,6,0,0,0,0,0,0,0,0,7,25,3,0.00725,0,0,-1
defect4j,time,org/joda/time/Partial,4,193,        if (types == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.00725,0,0,-1
defect4j,time,org/joda/time/Partial,4,344,        return iTypes[index];,4,0,1,1,2,1,12,4,0,24,21,3,0.00709,0,0,-1
defect4j,time,org/joda/time/Partial,4,333,        return iTypes[index].getField(chrono);,0,0,1,2,4,1,4,0,0,8,38,5,0.00658,0,0,-1
defect4j,time,org/joda/time/Partial,4,321,        return iChronology;,2,0,0,0,0,1,0,0,0,2,19,4,0.00641,0,0,-1
defect4j,time,org/joda/time/Partial,4,309,        return iTypes.length;,8,0,0,0,0,1,0,0,0,9,21,3,0.00637,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,4,304,                    return chronology.minutes();,0,0,0,1,2,1,4,0,0,4,28,7,0.00629,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,520,                    return chronology.minuteOfHour();,0,0,0,1,2,1,4,0,0,4,33,7,0.0061,0,0,-1
defect4j,time,org/joda/time/base/AbstractPartial,4,170,"        for (int i = 0, isize = size(); i < isize; i++) {",10,1,0,2,5,0,2,0,0,14,49,4,0.00585,0,0,-1
defect4j,time,org/joda/time/base/AbstractPartial,4,171,            if (getFieldType(i) == type) {,6,1,0,2,5,0,4,0,0,12,30,3,0.00585,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,516,                    return chronology.hourOfDay();,0,0,0,1,2,1,4,0,0,4,30,7,0.00565,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,4,302,                    return chronology.hours();,0,0,0,1,2,1,4,0,0,4,26,7,0.00549,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,4,282,            chronology = DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,0,0,0,3,53,4,0.00392,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,4,284,            switch (iOrdinal) {,2,0,0,1,3,0,0,0,0,2,19,5,0.00392,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,86,        return INSTANCE_UTC;,2,0,0,0,0,1,0,0,0,2,20,4,0.00342,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,480,            chronology = DateTimeUtils.getChronology(chronology);,2,0,0,1,2,0,0,0,0,2,53,6,0.00324,0,0,-1
defect4j,time,org/joda/time/DateTimeFieldType,4,482,            switch (iOrdinal) {,0,0,0,1,3,0,0,0,0,4,19,4,0.00324,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,818,        return getMaximumValue(instant);,0,0,0,1,2,1,4,0,0,4,32,5,0.00284,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,804,        return getMaximumValue();,0,0,0,1,2,1,0,0,0,4,25,4,0.00283,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,199,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,200,            int value = values[i];,0,0,0,1,2,0,0,0,0,3,22,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,201,            DateTimeField field = partial.getField(i);,0,0,0,1,2,0,0,0,0,3,42,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,202,"            if (value < field.getMinimumValue(partial, values)) {",0,0,0,2,5,0,0,0,0,7,53,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,207,"            if (value > field.getMaximumValue(partial, values)) {",0,0,0,2,5,0,0,0,0,7,53,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,213,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00281,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,192,            if (value > field.getMaximumValue()) {,2,1,0,2,5,0,4,0,0,7,38,6,0.0028,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,758,        return getMinimumValue();,0,0,0,1,2,1,0,0,0,4,25,4,0.0028,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,772,        return getMinimumValue(instant);,8,1,0,1,2,1,6,0,0,15,32,1,0.0028,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,183,        int size = partial.size();,0,0,0,1,2,0,0,0,0,3,26,4,0.00279,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,184,        for (int i = 0; i < size; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.00279,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,185,            int value = values[i];,10,1,1,1,2,0,8,0,0,24,22,1,0.00279,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,186,            DateTimeField field = partial.getField(i);,0,0,0,1,2,0,0,0,0,3,42,4,0.00279,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,187,            if (value < field.getMinimumValue()) {,2,1,0,2,5,0,4,0,0,7,38,6,0.00279,0,0,-1
defect4j,time,org/joda/time/base/AbstractPartial,4,105,"        return getField(index, getChronology());",0,0,0,2,4,1,6,0,0,6,40,5,0.00265,0,0,-1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,4,1544,                return iWallOffsets[i - 1];,0,0,0,1,2,1,0,0,0,4,27,4,0.00228,0,0,-1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,4,1580,                return instant;,0,0,0,0,0,1,0,0,0,1,15,4,0.00228,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,89,        return INSTANCE_UTC;,2,0,0,0,0,1,0,0,0,2,20,4,0.00205,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,59,"        super(base, param, minDaysInFirstWeek);",0,0,0,1,2,0,0,0,0,3,39,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,101,        return ((month - 1) * MILLIS_PER_MONTH);,0,0,0,2,4,1,0,0,0,7,40,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,117,        return (month != 13) ? MONTH_LENGTH : (isLeapYear(year) ? 6 : 5);,0,0,0,3,6,1,0,0,0,10,65,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,143,        return 13;,10,1,0,0,0,1,0,0,0,12,10,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,148,        return MILLIS_PER_YEAR;,0,0,0,0,0,1,0,0,0,1,23,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/BasicFixedMonthChronology,4,158,        return MILLIS_PER_MONTH;,0,0,0,0,0,1,0,0,0,1,24,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,524,            return iDurationField;,0,0,0,0,0,1,0,0,0,1,22,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,528,            return iRangeDurationField;,8,1,0,0,0,1,4,0,0,13,27,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,542,            return iLeapDurationField;,8,2,0,0,0,1,18,0,0,29,26,1,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,161,"        super(base, param, minDaysInFirstWeek);",8,0,0,1,2,3,0,4,0,15,39,1,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,63,"    private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""AM"");",4,1,0,1,2,3,0,4,0,13,85,1,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,72,"    private static final Map<DateTimeZone, CopticChronology[]> cCache = new HashMap<DateTimeZone, CopticChronology[]>();",4,1,0,3,6,0,4,0,0,9,116,6,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,78,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,2,1,0,1,2,0,0,0,0,3,45,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,108,"        return getInstance(zone, 4);",0,0,0,1,2,1,4,0,0,4,28,5,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,119,        if (zone == null) {,10,1,0,1,3,0,4,2,0,18,19,1,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,123,        synchronized (cCache) {,0,0,0,1,3,0,0,0,0,4,23,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,124,            CopticChronology[] chronos = cCache.get(zone);,4,0,0,2,4,0,10,2,0,16,46,1,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,125,            if (chronos == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,126,                chronos = new CopticChronology[7];,2,0,0,1,2,0,0,2,0,5,34,8,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,127,"                cCache.put(zone, chronos);",6,1,0,1,2,0,0,0,0,7,26,6,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,130,                chrono = chronos[minDaysInFirstWeek - 1];,4,1,1,1,2,0,0,0,0,8,41,8,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,134,            },10,2,0,0,1,0,0,2,0,14,1,3,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,135,            if (chrono == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,136,                if (zone == DateTimeZone.UTC) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,138,"                    chrono = new CopticChronology(null, null, minDaysInFirstWeek);",4,0,0,1,2,0,0,2,0,8,62,10,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,140,"                    DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 0, 0, chrono);",0,0,0,1,2,0,0,0,0,3,64,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,141,                    chrono = new CopticChronology,0,0,0,0,0,0,0,0,0,0,29,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,144,                } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,145,"                    chrono = getInstance(DateTimeZone.UTC, minDaysInFirstWeek);",6,0,0,1,2,0,4,0,0,11,59,10,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,146,                    chrono = new CopticChronology,0,0,0,0,0,0,0,0,0,0,29,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,149,                chronos[minDaysInFirstWeek - 1] = chrono;,0,0,0,1,2,0,0,0,0,3,41,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,151,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,152,        return chrono;,0,0,0,0,0,1,0,0,0,1,14,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,184,        return INSTANCE_UTC;,2,0,0,0,0,1,0,0,0,2,20,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,209,        int relativeYear = year - 1687;,0,0,0,0,0,0,0,0,0,0,31,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,211,        if (relativeYear <= 0) {,2,0,0,1,3,0,0,0,0,2,24,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,214,            leapYears = (relativeYear + 3) >> 2;,8,0,0,1,2,0,14,0,0,25,36,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,223,        long millis = (relativeYear * 365L + leapYears),16,3,0,1,2,0,4,2,0,26,47,3,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,228,        return millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY;,2,0,0,1,2,1,0,4,0,6,64,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,233,        return MIN_YEAR;,0,0,0,0,0,1,0,0,0,1,16,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,238,        return MAX_YEAR;,2,0,0,0,0,1,0,0,0,2,16,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,248,        if (getBase() == null) {,0,0,0,2,5,0,0,0,0,7,24,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,249,            super.assemble(fields);,4,0,0,1,2,0,0,0,0,4,23,7,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,252,"            fields.year = new SkipDateTimeField(this, fields.year);",0,0,0,1,2,0,0,0,0,3,55,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,253,"            fields.weekyear = new SkipDateTimeField(this, fields.weekyear);",8,0,0,1,2,0,0,2,0,11,63,6,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,255,            fields.era = ERA_FIELD;,0,0,0,0,0,0,0,0,0,0,23,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,256,"            fields.monthOfYear = new BasicMonthOfYearDateTimeField(this, 13);",4,0,0,1,2,0,0,2,0,7,65,6,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,257,            fields.months = fields.monthOfYear.getDurationField();,0,0,0,1,2,0,0,0,0,3,54,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,259,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00204,0,0,-1
defect4j,time,org/joda/time/chrono/CopticChronology,4,51,public final class CopticChronology extends BasicFixedMonthChronology {,0,0,0,0,1,0,0,0,0,1,71,4,0.00204,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,982,"        return convertLocalToUTC(instantLocal, strict);",4,0,0,1,2,1,8,0,0,13,47,3,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,999,        int offsetLocal = getOffset(instantLocal);,2,0,0,1,2,0,4,0,0,6,42,5,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1001,        int offset = getOffset(instantLocal - offsetLocal);,10,1,0,1,2,0,2,0,0,14,51,3,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1003,        if (offsetLocal != offset) {,0,0,0,1,3,0,0,0,0,4,28,4,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1032,        long instantUTC = instantLocal - offset;,6,1,0,0,0,0,0,0,0,7,40,5,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1034,        if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0) {,10,6,0,3,7,0,0,0,0,16,69,5,0.00203,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1037,        return instantUTC;,0,0,0,0,0,1,0,0,0,1,18,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,132,"        long instant = year().set(0, year);",2,0,0,2,4,0,4,0,0,7,35,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,133,"        instant = monthOfYear().set(instant, monthOfYear);",2,0,0,2,4,0,8,0,0,11,50,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,134,"        instant = dayOfMonth().set(instant, dayOfMonth);",8,0,0,2,4,0,8,0,0,17,48,3,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,135,"        instant = hourOfDay().set(instant, hourOfDay);",2,0,0,2,4,0,8,0,0,11,46,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,136,"        instant = minuteOfHour().set(instant, minuteOfHour);",20,5,0,2,4,0,18,4,0,52,52,3,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,137,"        instant = secondOfMinute().set(instant, secondOfMinute);",4,1,0,2,4,0,18,0,0,25,56,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,4,138,"        return millisOfSecond().set(instant, millisOfSecond);",0,0,0,2,4,1,0,0,0,7,53,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/AssembledChronology,4,136,"        return super.getDateTimeMillis(year, monthOfYear, dayOfMonth,",8,0,0,0,1,1,0,0,0,8,61,5,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,378,            return iField.hashCode() ^ iZone.hashCode();,0,0,0,2,4,1,0,0,0,7,44,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,480,            long localInstant = iZone.convertUTCToLocal(instant);,2,0,0,1,2,0,6,0,0,8,53,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,481,"            localInstant = iField.set(localInstant, value);",0,0,0,1,2,0,0,0,0,3,47,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,482,"            long result = iZone.convertLocalToUTC(localInstant, false, instant);",10,0,0,1,2,0,8,2,0,21,68,5,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,483,            if (get(result) != value) {,4,1,0,2,5,0,4,2,0,12,27,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,489,            return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,532,            return iLeapDurationField;,18,1,0,0,0,1,6,2,0,28,26,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,565,            return iField.getMinimumValue();,0,0,0,1,2,1,0,0,0,4,32,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,582,            return iField.getMaximumValue();,10,0,0,1,2,1,4,2,0,17,32,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,632,            return iField.hashCode() ^ iZone.hashCode();,0,0,0,2,4,1,0,0,0,7,44,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/DecoratedDateTimeField,4,83,"        return iField.set(instant, value);",0,0,0,1,2,1,0,0,0,4,34,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,174,"        return getInstance(zone, gregorianCutover, 4);",2,0,0,1,2,1,6,0,0,8,46,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,193,            cutoverInstant = DEFAULT_CUTOVER;,0,0,0,0,0,0,0,0,0,0,33,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,593,"        return convertByYear(instant, iGregorianChronology, iJulianChronology);",2,0,0,1,2,1,4,0,0,7,71,7,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,75,public final class GJChronology extends AssembledChronology {,2,0,0,0,1,2,0,2,0,6,61,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,672,            if (instant >= iCutover) {,0,0,0,1,3,0,0,0,0,4,26,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,675,                return iJulianField.get(instant);,0,0,0,1,2,1,0,0,0,4,33,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,742,                    if (instant + iGapDuration < iCutover) {,6,1,0,1,3,0,2,0,0,9,40,5,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,743,                        instant = gregorianToJulian(instant);,2,0,0,1,2,0,14,0,0,17,37,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,746,                    if (get(instant) != value) {,2,1,0,2,5,0,4,0,0,7,28,9,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,752,"                instant = iJulianField.set(instant, value);",2,0,0,1,2,0,4,2,0,9,43,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,753,                if (instant >= iCutover) {,0,0,0,1,3,0,0,0,0,4,26,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,940,            if (iConvertByWeekyear) {,0,0,0,1,3,0,0,0,0,4,25,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,943,                return gregorianToJulianByYear(instant);,0,0,0,1,2,1,4,0,0,4,40,8,0.00203,0,0,-1
defect4j,time,org/joda/time/field/OffsetDateTimeField,4,153,"        FieldUtils.verifyValueBounds(this, value, iMin, iMax);",0,0,0,1,2,0,0,0,0,3,54,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/OffsetDateTimeField,4,154,"        return super.set(instant, value - iOffset);",0,0,0,1,2,1,0,0,0,4,43,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipDateTimeField,4,82,            value--;,0,0,0,0,0,0,0,0,0,0,8,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,186,"        return iField.set(instant, value);",0,0,0,1,2,1,8,0,0,8,34,5,0.00203,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,211,            return iRangeDurationField;,4,0,0,0,0,1,0,0,0,4,27,3,0.00203,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,245,        return iField.getMaximumValue();,0,0,0,1,2,1,0,0,0,4,32,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,133,"        super(base, param);",6,1,0,1,2,0,0,0,0,7,19,3,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,134,    },2,0,0,0,1,0,8,0,0,11,1,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,67,"    private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""BE"");",8,0,0,1,2,3,4,4,0,21,85,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,73,"    private static final Map<DateTimeZone, BuddhistChronology> cCache = new HashMap<DateTimeZone, BuddhistChronology>();",0,0,0,1,2,0,0,0,0,3,116,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,76,    private static final BuddhistChronology INSTANCE_UTC = getInstance(DateTimeZone.UTC);,6,0,0,1,2,3,2,2,0,13,85,2,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,106,        if (zone == null) {,6,1,0,1,3,0,0,0,0,8,19,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,110,        synchronized (cCache) {,2,0,0,1,3,0,0,0,0,2,23,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,111,            chrono = cCache.get(zone);,0,0,0,1,2,0,0,0,0,3,26,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,112,            if (chrono == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,114,"                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);",10,0,0,2,4,0,2,0,0,14,76,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,116,"                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 0, 0, chrono);",0,0,0,1,2,0,0,0,0,3,64,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,117,"                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), """");",2,0,0,2,4,0,8,2,0,15,91,8,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,118,"                cCache.put(zone, chrono);",8,1,0,1,2,0,0,0,0,10,25,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,120,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,121,        return chrono;,2,0,0,0,0,1,0,0,0,2,14,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,217,        if (getParam() == null) {,0,0,0,2,5,0,0,0,0,7,25,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,219,            fields.eras = UnsupportedDurationField.getInstance(DurationFieldType.eras());,4,0,0,2,4,0,8,0,0,13,77,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,222,            DateTimeField field = fields.year;,6,0,0,0,0,0,0,2,0,8,34,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,223,            fields.year = new OffsetDateTimeField(,4,0,0,0,1,0,0,2,0,7,38,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,227,            field = fields.yearOfEra;,0,0,0,0,0,0,0,0,0,0,25,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,228,            fields.yearOfEra = new DelegatedDateTimeField(,0,0,0,0,1,0,0,0,0,1,46,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,232,            field = fields.weekyear;,0,0,0,0,0,0,0,0,0,0,24,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,233,            fields.weekyear = new OffsetDateTimeField(,0,0,0,0,1,0,4,0,0,4,42,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,236,"            field = new OffsetDateTimeField(fields.yearOfEra, 99);",12,2,0,1,2,0,2,2,0,19,54,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,237,            fields.centuryOfEra = new DividedDateTimeField(,0,0,0,0,1,0,0,0,0,1,47,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,239,            fields.centuries = fields.centuryOfEra.getDurationField();,8,0,0,1,2,0,2,0,0,11,58,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,241,            field = new RemainderDateTimeField(,2,0,0,0,1,0,0,2,0,5,35,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,243,            fields.yearOfCentury = new OffsetDateTimeField(,0,0,0,0,1,0,0,0,0,1,47,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,246,            field = new RemainderDateTimeField(,0,0,0,0,1,0,0,0,0,1,35,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,248,            fields.weekyearOfCentury = new OffsetDateTimeField(,0,0,0,0,1,0,8,0,0,8,51,5,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,251,            fields.era = ERA_FIELD;,20,0,0,0,0,0,12,6,0,40,23,1,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BuddhistChronology,4,253,    },28,2,1,0,1,0,6,0,0,40,1,1,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,53,"        this(chronology, field, 0);",0,0,0,1,2,0,0,0,0,3,27,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,54,    },0,0,0,0,1,0,0,2,0,4,1,6,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,64,        super(field);,2,0,0,1,2,0,0,0,0,2,13,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,65,        iChronology = chronology;,0,0,0,0,0,0,0,0,0,0,25,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,66,        int min = super.getMinimumValue();,12,0,0,1,2,0,4,0,0,17,34,3,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,67,        if (min < skip) {,0,0,0,1,3,0,0,0,0,4,17,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,68,            iMinValue = min + 1;,4,1,0,0,0,0,0,0,0,6,20,6,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,74,        iSkip = skip;,4,0,0,0,0,0,0,0,0,5,13,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,75,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,87,"        FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue());",2,0,1,2,4,0,10,0,0,15,72,3,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,88,        if (value <= iSkip) {,16,1,0,1,3,0,4,0,0,23,21,1,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,89,            value--;,0,0,0,0,0,0,0,0,0,0,8,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,91,"        return super.set(millis, value);",6,0,0,1,2,1,0,0,0,6,32,5,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,4,95,        return iMinValue;,0,0,0,0,0,1,0,0,0,1,17,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,410,            i2 = i2 - unitMillis + 1;,6,2,0,0,0,0,6,0,0,15,25,3,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,421,            long localInstant = iZone.convertUTCToLocal(instant);,0,0,0,1,2,0,0,0,0,3,53,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,422,            return iField.get(localInstant);,0,0,0,1,2,1,6,0,0,6,32,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,514,            return iDurationField;,2,0,0,0,0,1,0,0,0,2,22,5,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/ZonedChronology,4,518,            return iRangeDurationField;,0,0,0,0,0,1,0,0,0,1,27,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GregorianChronology,4,209,            leapYears = ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1;,0,0,0,4,8,0,0,0,0,12,71,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,738,            if (instant >= iCutover) {,0,0,0,1,3,0,0,0,0,4,26,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,739,"                instant = iGregorianField.set(instant, value);",2,0,0,1,2,0,8,0,0,11,46,7,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,740,                if (instant < iCutover) {,4,1,0,1,3,0,0,0,0,5,25,7,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,765,            return instant;,0,0,0,0,0,1,0,0,0,1,15,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,823,            return iJulianField.getMinimumValue();,0,0,0,1,2,1,0,0,0,4,38,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,854,            return iGregorianField.getMaximumValue();,0,0,0,1,2,1,4,0,0,4,41,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,78,        if (year <= 0) {,2,1,0,1,3,0,0,2,0,5,16,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,79,            if (year == 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,83,            year++;,2,0,0,0,0,0,0,0,0,3,7,6,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,85,        return year;,0,0,0,0,0,1,0,0,0,1,12,4,0.00203,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,207,"        return super.getDateMidnightMillis(adjustYearForSet(year), monthOfYear, dayOfMonth);",0,0,0,2,4,1,0,0,0,7,84,4,0.00203,0,0,-1
defect4j,time,org/joda/time/field/SkipDateTimeField,4,100,        return iMinValue;,2,2,0,0,0,1,8,0,0,12,17,4,0.00203,0,0,-1
defect4j,time,org/joda/time/base/AbstractInstant,4,260,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.00202,0,0,-1
defect4j,time,org/joda/time/DateTime,4,527,        return this;,4,1,0,0,0,1,0,0,0,5,12,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,209,                for (int i = chronos.size(); --i >= 0;) {,4,1,0,2,5,0,4,0,0,10,41,8,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,210,                    chrono = chronos.get(i);,8,0,0,1,2,0,4,0,0,13,24,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,211,                    if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&,4,2,0,1,3,0,12,0,0,18,63,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,214,                        return chrono;,2,0,0,0,0,1,0,0,0,2,14,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,400,        return iCutoverInstant;,2,0,0,0,0,1,0,0,0,2,23,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,409,        return iGregorianChronology.getMinimumDaysInFirstWeek();,0,0,0,1,2,1,0,0,0,4,56,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,4,51,        super(DateTimeFieldType.era());,2,0,0,2,4,3,4,16,0,25,31,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,4,52,        iEraText = text;,8,0,0,0,0,0,0,2,0,12,16,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,4,53,    },4,0,0,0,1,0,0,0,0,4,1,7,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,4,106,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,1,8,0,0,8,70,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,4,111,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,454,                           DurationField leapDurationField) {,2,0,0,0,2,0,0,2,0,4,34,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,455,"            super(field, field.getType());",6,0,0,2,4,0,4,0,0,11,30,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,456,            iDurationField = durationField;,4,0,0,0,0,0,0,0,0,5,31,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,457,            iRangeDurationField = rangeDurationField;,0,0,0,0,0,0,0,0,0,0,41,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,458,            iLeapDurationField = leapDurationField;,0,0,0,0,0,0,0,0,0,0,39,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,459,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,391,        LimitDurationField(DurationField field) {,0,0,0,1,3,0,0,0,0,4,41,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,392,"            super(field, field.getType());",2,0,0,2,4,0,4,0,0,6,30,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,393,        },0,0,0,0,1,0,0,2,0,4,1,6,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,99,"        super(base, null);",4,0,0,1,2,0,0,0,0,5,18,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,101,        iLowerLimit = lowerLimit;,4,0,0,0,0,0,0,0,0,5,25,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,102,        iUpperLimit = upperLimit;,0,0,0,0,0,0,0,0,0,0,25,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,103,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,67,        if (base == null) {,4,2,0,1,3,0,8,0,0,15,19,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,71,        lowerLimit = lowerLimit == null ? null : lowerLimit.toDateTime();,0,0,0,1,2,0,0,0,0,3,65,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,72,        upperLimit = upperLimit == null ? null : upperLimit.toDateTime();,8,1,0,1,2,0,4,0,0,15,65,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,74,        if (lowerLimit != null && upperLimit != null) {,4,3,0,1,3,0,0,0,0,7,47,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,81,"        return new LimitChronology(base, (DateTime)lowerLimit, (DateTime)upperLimit);",8,0,0,3,6,4,0,10,0,21,77,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,209,"        HashMap<Object, Object> converted = new HashMap<Object, Object>();",6,0,0,1,2,0,0,12,0,19,66,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,213,"        fields.eras = convertField(fields.eras, converted);",0,0,0,1,2,0,0,0,0,3,51,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,214,"        fields.centuries = convertField(fields.centuries, converted);",8,0,0,1,2,0,4,0,0,13,61,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,215,"        fields.years = convertField(fields.years, converted);",8,0,0,1,2,0,4,0,0,13,53,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,216,"        fields.months = convertField(fields.months, converted);",0,0,0,1,2,0,0,0,0,3,55,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,217,"        fields.weekyears = convertField(fields.weekyears, converted);",14,0,0,1,2,0,4,0,0,20,61,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,218,"        fields.weeks = convertField(fields.weeks, converted);",0,0,0,1,2,0,0,0,0,3,53,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,219,"        fields.days = convertField(fields.days, converted);",8,0,0,1,2,0,4,0,0,13,51,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,221,"        fields.halfdays = convertField(fields.halfdays, converted);",0,0,0,1,2,0,0,0,0,3,59,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,222,"        fields.hours = convertField(fields.hours, converted);",8,0,0,1,2,0,4,0,0,13,53,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,223,"        fields.minutes = convertField(fields.minutes, converted);",8,0,0,1,2,0,4,0,0,13,57,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,224,"        fields.seconds = convertField(fields.seconds, converted);",8,0,0,1,2,0,4,0,0,13,57,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,225,"        fields.millis = convertField(fields.millis, converted);",10,1,0,1,2,0,4,0,0,16,55,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,229,"        fields.year = convertField(fields.year, converted);",0,0,0,1,2,0,0,0,0,3,51,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,230,"        fields.yearOfEra = convertField(fields.yearOfEra, converted);",0,0,0,1,2,0,0,0,0,3,61,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,231,"        fields.yearOfCentury = convertField(fields.yearOfCentury, converted);",14,2,0,1,2,0,4,0,0,21,69,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,232,"        fields.centuryOfEra = convertField(fields.centuryOfEra, converted);",10,0,0,1,2,0,4,0,0,15,67,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,233,"        fields.era = convertField(fields.era, converted);",0,0,0,1,2,0,4,0,0,4,49,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,234,"        fields.dayOfWeek = convertField(fields.dayOfWeek, converted);",8,0,0,1,2,0,4,0,0,13,61,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,235,"        fields.dayOfMonth = convertField(fields.dayOfMonth, converted);",0,0,0,1,2,0,0,0,0,3,63,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,236,"        fields.dayOfYear = convertField(fields.dayOfYear, converted);",8,0,0,1,2,0,4,0,0,13,61,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,237,"        fields.monthOfYear = convertField(fields.monthOfYear, converted);",0,0,0,1,2,0,0,0,0,3,65,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,238,"        fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);",8,0,0,1,2,0,4,0,0,13,71,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,239,"        fields.weekyear = convertField(fields.weekyear, converted);",0,0,0,1,2,0,0,0,0,3,59,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,240,"        fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);",8,0,0,1,2,0,4,0,0,13,77,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,242,"        fields.millisOfSecond = convertField(fields.millisOfSecond, converted);",16,0,0,1,2,0,8,0,0,26,71,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,243,"        fields.millisOfDay = convertField(fields.millisOfDay, converted);",8,0,0,1,2,0,4,0,0,13,65,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,244,"        fields.secondOfMinute = convertField(fields.secondOfMinute, converted);",8,0,0,1,2,0,4,0,0,13,71,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,245,"        fields.secondOfDay = convertField(fields.secondOfDay, converted);",0,0,0,1,2,0,0,0,0,3,65,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,246,"        fields.minuteOfHour = convertField(fields.minuteOfHour, converted);",0,0,0,1,2,0,0,0,0,3,67,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,247,"        fields.minuteOfDay = convertField(fields.minuteOfDay, converted);",0,0,0,1,2,0,0,0,0,3,65,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,248,"        fields.hourOfDay = convertField(fields.hourOfDay, converted);",0,0,0,1,2,0,0,0,0,3,61,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,249,"        fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);",8,0,0,1,2,0,4,0,0,13,69,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,250,"        fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);",12,0,0,1,2,0,4,0,0,18,71,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,251,"        fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);",8,0,0,1,2,0,4,0,0,13,79,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,252,"        fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);",16,0,0,1,2,0,8,0,0,26,67,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,256,        if (field == null || !field.isSupported()) {,2,2,0,2,5,0,4,0,0,9,44,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,257,            return field;,4,0,0,0,0,1,6,4,0,14,13,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,259,        if (converted.containsKey(field)) {,0,0,0,2,5,0,6,0,0,6,35,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,260,            return (DurationField)converted.get(field);,4,1,0,2,4,1,6,2,0,13,43,1,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,262,        LimitDurationField limitField = new LimitDurationField(field);,4,0,0,1,2,0,6,4,0,14,62,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,263,"        converted.put(field, limitField);",2,0,0,1,2,0,12,0,0,14,33,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,264,        return limitField;,2,0,0,0,0,1,4,0,0,6,18,3,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,268,        if (field == null || !field.isSupported()) {,2,2,0,2,5,0,4,0,0,9,44,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,271,        if (converted.containsKey(field)) {,0,0,0,2,5,0,6,0,0,6,35,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,274,        LimitDateTimeField limitField =,2,0,0,0,0,0,0,2,0,4,31,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,279,"        converted.put(field, limitField);",0,0,0,1,2,0,8,0,0,8,33,5,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/LimitChronology,4,280,        return limitField;,2,0,0,0,0,1,0,0,0,3,18,4,0.00202,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,94,        return iType;,2,0,0,0,0,1,0,0,0,2,13,4,0.00202,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,102,        return iField.isSupported();,2,0,0,1,2,1,8,0,0,10,28,3,0.00202,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,206,        return iField.getDurationField();,0,0,0,1,2,1,4,0,0,4,33,5,0.00202,0,0,-1
defect4j,time,org/joda/time/field/DelegatedDateTimeField,4,225,        return iField.getLeapDurationField();,0,0,0,1,2,1,4,0,0,4,37,5,0.00202,0,0,-1
defect4j,time,org/joda/time/DateTime,4,516,"        super(year, monthOfYear, dayOfMonth,",8,0,0,0,1,0,6,2,0,16,36,3,0.00202,0,0,-1
defect4j,time,org/joda/time/DateTime,4,518,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00202,0,0,-1
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,4,229,        return iChronology.getMaxYear();,0,0,0,1,2,1,4,0,0,4,32,5,0.00202,0,0,-1
defect4j,time,org/joda/time/base/AbstractInstant,4,259,        if (this == readableInstant) {,2,1,0,1,3,0,0,0,0,3,30,4,0.00201,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,425,                oneYear = DateTimeConstants.MILLIS_PER_DAY * 365L;,6,1,0,0,0,0,0,0,0,8,50,9,0.00199,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,432,                year++;,2,0,0,0,0,0,0,0,0,3,7,9,0.00199,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,422,            if (isLeapYear(year)) {,8,0,0,2,5,0,8,0,0,17,23,3,0.00198,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,428,            yearStart += oneYear;,0,0,0,0,0,0,0,0,0,0,21,4,0.00198,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,430,            if (yearStart <= instant) {,4,1,0,1,3,0,0,0,0,5,27,7,0.00198,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,4,301,        if (zone == null) {,6,1,0,1,3,0,0,0,0,8,19,4,0.00195,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,4,304,        return zone;,2,0,0,0,0,1,0,0,0,2,12,4,0.00195,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,4,1055,            return oldInstant;,2,2,0,0,0,1,4,0,0,9,18,4,0.00195,0,0,-1
defect4j,time,org/joda/time/Instant,4,118,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00195,0,0,-1
defect4j,time,org/joda/time/Instant,4,119,        iMillis = instant;,4,0,0,0,0,0,0,0,0,5,18,4,0.00195,0,0,-1
defect4j,time,org/joda/time/Instant,4,120,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/Instant,4,144,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.00195,0,0,-1
defect4j,time,org/joda/time/Instant,4,256,        return iMillis;,0,0,0,0,0,1,0,0,0,1,15,4,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,335,"    public LocalDate(long instant, Chronology chronology) {",10,0,0,1,3,1,6,2,0,20,55,1,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,336,        chronology = DateTimeUtils.getChronology(chronology);,2,0,0,1,2,0,6,0,0,9,53,4,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,338,"        long localMillis = chronology.getZone().getMillisKeepLocal(DateTimeZone.UTC, instant);",6,0,0,2,4,0,8,0,0,14,86,5,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,339,        chronology = chronology.withUTC();,0,0,0,1,2,0,0,0,0,3,34,4,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,340,        iLocalMillis = chronology.dayOfMonth().roundFloor(localMillis);,2,0,0,2,4,0,8,0,0,11,63,4,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,341,        iChronology = chronology;,8,0,0,0,0,3,4,6,0,24,25,1,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,342,    },12,1,0,0,1,0,0,0,0,15,1,1,0.00195,0,0,-1
defect4j,time,org/joda/time/LocalDate,4,1462,        return getChronology().year().get(getLocalMillis());,0,0,0,4,8,1,8,0,0,8,52,5,0.00195,0,0,-1
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,4,164,        return getMaximumValue(instant);,0,0,0,1,2,1,0,0,0,4,32,4,0.00195,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,886,        long newInstant = roundFloor(instant);,2,0,0,1,2,0,4,0,0,6,38,5,0.00195,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,887,        if (newInstant != instant) {,0,0,0,1,3,0,0,0,0,4,28,4,0.00195,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,888,"            instant = add(newInstant, 1);",0,0,0,1,2,0,0,0,0,3,29,4,0.00195,0,0,-1
defect4j,time,org/joda/time/field/BaseDateTimeField,4,890,        return instant;,4,0,0,0,0,1,0,0,0,6,15,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,185,        return iMinDaysInFirstWeek;,4,1,0,0,0,1,0,0,0,5,27,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,504,            return getYear(instant + DateTimeConstants.MILLIS_PER_WEEK);,6,1,0,1,2,1,2,0,0,9,60,7,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,545,            daysSince19700101 = (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)),8,2,0,2,4,0,0,0,0,11,70,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,547,            if (daysSince19700101 < -3) {,2,1,0,1,3,0,0,0,0,4,29,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/BasicChronology,4,548,                return 7 + (int) ((daysSince19700101 + 4) % 7);,0,0,0,3,6,1,0,0,0,10,47,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1148,"            super(durationField, durationField.getType());",2,0,0,2,4,0,4,0,0,6,46,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1149,            iField = dateTimeField;,8,0,0,0,0,0,4,0,0,13,23,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1150,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,274,"        super(null, new Object[] {julian, gregorian, cutoverInstant});",6,0,0,3,6,0,0,2,0,9,62,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,275,    },2,0,0,0,1,0,0,0,0,3,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,284,"        super(base, new Object[] {julian, gregorian, cutoverInstant});",0,0,0,3,6,0,0,0,0,9,62,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,285,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,106,    static final Instant DEFAULT_CUTOVER = new Instant(-12219292800000L);,0,0,0,1,2,0,0,0,0,3,69,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,109,"    private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache = new HashMap<DateTimeZone, ArrayList<GJChronology>>();",0,0,0,1,2,0,0,0,0,3,126,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,84,        return to.getDateTimeMillis,0,0,0,0,0,1,4,0,0,4,27,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,190,        zone = DateTimeUtils.getZone(zone);,2,0,0,1,2,0,6,0,0,9,35,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,192,        if (gregorianCutover == null) {,2,1,0,1,3,0,0,0,0,3,31,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,195,            cutoverInstant = gregorianCutover.toInstant();,0,0,0,1,2,0,0,0,0,3,46,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,196,"            LocalDate cutoverDate = new LocalDate(cutoverInstant.getMillis(), GregorianChronology.getInstance(zone));",0,0,0,3,6,0,0,0,0,9,105,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,197,            if (cutoverDate.getYear() <= 0) {,0,1,0,2,5,0,4,0,0,5,33,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,203,        synchronized (cCache) {,2,0,0,1,3,0,0,0,0,2,23,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,204,            ArrayList<GJChronology> chronos = cCache.get(zone);,0,0,0,1,2,0,0,0,0,3,51,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,205,            if (chronos == null) {,2,1,0,1,3,0,0,0,0,3,22,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,206,                chronos = new ArrayList<GJChronology>(2);,0,0,0,1,2,0,0,0,0,3,41,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,207,"                cCache.put(zone, chronos);",0,0,0,1,2,0,0,0,0,3,26,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,218,            if (zone == DateTimeZone.UTC) {,6,1,0,1,3,0,0,0,0,7,31,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,219,                chrono = new GJChronology,2,0,0,0,0,0,0,2,0,5,25,8,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,224,"                chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);",6,0,0,1,2,0,6,0,0,13,75,8,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,225,                chrono = new GJChronology,0,0,0,0,0,0,0,0,0,0,25,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,231,            chronos.add(chrono);,0,0,0,1,2,0,0,0,0,3,20,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,232,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,233,        return chrono;,0,0,0,0,0,1,0,0,0,1,14,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,296,        if ((base = getBase()) != null) {,2,1,0,3,7,0,2,0,0,7,33,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,299,        return DateTimeZone.UTC;,4,0,0,0,0,1,0,0,0,4,24,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,310,        return withZone(DateTimeZone.UTC);,0,0,0,1,2,1,0,0,0,4,34,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,320,        if (zone == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,323,        if (zone == getZone()) {,0,0,0,2,5,0,0,0,0,7,24,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,324,            return this;,2,1,0,0,0,1,0,0,0,3,12,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,478,        Object[] params = (Object[])getParam();,4,0,0,4,8,0,6,4,0,14,39,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,480,        JulianChronology julian = (JulianChronology)params[0];,2,0,1,2,4,0,0,4,0,8,54,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,481,        GregorianChronology gregorian = (GregorianChronology)params[1];,0,0,0,2,4,0,4,0,0,4,63,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,482,        Instant cutoverInstant = (Instant)params[2];,4,0,1,2,4,0,0,4,0,10,44,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,483,        iCutoverMillis = cutoverInstant.getMillis();,2,0,0,1,2,0,26,0,0,29,44,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,485,        iJulianChronology = julian;,4,0,0,0,0,0,0,0,0,5,27,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,486,        iGregorianChronology = gregorian;,4,0,0,0,0,0,0,0,0,5,33,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,487,        iCutoverInstant = cutoverInstant;,0,0,0,0,0,0,0,0,0,0,33,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,489,        if (getBase() != null) {,0,1,0,2,5,0,2,0,0,4,24,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,490,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,493,        if (julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek()) {,0,1,0,3,7,0,8,0,0,9,82,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,498,        iGapDuration = iCutoverMillis - julianToGregorianByYear(iCutoverMillis);,0,0,0,1,2,0,0,0,0,3,72,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,504,        fields.copyFieldsFrom(gregorian);,0,0,0,1,2,0,6,0,0,6,33,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,510,        if (gregorian.millisOfDay().get(iCutoverMillis) == 0) {,0,1,0,3,7,0,8,0,0,9,55,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,514,"            fields.millisOfSecond = new CutoverField(julian.millisOfSecond(), fields.millisOfSecond, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,105,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,515,"            fields.millisOfDay = new CutoverField(julian.millisOfDay(), fields.millisOfDay, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,96,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,516,"            fields.secondOfMinute = new CutoverField(julian.secondOfMinute(), fields.secondOfMinute, iCutoverMillis);",0,0,0,2,4,0,0,0,0,6,105,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,517,"            fields.secondOfDay = new CutoverField(julian.secondOfDay(), fields.secondOfDay, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,96,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,518,"            fields.minuteOfHour = new CutoverField(julian.minuteOfHour(), fields.minuteOfHour, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,99,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,519,"            fields.minuteOfDay = new CutoverField(julian.minuteOfDay(), fields.minuteOfDay, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,96,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,520,"            fields.hourOfDay = new CutoverField(julian.hourOfDay(), fields.hourOfDay, iCutoverMillis);",0,0,0,2,4,0,0,0,0,6,90,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,521,"            fields.hourOfHalfday = new CutoverField(julian.hourOfHalfday(), fields.hourOfHalfday, iCutoverMillis);",14,2,0,2,4,0,4,2,0,23,102,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,522,"            fields.clockhourOfDay = new CutoverField(julian.clockhourOfDay(), fields.clockhourOfDay, iCutoverMillis);",0,0,0,2,4,0,0,0,0,6,105,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,523,"            fields.clockhourOfHalfday = new CutoverField(julian.clockhourOfHalfday(),",0,0,0,1,3,0,0,0,0,4,73,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,525,"            fields.halfdayOfDay = new CutoverField(julian.halfdayOfDay(), fields.halfdayOfDay, iCutoverMillis);",10,0,0,2,4,0,4,2,0,17,99,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,530,"            fields.era = new CutoverField(julian.era(), fields.era, iCutoverMillis);",2,0,0,2,4,0,0,0,0,4,72,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,537,            fields.year = new ImpreciseCutoverField(,4,0,0,0,1,0,0,2,0,7,40,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,539,            fields.years = fields.year.getDurationField();,4,1,0,1,2,0,0,0,0,5,46,7,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,540,            fields.yearOfEra = new ImpreciseCutoverField(,0,0,1,0,1,0,0,0,0,4,45,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,543,            fields.centuryOfEra = new ImpreciseCutoverField(,2,1,0,0,1,0,0,0,0,3,48,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,545,            fields.centuries = fields.centuryOfEra.getDurationField();,0,0,0,1,2,0,0,0,0,3,58,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,547,            fields.yearOfCentury = new ImpreciseCutoverField(,6,0,0,0,1,0,6,2,0,16,49,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,550,            fields.monthOfYear = new ImpreciseCutoverField(,0,0,0,0,1,0,0,0,0,1,47,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,552,            fields.months = fields.monthOfYear.getDurationField();,8,0,0,1,2,0,2,0,0,11,54,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,554,            fields.weekyear = new ImpreciseCutoverField(,0,0,0,0,1,0,0,0,0,1,44,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,556,            fields.weekyears = fields.weekyear.getDurationField();,10,0,0,1,2,0,6,0,0,17,54,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,557,            fields.weekyearOfCentury = new ImpreciseCutoverField(,4,0,0,0,1,0,0,2,0,7,53,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,567,            long cutover = gregorian.year().roundCeiling(iCutoverMillis);,2,0,0,2,4,0,8,0,0,10,61,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,568,            fields.dayOfYear = new CutoverField(,4,0,0,0,1,0,0,2,0,7,36,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,573,            long cutover = gregorian.weekyear().roundCeiling(iCutoverMillis);,6,3,0,2,4,0,0,0,0,9,65,10,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,574,            fields.weekOfWeekyear = new CutoverField(,0,0,0,0,1,0,0,0,0,1,41,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,581,            CutoverField cf = new CutoverField,6,0,0,0,0,0,6,4,0,16,34,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,583,            cf.iRangeDurationField = fields.months;,8,0,0,0,0,0,0,0,0,9,39,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,584,            fields.dayOfMonth = cf;,10,0,0,0,0,0,4,2,0,17,23,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,586,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,589,"        return convertByYear(instant, iJulianChronology, iGregorianChronology);",0,0,0,1,2,1,8,0,0,8,71,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,627,"            this(julianField, gregorianField, cutoverMillis, false);",6,0,0,1,2,0,0,0,0,7,56,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,628,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,638,"            this(julianField, gregorianField, null, cutoverMillis, convertByWeekyear);",12,0,0,1,2,0,0,0,0,13,74,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,639,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,649,"                     DurationField rangeField, long cutoverMillis, boolean convertByWeekyear) {",14,2,0,0,2,0,2,2,0,20,74,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,650,            super(gregorianField.getType());,6,0,0,2,4,0,4,0,0,10,32,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,651,            iJulianField = julianField;,4,0,0,0,0,0,0,0,0,5,27,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,652,            iGregorianField = gregorianField;,0,0,0,0,0,0,0,0,0,0,33,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,653,            iCutover = cutoverMillis;,0,0,0,0,0,0,0,0,0,0,25,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,654,            iConvertByWeekyear = convertByWeekyear;,0,0,0,0,0,0,0,0,0,0,39,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,657,            iDurationField = gregorianField.getDurationField();,0,0,0,1,2,0,0,0,0,3,51,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,658,            if (rangeField == null) {,2,0,0,1,3,0,0,0,0,2,25,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,659,                rangeField = gregorianField.getRangeDurationField();,2,0,0,1,2,0,4,0,0,7,52,7,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,660,                if (rangeField == null) {,4,1,1,1,3,0,0,2,0,11,25,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,661,                    rangeField = julianField.getRangeDurationField();,2,0,0,1,2,0,4,0,0,7,49,9,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,664,            iRangeDurationField = rangeField;,6,0,0,0,0,0,6,4,0,17,33,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,665,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,792,            return iDurationField;,0,0,0,0,0,1,0,0,0,1,22,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,796,            return iRangeDurationField;,0,0,0,0,0,1,0,0,0,1,27,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,816,            return iGregorianField.getLeapDurationField();,2,0,0,1,2,1,4,2,0,9,46,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,963,"            this(julianField, gregorianField, null, cutoverMillis, false);",6,0,0,1,2,0,0,0,0,7,62,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,964,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,974,"            this(julianField, gregorianField, durationField, cutoverMillis, false);",0,0,0,1,2,0,0,0,0,3,71,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,975,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,985,"            this(julianField, gregorianField, durationField, cutoverMillis, false);",8,0,0,1,2,0,0,0,0,9,71,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,986,            iRangeDurationField = rangeDurationField;,6,1,0,0,0,0,0,0,0,8,41,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,987,        },2,0,0,0,1,0,0,0,0,2,1,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,997,        {,0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,998,"            super(julianField, gregorianField, cutoverMillis, convertByWeekyear);",0,0,0,1,2,0,0,0,0,3,69,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,999,            if (durationField == null) {,2,1,0,1,3,0,0,0,0,3,28,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1000,"                durationField = new LinkedDurationField(iDurationField, this);",4,0,0,1,2,0,0,2,0,7,62,7,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1002,            iDurationField = durationField;,4,0,0,0,0,0,0,0,0,5,31,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/GJChronology,4,1003,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,162,"        super(base, param, minDaysInFirstWeek);",6,0,0,1,2,0,0,0,0,6,39,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,163,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,71,"    private static final Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]>();",6,1,0,3,6,3,0,12,0,22,116,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,74,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,0,0,0,1,2,0,0,0,0,3,45,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,75,    },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,114,"        return getInstance(zone, 4);",0,0,0,1,2,1,4,0,0,4,28,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,125,        if (zone == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,129,        synchronized (cCache) {,0,0,0,1,3,0,0,0,0,4,23,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,130,            JulianChronology[] chronos = cCache.get(zone);,2,0,0,2,4,0,6,2,0,10,46,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,131,            if (chronos == null) {,2,1,0,1,3,0,0,0,0,3,22,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,132,                chronos = new JulianChronology[7];,2,0,0,1,2,0,0,2,0,5,34,8,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,133,"                cCache.put(zone, chronos);",0,0,0,1,2,0,0,0,0,3,26,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,136,                chrono = chronos[minDaysInFirstWeek - 1];,4,1,1,1,2,0,0,0,0,8,41,8,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,140,            },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,141,            if (chrono == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,142,                if (zone == DateTimeZone.UTC) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,143,"                    chrono = new JulianChronology(null, null, minDaysInFirstWeek);",6,0,0,1,2,0,0,2,0,10,62,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,149,                chronos[minDaysInFirstWeek - 1] = chrono;,4,1,1,1,2,0,0,0,0,8,41,8,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,151,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,152,        return chrono;,2,0,0,0,0,1,0,0,0,2,14,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,211,        return (year & 3) == 0;,12,2,0,1,2,1,4,2,0,21,23,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,219,        int relativeYear = year - 1968;,4,1,0,0,0,0,0,0,0,5,31,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,221,        if (relativeYear <= 0) {,2,1,0,1,3,0,0,0,0,3,24,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,224,            leapYears = (relativeYear + 3) >> 2;,2,0,0,1,2,0,4,2,0,9,36,14,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,233,        long millis = (relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY;,10,3,0,2,4,0,0,0,0,13,89,5,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,237,        return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;,6,3,0,1,2,1,0,0,0,9,64,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,241,        return MIN_YEAR;,2,0,0,0,0,1,0,0,0,2,16,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,245,        return MAX_YEAR;,6,0,0,0,0,1,0,2,0,9,16,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,249,        return MILLIS_PER_YEAR;,2,0,0,0,0,1,4,0,0,7,23,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,253,        return MILLIS_PER_YEAR / 2;,2,1,0,0,0,1,4,0,0,7,27,3,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,257,        return MILLIS_PER_MONTH;,0,0,0,0,0,1,0,0,0,1,24,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,261,        return (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2;,6,4,0,1,2,1,0,0,0,10,79,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,265,        if (getBase() == null) {,0,1,0,2,5,0,2,0,0,4,24,4,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,266,            super.assemble(fields);,4,0,0,1,2,0,6,0,0,10,23,1,0.00195,0,0,-1
defect4j,time,org/joda/time/chrono/JulianChronology,4,268,"            fields.year = new SkipDateTimeField(this, fields.year);",8,0,0,1,2,0,0,2,0,11,55,6,0.00195,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,690,"            throw new UnsupportedOperationException(""Field is not supported"");",0,0,0,1,2,0,0,2,0,3,66,7,3.0,0,0,-1
defect4j,time,org/joda/time/Period,5,1631,                result = result.withYears(years);,0,0,0,1,2,0,0,0,0,3,33,4,1.125,1,0,-1
defect4j,time,org/joda/time/Period,5,895,        int[] values = getValues();  // cloned,4,1,0,2,4,0,0,0,0,5,38,4,1.0,0,0,-1
defect4j,time,org/joda/time/Period,5,896,"        getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);",6,0,0,2,4,0,8,0,0,14,76,3,1.0,0,0,-1
defect4j,time,org/joda/time/Period,5,1629,            months = months % 12;,4,1,0,0,0,0,0,0,0,6,21,6,1.0,1,0,-1
defect4j,time,org/joda/time/Period,5,1630,            if (years != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,1,0,-1
defect4j,time,org/joda/time/Period,5,1628,"            years = FieldUtils.safeAdd(years, months / 12);",4,1,0,1,2,0,6,0,0,12,47,6,0.81818,1,0,-1
defect4j,time,org/joda/time/Period,5,1625,        int years = getYears();,2,0,0,1,2,0,2,0,0,4,23,5,0.5625,0,0,-1
defect4j,time,org/joda/time/Period,5,1626,        int months = getMonths();,2,0,0,1,2,0,2,0,0,4,25,5,0.5625,0,0,-1
defect4j,time,org/joda/time/Period,5,1627,        if (years != 0 || months != 0) {,0,0,0,1,3,0,0,0,0,4,32,4,0.5625,0,0,-1
defect4j,time,org/joda/time/Period,5,1617,        type = DateTimeUtils.getPeriodType(type);,0,0,0,1,2,0,0,0,0,3,41,4,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1618,"        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs",2,0,0,1,2,0,2,0,0,4,83,5,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1619,        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));,0,0,0,6,12,0,0,0,0,18,81,4,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1620,        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));,6,1,0,6,12,0,2,0,0,10,81,4,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1621,        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));,2,0,0,6,12,0,0,0,0,2,77,9,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1622,        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));,0,0,0,6,12,0,0,0,0,18,75,4,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1623,        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));,0,0,0,6,12,0,8,0,0,8,77,5,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,1624,"        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());",8,1,0,2,4,0,4,4,0,17,73,1,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,535,        if (cached != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,538,        PeriodType type = standard();,0,0,0,1,2,0,0,0,0,3,29,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,539,        List<DurationFieldType> list = new ArrayList<DurationFieldType>(Arrays.asList(types));,2,0,0,2,4,0,6,8,0,16,86,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,540,        if (list.remove(DurationFieldType.years()) == false) {,0,1,0,3,7,0,8,0,0,10,54,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,541,            type = type.withYearsRemoved();,2,0,0,1,2,0,4,0,0,7,31,6,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,543,        if (list.remove(DurationFieldType.months()) == false) {,6,1,0,3,7,0,4,0,0,12,55,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,546,        if (list.remove(DurationFieldType.weeks()) == false) {,0,1,0,3,7,0,8,0,0,10,54,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,549,        if (list.remove(DurationFieldType.days()) == false) {,0,0,0,3,7,0,0,0,0,10,53,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,552,        if (list.remove(DurationFieldType.hours()) == false) {,0,0,0,3,7,0,0,0,0,10,54,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,553,            type = type.withHoursRemoved();,2,0,0,1,2,0,4,0,0,7,31,6,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,555,        if (list.remove(DurationFieldType.minutes()) == false) {,0,0,0,3,7,0,0,0,0,10,56,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,556,            type = type.withMinutesRemoved();,2,0,0,1,2,0,4,0,0,7,33,6,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,558,        if (list.remove(DurationFieldType.seconds()) == false) {,0,1,0,3,7,0,8,0,0,10,56,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,559,            type = type.withSecondsRemoved();,2,0,0,1,2,0,4,0,0,7,33,6,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,561,        if (list.remove(DurationFieldType.millis()) == false) {,2,1,0,3,7,0,8,0,0,13,55,3,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,562,            type = type.withMillisRemoved();,2,0,0,1,2,0,4,0,0,7,32,6,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,564,        if (list.size() > 0) {,0,0,0,2,5,0,0,0,0,7,22,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,569,"        PeriodType checkPartType = new PeriodType(null, type.iTypes, null);",6,0,0,1,2,0,0,4,0,11,67,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,570,        PeriodType checkedType = (PeriodType) cache.get(checkPartType);,2,0,0,2,4,0,6,4,0,12,63,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,571,        if (checkedType != null) {,8,3,0,1,3,0,12,0,0,24,26,1,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,575,"        cache.put(checkPartType, type);",0,0,0,1,2,0,0,0,0,3,31,4,0.5,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,576,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.5,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,5,269,            if (obj instanceof StandardDurationFieldType) {,2,0,0,1,3,0,0,2,0,4,47,6,0.5,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,5,270,                return iOrdinal == ((StandardDurationFieldType) obj).iOrdinal;,6,1,0,2,4,1,0,2,0,9,62,7,0.5,0,0,-1
defect4j,time,org/joda/time/Period,5,445,    },0,0,0,0,1,0,0,0,0,1,1,4,0.375,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,688,        int realIndex = iIndices[index];,2,0,1,1,2,0,0,0,0,6,32,5,0.375,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,689,        if (realIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.375,0,0,-1
defect4j,time,org/joda/time/Period,5,444,"        super(duration, type, chronology);",0,0,0,1,2,0,0,0,0,3,34,4,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,372,        PeriodType type = cMonths;,0,0,0,0,0,0,0,0,0,0,26,4,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,373,        if (type == null) {,2,1,0,1,3,0,6,0,0,9,19,3,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,374,            type = new PeriodType(,0,0,0,0,1,0,4,0,0,4,22,6,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,379,            cMonths = type;,4,0,0,0,0,0,0,0,0,5,15,6,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,381,        return type;,4,0,0,0,0,1,0,0,0,4,12,4,0.34615,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,222,        PeriodType type = cYWD;,2,0,0,0,0,0,0,0,0,2,23,6,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,223,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,224,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,232,            cYWD = type;,2,0,0,0,0,0,4,2,0,8,12,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,234,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,278,        PeriodType type = cYD;,6,0,0,0,0,0,6,2,0,15,22,1,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,279,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,280,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,287,            cYD = type;,4,0,0,0,0,0,0,2,0,7,11,5,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,289,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,502,        if (types == null || types.length == 0) {,14,4,0,1,3,0,0,0,0,19,41,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,505,        for (int i = 0; i < types.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,506,            if (types[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,510,"        Map<PeriodType, Object> cache = cTypes;",4,0,0,0,0,0,0,6,0,10,39,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,511,        if (cache.isEmpty()) {,0,0,0,2,5,0,8,0,0,8,22,6,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,512,"            cache.put(standard(), standard());",0,0,0,3,6,0,8,0,0,8,34,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,513,"            cache.put(yearMonthDayTime(), yearMonthDayTime());",0,0,0,3,6,0,8,0,0,8,50,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,514,"            cache.put(yearMonthDay(), yearMonthDay());",0,0,0,3,6,0,0,0,0,9,42,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,515,"            cache.put(yearWeekDayTime(), yearWeekDayTime());",0,0,0,3,6,0,0,0,0,9,48,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,516,"            cache.put(yearWeekDay(), yearWeekDay());",2,0,0,3,6,0,0,0,0,2,40,5,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,517,"            cache.put(yearDayTime(), yearDayTime());",0,0,0,3,6,0,0,0,0,9,40,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,518,"            cache.put(yearDay(), yearDay());",2,0,0,3,6,3,0,16,0,21,32,2,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,519,"            cache.put(dayTime(), dayTime());",0,0,0,3,6,0,8,0,0,8,32,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,520,"            cache.put(time(), time());",0,0,0,3,6,0,0,0,0,9,26,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,521,"            cache.put(years(), years());",0,0,0,3,6,0,8,0,0,8,28,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,522,"            cache.put(months(), months());",0,0,0,3,6,0,8,0,0,8,30,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,523,"            cache.put(weeks(), weeks());",0,0,0,3,6,0,8,0,0,8,28,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,524,"            cache.put(days(), days());",2,1,0,3,6,0,8,0,0,12,26,1,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,525,"            cache.put(hours(), hours());",2,0,0,3,6,0,4,0,0,6,28,5,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,526,"            cache.put(minutes(), minutes());",0,0,0,3,6,0,8,0,0,8,32,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,527,"            cache.put(seconds(), seconds());",0,0,0,3,6,0,0,0,0,9,32,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,528,"            cache.put(millis(), millis());",0,0,0,3,6,0,8,0,0,8,30,7,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,530,"        PeriodType inPartType = new PeriodType(null, types, null);",6,0,0,1,2,0,6,4,0,18,58,3,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,531,        Object cached = cache.get(inPartType);,2,0,0,1,2,0,6,2,0,10,38,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,532,        if (cached instanceof PeriodType) {,0,0,0,1,3,0,0,0,0,4,35,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,725,"        return withFieldRemoved(0, ""NoYears"");",2,0,0,1,2,1,0,2,0,5,38,6,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,761,"        return withFieldRemoved(4, ""NoHours"");",0,0,0,1,2,1,6,0,0,7,38,3,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,770,"        return withFieldRemoved(5, ""NoMinutes"");",0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,851,        int hash = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,852,        for (int i = 0; i < iTypes.length; i++) {,24,3,1,1,3,0,32,4,0,69,41,1,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,853,            hash += iTypes[i].hashCode();,2,0,1,2,4,0,2,0,0,9,29,6,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,855,        return hash;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,779,"        return withFieldRemoved(6, ""NoSeconds"");",0,0,0,1,2,1,0,0,0,4,40,4,0.125,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,809,                types[i - 1] = iTypes[i];,8,1,1,2,4,0,4,2,0,26,25,1,0.11111,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,163,        PeriodType type = cYMD;,0,0,0,0,0,0,0,0,0,0,23,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,164,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,165,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,173,            cYMD = type;,4,0,0,0,0,0,0,0,0,5,12,6,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,175,        return type;,2,1,1,0,0,1,8,0,0,15,12,3,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,193,        PeriodType type = cYWDTime;,0,0,0,0,0,0,0,0,0,0,27,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,194,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,195,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,205,            cYWDTime = type;,4,0,0,0,0,0,0,0,0,5,16,5,0.08333,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,207,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.08333,0,0,-1
defect4j,time,org/joda/time/Period,5,737,"        return getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);",6,1,0,2,4,1,4,0,0,11,68,3,0.07692,0,0,-1
defect4j,time,org/joda/time/Period,5,746,"        return getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);",8,0,1,2,4,1,4,0,0,17,69,3,0.07692,0,0,-1
defect4j,time,org/joda/time/Period,5,755,"        return getPeriodType().getIndexedField(this, PeriodType.WEEK_INDEX);",8,0,0,2,4,1,4,0,0,13,68,3,0.07627,0,0,-1
defect4j,time,org/joda/time/Period,5,764,"        return getPeriodType().getIndexedField(this, PeriodType.DAY_INDEX);",0,0,0,2,4,1,0,0,0,7,67,4,0.07627,0,0,-1
defect4j,time,org/joda/time/Period,5,774,"        return getPeriodType().getIndexedField(this, PeriodType.HOUR_INDEX);",6,0,0,2,4,1,4,0,0,10,68,4,0.07627,0,0,-1
defect4j,time,org/joda/time/Period,5,783,"        return getPeriodType().getIndexedField(this, PeriodType.MINUTE_INDEX);",4,1,0,2,4,1,0,0,0,5,70,3,0.07627,0,0,-1
defect4j,time,org/joda/time/Period,5,801,"        return getPeriodType().getIndexedField(this, PeriodType.MILLI_INDEX);",0,0,0,2,4,1,0,0,0,7,69,4,0.07627,0,0,-1
defect4j,time,org/joda/time/Period,5,792,"        return getPeriodType().getIndexedField(this, PeriodType.SECOND_INDEX);",0,0,0,2,4,1,0,0,0,7,70,4,0.075,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,95,        int[] result = new int[size()];,4,0,0,3,6,0,2,0,0,7,31,1,0.072,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,96,        for (int i = 0; i < result.length; i++) {,4,1,0,1,3,0,8,0,0,13,41,1,0.072,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,97,            result[i] = getValue(i);,0,0,0,2,4,0,0,0,0,6,24,4,0.072,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,99,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.072,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,818,                indices[i] = (iIndices[i] == -1 ? -1 : iIndices[i] - 1);,2,0,0,4,8,0,6,0,0,9,56,3,0.07143,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,480,        PeriodType type = cMillis;,0,0,0,0,0,0,0,0,0,0,26,4,0.05556,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,481,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.05556,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,482,            type = new PeriodType(,2,0,0,0,1,0,0,2,0,5,22,6,0.05556,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,487,            cMillis = type;,4,0,0,0,0,0,0,0,0,5,15,6,0.05556,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,489,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.05556,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,788,"        return withFieldRemoved(7, ""NoMillis"");",0,0,0,1,2,1,2,0,0,3,39,5,0.04762,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,5,266,            if (this == obj) {,4,2,0,1,3,0,0,0,0,6,18,1,0.04762,0,0,-1
defect4j,time,org/joda/time/DurationFieldType,5,267,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.04762,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,134,        PeriodType type = cYMDTime;,0,0,0,0,0,0,0,0,0,0,27,4,0.04348,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,135,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.04348,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,136,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.04348,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,146,            cYMDTime = type;,0,0,0,0,0,0,0,0,0,0,16,4,0.04348,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,148,        return type;,4,0,0,0,0,1,4,2,0,10,12,3,0.04348,0,0,-1
defect4j,time,org/joda/time/Period,5,329,"        super(years, months, weeks, days, hours, minutes, seconds, millis, PeriodType.standard());",0,0,0,2,4,0,0,0,0,6,90,4,0.04306,0,0,-1
defect4j,time,org/joda/time/Period,5,330,    },2,0,0,0,1,3,0,4,0,10,1,2,0.04306,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,807,                types[i] = iTypes[i];,0,0,0,2,4,0,0,0,0,6,21,4,0.03704,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,816,                indices[i] = iIndices[i];,0,0,0,2,4,0,0,0,0,6,25,4,0.03704,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,305,        PeriodType type = cDTime;,4,0,0,0,0,0,0,2,0,6,25,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,306,        if (type == null) {,12,1,0,1,3,0,0,4,0,19,19,1,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,307,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,316,            cDTime = type;,12,0,0,0,0,0,0,2,0,17,14,1,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,318,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,354,        PeriodType type = cYears;,0,0,0,0,0,0,0,0,0,0,25,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,355,        if (type == null) {,4,1,0,1,3,0,4,0,0,10,19,3,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,356,            type = new PeriodType(,4,0,0,0,1,0,0,2,0,7,22,1,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,361,            cYears = type;,12,3,0,0,0,0,6,2,0,23,14,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,363,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,608,        return iName;,4,0,0,0,0,1,2,2,0,10,13,3,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,799,        int fieldIndex = iIndices[indicesIndex];,4,1,1,1,2,0,4,0,0,14,40,3,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,800,        if (fieldIndex == -1) {,0,0,0,1,3,0,0,0,0,4,23,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,804,        DurationFieldType[] types = new DurationFieldType[size() - 1];,0,0,0,3,6,0,0,0,0,9,62,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,805,        for (int i = 0; i < iTypes.length; i++) {,0,0,0,1,3,0,0,2,0,2,41,8,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,806,            if (i < fieldIndex) {,20,10,0,1,3,0,0,0,0,34,21,3,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,808,            } else if (i > fieldIndex) {,4,1,0,1,4,0,0,0,0,5,28,7,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,813,        int[] indices = new int[8];,2,0,0,2,4,0,0,0,0,2,27,5,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,814,        for (int i = 0; i < indices.length; i++) {,26,3,0,1,3,3,0,12,0,46,42,1,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,815,            if (i < indicesIndex) {,6,1,0,1,3,0,6,0,0,13,23,3,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,817,            } else if (i > indicesIndex) {,0,0,0,1,4,0,0,0,0,5,30,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,820,                indices[i] = -1;,0,0,0,1,2,0,0,0,0,3,16,4,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,823,"        return new PeriodType(getName() + name, types, indices);",4,0,0,2,4,1,0,0,0,4,56,6,0.03571,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,674,        int realIndex = iIndices[index];,6,1,0,1,2,0,0,0,0,7,32,5,0.03321,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,675,        return (realIndex == -1 ? 0 : period.getValue(realIndex));,0,0,0,2,4,1,0,0,0,7,58,4,0.03321,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,94,    },2,0,0,0,1,0,6,0,0,9,1,4,0.03,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,90,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,91,        type = checkPeriodType(type);,0,0,0,1,2,0,0,0,0,3,29,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,92,        iType = type;,0,0,0,0,0,0,0,0,0,0,13,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,93,"        iValues = setPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis); // internal method",2,0,0,1,2,0,18,0,0,21,108,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,457,"        checkAndUpdate(DurationFieldType.days(), newValues, days);",0,0,0,2,4,0,10,0,0,10,58,5,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,458,"        checkAndUpdate(DurationFieldType.hours(), newValues, hours);",0,0,0,2,4,0,0,0,0,6,60,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,459,"        checkAndUpdate(DurationFieldType.minutes(), newValues, minutes);",2,2,0,2,4,0,4,0,0,8,64,8,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,460,"        checkAndUpdate(DurationFieldType.seconds(), newValues, seconds);",0,0,0,2,4,0,10,0,0,10,64,5,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,461,"        checkAndUpdate(DurationFieldType.millis(), newValues, millis);",0,0,0,2,4,0,0,0,0,6,62,4,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,462,        return newValues;,4,0,0,0,0,2,0,0,0,5,17,1,0.0298,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,455,"        checkAndUpdate(DurationFieldType.months(), newValues, months);",10,1,0,2,4,0,0,8,0,19,62,4,0.0297,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,456,"        checkAndUpdate(DurationFieldType.weeks(), newValues, weeks);",2,0,0,2,4,0,14,0,0,16,60,3,0.0297,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,453,        int[] newValues = new int[size()];,8,0,0,3,6,1,2,0,0,11,34,1,0.02941,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,454,"        checkAndUpdate(DurationFieldType.years(), newValues, years);",0,0,0,2,4,0,10,0,0,10,60,5,0.02941,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,390,        PeriodType type = cWeeks;,0,0,0,0,0,0,0,0,0,0,25,4,0.02632,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,391,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.02632,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,392,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.02632,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,397,            cWeeks = type;,0,0,0,0,0,0,0,0,0,0,14,4,0.02632,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,399,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.02632,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,397,            values[index] = newValue;,4,0,1,1,2,0,0,4,0,14,25,3,0.02624,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,399,    },2,0,0,0,1,0,0,4,0,7,1,4,0.02624,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,390,        int index = indexOf(type);,2,0,0,1,2,0,4,0,0,6,26,5,0.02601,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,391,        if (index == -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.02601,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,444,        PeriodType type = cMinutes;,4,0,0,0,0,0,0,2,0,6,27,4,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,445,        if (type == null) {,4,2,0,1,3,0,0,0,0,6,19,4,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,446,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,451,            cMinutes = type;,4,0,0,0,0,0,0,0,0,5,16,6,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,453,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,462,        PeriodType type = cSeconds;,0,0,0,0,0,0,0,0,0,0,27,4,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,463,        if (type == null) {,4,0,0,1,3,0,0,0,0,4,19,5,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,464,            type = new PeriodType(,6,0,0,0,1,0,4,4,0,15,22,3,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,469,            cSeconds = type;,10,0,0,0,0,0,2,2,0,16,16,5,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,471,        return type;,2,0,0,0,0,1,18,0,0,20,12,3,0.02564,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,426,        PeriodType type = cHours;,0,0,0,0,0,0,4,0,0,4,25,5,0.025,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,427,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.025,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,428,            type = new PeriodType(,6,0,0,0,1,0,0,4,0,11,22,1,0.025,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,433,            cHours = type;,4,0,0,0,0,0,0,0,0,5,14,6,0.025,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,435,        return type;,4,0,0,0,0,1,0,0,0,5,12,5,0.025,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,650,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.02368,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,137,        return getPeriodType().indexOf(type);,0,0,0,2,4,1,6,0,0,6,37,5,0.0235,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,648,"        for (int i = 0, isize = size(); i < isize; i++) {",2,0,0,2,5,0,8,2,0,13,49,8,0.0235,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,649,            if (iTypes[i] == type) {,2,1,1,2,5,0,0,0,0,7,24,6,0.0235,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,408,        PeriodType type = cDays;,4,0,0,0,0,0,0,2,0,6,24,4,0.02273,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,409,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.02273,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,410,            type = new PeriodType(,0,0,0,0,1,0,0,0,0,1,22,4,0.02273,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,415,            cDays = type;,0,0,0,0,0,0,0,0,0,0,13,4,0.02273,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,417,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.02273,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,5,321,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.02074,0,0,-1
defect4j,time,org/joda/time/Period,5,298,"        super(0L, null, null);",2,0,0,1,2,0,0,0,0,3,22,3,0.01982,0,0,-1
defect4j,time,org/joda/time/Period,5,299,    },2,0,0,0,1,0,0,0,0,2,1,6,0.01982,0,0,-1
defect4j,time,org/joda/time/Period,5,65,    public static final Period ZERO = new Period();,4,0,0,1,2,6,0,16,0,26,47,2,0.01982,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,5,70,        return sum;,12,3,0,0,0,1,0,0,0,16,11,3,0.01903,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,5,64,        int sum = val1 + val2;,8,2,1,0,0,0,0,0,0,12,22,3,0.01895,0,0,-1
defect4j,time,org/joda/time/field/FieldUtils,5,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,8,5,0,3,7,0,0,0,0,13,45,4,0.01895,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,5,319,            return PeriodType.standard();,4,1,0,1,2,1,4,0,0,9,29,3,0.01844,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,254,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01804,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,255,        type = checkPeriodType(type);,6,3,0,1,2,0,0,2,0,11,29,1,0.01804,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,256,        chrono = DateTimeUtils.getChronology(chrono);,2,0,0,1,2,0,6,0,0,9,45,4,0.01804,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,257,        iType = type;,0,0,0,0,0,0,0,0,0,0,13,4,0.01804,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,258,"        iValues = chrono.get(this, duration);",0,0,0,1,2,0,0,0,0,3,37,4,0.01804,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,259,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01804,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,276,        int size = period.size();,2,0,0,1,2,0,10,0,0,12,25,3,0.01741,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,277,        int[] values = new int[size];,4,1,1,2,4,0,0,0,0,7,29,3,0.01741,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,278,        if (duration != 0) {,8,2,0,1,3,0,4,0,0,15,20,3,0.01741,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,289,        return values;,2,0,0,0,0,1,4,0,0,6,14,3,0.01741,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,329,        return iValues[index];,0,0,0,1,2,1,0,0,0,4,22,4,0.01705,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,333,        PeriodType type = cTime;,14,2,0,0,0,0,16,4,0,38,24,3,0.01695,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,334,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.01695,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,335,            type = new PeriodType(,2,0,0,0,1,0,0,2,0,5,22,6,0.01695,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,343,            cTime = type;,4,0,0,0,0,0,0,0,0,5,13,6,0.01695,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,345,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,0.01695,0,0,-1
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,5,157,            return false;,2,0,0,0,0,1,0,2,0,5,13,1,0.01613,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,102,        PeriodType type = cStandard;,2,0,0,0,0,0,0,0,0,2,28,4,0.0159,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,103,        if (type == null) {,0,0,0,1,3,0,8,0,0,8,19,5,0.0159,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,104,            type = new PeriodType(,2,0,0,0,1,0,0,2,0,5,22,6,0.0159,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,114,            cStandard = type;,0,0,0,0,0,0,0,0,0,0,17,4,0.0159,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,116,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.0159,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,5,318,        if (type == null) {,0,0,1,1,3,0,14,0,0,18,19,8,0.0156,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,308,        return DateTimeUtils.getPeriodType(type);,0,0,0,1,2,1,0,0,0,4,41,4,0.0156,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,57,    private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {,2,0,0,1,3,2,0,4,0,8,73,1,0.01538,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,318,        return iType;,0,0,0,0,0,1,0,0,0,1,13,4,0.01538,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,45,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01538,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,46,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01538,0,0,-1
defect4j,time,org/joda/time/base/AbstractPeriod,5,56,        return getPeriodType().size();,0,0,0,2,4,1,8,0,0,9,30,3,0.01538,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,617,        return iTypes.length;,0,0,0,0,0,1,0,0,0,1,21,4,0.01538,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,5,57,    private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {,4,0,0,1,3,0,0,0,0,5,73,5,0.01538,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,595,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,596,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,597,        iTypes = types;,4,0,0,0,0,0,0,0,0,5,15,4,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,598,        iIndices = indices;,12,9,0,0,0,0,6,0,0,28,19,1,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,599,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,56,"    private static final Map<PeriodType, Object> cTypes = new HashMap<PeriodType, Object>(32);",10,0,0,1,2,3,4,12,0,30,90,1,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,58,    static int YEAR_INDEX = 0;,2,0,0,0,0,1,0,0,0,3,26,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,59,    static int MONTH_INDEX = 1;,2,0,0,0,0,1,0,0,0,3,27,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,60,    static int WEEK_INDEX = 2;,2,0,0,0,0,1,0,0,0,3,26,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,61,    static int DAY_INDEX = 3;,2,0,0,0,0,1,0,0,0,3,25,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,62,    static int HOUR_INDEX = 4;,2,0,0,0,0,1,0,0,0,3,26,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,63,    static int MINUTE_INDEX = 5;,0,0,0,0,0,0,0,0,0,0,28,4,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,64,    static int SECOND_INDEX = 6;,2,0,0,0,0,1,0,0,0,3,28,2,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,65,    static int MILLI_INDEX = 7;,12,0,0,0,0,1,4,2,0,20,27,1,0.01183,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,251,        PeriodType type = cYDTime;,4,0,0,0,0,0,0,2,0,6,26,4,0.01124,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,252,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.01124,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,253,            type = new PeriodType(,2,0,0,0,1,0,8,0,0,10,22,5,0.01124,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,262,            cYDTime = type;,0,0,0,0,0,0,0,0,0,0,15,4,0.01124,0,0,-1
defect4j,time,org/joda/time/PeriodType,5,264,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.01124,0,0,-1
defect4j,time,org/joda/time/DateTimeUtils,5,285,            return ISOChronology.getInstance();,0,0,0,1,2,1,0,0,0,4,35,4,0.01051,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,284,"                    current = field.add(current, value);",0,0,0,1,2,0,0,0,0,3,36,4,0.0098,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,285,                    values[i] = value;,2,0,1,1,2,0,0,0,0,7,18,10,0.0098,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,279,            long current = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.00962,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,280,            for (int i = 0; i < size; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.00962,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,281,                DurationField field = period.getFieldType(i).getField(this);,10,3,0,2,4,0,8,2,0,23,60,5,0.00962,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,282,                if (field.isPrecise()) {,8,1,0,2,5,0,10,2,0,22,24,3,0.00962,0,0,-1
defect4j,time,org/joda/time/chrono/BaseChronology,5,283,"                    int value = field.getDifference(duration, current);",2,0,0,1,2,0,8,0,0,10,51,11,0.00962,0,0,-1
