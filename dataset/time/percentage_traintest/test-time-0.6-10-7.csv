dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/base/BaseDateTime,19,223,"        this(year, monthOfYear, dayOfMonth, hourOfDay,",0,0,0,0,1,0,0,0,0,1,46,4,0.00339,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,953,        if (dt == null) {,4,2,0,1,3,0,0,0,0,6,17,4,0.00319,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,954,            dt = new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,0,0,3,35,4,0.00319,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,959,        return dt;,2,0,0,0,0,1,0,0,0,2,10,4,0.00319,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,916,        if (tt == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0031,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,917,            tt = new DateTimeFormatterBuilder(),4,0,0,1,2,0,0,0,0,5,35,4,0.0031,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,922,        return tt;,2,0,0,0,0,1,0,0,0,2,10,4,0.0031,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,1875,"                printTo(buf, null, instant, chrono);",0,0,0,1,2,0,8,0,0,9,36,7,0.00302,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,1878,            },0,0,0,0,1,0,0,0,0,1,1,4,0.00302,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,1879,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00302,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,879,        if (t == null) {,0,1,0,1,3,0,8,0,0,10,16,4,0.00302,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,880,            t = new DateTimeFormatterBuilder(),4,0,0,1,2,0,0,4,0,10,34,6,0.00302,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,885,        return t;,2,0,0,0,0,1,0,0,0,2,9,4,0.00302,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1482,        if (hmsf == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.00299,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1483,            hmsf = new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,0,0,3,37,4,0.00299,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1490,        return hmsf;,0,0,0,0,0,1,0,0,0,1,12,4,0.00299,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1691,        if (fse == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.00299,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1692,            fse = new DateTimeFormatterBuilder(),2,0,0,1,2,0,0,2,0,5,36,6,0.00299,0,0,-1
defect4j,time,org/joda/time/format/ISODateTimeFormat,19,1699,        return fse;,2,0,0,0,0,1,0,0,0,2,11,4,0.00299,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,2112,            if (displayZone == null) {,4,0,0,1,3,0,4,0,0,9,26,3,0.00294,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,2115,            if (displayOffset == 0 && iZeroOffsetPrintText != null) {,4,3,0,1,3,0,0,0,0,7,57,5,0.00294,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,1908,            DateTimeField field = iFieldType.getField(chrono);,2,0,0,1,2,0,0,4,0,6,50,4,0.00289,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,19,1909,            int minDigits = iMinDigits;,0,0,0,0,0,0,0,0,0,0,27,4,0.00289,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2519,"            buf.append(displayZone != null ? displayZone.getID() : """");",0,0,0,2,4,0,0,0,0,6,59,4,0.14286,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2520,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2537,            return MAX_LENGTH;,0,0,0,0,0,1,0,0,0,1,18,4,0.14286,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2541,            String str = text.substring(position);,0,0,0,1,2,0,0,0,0,3,38,4,0.125,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2542,            for (String id : ALL_IDS) {,0,0,0,1,3,0,14,0,0,14,27,6,0.125,1,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2543,                if (str.startsWith(id)) {,0,0,0,2,5,0,0,0,0,7,25,4,0.125,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2544,                    bucket.setZone(DateTimeZone.forID(id));,0,0,0,2,4,0,10,0,0,10,39,10,0.125,1,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2545,                    return position + id.length();,6,1,0,1,2,1,4,0,0,14,30,1,0.125,1,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2547,            },0,0,0,0,1,0,0,0,0,1,1,4,0.125,1,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,1030,"        return append0(TimeZoneId.INSTANCE, TimeZoneId.INSTANCE);",0,0,0,1,2,1,4,0,0,4,57,6,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2498,    static enum TimeZoneId,2,0,0,0,0,1,0,0,0,3,22,2,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2501,        INSTANCE;,2,0,0,0,0,0,0,0,0,2,9,3,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2502,        static final Set<String> ALL_IDS = DateTimeZone.getAvailableIDs();,0,0,0,1,2,0,0,0,0,3,66,4,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2505,            int max = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2506,            for (String id : ALL_IDS) {,4,0,0,1,3,0,0,2,0,6,27,5,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2507,"                max = Math.max(max, id.length());",0,0,0,2,4,0,0,0,0,6,33,4,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2508,            },0,0,0,0,1,0,0,0,0,1,1,4,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2509,            MAX_LENGTH = max;,2,0,0,0,0,1,0,0,0,3,17,2,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2510,        },2,1,0,0,1,0,10,0,0,14,1,1,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2513,            return MAX_LENGTH;,10,0,0,0,0,1,10,0,0,24,18,1,0.11111,0,0,-1
defect4j,time,org/joda/time/format/DateTimeParserBucket,20,159,        iSavedState = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.1,0,0,-1
defect4j,time,org/joda/time/format/DateTimeParserBucket,20,160,        iZone = zone;,0,0,0,0,0,0,0,0,0,0,13,4,0.1,0,0,-1
defect4j,time,org/joda/time/format/DateTimeParserBucket,20,161,    },0,0,0,0,1,0,0,0,0,1,1,4,0.1,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,20,374,        return cAvailableIDs;,0,0,0,0,0,1,0,0,0,1,21,4,0.09091,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,1094,"        DateTimeFormat.appendPatternTo(this, pattern);",10,0,0,1,2,0,10,2,0,23,46,3,0.07143,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,1095,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.07143,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormat,20,377,"        parsePatternTo(builder, pattern);",0,0,0,1,2,0,0,0,0,3,33,4,0.07143,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormat,20,378,    },4,0,0,0,1,0,0,4,0,8,1,4,0.07143,0,0,-1
defect4j,time,org/joda/time/DateTime,20,407,"        super(year, monthOfYear, dayOfMonth,",8,1,0,0,1,0,0,0,0,9,36,3,0.0625,0,0,-1
defect4j,time,org/joda/time/DateTime,20,409,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0625,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormatter,20,866,"        throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",0,0,0,2,4,0,8,2,0,10,81,5,0.05556,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormat,20,508,                builder.appendMinuteOfHour(tokenLen);,0,0,0,1,2,0,0,0,0,3,37,4,0.01639,0,0,-1
defect4j,time,org/joda/time/format/DateTimeFormat,20,509,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01639,0,0,-1
defect4j,time,org/joda/time/format/FormatUtils,20,373,"        return ""Invalid format: \"""" + sampleText + ""\"" is malformed at \"""" +",2,1,0,0,0,1,8,0,0,13,68,1,0.01316,0,0,-1
defect4j,time,org/joda/time/format/FormatUtils,20,369,        if (errorPos >= text.length()) {,2,1,0,2,5,0,4,0,0,7,32,4,0.01235,0,0,-1
defect4j,time,org/joda/time/tz/FixedDateTimeZone,22,61,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.33333,0,0,-1
defect4j,time,org/joda/time/base/AbstractDuration,22,80,        return new Period(getMillis());,2,1,0,2,4,1,6,2,0,11,31,1,0.5,0,0,-1
defect4j,time,org/joda/time/tz/FixedDateTimeZone,22,57,        return iWallOffset;,0,0,0,0,0,1,4,0,0,5,19,7,0.33333,0,0,-1
defect4j,time,org/joda/time/Period,22,382,        super(duration);,2,0,0,1,2,0,0,0,0,2,16,4,0.12903,0,0,-1
defect4j,time,org/joda/time/Period,22,383,    },0,0,0,0,1,0,0,0,0,1,1,4,0.12903,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,237,"        return forOffsetHoursMinutes(hoursOffset, 0);",0,0,0,1,2,1,4,0,0,4,45,5,0.08696,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,254,        if (hoursOffset == 0 && minutesOffset == 0) {,2,0,0,1,3,0,0,0,0,3,45,10,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,257,        if (minutesOffset < 0 || minutesOffset > 59) {,0,0,0,1,3,0,0,0,0,4,46,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,260,        int offset = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,262,"            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",2,0,0,1,2,0,6,0,0,8,62,7,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,263,            if (hoursInMinutes < 0) {,0,0,0,1,3,0,0,0,0,4,25,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,266,"                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",6,1,0,1,2,0,2,0,0,10,66,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,268,"            offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",0,0,0,1,2,0,0,0,0,3,85,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,271,        },0,0,0,0,1,0,0,0,0,1,1,4,0.08511,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,272,        return forOffsetMillis(offset);,6,1,0,1,2,1,6,0,0,13,31,3,0.08511,0,0,-1
defect4j,time,org/joda/time/base/BasePeriod,22,222,"        this(duration, null, null);",0,0,0,1,2,0,0,0,0,3,27,4,0.08333,1,0,-1
defect4j,time,org/joda/time/base/BasePeriod,22,224,    },0,0,0,0,1,0,6,0,0,6,1,5,0.08333,1,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,282,        String id = printOffset(millisOffset);,2,0,0,1,2,0,4,2,0,8,38,4,0.07143,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,283,"        return fixedOffsetZone(id, millisOffset);",8,1,0,1,2,1,0,0,0,10,41,5,0.07143,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,349,        if (offset == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0597,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,352,        if (iFixedOffsetCache == null) {,2,1,0,1,3,0,10,0,0,13,32,3,0.0597,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,353,"            iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",2,0,0,1,2,0,0,8,0,11,71,6,0.0597,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,356,        Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);,2,0,0,1,2,0,6,4,0,12,56,4,0.0597,0,0,-1
defect4j,time,org/joda/time/DateTimeZone,22,357,        if (ref != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0597,0,0,-1
