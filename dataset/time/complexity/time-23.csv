dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,time,org/joda/time/DateTimeZone,23,314,            dtz = cProvider.getZone(convId);,1,0,0,1,2,0,3,0,1,5,32,6,1.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,320,            return dtz;,1,0,0,0,0,1,0,0,0,2,11,6,0.16667,0,0
defect4j,time,org/joda/time/DateTimeZone,23,302,        if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,305,        final String id = zone.getID();,1,0,0,1,2,1,2,1,1,7,31,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,306,"        if (id.equals(""UTC"")) {",0,0,0,2,5,1,2,0,1,5,23,5,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,311,        DateTimeZone dtz = null;,1,0,0,0,0,0,0,1,0,2,24,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,312,        String convId = getConvertedId(id);,1,0,0,1,2,0,2,1,1,6,35,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,313,        if (convId != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,316,        if (dtz == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,319,        if (dtz != null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,559,"        Map<String, String> map = cZoneIdConversion;",2,0,0,0,0,0,0,3,0,2,44,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,560,        if (map == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,562,"            map = new HashMap<String, String>();",1,0,0,1,2,1,0,3,2,6,36,6,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,563,"            map.put(""GMT"", ""UTC"");",0,0,0,0,2,0,2,0,2,3,22,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,564,"            map.put(""MIT"", ""Pacific/Apia"");",0,0,0,0,2,0,2,0,2,3,31,7,0.14286,1,1
defect4j,time,org/joda/time/DateTimeZone,23,565,"            map.put(""HST"", ""Pacific/Honolulu"");  // JDK 1.1 compatible",0,0,0,0,2,0,2,0,2,3,58,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,566,"            map.put(""AST"", ""America/Anchorage"");",0,0,0,0,2,0,2,0,2,3,36,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,567,"            map.put(""PST"", ""America/Los_Angeles"");",0,0,0,0,2,0,2,0,2,3,38,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,568,"            map.put(""MST"", ""America/Denver"");  // JDK 1.1 compatible",0,0,0,0,2,0,2,0,2,3,56,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,569,"            map.put(""PNT"", ""America/Phoenix"");",0,0,0,0,2,0,2,0,2,3,34,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,570,"            map.put(""CST"", ""America/Chicago"");",0,0,0,0,2,0,2,0,2,3,34,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,571,"            map.put(""EST"", ""America/New_York"");  // JDK 1.1 compatible",0,0,0,0,2,0,2,0,2,3,58,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,572,"            map.put(""IET"", ""America/Indianapolis"");",0,0,0,0,2,0,2,0,2,3,39,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,573,"            map.put(""PRT"", ""America/Puerto_Rico"");",0,0,0,0,2,0,2,0,2,3,38,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,574,"            map.put(""CNT"", ""America/St_Johns"");",0,0,0,0,2,0,2,0,2,3,35,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,575,"            map.put(""AGT"", ""America/Buenos_Aires"");",0,0,0,0,2,0,2,0,2,3,39,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,576,"            map.put(""BET"", ""America/Sao_Paulo"");",0,0,0,0,2,0,2,0,2,3,36,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,577,"            map.put(""WET"", ""Europe/London"");",0,0,0,0,2,0,2,0,2,3,32,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,578,"            map.put(""ECT"", ""Europe/Paris"");",0,0,0,0,2,0,2,0,2,3,31,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,579,"            map.put(""ART"", ""Africa/Cairo"");",0,0,0,0,2,0,2,0,2,3,31,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,580,"            map.put(""CAT"", ""Africa/Harare"");",0,0,0,0,2,0,2,0,2,3,32,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,581,"            map.put(""EET"", ""Europe/Bucharest"");",0,0,0,0,2,0,2,0,2,3,35,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,582,"            map.put(""EAT"", ""Africa/Addis_Ababa"");",0,0,0,0,2,0,2,0,2,3,37,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,583,"            map.put(""MET"", ""Asia/Tehran"");",0,0,0,0,2,0,2,0,2,3,30,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,584,"            map.put(""NET"", ""Asia/Yerevan"");",0,0,0,0,2,0,2,0,2,3,31,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,585,"            map.put(""PLT"", ""Asia/Karachi"");",0,0,0,0,2,0,2,0,2,3,31,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,586,"            map.put(""IST"", ""Asia/Calcutta"");",0,0,0,0,2,0,2,0,2,3,32,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,587,"            map.put(""BST"", ""Asia/Dhaka"");",0,0,0,0,2,0,2,0,2,3,29,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,588,"            map.put(""VST"", ""Asia/Saigon"");",0,0,0,0,2,0,2,0,2,3,30,7,0.14286,1,0
defect4j,time,org/joda/time/DateTimeZone,23,589,"            map.put(""CTT"", ""Asia/Shanghai"");",0,0,0,0,2,0,2,0,2,3,32,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,590,"            map.put(""JST"", ""Asia/Tokyo"");",0,0,0,0,2,0,2,0,2,3,29,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,591,"            map.put(""ACT"", ""Australia/Darwin"");",0,0,0,0,2,0,2,0,2,3,35,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,592,"            map.put(""AET"", ""Australia/Sydney"");",0,0,0,0,2,0,2,0,2,3,35,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,593,"            map.put(""SST"", ""Pacific/Guadalcanal"");",0,0,0,0,2,0,2,0,2,3,38,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,594,"            map.put(""NST"", ""Pacific/Auckland"");",0,0,0,0,2,0,2,0,2,3,35,7,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,595,            cZoneIdConversion = map;,2,0,0,0,0,0,0,0,1,2,24,6,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,597,        return map.get(id);,0,0,0,1,2,1,3,0,0,4,19,5,0.14286,0,0
defect4j,time,org/joda/time/DateTimeZone,23,174,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,5,49,4,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,175,        if (sm != null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,178,        if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,181,        synchronized(DateTimeZone.class) {,0,0,0,1,3,2,0,1,0,4,34,6,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,182,            cDefault = zone;,2,0,0,0,0,0,0,0,1,2,16,6,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,183,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,184,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00035,0,0
defect4j,time,org/joda/time/DateTimeZone,23,147,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,133,        DateTimeZone zone = cDefault;,2,0,0,0,0,0,0,1,0,2,29,4,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,134,        if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,135,            synchronized(DateTimeZone.class) {,0,0,0,1,3,2,0,1,0,4,34,8,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,136,                zone = cDefault;,2,0,0,0,0,0,0,0,1,2,16,8,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,137,                if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,8,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,138,                    DateTimeZone temp = null;,1,0,0,0,0,0,0,1,0,2,25,10,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,141,"                            String id = System.getProperty(""user.timezone"");",1,0,0,1,2,0,2,1,1,6,48,14,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,142,                            if (id != null) {  // null check avoids stack overflow,1,1,0,1,3,1,0,0,0,5,54,14,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,143,                                temp = forID(id);,1,0,0,1,2,0,2,0,2,5,17,16,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,148,                        if (temp == null) {,1,1,0,1,3,1,0,0,0,5,19,12,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,153,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,154,                    if (temp == null) {,1,1,0,1,3,1,0,0,0,5,19,10,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,157,                    cDefault = zone = temp;,3,0,0,0,0,0,0,0,2,2,23,10,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,159,            },0,0,0,0,1,0,0,0,0,1,1,2,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,161,        return zone;,1,0,0,0,0,1,0,0,0,2,12,4,0.00031,0,0
defect4j,time,org/joda/time/DateTimeZone,23,212,            return zone;,1,0,0,0,0,1,0,0,0,2,12,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,147,            return loadZoneData(id);,0,0,0,1,2,1,2,0,1,5,24,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,224,        InputStream in = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,226,            in = openResource(id);,1,0,0,1,2,0,2,0,2,5,22,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,227,"            DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);",1,0,0,0,2,0,4,1,0,4,55,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,228,"            iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));",1,0,0,1,4,1,3,2,1,7,58,7,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,229,            return tz;,1,0,0,0,0,1,0,0,0,2,10,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,236,                if (in != null) {,1,1,0,1,3,1,0,0,0,5,17,8,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,237,                    in.close();,0,0,0,1,2,0,2,0,0,3,11,11,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,240,            },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,95,        if (in instanceof DataInput) {,1,0,0,1,3,2,0,1,0,5,30,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,98,"            return readFrom((DataInput)new DataInputStream(in), id);",1,0,0,1,6,2,2,2,2,7,56,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,110,        switch (in.readUnsignedByte()) {,0,0,0,2,5,1,2,0,0,4,32,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,119,"            return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));",0,0,0,0,4,1,6,0,0,3,70,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,183,        int v = in.readUnsignedByte();,1,0,0,1,2,1,2,0,0,5,30,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,184,        switch (v >> 6) {,1,1,0,1,3,1,0,0,0,5,17,4,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,187,            v = (v << (32 - 6)) >> (32 - 6);,2,4,0,2,6,0,0,0,1,5,32,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,188,            return v * (30 * 60000L);,1,2,0,1,2,1,0,0,0,5,25,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,192,            v = (v << (32 - 6)) >> (32 - 30);,2,4,0,2,6,0,0,0,1,5,33,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,193,            v |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,1,6,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,194,            v |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,1,6,34,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,195,            v |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,1,5,29,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,196,            return v * 60000L;,1,1,0,0,0,1,0,0,0,3,18,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,200,            long w = (((long)v) << (64 - 6)) >> (64 - 38);,2,4,0,3,10,2,0,0,0,5,46,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,201,            w |= (in.readUnsignedByte()) << 24;,1,1,0,2,4,0,2,0,1,6,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,202,            w |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,1,6,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,203,            w |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,1,6,34,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,204,            w |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,1,5,29,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,205,            return w * 1000L;,1,1,0,0,0,1,0,0,0,3,17,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,209,            return in.readLong();,0,0,0,1,2,1,2,0,0,4,21,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1500,            super(id);,1,0,0,1,2,1,0,0,1,5,10,4,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1501,            iTransitions = transitions;,2,0,0,0,0,0,0,0,1,2,27,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1502,            iWallOffsets = wallOffsets;,2,0,0,0,0,0,0,0,1,2,27,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1503,            iStandardOffsets = standardOffsets;,2,0,0,0,0,0,0,0,1,2,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1504,            iNameKeys = nameKeys;,2,0,0,0,0,0,0,0,1,2,21,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1505,            iTailZone = tailZone;,2,0,0,0,0,0,0,0,1,2,21,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1506,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1341,            int poolSize = in.readUnsignedShort();,1,0,0,1,2,1,2,0,0,5,38,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1342,            String[] pool = new String[poolSize];,1,0,1,0,4,1,0,2,0,5,37,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1343,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,2,0,0,1,6,32,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1344,                pool[i] = in.readUTF();,0,0,1,1,4,0,2,0,1,5,23,7,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1347,            int size = in.readInt();,1,0,0,1,2,1,2,0,0,5,24,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1348,            long[] transitions = new long[size];,1,0,1,0,4,3,0,0,0,4,36,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1349,            int[] wallOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,34,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1350,            int[] standardOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,38,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1351,            String[] nameKeys = new String[size];,1,0,1,0,4,1,0,2,0,5,37,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1353,            for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1354,                transitions[i] = readMillis(in);,0,0,1,1,4,0,2,0,2,5,32,7,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1355,                wallOffsets[i] = (int)readMillis(in);,0,0,1,1,6,1,2,0,2,6,37,7,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1356,                standardOffsets[i] = (int)readMillis(in);,0,0,1,1,6,1,2,0,2,6,41,7,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1359,                    if (poolSize < 256) {,1,1,0,1,3,1,0,0,0,5,21,9,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1360,                        index = in.readUnsignedByte();,1,0,0,1,2,0,2,0,1,5,30,11,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1364,                    nameKeys[i] = pool[index];,0,0,1,0,4,0,0,0,1,3,26,9,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1367,                },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1370,            DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1371,            if (in.readBoolean()) {,0,0,0,2,5,1,2,0,0,4,23,6,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1372,"                tailZone = DSTZone.readFrom(in, id);",1,0,0,0,2,0,4,0,1,4,36,7,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1375,            return new PrecalculatedZone,0,0,0,0,0,2,0,1,1,3,28,5,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,87,        super(zone.getID());,0,0,0,2,4,1,2,0,1,5,20,3,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,88,        iZone = zone;,2,0,0,0,0,0,0,0,1,2,13,4,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,89,        iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,0,2,1,0,1,1,6,42,4,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,90,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,39,"            i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");",1,0,0,1,2,0,2,0,2,5,67,6,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,42,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,45,        if (i == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,48,            cacheSize = 512; // (1 << 9),1,0,0,1,2,0,0,0,1,4,28,6,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,61,        cInfoCacheMask = cacheSize - 1;,2,1,0,0,0,0,0,0,1,3,31,4,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,68,        if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,2,0,1,0,5,41,5,0.00028,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,71,        return new CachedDateTimeZone(zone);,1,0,0,1,2,2,0,1,1,6,36,4,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1176,            super(id);,1,0,0,1,2,1,0,0,1,5,10,4,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1177,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1178,            iStartRecurrence = startRecurrence;,2,0,0,0,0,0,0,0,1,2,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1179,            iEndRecurrence = endRecurrence;,2,0,0,0,0,0,0,0,1,2,31,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1180,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1166,"            return new DSTZone(id, (int)readMillis(in), ",1,0,0,1,5,3,2,1,2,7,43,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,504,        {,0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,505,            if (mode != 'u' && mode != 'w' && mode != 's') {,3,5,0,1,3,1,0,0,3,6,48,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,509,            iMode = mode;,2,0,0,0,0,0,0,0,1,2,13,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,510,            iMonthOfYear = monthOfYear;,2,0,0,0,0,0,0,0,1,2,27,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,511,            iDayOfMonth = dayOfMonth;,2,0,0,0,0,0,0,0,1,2,25,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,512,            iDayOfWeek = dayOfWeek;,2,0,0,0,0,0,0,0,1,2,23,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,513,            iAdvance = advanceDayOfWeek;,2,0,0,0,0,0,0,0,1,2,28,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,514,            iMillisOfDay = millisOfDay;,2,0,0,0,0,0,0,0,1,2,27,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,515,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,482,"            return new OfYear((char)in.readUnsignedByte(),",0,0,0,1,5,3,2,1,1,6,46,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,747,"        Recurrence(OfYear ofYear, String nameKey, int saveMillis) {",4,0,0,0,3,1,0,2,0,4,59,3,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,748,            iOfYear = ofYear;,2,0,0,0,0,0,0,0,1,2,17,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,749,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,1,2,19,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,750,            iSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,1,2,25,5,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,751,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,740,"            return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));",0,0,0,1,10,3,7,1,2,6,78,5,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,204,        if (id == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,207,"        if (id.equals(""UTC"")) {",0,0,0,2,5,1,2,0,1,5,23,5,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,210,        DateTimeZone zone = cProvider.getZone(id);,1,0,0,1,2,0,3,1,0,5,42,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,211,        if (zone != null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,705,        return iID;,1,0,0,0,0,1,0,0,0,2,11,4,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,38,        super(id);,1,0,0,1,2,1,0,0,1,5,10,3,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,39,        iNameKey = nameKey;,2,0,0,0,0,0,0,0,1,2,19,4,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,40,        iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,1,2,25,4,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,41,        iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,4,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,88,        if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,4,0.00028,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,89,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,688,    protected DateTimeZone(String id) {,2,0,0,1,3,1,0,1,1,6,35,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,689,        if (id == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,692,        iID = id;,2,0,0,0,0,0,0,0,1,2,9,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,693,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,95,"    public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);",1,0,0,0,2,4,0,2,6,5,81,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,115,        setProvider0(null);,0,0,0,1,2,0,1,0,1,4,19,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,116,        setNameProvider0(null);,0,0,0,1,2,0,1,0,1,4,23,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,117,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,415,        if (provider == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,416,            provider = getDefaultProvider();,1,0,0,1,2,0,1,0,2,5,32,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,418,        Set<String> ids = provider.getAvailableIDs();,1,0,0,1,2,0,2,2,0,5,45,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,419,        if (ids == null || ids.size() == 0) {,1,3,0,2,5,1,2,0,0,6,37,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,423,"        if (!ids.contains(""UTC"")) {",0,0,0,2,5,1,2,0,2,5,27,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,426,"        if (!UTC.equals(provider.getZone(""UTC""))) {",0,0,0,3,7,1,4,0,2,5,43,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,429,        cProvider = provider;,2,0,0,0,0,0,0,0,1,2,21,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,430,        cAvailableIDs = ids;,2,0,0,0,0,0,0,0,1,2,20,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,431,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,443,        Provider provider = null;,1,0,0,0,0,0,0,1,0,2,25,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,446,            String providerClass =,1,0,0,0,0,0,0,1,0,2,22,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,448,            if (providerClass != null) {,1,1,0,1,3,1,0,0,0,5,28,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,458,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,460,        if (provider == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,462,"                provider = new ZoneInfoProvider(""org/joda/time/tz/data"");",1,0,0,1,2,1,0,1,3,6,57,8,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,466,            },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,469,        if (provider == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,473,        return provider;,1,0,0,0,0,1,0,0,0,2,16,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,514,        if (nameProvider == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,515,            nameProvider = getDefaultNameProvider();,1,0,0,1,2,0,1,0,2,5,40,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,517,        cNameProvider = nameProvider;,2,0,0,0,0,0,0,0,1,2,29,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,518,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,529,        NameProvider nameProvider = null;,1,0,0,0,0,0,0,1,0,2,33,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,531,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");",1,0,0,1,2,0,2,1,1,6,85,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,532,            if (providerClass != null) {,1,1,0,1,3,1,0,0,0,5,28,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,542,        },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,544,        if (nameProvider == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,545,            nameProvider = new DefaultNameProvider();,1,0,0,1,2,1,0,1,2,6,41,6,0.00028,0,0
defect4j,time,org/joda/time/DateTimeZone,23,548,        return nameProvider;,1,0,0,0,0,1,0,0,0,2,20,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,82,"        this(resourcePath, null, false);",1,0,0,0,2,1,0,0,1,4,32,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,83,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,106,    {,0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,107,        if (resourcePath == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,110,"        if (!resourcePath.endsWith(""/"")) {",0,0,0,2,5,1,2,0,2,5,34,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,111,            resourcePath += '/';,1,0,0,0,0,0,0,0,2,2,20,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,114,        iFileDir = null;,1,0,0,0,0,0,0,0,1,2,16,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,115,        iResourcePath = resourcePath;,2,0,0,0,0,0,0,0,1,2,29,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,117,        if (loader == null && !favorSystemLoader) {,2,2,0,1,3,1,0,0,1,6,43,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,118,            loader = getClass().getClassLoader();,1,0,0,1,4,0,2,0,2,5,37,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,121,        iLoader = loader;,2,0,0,0,0,0,0,0,1,2,17,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,123,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,4,5,60,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,124,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,136,        if (id == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,140,        Object obj = iZoneInfoMap.get(id);,1,0,0,1,2,0,3,1,0,5,34,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,141,        if (obj == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,145,        if (id.equals(obj)) {,0,0,0,2,5,1,3,0,0,4,21,5,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,150,        if (obj instanceof SoftReference<?>) {,1,0,0,1,3,2,0,1,0,5,38,5,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,152,            SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;,2,0,0,1,2,0,0,4,0,4,68,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,153,            DateTimeZone tz = ref.get();,1,0,0,1,2,0,2,1,0,5,28,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,154,            if (tz != null) {,1,1,0,1,3,1,0,0,0,5,17,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,155,                return tz;,1,0,0,0,0,1,0,0,0,2,10,8,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,174,        return new TreeSet<String>(iZoneInfoMap.keySet());,0,0,0,2,4,2,2,2,1,6,50,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,196,        if (iFileDir != null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,199,            String path = iResourcePath.concat(name);,1,0,0,1,2,0,3,1,0,5,41,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,200,            if (iLoader != null) {,1,1,0,1,3,1,0,0,0,5,22,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,201,                in = iLoader.getResourceAsStream(path);,1,0,0,1,2,0,3,0,1,5,39,8,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,205,            if (in == null) {,1,1,0,1,3,1,0,0,0,5,17,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,214,        return in;,1,0,0,0,0,1,0,0,0,2,10,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,252,"        Map<String, Object> map = new ConcurrentHashMap<String, Object>();",1,0,0,1,2,1,0,6,1,6,66,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,253,        DataInputStream din = new DataInputStream(in);,2,0,0,1,2,1,0,2,1,6,46,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,255,"            readZoneInfoMap(din, map);",0,0,0,0,2,0,3,0,1,3,26,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,258,                din.close();,0,0,0,1,2,0,2,0,0,3,12,9,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,260,            },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,262,"        map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));",2,0,0,1,4,1,2,2,2,7,66,5,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,263,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,274,        int size = din.readUnsignedShort();,1,0,0,1,2,1,2,0,0,5,35,5,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,275,        String[] pool = new String[size];,1,0,1,0,4,1,0,2,0,5,33,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,276,        for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,277,            pool[i] = din.readUTF().intern();,0,0,1,1,6,0,3,0,1,5,33,6,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,281,        size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,1,5,31,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,282,        for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,4,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,284,"                zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);",0,0,1,1,10,0,6,0,0,4,72,9,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,287,            },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,289,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,39,    public DefaultNameProvider() {,1,0,0,1,3,1,0,0,1,5,30,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,37,"    private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();",1,0,0,1,2,1,1,7,2,7,89,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,40,    },0,0,0,0,1,0,0,0,0,1,1,2,0.00028,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,87,        return new HashMap(7);,0,0,0,1,2,2,0,1,1,5,22,4,0.00028,0,0
defect4j,time,org/joda/time/JodaTimePermission,23,57,        super(name);,1,0,0,1,2,1,0,0,1,5,12,3,0.0,0,0
defect4j,time,org/joda/time/JodaTimePermission,23,58,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,45,        return iNameKey;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,49,        return iWallOffset;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,53,        return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,57,        return iWallOffset;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,61,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,65,        return instant;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,69,        return instant;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,77,        String id = getID();,1,0,0,1,2,0,1,1,1,6,20,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,78,"        if (id.length() == 6 && (id.startsWith(""+"") || id.startsWith(""-""))) {",0,3,0,3,11,1,6,0,2,6,69,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,81,"            return java.util.TimeZone.getTimeZone(""GMT"" + getID());",3,1,0,2,4,1,2,0,2,7,55,7,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,84,"        return new java.util.SimpleTimeZone(iWallOffset, getID());",4,0,0,1,4,2,1,0,2,6,58,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,91,        if (obj instanceof FixedDateTimeZone) {,1,0,0,1,3,2,0,1,0,5,39,5,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,92,            FixedDateTimeZone other = (FixedDateTimeZone)obj;,2,0,0,1,2,0,0,2,0,4,49,6,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,93,            return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,98,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,23,102,        return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;,2,4,0,1,4,1,2,0,1,7,68,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,690,"            throw new IllegalArgumentException(""Id must not be null"");",0,0,0,1,2,2,0,1,2,5,58,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,145,                        } catch (RuntimeException ex) {,1,0,0,1,4,1,0,1,0,5,31,14,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,149,                            temp = forTimeZone(TimeZone.getDefault());,1,0,0,2,4,0,3,0,2,5,42,14,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,151,                    } catch (IllegalArgumentException ex) {,1,0,0,1,4,1,0,1,0,5,39,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,155,                        temp = UTC;,2,0,0,0,0,0,0,0,1,2,11,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,176,"            sm.checkPermission(new JodaTimePermission(""DateTimeZone.setDefault""));",0,0,0,2,4,1,2,1,2,6,70,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,179,"            throw new IllegalArgumentException(""The datetime zone must not be null"");",0,0,0,1,2,2,0,1,2,5,73,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,205,            return getDefault();,0,0,0,1,2,1,1,0,1,5,20,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,208,            return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,214,"        if (id.startsWith(""+"") || id.startsWith(""-"")) {",0,1,0,2,7,1,4,0,2,6,47,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,215,            int offset = parseOffset(id);,1,0,0,1,2,1,2,0,1,6,29,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,216,            if (offset == 0L) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,217,                return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,219,                id = printOffset(offset);,1,0,0,1,2,0,2,0,2,5,25,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,220,"                return fixedOffsetZone(id, offset);",0,0,0,0,2,1,3,0,1,4,35,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,223,"        throw new IllegalArgumentException(""The datetime zone id '"" + id + ""' is not recognised"");",1,1,0,1,2,2,0,1,3,7,90,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,237,"        return forOffsetHoursMinutes(hoursOffset, 0);",0,0,0,0,2,1,2,0,1,4,45,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,254,        if (hoursOffset == 0 && minutesOffset == 0) {,2,3,0,1,3,1,0,0,0,5,45,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,255,            return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,257,        if (minutesOffset < 0 || minutesOffset > 59) {,2,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,258,"            throw new IllegalArgumentException(""Minutes out of range: "" + minutesOffset);",1,1,0,1,2,2,0,1,2,7,77,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,260,        int offset = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,262,"            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",1,0,0,0,2,1,3,0,0,4,62,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,263,            if (hoursInMinutes < 0) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,264,"                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",2,0,0,0,2,0,3,0,2,4,67,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,266,"                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",1,0,0,0,2,0,4,0,1,4,66,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,268,"            offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",3,0,0,0,2,0,3,0,1,4,85,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,271,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,269,        } catch (ArithmeticException ex) {,1,0,0,1,4,1,0,1,0,5,34,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,270,"            throw new IllegalArgumentException(""Offset is too large"");",0,0,0,1,2,2,0,1,2,5,58,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,272,        return forOffsetMillis(offset);,0,0,0,1,2,1,2,0,1,5,31,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,282,        String id = printOffset(millisOffset);,1,0,0,1,2,0,2,1,1,6,38,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,283,"        return fixedOffsetZone(id, millisOffset);",0,0,0,0,2,1,3,0,1,4,41,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,303,            return getDefault();,0,0,0,1,2,1,1,0,1,5,20,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,307,            return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,317,            dtz = cProvider.getZone(id);,1,0,0,1,2,0,3,0,1,5,28,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,324,        if (convId == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,325,            convId = zone.getDisplayName();,1,0,0,1,2,0,2,0,1,5,31,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,326,"            if (convId.startsWith(""GMT+"") || convId.startsWith(""GMT-"")) {",0,1,0,2,7,1,4,0,2,6,61,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,327,                convId = convId.substring(3);,1,0,0,1,2,0,2,0,1,5,29,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,328,                int offset = parseOffset(convId);,1,0,0,1,2,1,2,0,1,6,33,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,329,                if (offset == 0L) {,1,1,0,1,3,1,0,0,0,5,19,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,330,                    return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,11,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,332,                    convId = printOffset(offset);,1,0,0,1,2,0,2,0,2,5,29,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,333,"                    return fixedOffsetZone(convId, offset);",0,0,0,0,2,1,3,0,1,4,39,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,337,"        throw new IllegalArgumentException(""The datetime zone id '"" + id + ""' is not recognised"");",1,1,0,1,2,2,0,1,3,7,90,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,349,        if (offset == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,350,            return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,352,        if (iFixedOffsetCache == null) {,1,1,0,1,3,1,0,0,0,5,32,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,353,"            iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",1,0,0,1,2,1,0,4,2,6,71,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,356,        Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);,1,0,0,1,2,0,3,2,0,5,56,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,357,        if (ref != null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,358,            zone = ref.get();,1,0,0,1,2,0,2,0,1,5,17,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,359,            if (zone != null) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,360,                return zone;,1,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,363,"        zone = new FixedDateTimeZone(id, null, offset, offset);",4,0,0,0,2,1,0,1,2,5,55,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,364,"        iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone));",1,0,0,1,4,1,3,2,1,7,65,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,365,        return zone;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,374,        return cAvailableIDs;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,387,        return cProvider;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,401,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,5,49,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,402,        if (sm != null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,403,"            sm.checkPermission(new JodaTimePermission(""DateTimeZone.setProvider""));",0,0,0,2,4,1,2,1,2,6,71,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,405,        setProvider0(provider);,0,0,0,1,2,0,2,0,1,4,23,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,406,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,420,            throw new IllegalArgumentException,0,0,0,0,0,2,0,1,1,3,34,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,424,"            throw new IllegalArgumentException(""The provider doesn't support UTC"");",0,0,0,1,2,2,0,1,2,5,71,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,427,"            throw new IllegalArgumentException(""Invalid UTC zone provided"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,450,                    provider = (Provider) Class.forName(providerClass).newInstance();,1,0,0,1,6,0,4,1,1,6,65,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,454,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,451,                } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,452,                    Thread thread = Thread.currentThread();,1,0,0,1,2,0,2,1,0,5,39,11,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,453,"                    thread.getThreadGroup().uncaughtException(thread, ex);",0,0,0,1,4,0,5,0,0,3,54,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,456,        } catch (SecurityException ex) {,1,0,0,1,4,1,0,1,0,5,32,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,463,            } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,464,                Thread thread = Thread.currentThread();,1,0,0,1,2,0,2,1,0,5,39,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,465,"                thread.getThreadGroup().uncaughtException(thread, ex);",0,0,0,1,4,0,5,0,0,3,54,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,470,            provider = new UTCProvider();,1,0,0,1,2,1,0,1,2,6,29,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,486,        return cNameProvider;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,500,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,5,49,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,501,        if (sm != null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,502,"            sm.checkPermission(new JodaTimePermission(""DateTimeZone.setNameProvider""));",0,0,0,2,4,1,2,1,2,6,75,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,504,        setNameProvider0(nameProvider);,0,0,0,1,2,0,2,0,1,4,31,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,505,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,534,                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();,1,0,0,1,6,0,4,1,1,6,73,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,538,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,535,                } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,536,                    Thread thread = Thread.currentThread();,1,0,0,1,2,0,2,1,0,5,39,11,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,537,"                    thread.getThreadGroup().uncaughtException(thread, ex);",0,0,0,1,4,0,5,0,0,3,54,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,540,        } catch (SecurityException ex) {,1,0,0,1,4,1,0,1,0,5,32,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,603,        Chronology chrono = new BaseChronology() {,1,0,0,1,3,1,0,2,1,6,42,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,617,        return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);,0,0,0,1,8,2,5,0,2,5,72,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,630,        StringBuffer buf = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,38,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,631,        if (offset >= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,632,            buf.append('+');,0,0,0,1,2,0,2,0,1,4,16,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,634,            buf.append('-');,0,0,0,1,2,0,2,0,1,4,16,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,635,            offset = -offset;,2,0,0,0,0,0,0,0,2,2,17,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,638,        int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,0,0,1,0,0,0,3,55,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,639,"        FormatUtils.appendPaddedInteger(buf, hours, 2);",0,0,0,0,2,0,4,0,0,2,47,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,640,        offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,1,2,1,0,0,1,6,58,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,642,        int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,1,0,0,0,3,59,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,643,        buf.append(':');,0,0,0,1,2,0,2,0,1,4,16,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,644,"        FormatUtils.appendPaddedInteger(buf, minutes, 2);",0,0,0,0,2,0,4,0,0,2,49,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,645,        offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,0,0,0,1,3,56,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,646,        if (offset == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,647,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,650,        int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;,4,1,0,0,0,1,0,0,0,3,59,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,651,        buf.append(':');,0,0,0,1,2,0,2,0,1,4,16,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,652,"        FormatUtils.appendPaddedInteger(buf, seconds, 2);",0,0,0,0,2,0,4,0,0,2,49,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,653,        offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;,4,1,0,0,0,0,0,0,1,3,56,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,654,        if (offset == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,655,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,658,        buf.append('.');,0,0,0,1,2,0,2,0,1,4,16,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,659,"        FormatUtils.appendPaddedInteger(buf, offset, 3);",0,0,0,0,2,0,4,0,0,2,48,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,660,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,669,        if (cOffsetFormatter == null) {,1,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,670,            cOffsetFormatter = new DateTimeFormatterBuilder(),1,0,0,1,2,1,0,1,2,6,49,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,674,        return cOffsetFormatter;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,728,"        return getShortName(instant, null);",0,0,0,0,2,1,2,0,1,4,35,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,743,        if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,744,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,746,        String nameKey = getNameKey(instant);,1,0,0,1,2,0,2,1,1,6,37,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,747,        if (nameKey == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,748,            return iID;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,750,"        String name = cNameProvider.getShortName(locale, iID, nameKey);",1,0,0,0,2,0,5,1,0,4,63,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,751,        if (name != null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,752,            return name;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,754,        return printOffset(getOffset(instant));,0,0,0,2,4,1,3,0,2,5,39,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,768,"        return getName(instant, null);",0,0,0,0,2,1,2,0,1,4,30,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,783,        if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,784,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,786,        String nameKey = getNameKey(instant);,1,0,0,1,2,0,2,1,1,6,37,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,787,        if (nameKey == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,788,            return iID;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,790,"        String name = cNameProvider.getName(locale, iID, nameKey);",1,0,0,0,2,0,5,1,0,4,58,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,791,        if (name != null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,792,            return name;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,794,        return printOffset(getOffset(instant));,0,0,0,2,4,1,3,0,2,5,39,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,812,        if (instant == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,813,            return getOffset(DateTimeUtils.currentTimeMillis());,0,0,0,2,4,1,3,0,1,5,52,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,815,        return getOffset(instant.getMillis());,0,0,0,2,4,1,3,0,1,5,38,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,843,        return getOffset(instant) == getStandardOffset(instant);,0,1,0,1,4,1,4,0,2,6,56,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,881,        final int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,2,2,0,2,6,48,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,883,        final long instantAdjusted = instantLocal - offsetLocal;,3,1,0,0,0,2,0,0,1,4,56,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,884,        final int offsetAdjusted = getOffset(instantAdjusted);,1,0,0,1,2,2,2,0,2,6,54,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,886,        if (offsetLocal != offsetAdjusted) {,2,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,889,            if ((offsetLocal - offsetAdjusted) < 0) {,2,2,0,2,5,1,0,0,0,5,41,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,893,                long nextLocal = nextTransition(instantAdjusted);,1,0,0,1,2,1,2,0,1,6,49,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,894,                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);,3,1,0,1,2,1,1,0,1,7,66,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,895,                if (nextLocal != nextAdjusted) {,2,1,0,1,3,1,0,0,0,5,32,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,896,                    return offsetLocal;,1,0,0,0,0,1,0,0,0,2,19,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,898,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,899,        } else if (offsetLocal > 0) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,900,            long prev = previousTransition(instantAdjusted);,1,0,0,1,2,1,2,0,1,6,48,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,901,            if (prev < instantAdjusted) {,2,1,0,1,3,1,0,0,0,5,29,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,902,                int offsetPrev = getOffset(prev);,1,0,0,1,2,1,2,0,1,6,33,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,903,                int diff = offsetPrev - offsetLocal;,3,1,0,0,0,1,0,0,0,3,36,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,904,                if (instantAdjusted - prev <= diff) {,3,2,0,1,3,1,0,0,0,5,37,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,905,                    return offsetPrev;,1,0,0,0,0,1,0,0,0,2,18,11,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,909,        return offsetAdjusted;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,923,        int offset = getOffset(instantUTC);,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,924,        long instantLocal = instantUTC + offset;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,926,        if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {,4,5,0,2,7,1,0,0,0,5,68,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,927,"            throw new ArithmeticException(""Adding time zone offset caused overflow"");",0,0,0,1,2,2,0,1,2,5,73,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,929,        return instantLocal;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,950,        int offsetOriginal = getOffset(originalInstantUTC);,1,0,0,1,2,1,2,0,1,6,51,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,951,        long instantUTC = instantLocal - offsetOriginal;,3,1,0,0,0,1,0,0,0,3,48,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,952,        int offsetLocalFromOriginal = getOffset(instantUTC);,1,0,0,1,2,1,2,0,1,6,52,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,953,        if (offsetLocalFromOriginal == offsetOriginal) {,2,1,0,1,3,1,0,0,0,5,48,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,954,            return instantUTC;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,956,"        return convertLocalToUTC(instantLocal, strict);",0,0,0,0,2,1,3,0,1,4,47,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,973,        int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,1,2,0,1,6,42,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,975,        int offset = getOffset(instantLocal - offsetLocal);,3,1,0,1,2,1,1,0,1,7,51,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,977,        if (offsetLocal != offset) {,2,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,981,            if (strict || offsetLocal < 0) {,2,2,0,1,3,1,0,0,0,5,32,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,983,                long nextLocal = nextTransition(instantLocal - offsetLocal);,3,1,0,1,2,1,1,0,1,7,60,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,984,                if (nextLocal == (instantLocal - offsetLocal)) {,3,2,0,2,5,1,0,0,0,5,48,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,985,                    nextLocal = Long.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,27,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,987,                long nextAdjusted = nextTransition(instantLocal - offset);,3,1,0,1,2,1,1,0,1,7,58,9,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,988,                if (nextAdjusted == (instantLocal - offset)) {,3,2,0,2,5,1,0,0,0,5,46,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,989,                    nextAdjusted = Long.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,30,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,991,                if (nextLocal != nextAdjusted) {,2,1,0,1,3,1,0,0,0,5,32,8,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,993,                    if (strict) {,1,0,0,1,3,1,0,0,0,4,13,10,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,995,"                        throw new IllegalArgumentException(""Illegal instant due to time zone offset transition: "" +",0,1,0,0,1,2,0,1,2,5,91,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1002,                        offset = offsetLocal;,2,0,0,0,0,0,0,0,1,2,21,12,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1008,        long instantUTC = instantLocal - offset;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1010,        if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0) {,4,5,0,2,7,1,0,0,0,5,69,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1011,"            throw new ArithmeticException(""Subtracting time zone offset caused overflow"");",0,0,0,1,2,2,0,1,2,5,78,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1013,        return instantUTC;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1027,        if (newZone == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1028,            newZone = DateTimeZone.getDefault();,1,0,0,1,2,0,2,0,1,5,36,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1030,        if (newZone == this) {,1,1,0,1,3,2,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1031,            return oldInstant;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1033,        long instantLocal = convertUTCToLocal(oldInstant);,1,0,0,1,2,1,2,0,1,6,50,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1034,"        return newZone.convertLocalToUTC(instantLocal, false, oldInstant);",0,0,0,0,2,1,4,0,1,4,66,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1144,        if (isFixed()) {,0,0,0,2,5,1,1,0,1,5,16,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1145,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1148,            localDateTime.toDateTime(this);,0,0,0,1,2,1,2,0,0,4,31,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1149,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1150,        } catch (IllegalArgumentException ex) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1151,            return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1163,        long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,1,1,0,1,7,81,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1164,        long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,1,1,0,1,7,80,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1165,        if (before == after) {,2,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1166,            return instant;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1168,        long local = convertUTCToLocal(instant);,1,0,0,1,2,1,2,0,1,6,40,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1169,"        return convertLocalToUTC(local, false, earlierOrLater ? after : before);",3,0,0,0,2,1,2,0,2,5,72,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1209,        return java.util.TimeZone.getTimeZone(iID);,3,0,0,1,2,1,2,0,0,5,43,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1226,        return 57 + getID().hashCode();,0,1,0,1,4,1,2,0,1,6,31,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1234,        return getID();,0,0,0,1,2,1,1,0,1,5,15,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1244,        return new Stub(iID);,1,0,0,1,2,2,0,1,1,6,21,4,0.0,0,0
defect4j,time,org/joda/time/Chronology,23,63,public abstract class Chronology {,1,0,0,0,1,3,0,0,2,4,34,1,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,603,        Chronology chrono = new BaseChronology() {,1,0,0,1,3,1,0,2,1,6,42,4,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,605,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,608,                return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,611,                return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,614,                return getClass().getName();,0,0,0,1,4,1,2,0,1,5,28,11,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,54,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,55,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,102,"        long instant = year().set(0, year);",1,0,0,1,4,1,3,0,1,6,35,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,103,"        instant = monthOfYear().set(instant, monthOfYear);",1,0,0,1,4,0,4,0,2,5,50,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,104,"        instant = dayOfMonth().set(instant, dayOfMonth);",1,0,0,1,4,0,4,0,2,5,48,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,105,"        return millisOfDay().set(instant, millisOfDay);",0,0,0,1,4,1,4,0,1,5,47,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,132,"        long instant = year().set(0, year);",1,0,0,1,4,1,3,0,1,6,35,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,133,"        instant = monthOfYear().set(instant, monthOfYear);",1,0,0,1,4,0,4,0,2,5,50,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,134,"        instant = dayOfMonth().set(instant, dayOfMonth);",1,0,0,1,4,0,4,0,2,5,48,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,135,"        instant = hourOfDay().set(instant, hourOfDay);",1,0,0,1,4,0,4,0,2,5,46,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,136,"        instant = minuteOfHour().set(instant, minuteOfHour);",1,0,0,1,4,0,4,0,2,5,52,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,137,"        instant = secondOfMinute().set(instant, secondOfMinute);",1,0,0,1,4,0,4,0,2,5,56,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,138,"        return millisOfSecond().set(instant, millisOfSecond);",0,0,0,1,4,1,4,0,1,5,53,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,163,"        instant = hourOfDay().set(instant, hourOfDay);",1,0,0,1,4,0,4,0,2,5,46,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,164,"        instant = minuteOfHour().set(instant, minuteOfHour);",1,0,0,1,4,0,4,0,2,5,52,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,165,"        instant = secondOfMinute().set(instant, secondOfMinute);",1,0,0,1,4,0,4,0,2,5,56,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,166,"        return millisOfSecond().set(instant, millisOfSecond);",0,0,0,1,4,1,4,0,1,5,53,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,183,        int size = partial.size();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,184,        for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,185,            int value = values[i];,1,0,1,0,2,1,0,0,0,4,22,7,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,186,            DateTimeField field = partial.getField(i);,1,0,0,1,2,0,3,1,0,5,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,187,            if (value < field.getMinimumValue()) {,1,1,0,2,5,1,2,0,0,6,38,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,188,                throw new IllegalFieldValueException,0,0,0,0,0,2,0,1,1,3,36,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,192,            if (value > field.getMaximumValue()) {,1,1,0,2,5,1,2,0,0,6,38,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,193,                throw new IllegalFieldValueException,0,0,0,0,0,2,0,1,1,3,36,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,199,        for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,200,            int value = values[i];,1,0,1,0,2,1,0,0,0,4,22,7,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,201,            DateTimeField field = partial.getField(i);,1,0,0,1,2,0,3,1,0,5,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,202,"            if (value < field.getMinimumValue(partial, values)) {",1,1,0,0,5,1,4,0,0,5,53,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,203,                throw new IllegalFieldValueException,0,0,0,0,0,2,0,1,1,3,36,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,207,"            if (value > field.getMaximumValue(partial, values)) {",1,1,0,0,5,1,4,0,0,5,53,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,208,                throw new IllegalFieldValueException,0,0,0,0,0,2,0,1,1,3,36,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,213,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,223,        int size = partial.size();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,224,        int[] values = new int[size];,1,0,1,0,4,3,0,0,0,4,29,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,225,        for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,226,            values[i] = partial.getFieldType(i).getField(this).get(instant);,0,0,1,1,8,1,6,0,1,6,64,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,228,        return values;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,239,"        for (int i = 0, isize = partial.size(); i < isize; i++) {",5,1,0,1,5,2,2,0,1,7,57,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,240,"            instant = partial.getFieldType(i).getField(this).set(instant, partial.getValue(i));",1,0,0,1,8,1,9,0,1,6,83,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,242,        return instant;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,255,        int size = period.size();,1,0,0,1,2,1,2,0,0,5,25,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,256,        int[] values = new int[size];,1,0,1,0,4,3,0,0,0,4,29,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,257,        if (startInstant != endInstant) {,2,1,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,258,            for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,259,                DurationField field = period.getFieldType(i).getField(this);,1,0,0,1,4,1,4,1,0,6,60,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,260,"                int value = field.getDifference(endInstant, startInstant);",1,0,0,0,2,1,4,0,0,4,58,9,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,261,"                startInstant = field.add(startInstant, value);",1,0,0,0,2,0,4,0,1,4,46,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,262,                values[i] = value;,1,0,1,0,2,0,0,0,1,4,18,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,265,        return values;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,276,        int size = period.size();,1,0,0,1,2,1,2,0,0,5,25,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,277,        int[] values = new int[size];,1,0,1,0,4,3,0,0,0,4,29,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,278,        if (duration != 0) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,279,            long current = 0;,1,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,280,            for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,281,                DurationField field = period.getFieldType(i).getField(this);,1,0,0,1,4,1,4,1,0,6,60,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,282,                if (field.isPrecise()) {,0,0,0,2,5,1,2,0,0,4,24,9,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,283,"                    int value = field.getDifference(duration, current);",1,0,0,0,2,1,4,0,0,4,51,11,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,284,"                    current = field.add(current, value);",1,0,0,0,2,0,4,0,1,4,36,10,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,285,                    values[i] = value;,1,0,1,0,2,0,0,0,1,4,18,10,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,289,        return values;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,301,        if (scalar != 0 && period != null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,302,"            for (int i = 0, isize = period.size(); i < isize; i++) {",5,1,0,1,5,2,2,0,1,7,56,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,303,                long value = period.getValue(i); // use long to allow for multiplication (fits OK),1,0,0,1,4,3,3,0,0,5,82,9,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,304,                if (value != 0) {,1,1,0,1,3,1,0,0,0,5,17,8,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,305,"                    instant = period.getFieldType(i).getField(this).add(instant, value * scalar);",3,1,0,1,6,1,6,0,1,7,77,10,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,309,        return instant;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,322,        if (duration == 0 || scalar == 0) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,323,            return instant;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,325,"        long add = FieldUtils.safeMultiply(duration, scalar);",1,0,0,0,2,1,4,0,0,4,53,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,326,"        return FieldUtils.safeAdd(instant, add);",0,0,0,0,2,1,4,0,0,3,40,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,337,        return UnsupportedDurationField.getInstance(DurationFieldType.millis());,0,0,0,2,4,1,4,0,0,4,72,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,346,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.millisOfSecond(), millis());",0,0,0,1,6,1,5,0,1,5,90,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,355,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.millisOfDay(), millis());",0,0,0,1,6,1,5,0,1,5,87,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,366,        return UnsupportedDurationField.getInstance(DurationFieldType.seconds());,0,0,0,2,4,1,4,0,0,4,73,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,375,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.secondOfMinute(), seconds());",0,0,0,1,6,1,5,0,1,5,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,384,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.secondOfDay(), seconds());",0,0,0,1,6,1,5,0,1,5,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,395,        return UnsupportedDurationField.getInstance(DurationFieldType.minutes());,0,0,0,2,4,1,4,0,0,4,73,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,404,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.minuteOfHour(), minutes());",0,0,0,1,6,1,5,0,1,5,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,413,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.minuteOfDay(), minutes());",0,0,0,1,6,1,5,0,1,5,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,424,        return UnsupportedDurationField.getInstance(DurationFieldType.hours());,0,0,0,2,4,1,4,0,0,4,71,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,433,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.hourOfDay(), hours());",0,0,0,1,6,1,5,0,1,5,84,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,442,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.clockhourOfDay(), hours());",0,0,0,1,6,1,5,0,1,5,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,453,        return UnsupportedDurationField.getInstance(DurationFieldType.halfdays());,0,0,0,2,4,1,4,0,0,4,74,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,462,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.hourOfHalfday(), hours());",0,0,0,1,6,1,5,0,1,5,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,471,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.clockhourOfHalfday(), hours());",0,0,0,1,6,1,5,0,1,5,93,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,480,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.halfdayOfDay(), halfdays());",0,0,0,1,6,1,5,0,1,5,90,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,491,        return UnsupportedDurationField.getInstance(DurationFieldType.days());,0,0,0,2,4,1,4,0,0,4,70,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,504,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfWeek(), days());",0,0,0,1,6,1,5,0,1,5,83,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,513,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfMonth(), days());",0,0,0,1,6,1,5,0,1,5,84,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,522,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfYear(), days());",0,0,0,1,6,1,5,0,1,5,83,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,533,        return UnsupportedDurationField.getInstance(DurationFieldType.weeks());,0,0,0,2,4,1,4,0,0,4,71,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,542,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekOfWeekyear(), weeks());",0,0,0,1,6,1,5,0,1,5,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,553,        return UnsupportedDurationField.getInstance(DurationFieldType.weekyears());,0,0,0,2,4,1,4,0,0,4,75,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,562,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekyear(), weekyears());",0,0,0,1,6,1,5,0,1,5,87,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,571,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekyearOfCentury(), weekyears());",0,0,0,1,6,1,5,0,1,5,96,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,582,        return UnsupportedDurationField.getInstance(DurationFieldType.months());,0,0,0,2,4,1,4,0,0,4,72,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,591,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.monthOfYear(), months());",0,0,0,1,6,1,5,0,1,5,87,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,602,        return UnsupportedDurationField.getInstance(DurationFieldType.years());,0,0,0,2,4,1,4,0,0,4,71,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,611,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.year(), years());",0,0,0,1,6,1,5,0,1,5,79,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,620,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.yearOfEra(), years());",0,0,0,1,6,1,5,0,1,5,84,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,629,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.yearOfCentury(), years());",0,0,0,1,6,1,5,0,1,5,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,640,        return UnsupportedDurationField.getInstance(DurationFieldType.centuries());,0,0,0,2,4,1,4,0,0,4,75,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,649,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.centuryOfEra(), centuries());",0,0,0,1,6,1,5,0,1,5,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,660,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,1,4,0,0,4,70,5,0.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,23,669,"        return UnsupportedDateTimeField.getInstance(DateTimeFieldType.era(), eras());",0,0,0,1,6,1,5,0,1,5,77,5,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,56,    public ZoneInfoProvider(File fileDir) throws IOException {,3,0,0,1,3,2,0,1,1,6,58,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,57,        if (fileDir == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,58,"            throw new IllegalArgumentException(""No file directory provided"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,60,        if (!fileDir.exists()) {,0,0,0,2,5,1,2,0,1,5,24,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,61,"            throw new IOException(""File directory doesn't exist: "" + fileDir);",1,1,0,1,2,2,0,1,2,7,66,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,63,        if (!fileDir.isDirectory()) {,0,0,0,2,5,1,2,0,1,5,29,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,64,"            throw new IOException(""File doesn't refer to a directory: "" + fileDir);",1,1,0,1,2,2,0,1,2,7,71,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,67,        iFileDir = fileDir;,2,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,68,        iResourcePath = null;,1,0,0,0,0,0,0,0,1,2,21,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,69,        iLoader = null;,1,0,0,0,0,0,0,0,1,2,15,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,71,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,4,5,60,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,72,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,96,"        this(resourcePath, loader, true);",2,0,0,0,2,1,0,0,1,4,33,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,108,"            throw new IllegalArgumentException(""No resource path provided"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,137,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,142,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,158,            return loadZoneData(id);,0,0,0,1,2,1,2,0,1,5,24,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,162,        return getZone((String)obj);,1,0,0,2,4,1,1,1,1,7,28,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,183,        Thread t = Thread.currentThread();,1,0,0,1,2,0,2,1,0,5,34,4,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,184,"        t.getThreadGroup().uncaughtException(t, ex);",0,0,0,1,4,0,5,0,0,3,44,5,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,185,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,197,"            in = new FileInputStream(new File(iFileDir, name));",3,0,0,0,4,2,0,2,3,5,51,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,203,                in = ClassLoader.getSystemResourceAsStream(path);,1,0,0,1,2,0,3,0,1,5,49,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,206,                StringBuffer buf = new StringBuffer(40),1,0,0,1,2,1,0,2,1,6,39,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,211,                throw new IOException(buf.toString());,0,0,0,2,4,2,2,1,1,6,38,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,239,            } catch (IOException e) {,1,0,0,1,4,1,0,1,0,5,25,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,230,        } catch (IOException e) {,1,0,0,1,4,1,0,1,0,5,25,6,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,231,            uncaughtException(e);,0,0,0,1,2,0,2,0,1,4,21,7,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,232,            iZoneInfoMap.remove(id);,0,0,0,1,2,0,3,0,0,3,24,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,233,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,235,            try {,0,0,0,0,1,1,0,0,0,2,5,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,259,            } catch (IOException e) {,1,0,0,1,4,1,0,1,0,5,25,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,261,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,257,            try {,0,0,0,0,1,1,0,0,0,2,5,2,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,285,            } catch (ArrayIndexOutOfBoundsException e) {,1,0,0,1,4,1,0,1,0,5,44,8,0.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,23,286,"                throw new IOException(""Corrupt zone info map"");",0,0,0,1,2,2,0,1,2,5,47,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,225,    public DateTimeZoneBuilder() {,1,0,0,1,3,1,0,0,1,5,30,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,226,        iRuleSets = new ArrayList<RuleSet>(10);,1,0,0,1,2,1,0,2,2,6,39,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,227,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,96,"            return readFrom((DataInput)in, id);",1,0,0,1,4,1,2,1,1,7,35,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,112,            DateTimeZone fixed = new FixedDateTimeZone,1,0,0,0,0,1,0,2,1,4,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,114,            if (fixed.equals(DateTimeZone.UTC)) {,2,0,0,2,5,1,2,0,0,5,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,115,                fixed = DateTimeZone.UTC;,3,0,0,0,0,0,0,0,1,2,25,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,117,            return fixed;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,121,"            return PrecalculatedZone.readFrom(in, id);",0,0,0,0,2,1,4,0,0,3,42,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,123,"            throw new IOException(""Invalid encoding"");",0,0,0,1,2,2,0,1,2,5,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,140,        if (millis % (30 * 60000L) == 0) {,1,3,0,2,5,1,0,0,0,5,34,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,142,            long units = millis / (30 * 60000L);,2,2,0,1,2,1,0,0,0,5,36,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,143,            if (((units << (64 - 6)) >> (64 - 6)) == units) {,2,5,0,4,11,1,0,0,0,5,49,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,145,                out.writeByte((int)(units & 0x3f));,1,1,0,2,6,1,2,0,0,6,35,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,146,                return;,0,0,0,0,0,1,0,0,1,2,7,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,150,        if (millis % 60000L == 0) {,1,2,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,152,            long minutes = millis / 60000L;,2,1,0,0,0,1,0,0,0,3,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,153,            if (((minutes << (64 - 30)) >> (64 - 30)) == minutes) {,2,5,0,4,11,1,0,0,0,5,55,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,155,                out.writeInt(0x40000000 | (int)(minutes & 0x3fffffff));,1,2,0,2,6,1,2,0,0,6,55,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,156,                return;,0,0,0,0,0,1,0,0,1,2,7,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,160,        if (millis % 1000L == 0) {,1,2,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,162,            long seconds = millis / 1000L;,2,1,0,0,0,1,0,0,0,3,30,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,163,            if (((seconds << (64 - 38)) >> (64 - 38)) == seconds) {,2,5,0,4,11,1,0,0,0,5,55,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,165,                out.writeByte(0x80 | (int)((seconds >> 32) & 0x3f));,1,3,0,3,8,1,2,0,0,6,52,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,166,                out.writeInt((int)(seconds & 0xffffffff));,1,1,0,2,6,1,2,0,0,6,42,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,167,                return;,0,0,0,0,0,1,0,0,1,2,7,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,175,        out.writeByte(millis < 0 ? 0xff : 0xc0);,1,1,0,1,2,0,2,0,0,5,40,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,176,        out.writeLong(millis);,0,0,0,1,2,0,3,0,0,3,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,177,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,215,"        if (""UTC"".equals(id) && id.equals(nameKey) &&",0,2,0,1,5,1,5,0,1,6,45,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,217,            return DateTimeZone.UTC;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,219,"        return new FixedDateTimeZone(id, nameKey, wallOffset, standardOffset);",4,0,0,0,2,2,0,1,1,5,70,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,252,        OfYear ofYear = new OfYear,1,0,0,0,0,1,0,2,1,4,26,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,254,        if (iRuleSets.size() > 0) {,0,1,0,2,5,1,2,0,0,5,27,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,255,            RuleSet lastRuleSet = iRuleSets.get(iRuleSets.size() - 1);,1,1,0,2,4,0,4,1,0,6,58,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,256,"            lastRuleSet.setUpperLimit(year, ofYear);",0,0,0,0,2,0,4,0,0,2,40,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,258,        iRuleSets.add(new RuleSet());,0,0,0,2,4,1,2,1,1,6,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,259,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,268,        getLastRuleSet().setStandardOffset(standardOffset);,0,0,0,1,4,0,3,0,1,4,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,269,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,276,"        getLastRuleSet().setFixedSavings(nameKey, saveMillis);",0,0,0,1,4,0,4,0,1,4,54,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,277,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,309,        if (fromYear <= toYear) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,310,            OfYear ofYear = new OfYear,1,0,0,0,0,1,0,2,1,4,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,312,"            Recurrence recurrence = new Recurrence(ofYear, nameKey, saveMillis);",4,0,0,0,2,1,0,2,1,5,68,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,313,"            Rule rule = new Rule(recurrence, fromYear, toYear);",4,0,0,0,2,1,0,2,1,5,51,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,314,            getLastRuleSet().addRule(rule);,0,0,0,1,4,0,3,0,1,4,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,316,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,320,        if (iRuleSets.size() == 0) {,0,1,0,2,5,1,2,0,0,5,28,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,321,"            addCutover(Integer.MIN_VALUE, 'w', 1, 1, 0, false, 0);",2,0,0,0,2,0,1,0,3,4,54,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,323,        return iRuleSets.get(iRuleSets.size() - 1);,0,1,0,2,4,1,4,0,0,5,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,333,        if (id == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,334,            throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,339,        ArrayList<Transition> transitions = new ArrayList<Transition>();,1,0,0,1,2,1,0,4,1,6,64,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,343,        DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,345,        long millis = Long.MIN_VALUE;,3,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,346,        int saveMillis = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,348,        int ruleSetCount = iRuleSets.size();,1,0,0,1,2,1,2,0,0,5,36,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,349,        for (int i=0; i<ruleSetCount; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,350,            RuleSet rs = iRuleSets.get(i);,1,0,0,1,2,0,3,1,0,5,30,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,351,            Transition next = rs.firstTransition(millis);,1,0,0,1,2,0,3,1,0,5,45,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,352,            if (next == null) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,353,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,355,"            addTransition(transitions, next);",0,0,0,0,2,0,3,0,1,3,33,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,356,            millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,357,            saveMillis = next.getSaveMillis();,1,0,0,1,2,0,2,0,1,5,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,360,            rs = new RuleSet(rs);,2,0,0,1,2,1,0,1,2,6,21,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,362,"            while ((next = rs.nextTransition(millis, saveMillis)) != null) {",1,1,0,0,7,1,4,0,1,6,64,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,363,"                if (addTransition(transitions, next)) {",0,0,0,0,5,1,3,0,1,4,39,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,364,                    if (tailZone != null) {,1,1,0,1,3,1,0,0,0,5,23,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,366,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,369,                millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,370,                saveMillis = next.getSaveMillis();,1,0,0,1,2,0,2,0,1,5,34,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,371,                if (tailZone == null && i == ruleSetCount - 1) {,3,4,0,1,3,1,0,0,0,5,48,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,372,                    tailZone = rs.buildTailZone(id);,1,0,0,1,2,0,3,0,1,5,32,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,379,            millis = rs.getUpperLimit(saveMillis);,1,0,0,1,2,0,3,0,1,5,38,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,383,        if (transitions.size() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,384,            if (tailZone != null) {,1,1,0,1,3,1,0,0,0,5,23,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,386,                return tailZone;,1,0,0,0,0,1,0,0,0,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,388,"            return buildFixedZone(id, ""UTC"", 0, 0);",0,0,0,0,2,1,2,0,2,4,39,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,390,        if (transitions.size() == 1 && tailZone == null) {,1,3,0,2,5,1,2,0,0,6,50,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,391,            Transition tr = transitions.get(0);,1,0,0,1,2,0,2,1,0,5,35,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,392,"            return buildFixedZone(id, tr.getNameKey(),",0,0,0,1,3,1,4,0,1,5,42,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,396,"        PrecalculatedZone zone = PrecalculatedZone.create(id, outputID, transitions, tailZone);",1,0,0,0,2,0,6,1,0,4,87,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,397,        if (zone.isCachable()) {,0,0,0,2,5,1,2,0,0,4,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,398,            return CachedDateTimeZone.forZone(zone);,0,0,0,1,2,1,3,0,0,4,40,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,400,        return zone;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,404,        int size = transitions.size();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,405,        if (size == 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,406,            transitions.add(tr);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,407,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,410,        Transition last = transitions.get(size - 1);,2,1,0,1,2,0,2,1,0,6,44,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,411,        if (!tr.isTransitionFrom(last)) {,0,0,0,2,5,1,3,0,1,5,33,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,412,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,417,        int offsetForLast = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,418,        if (size >= 2) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,419,            offsetForLast = transitions.get(size - 2).getWallOffset();,2,1,0,1,4,0,3,0,1,6,58,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,421,        int offsetForNew = last.getWallOffset();,1,0,0,1,2,1,2,0,0,5,40,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,423,        long lastLocal = last.getMillis() + offsetForLast;,2,1,0,1,2,1,2,0,0,6,50,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,424,        long newLocal = tr.getMillis() + offsetForNew;,2,1,0,1,2,1,2,0,0,6,46,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,426,        if (newLocal != lastLocal) {,2,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,427,            transitions.add(tr);,0,0,0,1,2,0,3,0,0,3,20,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,428,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,431,        transitions.remove(size - 1);,1,1,0,1,2,0,2,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,432,"        return addTransition(transitions, tr);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,443,        if (out instanceof DataOutput) {,1,0,0,1,3,2,0,1,0,5,32,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,444,"            writeTo(zoneID, (DataOutput)out);",1,0,0,1,4,0,2,1,1,6,33,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,446,"            writeTo(zoneID, (DataOutput)new DataOutputStream(out));",1,0,0,1,6,1,2,2,2,7,55,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,448,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,459,"        DateTimeZone zone = toDateTimeZone(zoneID, false);",1,0,0,0,2,0,2,1,2,5,50,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,461,        if (zone instanceof FixedDateTimeZone) {,1,0,0,1,3,2,0,1,0,5,40,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,462,            out.writeByte('F'); // 'F' for fixed,0,0,0,1,2,1,2,0,1,5,36,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,463,            out.writeUTF(zone.getNameKey(0));,0,0,0,2,4,0,4,0,0,3,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,464,"            writeMillis(out, zone.getOffset(0));",0,0,0,1,4,0,4,0,1,4,36,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,465,"            writeMillis(out, zone.getStandardOffset(0));",0,0,0,1,4,0,4,0,1,4,44,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,467,            if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,2,0,1,0,5,41,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,468,"                out.writeByte('C'); // 'C' for cached, precalculated",0,0,0,1,2,1,2,0,1,5,52,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,469,                zone = ((CachedDateTimeZone)zone).getUncachedZone();,2,0,0,2,6,0,1,1,1,6,52,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,471,"                out.writeByte('P'); // 'P' for precalculated, uncached",0,0,0,1,2,1,2,0,1,5,54,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,473,            ((PrecalculatedZone)zone).writeTo(out);,1,0,0,2,6,0,2,1,0,5,39,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,475,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1362,                        index = in.readUnsignedShort();,1,0,0,1,2,0,2,0,1,5,31,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1365,                } catch (ArrayIndexOutOfBoundsException e) {,1,0,0,1,4,1,0,1,0,5,44,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1366,"                    throw new IOException(""Invalid encoding"");",0,0,0,1,2,2,0,1,2,5,42,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1389,            int size = transitions.size();,1,0,0,1,2,1,2,0,0,5,30,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1390,            if (size == 0) {,1,1,0,1,3,1,0,0,0,5,16,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1391,                throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1394,            long[] trans = new long[size];,1,0,1,0,4,3,0,0,0,4,30,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1395,            int[] wallOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1396,            int[] standardOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,38,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1397,            String[] nameKeys = new String[size];,1,0,1,0,4,1,0,2,0,5,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1399,            Transition last = null;,1,0,0,0,0,0,0,1,0,2,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1400,            for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1401,                Transition tr = transitions.get(i);,1,0,0,1,2,0,3,1,0,5,35,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1403,                if (!tr.isTransitionFrom(last)) {,0,0,0,2,5,1,3,0,1,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1404,                    throw new IllegalArgumentException(id);,1,0,0,1,2,2,0,1,1,6,39,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1407,                trans[i] = tr.getMillis();,0,0,1,1,4,0,2,0,1,5,26,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1408,                wallOffsets[i] = tr.getWallOffset();,0,0,1,1,4,0,2,0,1,5,36,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1409,                standardOffsets[i] = tr.getStandardOffset();,0,0,1,1,4,0,2,0,1,5,44,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1410,                nameKeys[i] = tr.getNameKey();,0,0,1,1,4,0,2,0,1,5,30,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1412,                last = tr;,2,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1417,            String[] zoneNameData = new String[5];,1,0,0,0,4,1,0,2,0,4,38,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1418,            String[][] zoneStrings = new DateFormatSymbols(Locale.ENGLISH).getZoneStrings();,3,0,0,1,8,1,1,2,1,7,80,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1419,            for (int j = 0; j < zoneStrings.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1420,                String[] set = zoneStrings[j];,1,0,1,0,4,0,0,1,0,4,30,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1421,                if (set != null && set.length == 5 && id.equals(set[0])) {,3,4,1,2,7,1,2,0,0,7,58,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1422,                    zoneNameData = set;,2,0,0,0,0,0,0,0,1,2,19,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1426,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1428,            for (int i = 0; i < nameKeys.length - 1; i++) {,5,2,0,1,3,2,0,0,1,6,47,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1429,                String curNameKey = nameKeys[i];,1,0,1,0,2,0,0,1,0,4,32,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1430,                String nextNameKey = nameKeys[i + 1];,2,1,1,0,2,0,0,1,0,5,37,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1431,                long curOffset = wallOffsets[i];,1,0,1,0,2,1,0,0,0,4,32,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1432,                long nextOffset = wallOffsets[i + 1];,2,1,1,0,2,1,0,0,0,5,37,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1433,                long curStdOffset = standardOffsets[i];,1,0,1,0,2,1,0,0,0,4,39,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1434,                long nextStdOffset = standardOffsets[i + 1];,2,1,1,0,2,1,0,0,0,5,44,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1435,"                Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay(), chrono);",3,1,1,1,8,1,2,2,1,9,81,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1436,                if (curOffset != nextOffset &&,2,8,0,0,1,1,0,0,0,4,30,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1443,                    if (ZoneInfoCompiler.verbose()) {,0,0,0,2,5,1,2,0,0,4,33,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1444,"                        System.out.println(""Fixing duplicate name key - "" + nextNameKey);",3,1,0,1,2,0,1,0,1,6,65,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1445,"                        System.out.println(""     - "" + new DateTime(trans[i], chrono) +",3,1,1,0,5,1,1,1,2,8,63,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1448,                    if (curOffset > nextOffset) {,2,1,0,1,3,1,0,0,0,5,29,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1449,"                        nameKeys[i] = (curNameKey + ""-Summer"").intern();",1,1,1,1,6,0,1,0,2,7,48,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1450,                    } else if (curOffset < nextOffset) {,2,1,0,1,4,2,0,0,0,5,36,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1451,"                        nameKeys[i + 1] = (nextNameKey + ""-Summer"").intern();",2,2,1,1,6,0,1,0,2,7,53,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1452,                        i++;,1,0,0,0,0,0,0,0,1,2,4,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1457,            if (tailZone != null) {,1,1,0,1,3,1,0,0,0,5,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1458,                if (tailZone.iStartRecurrence.getNameKey(),2,0,0,1,3,1,1,0,0,5,42,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1460,                    if (ZoneInfoCompiler.verbose()) {,0,0,0,2,5,1,2,0,0,4,33,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1461,"                        System.out.println(""Fixing duplicate recurrent name key - "" +",2,1,0,0,1,0,1,0,1,5,61,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1464,                    if (tailZone.iStartRecurrence.getSaveMillis() > 0) {,2,1,0,2,5,1,1,0,0,6,52,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1465,                        tailZone = new DSTZone(,1,0,0,0,1,1,0,1,2,5,23,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1471,                        tailZone = new DSTZone(,1,0,0,0,1,1,0,1,2,5,23,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1480,            return new PrecalculatedZone,0,0,0,0,0,2,0,1,1,3,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1509,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1510,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,0,2,1,4,0,0,4,50,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1511,            if (i >= 0) {,1,1,0,1,3,1,0,0,0,5,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1512,                return iNameKeys[i];,0,0,1,0,2,1,0,0,0,3,20,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1514,            i = ~i;,2,0,0,0,0,0,0,0,2,2,7,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1515,            if (i < transitions.length) {,3,1,0,1,3,1,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1516,                if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1517,                    return iNameKeys[i - 1];,1,1,1,0,2,1,0,0,0,5,24,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1519,"                return ""UTC"";",0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1521,            if (iTailZone == null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1522,                return iNameKeys[i - 1];,1,1,1,0,2,1,0,0,0,5,24,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1524,            return iTailZone.getNameKey(instant);,0,0,0,1,2,1,3,0,0,4,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1528,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1529,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,0,2,1,4,0,0,4,50,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1530,            if (i >= 0) {,1,1,0,1,3,1,0,0,0,5,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1531,                return iWallOffsets[i];,0,0,1,0,2,1,0,0,0,3,23,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1533,            i = ~i;,2,0,0,0,0,0,0,0,2,2,7,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1534,            if (i < transitions.length) {,3,1,0,1,3,1,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1535,                if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1536,                    return iWallOffsets[i - 1];,1,1,1,0,2,1,0,0,0,5,27,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1538,                return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1540,            if (iTailZone == null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1541,                return iWallOffsets[i - 1];,1,1,1,0,2,1,0,0,0,5,27,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1543,            return iTailZone.getOffset(instant);,0,0,0,1,2,1,3,0,0,4,36,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1547,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1548,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,0,2,1,4,0,0,4,50,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1549,            if (i >= 0) {,1,1,0,1,3,1,0,0,0,5,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1550,                return iStandardOffsets[i];,0,0,1,0,2,1,0,0,0,3,27,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1552,            i = ~i;,2,0,0,0,0,0,0,0,2,2,7,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1553,            if (i < transitions.length) {,3,1,0,1,3,1,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1554,                if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1555,                    return iStandardOffsets[i - 1];,1,1,1,0,2,1,0,0,0,5,31,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1557,                return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1559,            if (iTailZone == null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1560,                return iStandardOffsets[i - 1];,1,1,1,0,2,1,0,0,0,5,31,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1562,            return iTailZone.getStandardOffset(instant);,0,0,0,1,2,1,3,0,0,4,44,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1566,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1570,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1571,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,0,2,1,4,0,0,4,50,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1572,            i = (i >= 0) ? (i + 1) : ~i;,4,2,0,1,4,0,0,0,2,5,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1573,            if (i < transitions.length) {,3,1,0,1,3,1,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1574,                return transitions[i];,0,0,1,0,2,1,0,0,0,3,22,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1576,            if (iTailZone == null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1577,                return instant;,1,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1579,            long end = transitions[transitions.length - 1];,3,1,1,0,2,1,0,0,0,5,47,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1580,            if (instant < end) {,2,1,0,1,3,1,0,0,0,5,20,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1581,                instant = end;,2,0,0,0,0,0,0,0,1,2,14,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1583,            return iTailZone.nextTransition(instant);,0,0,0,1,2,1,3,0,0,4,41,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1587,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1588,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,0,2,1,4,0,0,4,50,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1589,            if (i >= 0) {,1,1,0,1,3,1,0,0,0,5,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1590,                if (instant > Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1591,                    return instant - 1;,1,1,0,0,0,1,0,0,0,3,19,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1593,                return instant;,1,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1595,            i = ~i;,2,0,0,0,0,0,0,0,2,2,7,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1596,            if (i < transitions.length) {,3,1,0,1,3,1,0,0,0,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1597,                if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1598,                    long prev = transitions[i - 1];,2,1,1,0,2,1,0,0,0,5,31,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1599,                    if (prev > Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,28,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1600,                        return prev - 1;,1,1,0,0,0,1,0,0,0,3,16,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1603,                return instant;,1,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1605,            if (iTailZone != null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1606,                long prev = iTailZone.previousTransition(instant);,1,0,0,1,2,1,3,0,0,5,50,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1607,                if (prev < instant) {,2,1,0,1,3,1,0,0,0,5,21,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1608,                    return prev;,1,0,0,0,0,1,0,0,0,2,12,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1611,            long prev = transitions[i - 1];,2,1,1,0,2,1,0,0,0,5,31,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1612,            if (prev > Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1613,                return prev - 1;,1,1,0,0,0,1,0,0,0,3,16,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1615,            return instant;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1619,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1620,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1622,            if (obj instanceof PrecalculatedZone) {,1,0,0,1,3,2,0,1,0,5,39,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1623,                PrecalculatedZone other = (PrecalculatedZone)obj;,2,0,0,1,2,0,0,2,0,4,49,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1624,                return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1634,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1638,            int size = iTransitions.length;,3,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1641,            Set<String> poolSet = new HashSet<String>();,1,0,0,1,2,1,0,4,1,6,44,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1642,            for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1643,                poolSet.add(iNameKeys[i]);,0,0,1,1,4,0,2,0,0,4,26,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1646,            int poolSize = poolSet.size();,1,0,0,1,2,1,2,0,0,5,30,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1647,            if (poolSize > 65535) {,1,1,0,1,3,1,0,0,0,5,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1648,"                throw new UnsupportedOperationException(""String pool is too large"");",0,0,0,1,2,2,0,1,2,5,68,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1650,            String[] pool = new String[poolSize];,1,0,1,0,4,1,0,2,0,5,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1651,            Iterator<String> it = poolSet.iterator();,1,0,0,1,2,0,2,2,0,5,41,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1652,            for (int i=0; it.hasNext(); i++) {,2,0,0,2,5,2,2,0,1,6,34,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1653,                pool[i] = it.next();,0,0,1,1,4,0,2,0,1,5,20,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1657,            out.writeShort(poolSize);,0,0,0,1,2,0,3,0,0,3,25,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1658,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,2,0,0,1,6,32,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1659,                out.writeUTF(pool[i]);,0,0,1,1,4,0,2,0,0,4,22,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1662,            out.writeInt(size);,0,0,0,1,2,0,3,0,0,3,19,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1664,            for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1665,"                writeMillis(out, iTransitions[i]);",0,0,1,0,4,0,2,0,1,4,34,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1666,"                writeMillis(out, iWallOffsets[i]);",0,0,1,0,4,0,2,0,1,4,34,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1667,"                writeMillis(out, iStandardOffsets[i]);",0,0,1,0,4,0,2,0,1,4,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1670,                String nameKey = iNameKeys[i];,1,0,1,0,2,0,0,1,0,4,30,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1671,                for (int j=0; j<poolSize; j++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1672,                    if (pool[j].equals(nameKey)) {,0,0,1,2,7,1,2,0,0,5,30,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1673,                        if (poolSize < 256) {,1,1,0,1,3,1,0,0,0,5,21,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1674,                            out.writeByte(j);,0,0,0,1,2,0,3,0,0,3,17,14,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1676,                            out.writeShort(j);,0,0,0,1,2,0,3,0,0,3,18,14,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1678,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1683,            out.writeBoolean(iTailZone != null);,1,1,0,1,2,0,2,0,0,5,36,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1684,            if (iTailZone != null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1685,                iTailZone.writeTo(out);,0,0,0,1,2,0,3,0,0,3,23,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1687,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1690,            if (iTailZone != null) {,1,1,0,1,3,1,0,0,0,5,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1691,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1693,            long[] transitions = iTransitions;,2,0,0,0,2,1,0,0,0,3,34,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1694,            if (transitions.length <= 1) {,2,1,0,1,3,1,0,0,0,5,30,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1695,                return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1700,            double distances = 0;,1,0,0,0,0,1,0,0,0,2,21,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1701,            int count = 0;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1703,            for (int i=1; i<transitions.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1704,                long diff = transitions[i] - transitions[i - 1];,2,2,1,0,4,1,0,0,0,5,48,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1705,                if (diff < ((366L + 365) * 24 * 60 * 60 * 1000)) {,1,3,0,3,7,1,0,0,0,5,50,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1706,                    distances += (double)diff;,2,0,0,1,2,1,0,0,1,5,26,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1707,                    count++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1711,            if (count > 0) {,1,1,0,1,3,1,0,0,0,5,16,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1712,                double avg = distances / count;,3,1,0,0,0,1,0,0,0,3,31,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1713,                avg /= 24 * 60 * 60 * 1000;,1,1,0,0,0,0,0,0,1,3,27,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1714,                if (avg >= 25) {,1,1,0,1,3,1,0,0,0,5,16,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1721,                    return true;,0,0,0,0,0,1,0,0,1,2,12,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1725,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,40,        } catch (SecurityException e) {,1,0,0,1,4,1,0,1,0,5,31,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,41,            i = null;,1,0,0,0,0,0,0,0,1,2,9,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,50,            cacheSize = i.intValue();,1,0,0,1,2,0,2,0,1,5,25,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,52,            cacheSize--;,1,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,53,            int shift = 0;,1,0,0,0,0,1,0,0,0,2,14,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,54,            while (cacheSize > 0) {,1,1,0,1,3,1,0,0,0,5,23,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,55,                shift++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,56,                cacheSize >>= 1;,1,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,58,            cacheSize = 1 << shift;,2,1,0,0,0,0,0,0,1,3,23,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,69,            return (CachedDateTimeZone)zone;,1,0,0,1,2,1,0,1,0,5,32,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,95,        in.defaultReadObject();,0,0,0,1,2,0,2,0,0,3,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,96,        iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,0,2,1,0,1,1,6,42,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,103,        return iZone;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,107,        return getInfo(instant).getNameKey(instant);,0,0,0,1,4,1,4,0,1,5,44,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,111,        return getInfo(instant).getOffset(instant);,0,0,0,1,4,1,4,0,1,5,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,115,        return getInfo(instant).getStandardOffset(instant);,0,0,0,1,4,1,4,0,1,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,119,        return iZone.isFixed();,0,0,0,1,2,1,2,0,0,4,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,123,        return iZone.nextTransition(instant);,0,0,0,1,2,1,3,0,0,4,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,127,        return iZone.previousTransition(instant);,0,0,0,1,2,1,3,0,0,4,41,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,131,        return iZone.hashCode();,0,0,0,1,2,1,2,0,0,4,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,135,        if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,136,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,138,        if (obj instanceof CachedDateTimeZone) {,1,0,0,1,3,2,0,1,0,5,40,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,139,            return iZone.equals(((CachedDateTimeZone)obj).iZone);,2,0,0,3,6,1,2,1,0,6,53,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,141,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,148,        int period = (int)(millis >> 32);,2,1,0,1,4,2,0,0,0,5,33,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,149,        Info[] cache = iInfoCache;,2,0,0,0,2,0,0,1,0,3,26,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,150,        int index = period & cInfoCacheMask;,3,1,0,0,0,1,0,0,0,3,36,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,151,        Info info = cache[index];,1,0,1,0,2,0,0,1,0,4,25,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,152,        if (info == null || (int)((info.iPeriodStart >> 32)) != period) {,4,4,0,3,9,2,0,0,0,5,65,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,153,            info = createInfo(millis);,1,0,0,1,2,0,2,0,2,5,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,154,            cache[index] = info;,1,0,1,0,2,0,0,0,1,4,20,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,156,        return info;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,160,        long periodStart = millis & (0xffffffffL << 32);,2,2,0,1,2,1,0,0,0,5,48,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,161,"        Info info = new Info(iZone, periodStart);",3,0,0,0,2,1,0,2,1,5,41,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,163,        long end = periodStart | 0xffffffffL;,2,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,164,        Info chain = info;,2,0,0,0,0,0,0,1,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,166,            long next = iZone.nextTransition(periodStart);,1,0,0,1,2,1,3,0,0,5,46,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,167,            if (next == periodStart || next > end) {,4,3,0,1,3,1,0,0,0,5,40,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,168,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,170,            periodStart = next;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,171,"            chain = (chain.iNextInfo = new Info(iZone, periodStart));",5,0,0,0,4,1,0,1,3,5,57,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,172,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,174,        return info;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1183,            return findMatchingRecurrence(instant).getNameKey();,0,0,0,1,4,1,3,0,1,5,52,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1187,            return iStandardOffset + findMatchingRecurrence(instant).getSaveMillis();,1,1,0,1,4,1,3,0,1,7,73,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1191,            return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1195,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1199,            int standardOffset = iStandardOffset;,2,0,0,0,0,1,0,0,0,2,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1200,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,2,46,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1201,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,2,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1206,                start = startRecurrence.next,1,0,0,0,0,0,2,0,1,3,28,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1208,                if (instant > 0 && start < 0) {,2,3,0,1,3,1,0,0,0,5,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1210,                    start = instant;,2,0,0,0,0,0,0,0,1,2,16,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1218,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1212,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1214,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1215,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1217,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1221,                end = endRecurrence.next,1,0,0,0,0,0,2,0,1,3,24,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1223,                if (instant > 0 && end < 0) {,2,3,0,1,3,1,0,0,0,5,29,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1225,                    end = instant;,2,0,0,0,0,0,0,0,1,2,14,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1233,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1227,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1229,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1230,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1232,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1235,            return (start > end) ? end : start;,4,1,0,1,2,1,0,0,0,5,35,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1241,            instant++;,1,0,0,0,0,0,0,0,1,2,10,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1243,            int standardOffset = iStandardOffset;,2,0,0,0,0,1,0,0,0,2,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1244,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,2,46,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1245,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,2,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1250,                start = startRecurrence.previous,1,0,0,0,0,0,2,0,1,3,32,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1252,                if (instant < 0 && start > 0) {,2,3,0,1,3,1,0,0,0,5,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1254,                    start = instant;,2,0,0,0,0,0,0,0,1,2,16,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1262,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1256,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1258,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1259,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1261,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1265,                end = endRecurrence.previous,1,0,0,0,0,0,2,0,1,3,28,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1267,                if (instant < 0 && end > 0) {,2,3,0,1,3,1,0,0,0,5,29,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1269,                    end = instant;,2,0,0,0,0,0,0,0,1,2,14,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1277,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1271,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1273,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1274,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1276,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1279,            return ((start > end) ? start : end) - 1;,4,2,0,2,4,1,0,0,0,5,41,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1283,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1284,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1286,            if (obj instanceof DSTZone) {,1,0,0,1,3,2,0,1,0,5,29,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1287,                DSTZone other = (DSTZone)obj;,2,0,0,1,2,0,0,2,0,4,29,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1288,                return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1294,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1298,"            writeMillis(out, iStandardOffset);",0,0,0,0,2,0,3,0,1,3,34,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1299,            iStartRecurrence.writeTo(out);,0,0,0,1,2,0,3,0,0,3,30,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1300,            iEndRecurrence.writeTo(out);,0,0,0,1,2,0,3,0,0,3,28,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1301,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1304,            int standardOffset = iStandardOffset;,2,0,0,0,0,1,0,0,0,2,37,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1305,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,2,46,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1306,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,2,42,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1311,                start = startRecurrence.next,1,0,0,0,0,0,2,0,1,3,28,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1319,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1313,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1315,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1316,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1318,                start = instant;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1322,                end = endRecurrence.next,1,0,0,0,0,0,2,0,1,3,24,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1330,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1324,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1326,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1327,            } catch (ArithmeticException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1329,                end = instant;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1332,            return (start > end) ? startRecurrence : endRecurrence;,4,1,0,1,2,1,0,0,0,5,55,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,963,        RuleSet() {,1,0,0,1,3,0,0,0,0,3,11,3,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,964,            iRules = new ArrayList<Rule>(10);,1,0,0,1,2,1,0,2,2,6,33,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,965,            iUpperYear = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,31,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,966,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,971,        RuleSet(RuleSet rs) {,2,0,0,1,3,0,0,1,0,4,21,3,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,972,            iStandardOffset = rs.iStandardOffset;,3,0,0,0,0,0,0,0,1,2,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,973,            iRules = new ArrayList<Rule>(rs.iRules);,3,0,0,1,2,1,0,2,2,6,40,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,974,            iInitialNameKey = rs.iInitialNameKey;,3,0,0,0,0,0,0,0,1,2,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,975,            iInitialSaveMillis = rs.iInitialSaveMillis;,3,0,0,0,0,0,0,0,1,2,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,976,            iUpperYear = rs.iUpperYear;,3,0,0,0,0,0,0,0,1,2,27,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,977,            iUpperOfYear = rs.iUpperOfYear;,3,0,0,0,0,0,0,0,1,2,31,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,978,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,948,            long now = DateTimeUtils.currentTimeMillis();,1,0,0,1,2,1,2,0,0,5,45,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,949,            YEAR_LIMIT = ISOChronology.getInstanceUTC().year().get(now) + 100;,1,1,0,1,6,0,5,0,1,6,66,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,950,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,981,            return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,985,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,986,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,989,            iInitialNameKey = nameKey;,2,0,0,0,0,0,0,0,1,2,26,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,990,            iInitialSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,1,2,32,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,991,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,994,            if (!iRules.contains(rule)) {,0,0,0,2,5,1,3,0,1,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,995,                iRules.add(rule);,0,0,0,1,2,0,3,0,0,3,17,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,997,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1000,            iUpperYear = year;,2,0,0,0,0,0,0,0,1,2,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1001,            iUpperOfYear = ofYear;,2,0,0,0,0,0,0,0,1,2,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1002,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1011,            if (iInitialNameKey != null) {,1,1,0,1,3,1,0,0,0,5,30,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1013,"                return new Transition(firstMillis, iInitialNameKey,",2,0,0,0,1,2,0,1,1,5,51,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1018,            ArrayList<Rule> copy = new ArrayList<Rule>(iRules);,2,0,0,1,2,1,0,4,1,6,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1024,            long millis = Long.MIN_VALUE;,3,0,0,0,0,1,0,0,0,2,29,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1025,            int saveMillis = 0;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1026,            Transition first = null;,1,0,0,0,0,0,0,1,0,2,24,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1029,"            while ((next = nextTransition(millis, saveMillis)) != null) {",1,1,0,0,7,1,3,0,2,6,61,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1030,                millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1032,                if (millis == firstMillis) {,2,1,0,1,3,1,0,0,0,5,28,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1033,"                    first = new Transition(firstMillis, next);",3,0,0,0,2,1,0,1,2,5,42,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1034,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1037,                if (millis > firstMillis) {,2,1,0,1,3,1,0,0,0,5,27,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1038,                    if (first == null) {,1,1,0,1,3,1,0,0,0,5,20,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1042,                        for (Rule rule : copy) {,2,0,0,1,3,1,0,1,0,5,24,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1043,                            if (rule.getSaveMillis() == 0) {,0,1,0,2,5,1,2,0,0,5,32,13,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1044,"                                first = new Transition(firstMillis, rule, iStandardOffset);",4,0,0,0,2,1,0,1,2,5,59,15,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1045,                                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1047,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1049,                    if (first == null) {,1,1,0,1,3,1,0,0,0,5,20,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1053,"                        first = new Transition(firstMillis, next.getNameKey(),",2,0,0,1,3,1,2,1,2,7,54,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1061,"                first = new Transition(firstMillis, next);",3,0,0,0,2,1,0,1,2,5,42,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1063,                saveMillis = next.getSaveMillis();,1,0,0,1,2,0,2,0,1,5,34,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1066,            iRules = copy;,2,0,0,0,0,0,0,0,1,2,14,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1067,            return first;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1082,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1085,            Rule nextRule = null;,1,0,0,0,0,0,0,1,0,2,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1086,            long nextMillis = Long.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1088,            Iterator<Rule> it = iRules.iterator();,1,0,0,1,2,0,2,2,0,5,38,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1089,            while (it.hasNext()) {,0,0,0,2,5,1,2,0,0,4,22,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1090,                Rule rule = it.next();,1,0,0,1,2,0,2,1,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1091,"                long next = rule.next(instant, iStandardOffset, saveMillis);",1,0,0,0,2,1,5,0,0,4,60,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1092,                if (next <= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1093,                    it.remove();,0,0,0,1,2,0,2,0,0,3,12,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1094,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1098,                if (next <= nextMillis) {,2,1,0,1,3,1,0,0,0,5,25,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1100,                    nextRule = rule;,2,0,0,0,0,0,0,0,1,2,16,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1101,                    nextMillis = next;,2,0,0,0,0,0,0,0,1,2,18,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1103,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1105,            if (nextRule == null) {,1,1,0,1,3,1,0,0,0,5,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1106,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1110,            if (chrono.year().get(nextMillis) >= YEAR_LIMIT) {,1,1,0,2,7,1,4,0,0,6,50,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1111,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1115,            if (iUpperYear < Integer.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1116,                long upperMillis =,1,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1118,                if (nextMillis >= upperMillis) {,2,1,0,1,3,1,0,0,0,5,32,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1120,                    return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1124,"            return new Transition(nextMillis, nextRule, iStandardOffset);",3,0,0,0,2,2,0,1,1,5,61,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1131,            if (iUpperYear == Integer.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,38,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1132,                return Long.MAX_VALUE;,2,0,0,0,0,1,0,0,0,2,22,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1134,"            return iUpperOfYear.setInstant(iUpperYear, iStandardOffset, saveMillis);",0,0,0,0,2,1,5,0,0,3,72,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1141,            if (iRules.size() == 2) {,0,1,0,2,5,1,2,0,0,5,25,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1142,                Rule startRule = iRules.get(0);,1,0,0,1,2,0,2,1,0,5,31,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1143,                Rule endRule = iRules.get(1);,1,0,0,1,2,0,2,1,0,5,29,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1144,                if (startRule.getToYear() == Integer.MAX_VALUE &&,2,2,0,1,3,1,2,0,0,6,49,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1154,"                    return new DSTZone(id, iStandardOffset,",2,0,0,0,1,2,0,1,1,5,39,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,1158,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,883,"        Transition(long millis, Transition tr) {",3,0,0,0,3,1,0,1,0,4,40,3,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,884,            iMillis = millis;,2,0,0,0,0,0,0,0,1,2,17,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,885,            iNameKey = tr.iNameKey;,3,0,0,0,0,0,0,0,1,2,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,886,            iWallOffset = tr.iWallOffset;,3,0,0,0,0,0,0,0,1,2,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,887,            iStandardOffset = tr.iStandardOffset;,3,0,0,0,0,0,0,0,1,2,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,888,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,890,"        Transition(long millis, Rule rule, int standardOffset) {",4,0,0,0,3,2,0,1,0,4,56,3,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,891,            iMillis = millis;,2,0,0,0,0,0,0,0,1,2,17,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,892,            iNameKey = rule.getNameKey();,1,0,0,1,2,0,2,0,1,5,29,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,893,            iWallOffset = standardOffset + rule.getSaveMillis();,2,1,0,1,2,0,2,0,1,6,52,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,894,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,895,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,898,"                   int wallOffset, int standardOffset) {",2,0,0,0,2,2,0,0,0,3,37,4,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,899,            iMillis = millis;,2,0,0,0,0,0,0,0,1,2,17,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,900,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,1,2,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,901,            iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,1,2,25,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,902,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,903,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,906,            return iMillis;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,910,            return iNameKey;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,914,            return iWallOffset;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,918,            return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,922,            return iWallOffset - iStandardOffset;,2,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,929,            if (other == null) {,1,1,0,1,3,1,0,0,0,5,20,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,930,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,932,            return iMillis > other.iMillis &&,3,2,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,122,"        super(base, null);",1,0,0,0,2,1,0,0,1,4,18,3,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,123,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,63,"    private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();",1,0,0,1,2,4,0,6,4,6,106,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,65,        cFastCache = new ISOChronology[FAST_CACHE_SIZE];,1,0,1,0,2,1,0,1,1,6,48,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,66,        INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());,1,0,0,2,4,1,2,1,2,7,71,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,67,"        cCache.put(DateTimeZone.UTC, INSTANCE_UTC);",2,0,0,0,2,0,3,0,0,3,43,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,68,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,77,        return INSTANCE_UTC;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,86,        return getInstance(DateTimeZone.getDefault());,0,0,0,2,4,1,3,0,1,5,46,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,96,        if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,97,            zone = DateTimeZone.getDefault();,1,0,0,1,2,0,2,0,1,5,33,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,99,        int index = System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1);,2,2,0,1,4,1,3,0,0,6,66,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,100,        ISOChronology chrono = cFastCache[index];,1,0,1,0,2,0,0,1,0,4,41,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,101,        if (chrono != null && chrono.getZone() == zone) {,2,3,0,2,5,1,2,0,0,6,49,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,102,            return chrono;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,104,        synchronized (cCache) {,1,0,0,1,3,1,0,0,0,4,23,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,105,            chrono = cCache.get(zone);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,106,            if (chrono == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,107,"                chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone));",1,0,0,0,4,1,4,1,2,6,76,8,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,108,"                cCache.put(zone, chrono);",0,0,0,0,2,0,4,0,0,2,25,9,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,110,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,111,        cFastCache[index] = chrono;,1,0,1,0,2,0,0,0,1,4,27,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,112,        return chrono;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,133,        return INSTANCE_UTC;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,143,        if (zone == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,144,            zone = DateTimeZone.getDefault();,1,0,0,1,2,0,2,0,1,5,33,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,146,        if (zone == getZone()) {,1,1,0,2,5,1,1,0,1,7,24,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,147,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,149,        return getInstance(zone);,0,0,0,1,2,1,2,0,1,5,25,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,160,"        String str = ""ISOChronology"";",1,0,0,0,0,0,0,1,1,3,29,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,161,        DateTimeZone zone = getZone();,1,0,0,1,2,0,1,1,1,6,30,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,162,        if (zone != null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,163,            str = str + '[' + zone.getID() + ']';,2,1,0,1,4,0,2,0,3,6,37,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,165,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,169,        if (getBase().getZone() == DateTimeZone.UTC) {,2,1,0,2,7,1,2,0,1,7,46,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,171,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,1,0,1,2,5,47,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,173,            fields.yearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,1,0,1,2,5,50,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,175,            fields.weekyearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,1,0,1,2,5,54,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,178,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,1,5,58,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,180,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,190,        return super.equals(obj);,2,0,0,1,2,2,0,0,0,4,25,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,200,"        return ""ISO"".hashCode() * 11 + getZone().hashCode();",0,2,0,1,6,1,3,0,2,6,52,4,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,208,        return new Stub(getZone());,0,0,0,2,4,2,1,1,2,6,27,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,99,"    protected AssembledChronology(Chronology base, Object param) {",3,0,0,0,3,1,0,2,1,5,62,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,100,        iBase = base;,2,0,0,0,0,0,0,0,1,2,13,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,101,        iParam = param;,2,0,0,0,0,0,0,0,1,2,15,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,102,        setFields();,0,0,0,1,2,0,1,0,1,4,12,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,107,        if ((base = iBase) != null) {,2,1,0,2,5,1,0,0,1,6,29,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,108,            return base.getZone();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,110,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,118,        if ((base = iBase) != null && (iBaseFlags & 6) == 6) {,3,4,0,2,7,1,0,0,1,6,54,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,120,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);",0,0,0,0,2,1,6,0,0,3,74,7,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,122,"        return super.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);",5,0,0,0,2,2,0,0,0,3,75,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,131,        if ((base = iBase) != null && (iBaseFlags & 5) == 5) {,3,4,0,2,7,1,0,0,1,6,54,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,133,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,",0,0,0,0,1,1,5,0,0,3,60,7,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,136,"        return super.getDateTimeMillis(year, monthOfYear, dayOfMonth,",4,0,0,0,1,2,0,0,0,3,61,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,146,        if ((base = iBase) != null && (iBaseFlags & 1) == 1) {,3,4,0,2,7,1,0,0,1,6,54,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,148,            return base.getDateTimeMillis,0,0,0,0,0,1,2,0,0,2,29,7,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,151,        return super.getDateTimeMillis,1,0,0,0,0,2,0,0,0,2,30,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,156,        return iMillis;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,160,        return iMillisOfSecond;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,164,        return iMillisOfDay;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,168,        return iSeconds;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,172,        return iSecondOfMinute;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,176,        return iSecondOfDay;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,180,        return iMinutes;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,184,        return iMinuteOfHour;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,188,        return iMinuteOfDay;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,192,        return iHours;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,196,        return iHourOfDay;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,200,        return iClockhourOfDay;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,204,        return iHalfdays;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,208,        return iHourOfHalfday;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,212,        return iClockhourOfHalfday;,1,0,0,0,0,1,0,0,0,2,27,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,216,        return iHalfdayOfDay;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,220,        return iDays;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,224,        return iDayOfWeek;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,228,        return iDayOfMonth;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,232,        return iDayOfYear;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,236,        return iWeeks;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,240,        return iWeekOfWeekyear;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,244,        return iWeekyears;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,248,        return iWeekyear;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,252,        return iWeekyearOfCentury;,1,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,256,        return iMonths;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,260,        return iMonthOfYear;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,264,        return iYears;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,268,        return iYear;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,272,        return iYearOfEra;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,276,        return iYearOfCentury;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,280,        return iCenturies;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,284,        return iCenturyOfEra;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,288,        return iEras;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,292,        return iEra;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,308,        return iBase;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,315,        return iParam;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,319,        Fields fields = new Fields();,1,0,0,1,2,1,0,2,1,6,29,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,320,        if (iBase != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,321,            fields.copyFieldsFrom(iBase);,0,0,0,1,2,0,3,0,0,3,29,7,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,323,        assemble(fields);,0,0,0,1,2,0,2,0,1,4,17,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,327,            iMillis    = (f = fields.millis)    != null ? f : super.millis();,6,1,0,1,4,1,0,0,2,6,65,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,328,            iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();,6,1,0,1,4,1,0,0,2,6,66,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,329,            iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();,6,1,0,1,4,1,0,0,2,6,66,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,330,            iHours     = (f = fields.hours)     != null ? f : super.hours();,6,1,0,1,4,1,0,0,2,6,64,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,331,            iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();,6,1,0,1,4,1,0,0,2,6,67,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,332,            iDays      = (f = fields.days)      != null ? f : super.days();,6,1,0,1,4,1,0,0,2,6,63,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,333,            iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();,6,1,0,1,4,1,0,0,2,6,64,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,334,            iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();,6,1,0,1,4,1,0,0,2,6,68,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,335,            iMonths    = (f = fields.months)    != null ? f : super.months();,6,1,0,1,4,1,0,0,2,6,65,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,336,            iYears     = (f = fields.years)     != null ? f : super.years();,6,1,0,1,4,1,0,0,2,6,64,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,337,            iCenturies = (f = fields.centuries) != null ? f : super.centuries();,6,1,0,1,4,1,0,0,2,6,68,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,338,            iEras      = (f = fields.eras)      != null ? f : super.eras();,6,1,0,1,4,1,0,0,2,6,63,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,343,            iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();,6,1,0,1,4,1,0,0,2,6,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,344,            iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();,6,1,0,1,4,1,0,0,2,6,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,345,            iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();,6,1,0,1,4,1,0,0,2,6,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,346,            iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();,6,1,0,1,4,1,0,0,2,6,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,347,            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();,6,1,0,1,4,1,0,0,2,6,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,348,            iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();,6,1,0,1,4,1,0,0,2,6,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,349,            iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();,6,1,0,1,4,1,0,0,2,6,86,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,350,            iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();,6,1,0,1,4,1,0,0,2,6,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,351,            iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();,6,1,0,1,4,1,0,0,2,6,90,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,352,            iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();,6,1,0,1,4,1,0,0,2,6,95,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,353,            iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();,6,1,0,1,4,1,0,0,2,6,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,354,            iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();,6,1,0,1,4,1,0,0,2,6,86,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,355,            iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();,6,1,0,1,4,1,0,0,2,6,87,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,356,            iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();,6,1,0,1,4,1,0,0,2,6,86,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,357,            iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();,6,1,0,1,4,1,0,0,2,6,91,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,358,            iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();,6,1,0,1,4,1,0,0,2,6,85,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,359,            iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();,6,1,0,1,4,1,0,0,2,6,94,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,360,            iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();,6,1,0,1,4,1,0,0,2,6,88,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,361,            iYear               = (f = fields.year)               != null ? f : super.year();,6,1,0,1,4,1,0,0,2,6,81,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,362,            iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();,6,1,0,1,4,1,0,0,2,6,86,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,363,            iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();,6,1,0,1,4,1,0,0,2,6,90,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,364,            iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();,6,1,0,1,4,1,0,0,2,6,89,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,365,            iEra                = (f = fields.era)                != null ? f : super.era();,6,1,0,1,4,1,0,0,2,6,80,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,369,        if (iBase == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,370,            flags = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,372,            flags = ,1,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,385,        iBaseFlags = flags;,2,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,386,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,389,        in.defaultReadObject();,0,0,0,1,2,0,2,0,0,3,23,5,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,390,        setFields();,0,0,0,1,2,0,1,0,1,4,12,4,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,391,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,188,"        Info(DateTimeZone zone, long periodStart) {",3,0,0,0,3,1,0,1,0,4,43,3,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,185,        private int iOffset = Integer.MIN_VALUE;,3,0,0,0,0,2,0,0,1,3,40,3,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,186,        private int iStandardOffset = Integer.MIN_VALUE;,3,0,0,0,0,2,0,0,1,3,48,3,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,189,            iPeriodStart = periodStart;,2,0,0,0,0,0,0,0,1,2,27,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,190,            iZoneRef = zone;,2,0,0,0,0,0,0,0,1,2,16,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,191,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,194,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,1,0,0,0,5,59,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,195,                if (iNameKey == null) {,1,1,0,1,3,1,0,0,0,5,23,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,196,                    iNameKey = iZoneRef.getNameKey(iPeriodStart);,1,0,0,1,2,0,3,0,1,5,45,9,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,198,                return iNameKey;,1,0,0,0,0,1,0,0,0,2,16,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,200,            return iNextInfo.getNameKey(millis);,0,0,0,1,2,1,3,0,0,4,36,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,204,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,1,0,0,0,5,59,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,205,                if (iOffset == Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,35,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,206,                    iOffset = iZoneRef.getOffset(iPeriodStart);,1,0,0,1,2,0,3,0,1,5,43,9,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,208,                return iOffset;,1,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,210,            return iNextInfo.getOffset(millis);,0,0,0,1,2,1,3,0,0,4,35,6,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,214,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,1,0,0,0,5,59,5,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,215,                if (iStandardOffset == Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,43,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,216,                    iStandardOffset = iZoneRef.getStandardOffset(iPeriodStart);,1,0,0,1,2,0,3,0,1,5,59,9,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,218,                return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,23,220,            return iNextInfo.getStandardOffset(millis);,0,0,0,1,2,1,3,0,0,4,43,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,816,"        Rule(Recurrence recurrence, int fromYear, int toYear) {",4,0,0,0,3,2,0,1,0,4,55,3,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,817,            iRecurrence = recurrence;,2,0,0,0,0,0,0,0,1,2,25,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,818,            iFromYear = fromYear;,2,0,0,0,0,0,0,0,1,2,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,819,            iToYear = toYear;,2,0,0,0,0,0,0,0,1,2,17,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,820,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,823,            return iFromYear;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,827,            return iToYear;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,831,            return iRecurrence.getOfYear();,0,0,0,1,2,1,2,0,0,4,31,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,835,            return iRecurrence.getNameKey();,0,0,0,1,2,1,2,0,0,4,32,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,839,            return iRecurrence.getSaveMillis();,0,0,0,1,2,1,2,0,0,4,35,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,843,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,845,            final int wallOffset = standardOffset + saveMillis;,3,1,0,0,0,2,0,0,1,4,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,846,            long testInstant = instant;,2,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,849,            if (instant == Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,32,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,850,                year = Integer.MIN_VALUE;,3,0,0,0,0,0,0,0,1,2,25,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,852,                year = chrono.year().get(instant + wallOffset);,3,1,0,1,4,0,3,0,1,6,47,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,855,            if (year < iFromYear) {,2,1,0,1,3,1,0,0,0,5,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,857,"                testInstant = chrono.year().set(0, iFromYear) - wallOffset;",2,1,0,1,4,0,4,0,1,6,59,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,860,                testInstant -= 1;,1,0,0,0,0,0,0,0,1,2,17,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,863,"            long next = iRecurrence.next(testInstant, standardOffset, saveMillis);",1,0,0,0,2,1,5,0,0,4,70,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,865,            if (next > instant) {,2,1,0,1,3,1,0,0,0,5,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,866,                year = chrono.year().get(next + wallOffset);,3,1,0,1,4,0,3,0,1,6,44,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,867,                if (year > iToYear) {,2,1,0,1,3,1,0,0,0,5,21,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,869,                    next = instant;,2,0,0,0,0,0,0,0,1,2,15,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,873,            return next;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,506,"                throw new IllegalArgumentException(""Unknown mode: "" + mode);",1,1,0,1,2,2,0,1,2,7,60,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,522,            if (iMode == 'w') {,1,1,0,1,3,1,0,0,1,6,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,523,                offset = standardOffset + saveMillis;,3,1,0,0,0,0,0,0,1,3,37,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,524,            } else if (iMode == 's') {,1,1,0,1,4,2,0,0,1,6,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,525,                offset = standardOffset;,2,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,527,                offset = 0;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,530,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,531,"            long millis = chrono.year().set(0, year);",1,0,0,1,4,1,4,0,0,5,41,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,532,"            millis = chrono.monthOfYear().set(millis, iMonthOfYear);",1,0,0,1,4,0,5,0,1,5,56,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,533,"            millis = chrono.millisOfDay().set(millis, iMillisOfDay);",1,0,0,1,4,0,5,0,1,5,56,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,534,"            millis = setDayOfMonth(chrono, millis);",1,0,0,0,2,0,3,0,2,4,39,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,536,            if (iDayOfWeek != 0) {,1,1,0,1,3,1,0,0,0,5,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,537,"                millis = setDayOfWeek(chrono, millis);",1,0,0,0,2,0,3,0,2,4,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,541,            return millis - offset;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,549,            if (iMode == 'w') {,1,1,0,1,3,1,0,0,1,6,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,550,                offset = standardOffset + saveMillis;,3,1,0,0,0,0,0,0,1,3,37,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,551,            } else if (iMode == 's') {,1,1,0,1,4,2,0,0,1,6,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,552,                offset = standardOffset;,2,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,554,                offset = 0;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,558,            instant += offset;,2,0,0,0,0,0,0,0,1,2,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,560,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,561,"            long next = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,1,4,1,5,0,0,5,60,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,563,"            next = chrono.millisOfDay().set(next, 0);",1,0,0,1,4,0,4,0,1,5,41,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,564,"            next = chrono.millisOfDay().add(next, iMillisOfDay);",1,0,0,1,4,0,5,0,1,5,52,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,565,"            next = setDayOfMonthNext(chrono, next);",1,0,0,0,2,0,3,0,2,4,39,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,567,            if (iDayOfWeek == 0) {,1,1,0,1,3,1,0,0,0,5,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,568,                if (next <= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,569,"                    next = chrono.year().add(next, 1);",1,0,0,1,4,0,4,0,1,5,34,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,570,"                    next = setDayOfMonthNext(chrono, next);",1,0,0,0,2,0,3,0,2,4,39,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,573,"                next = setDayOfWeek(chrono, next);",1,0,0,0,2,0,3,0,2,4,34,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,574,                if (next <= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,575,"                    next = chrono.year().add(next, 1);",1,0,0,1,4,0,4,0,1,5,34,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,576,"                    next = chrono.monthOfYear().set(next, iMonthOfYear);",1,0,0,1,4,0,5,0,1,5,52,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,577,"                    next = setDayOfMonthNext(chrono, next);",1,0,0,0,2,0,3,0,2,4,39,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,578,"                    next = setDayOfWeek(chrono, next);",1,0,0,0,2,0,3,0,2,4,34,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,583,            return next - offset;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,591,            if (iMode == 'w') {,1,1,0,1,3,1,0,0,1,6,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,592,                offset = standardOffset + saveMillis;,3,1,0,0,0,0,0,0,1,3,37,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,593,            } else if (iMode == 's') {,1,1,0,1,4,2,0,0,1,6,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,594,                offset = standardOffset;,2,0,0,0,0,0,0,0,1,2,24,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,596,                offset = 0;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,600,            instant += offset;,2,0,0,0,0,0,0,0,1,2,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,602,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,603,"            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,1,4,1,5,0,0,5,60,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,605,"            prev = chrono.millisOfDay().set(prev, 0);",1,0,0,1,4,0,4,0,1,5,41,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,606,"            prev = chrono.millisOfDay().add(prev, iMillisOfDay);",1,0,0,1,4,0,5,0,1,5,52,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,607,"            prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,0,2,0,3,0,2,4,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,609,            if (iDayOfWeek == 0) {,1,1,0,1,3,1,0,0,0,5,22,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,610,                if (prev >= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,611,"                    prev = chrono.year().add(prev, -1);",1,0,0,1,4,0,4,0,2,5,35,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,612,"                    prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,0,2,0,3,0,2,4,43,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,615,"                prev = setDayOfWeek(chrono, prev);",1,0,0,0,2,0,3,0,2,4,34,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,616,                if (prev >= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,617,"                    prev = chrono.year().add(prev, -1);",1,0,0,1,4,0,4,0,2,5,35,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,618,"                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);",1,0,0,1,4,0,5,0,1,5,52,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,619,"                    prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,0,2,0,3,0,2,4,43,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,620,"                    prev = setDayOfWeek(chrono, prev);",1,0,0,0,2,0,3,0,2,4,34,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,625,            return prev - offset;,2,1,0,0,0,1,0,0,0,3,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,629,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,630,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,632,            if (obj instanceof OfYear) {,1,0,0,1,3,2,0,1,0,5,28,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,633,                OfYear other = (OfYear)obj;,2,0,0,1,2,0,0,2,0,4,27,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,634,                return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,642,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,659,            out.writeByte(iMode);,0,0,0,1,2,0,3,0,0,3,21,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,660,            out.writeByte(iMonthOfYear);,0,0,0,1,2,0,3,0,0,3,28,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,661,            out.writeByte(iDayOfMonth);,0,0,0,1,2,0,3,0,0,3,27,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,662,            out.writeByte(iDayOfWeek);,0,0,0,1,2,0,3,0,0,3,26,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,663,            out.writeBoolean(iAdvance);,0,0,0,1,2,0,3,0,0,3,27,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,664,"            writeMillis(out, iMillisOfDay);",0,0,0,0,2,0,3,0,1,3,31,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,665,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,672,"                next = setDayOfMonth(chrono, next);",1,0,0,0,2,0,3,0,2,4,35,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,682,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,673,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,674,                if (iMonthOfYear == 2 && iDayOfMonth == 29) {,2,3,0,1,3,1,0,0,0,5,45,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,675,                    while (chrono.year().isLeap(next) == false) {,0,1,0,2,7,1,4,0,1,6,45,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,676,"                        next = chrono.year().add(next, 1);",1,0,0,1,4,0,4,0,1,5,34,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,678,"                    next = setDayOfMonth(chrono, next);",1,0,0,0,2,0,3,0,2,4,35,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,680,                    throw e;,1,0,0,0,0,1,0,0,0,2,8,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,683,            return next;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,691,"                prev = setDayOfMonth(chrono, prev);",1,0,0,0,2,0,3,0,2,4,35,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,701,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,692,            } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,693,                if (iMonthOfYear == 2 && iDayOfMonth == 29) {,2,3,0,1,3,1,0,0,0,5,45,8,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,694,                    while (chrono.year().isLeap(prev) == false) {,0,1,0,2,7,1,4,0,1,6,45,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,695,"                        prev = chrono.year().add(prev, -1);",1,0,0,1,4,0,4,0,2,5,35,12,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,697,"                    prev = setDayOfMonth(chrono, prev);",1,0,0,0,2,0,3,0,2,4,35,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,699,                    throw e;,1,0,0,0,0,1,0,0,0,2,8,10,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,702,            return prev;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,706,            if (iDayOfMonth >= 0) {,1,1,0,1,3,1,0,0,0,5,23,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,707,"                instant = chrono.dayOfMonth().set(instant, iDayOfMonth);",1,0,0,1,4,0,5,0,1,5,56,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,709,"                instant = chrono.dayOfMonth().set(instant, 1);",1,0,0,1,4,0,4,0,1,5,46,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,710,"                instant = chrono.monthOfYear().add(instant, 1);",1,0,0,1,4,0,4,0,1,5,47,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,711,"                instant = chrono.dayOfMonth().add(instant, iDayOfMonth);",1,0,0,1,4,0,5,0,1,5,56,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,713,            return instant;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,717,            int dayOfWeek = chrono.dayOfWeek().get(instant);,1,0,0,1,4,1,4,0,0,5,48,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,718,            int daysToAdd = iDayOfWeek - dayOfWeek;,3,1,0,0,0,1,0,0,0,3,39,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,719,            if (daysToAdd != 0) {,1,1,0,1,3,1,0,0,0,5,21,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,720,                if (iAdvance) {,1,0,0,1,3,1,0,0,0,4,15,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,721,                    if (daysToAdd < 0) {,1,1,0,1,3,1,0,0,0,5,20,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,722,                        daysToAdd += 7;,1,0,0,0,0,0,0,0,1,2,15,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,725,                    if (daysToAdd > 0) {,1,1,0,1,3,1,0,0,0,5,20,9,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,726,                        daysToAdd -= 7;,1,0,0,0,0,0,0,0,1,2,15,11,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,729,"                instant = chrono.dayOfWeek().add(instant, daysToAdd);",1,0,0,1,4,0,5,0,1,5,53,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,731,            return instant;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,43,"        String[] nameSet = getNameSet(locale, id, nameKey);",1,0,0,0,4,0,4,1,1,5,51,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,44,        return nameSet == null ? null : nameSet[0];,1,1,1,0,2,1,0,0,0,5,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,48,"        String[] nameSet = getNameSet(locale, id, nameKey);",1,0,0,0,4,0,4,1,1,5,51,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,49,        return nameSet == null ? null : nameSet[1];,1,1,1,0,2,1,0,0,0,5,43,5,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,53,        if (locale == null || id == null || nameKey == null) {,3,5,0,1,3,1,0,0,0,5,54,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,54,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,57,"        Map<String, Map<String, Object>> byIdCache = iByLocaleCache.get(locale);",1,0,0,1,2,0,3,5,0,5,72,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,58,        if (byIdCache == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,59,"            iByLocaleCache.put(locale, byIdCache = createCache());",1,0,0,1,4,0,4,0,2,5,54,7,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,62,"        Map<String, Object> byNameKeyCache = byIdCache.get(id);",1,0,0,1,2,0,3,3,0,5,55,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,63,        if (byNameKeyCache == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,64,"            byIdCache.put(id, byNameKeyCache = createCache());",1,0,0,1,4,0,4,0,2,5,50,7,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,65,            String[][] zoneStrings = DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();,1,0,0,1,8,0,4,1,0,5,85,6,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,66,            for (int i=0; i<zoneStrings.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,6,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,67,                String[] set = zoneStrings[i];,1,0,1,0,4,0,0,1,0,4,30,8,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,68,                if (set != null && set.length == 5 && id.equals(set[0])) {,3,4,1,2,7,1,2,0,0,7,58,8,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,69,"                    byNameKeyCache.put(set[2], new String[] {set[2], set[1]});",0,0,1,0,12,1,2,1,0,5,58,11,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,73,                    if (set[2].equals(set[4])) {,0,0,1,2,9,1,1,0,0,5,28,11,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,74,"                        byNameKeyCache.put(set[4] + ""-Summer"", new String[] {set[4], set[3]});",0,1,1,0,12,1,2,1,1,7,70,13,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,76,"                        byNameKeyCache.put(set[4], new String[] {set[4], set[3]});",0,0,1,0,12,1,2,1,0,5,58,13,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,78,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,23,83,        return (String[])byNameKeyCache.get(nameKey);,0,0,0,1,6,1,3,1,0,5,45,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,754,            return iOfYear;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,761,"            return iOfYear.next(instant, standardOffset, saveMillis);",0,0,0,0,2,1,5,0,0,3,57,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,768,"            return iOfYear.previous(instant, standardOffset, saveMillis);",0,0,0,0,2,1,5,0,0,3,61,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,772,            return iNameKey;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,776,            return iSaveMillis;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,780,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,781,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,783,            if (obj instanceof Recurrence) {,1,0,0,1,3,2,0,1,0,5,32,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,784,                Recurrence other = (Recurrence)obj;,2,0,0,1,2,0,0,2,0,4,35,7,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,785,                return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,790,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,794,            iOfYear.writeTo(out);,0,0,0,1,2,0,3,0,0,3,21,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,795,            out.writeUTF(iNameKey);,0,0,0,1,2,0,3,0,0,3,23,6,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,796,"            writeMillis(out, iSaveMillis);",0,0,0,0,2,0,3,0,1,3,30,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,797,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,800,"            return new Recurrence(iOfYear, nameKey, iSaveMillis);",3,0,0,0,2,2,0,1,1,5,53,5,0.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,23,804,            return rename((iNameKey + appendNameKey).intern());,2,1,0,2,6,1,2,0,1,7,51,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,216,        Stub(DateTimeZone zone) {,2,0,0,1,3,0,0,1,0,4,25,3,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,217,            iZone = zone;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,218,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,221,            return ISOChronology.getInstance(iZone);,0,0,0,1,2,1,3,0,0,4,40,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,225,            out.writeObject(iZone);,0,0,0,1,2,0,3,0,0,3,23,6,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,226,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,231,            iZone = (DateTimeZone)in.readObject();,1,0,0,1,4,0,2,1,1,6,38,5,0.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,23,232,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,436,        Fields() {,1,0,0,1,3,0,0,0,0,3,10,3,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,437,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,445,                if (isSupported(f = chrono.millis())) {,1,0,0,3,7,1,3,0,2,6,39,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,446,                    millis = f;,2,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,448,                if (isSupported(f = chrono.seconds())) {,1,0,0,3,7,1,3,0,2,6,40,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,449,                    seconds = f;,2,0,0,0,0,0,0,0,1,2,12,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,451,                if (isSupported(f = chrono.minutes())) {,1,0,0,3,7,1,3,0,2,6,40,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,452,                    minutes = f;,2,0,0,0,0,0,0,0,1,2,12,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,454,                if (isSupported(f = chrono.hours())) {,1,0,0,3,7,1,3,0,2,6,38,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,455,                    hours = f;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,457,                if (isSupported(f = chrono.halfdays())) {,1,0,0,3,7,1,3,0,2,6,41,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,458,                    halfdays = f;,2,0,0,0,0,0,0,0,1,2,13,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,460,                if (isSupported(f = chrono.days())) {,1,0,0,3,7,1,3,0,2,6,37,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,461,                    days = f;,2,0,0,0,0,0,0,0,1,2,9,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,463,                if (isSupported(f = chrono.weeks())) {,1,0,0,3,7,1,3,0,2,6,38,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,464,                    weeks = f;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,466,                if (isSupported(f = chrono.weekyears())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,467,                    weekyears = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,469,                if (isSupported(f = chrono.months())) {,1,0,0,3,7,1,3,0,2,6,39,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,470,                    months = f;,2,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,472,                if (isSupported(f = chrono.years())) {,1,0,0,3,7,1,3,0,2,6,38,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,473,                    years = f;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,475,                if (isSupported(f = chrono.centuries())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,476,                    centuries = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,478,                if (isSupported(f = chrono.eras())) {,1,0,0,3,7,1,3,0,2,6,37,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,479,                    eras = f;,2,0,0,0,0,0,0,0,1,2,9,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,485,                if (isSupported(f = chrono.millisOfSecond())) {,1,0,0,3,7,1,3,0,2,6,47,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,486,                    millisOfSecond = f;,2,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,488,                if (isSupported(f = chrono.millisOfDay())) {,1,0,0,3,7,1,3,0,2,6,44,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,489,                    millisOfDay = f;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,491,                if (isSupported(f = chrono.secondOfMinute())) {,1,0,0,3,7,1,3,0,2,6,47,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,492,                    secondOfMinute = f;,2,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,494,                if (isSupported(f = chrono.secondOfDay())) {,1,0,0,3,7,1,3,0,2,6,44,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,495,                    secondOfDay = f;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,497,                if (isSupported(f = chrono.minuteOfHour())) {,1,0,0,3,7,1,3,0,2,6,45,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,498,                    minuteOfHour = f;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,500,                if (isSupported(f = chrono.minuteOfDay())) {,1,0,0,3,7,1,3,0,2,6,44,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,501,                    minuteOfDay = f;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,503,                if (isSupported(f = chrono.hourOfDay())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,504,                    hourOfDay = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,506,                if (isSupported(f = chrono.clockhourOfDay())) {,1,0,0,3,7,1,3,0,2,6,47,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,507,                    clockhourOfDay = f;,2,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,509,                if (isSupported(f = chrono.hourOfHalfday())) {,1,0,0,3,7,1,3,0,2,6,46,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,510,                    hourOfHalfday = f;,2,0,0,0,0,0,0,0,1,2,18,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,512,                if (isSupported(f = chrono.clockhourOfHalfday())) {,1,0,0,3,7,1,3,0,2,6,51,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,513,                    clockhourOfHalfday = f;,2,0,0,0,0,0,0,0,1,2,23,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,515,                if (isSupported(f = chrono.halfdayOfDay())) {,1,0,0,3,7,1,3,0,2,6,45,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,516,                    halfdayOfDay = f;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,518,                if (isSupported(f = chrono.dayOfWeek())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,519,                    dayOfWeek = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,521,                if (isSupported(f = chrono.dayOfMonth())) {,1,0,0,3,7,1,3,0,2,6,43,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,522,                    dayOfMonth = f;,2,0,0,0,0,0,0,0,1,2,15,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,524,                if (isSupported(f = chrono.dayOfYear())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,525,                    dayOfYear = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,527,                if (isSupported(f = chrono.weekOfWeekyear())) {,1,0,0,3,7,1,3,0,2,6,47,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,528,                    weekOfWeekyear = f;,2,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,530,                if (isSupported(f = chrono.weekyear())) {,1,0,0,3,7,1,3,0,2,6,41,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,531,                    weekyear = f;,2,0,0,0,0,0,0,0,1,2,13,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,533,                if (isSupported(f = chrono.weekyearOfCentury())) {,1,0,0,3,7,1,3,0,2,6,50,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,534,                    weekyearOfCentury = f;,2,0,0,0,0,0,0,0,1,2,22,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,536,                if (isSupported(f = chrono.monthOfYear())) {,1,0,0,3,7,1,3,0,2,6,44,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,537,                    monthOfYear = f;,2,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,539,                if (isSupported(f = chrono.year())) {,1,0,0,3,7,1,3,0,2,6,37,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,540,                    year = f;,2,0,0,0,0,0,0,0,1,2,9,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,542,                if (isSupported(f = chrono.yearOfEra())) {,1,0,0,3,7,1,3,0,2,6,42,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,543,                    yearOfEra = f;,2,0,0,0,0,0,0,0,1,2,14,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,545,                if (isSupported(f = chrono.yearOfCentury())) {,1,0,0,3,7,1,3,0,2,6,46,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,546,                    yearOfCentury = f;,2,0,0,0,0,0,0,0,1,2,18,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,548,                if (isSupported(f = chrono.centuryOfEra())) {,1,0,0,3,7,1,3,0,2,6,45,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,549,                    centuryOfEra = f;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,551,                if (isSupported(f = chrono.era())) {,1,0,0,3,7,1,3,0,2,6,36,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,552,                    era = f;,2,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,555,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,558,            return field == null ? false : field.isSupported();,1,1,0,1,2,1,2,0,1,7,51,6,0.0,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,23,562,            return field == null ? false : field.isSupported();,1,1,0,1,2,1,2,0,1,7,51,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1260,        Stub(String id) {,2,0,0,1,3,0,0,1,0,4,17,3,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1261,            iID = id;,2,0,0,0,0,0,0,0,1,2,9,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1262,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1265,            out.writeUTF(iID);,0,0,0,1,2,0,3,0,0,3,18,6,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1266,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1269,            iID = in.readUTF();,1,0,0,1,2,0,2,0,1,5,19,5,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1270,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,1273,            return forID(iID);,0,0,0,1,2,1,2,0,1,5,18,5,0.0,0,0
