dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,407,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,410,        Transition last = transitions.get(size - 1);,4,1,0,1,2,0,4,2,0,11,44,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,411,        if (!tr.isTransitionFrom(last)) {,0,0,0,2,5,0,6,0,0,7,33,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,417,        int offsetForLast = 0;,0,0,0,0,0,0,0,0,0,0,22,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,418,        if (size >= 2) {,2,1,0,1,3,0,0,0,0,3,16,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,419,            offsetForLast = transitions.get(size - 2).getWallOffset();,0,0,0,2,4,0,0,0,0,6,58,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,421,        int offsetForNew = last.getWallOffset();,2,0,0,1,2,0,4,0,0,6,40,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,423,        long lastLocal = last.getMillis() + offsetForLast;,4,1,0,1,2,0,4,0,0,9,50,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,424,        long newLocal = tr.getMillis() + offsetForNew;,4,1,0,1,2,0,4,0,0,9,46,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,426,        if (newLocal != lastLocal) {,0,0,0,1,3,0,0,0,0,4,28,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,427,            transitions.add(tr);,0,0,0,1,2,0,6,0,0,6,20,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,428,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoCompiler,11,78,        return cVerbose.get();,4,1,0,1,2,1,4,0,0,10,22,3,1.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,11,86,        return getInstance(DateTimeZone.getDefault());,2,1,0,2,4,1,0,0,0,3,46,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,816,"        Rule(Recurrence recurrence, int fromYear, int toYear) {",10,0,0,1,3,0,4,6,0,20,55,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,817,            iRecurrence = recurrence;,0,0,0,0,0,0,0,0,0,0,25,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,818,            iFromYear = fromYear;,8,0,0,0,0,0,0,0,0,10,21,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,819,            iToYear = toYear;,2,0,1,0,0,0,0,0,0,6,17,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,820,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,827,            return iToYear;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,835,            return iRecurrence.getNameKey();,0,0,0,1,2,1,4,0,0,4,32,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,839,            return iRecurrence.getSaveMillis();,2,1,0,1,2,1,4,0,0,7,35,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,843,            Chronology chrono = ISOChronology.getInstanceUTC();,2,0,0,1,2,0,12,2,0,16,51,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,845,            final int wallOffset = standardOffset + saveMillis;,6,1,0,0,0,1,0,0,0,8,51,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,846,            long testInstant = instant;,4,0,0,0,0,0,0,0,0,4,27,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,849,            if (instant == Long.MIN_VALUE) {,6,1,0,1,3,0,0,0,0,7,32,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,850,                year = Integer.MIN_VALUE;,8,1,0,0,0,0,4,0,0,15,25,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,852,                year = chrono.year().get(instant + wallOffset);,8,1,0,2,4,0,14,0,0,25,47,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,855,            if (year < iFromYear) {,0,0,0,1,3,0,0,0,0,4,23,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,857,"                testInstant = chrono.year().set(0, iFromYear) - wallOffset;",10,2,0,2,4,0,12,0,0,25,59,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,860,                testInstant -= 1;,2,0,0,0,0,0,0,0,0,3,17,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,863,"            long next = iRecurrence.next(testInstant, standardOffset, saveMillis);",0,0,0,1,2,0,0,0,0,3,70,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,865,            if (next > instant) {,4,1,0,1,3,0,0,0,0,5,21,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,866,                year = chrono.year().get(next + wallOffset);,8,1,0,2,4,0,6,0,0,18,44,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,867,                if (year > iToYear) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,873,            return next;,12,4,0,0,0,1,0,4,0,20,12,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,549,            if (iMode == 'w') {,4,1,0,1,3,0,4,0,0,9,19,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,550,                offset = standardOffset + saveMillis;,6,1,0,0,0,0,0,0,0,8,37,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,558,            instant += offset;,4,0,0,0,0,0,8,0,0,13,18,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,560,            Chronology chrono = ISOChronology.getInstanceUTC();,8,1,0,1,2,0,4,2,0,15,51,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,561,"            long next = chrono.monthOfYear().set(instant, iMonthOfYear);",0,0,0,2,4,0,0,0,0,6,60,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,563,"            next = chrono.millisOfDay().set(next, 0);",2,0,0,2,4,0,8,0,0,11,41,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,564,"            next = chrono.millisOfDay().add(next, iMillisOfDay);",2,0,0,2,4,0,10,0,0,13,52,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,565,"            next = setDayOfMonthNext(chrono, next);",2,0,0,1,2,0,6,0,0,9,39,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,567,            if (iDayOfWeek == 0) {,4,1,0,1,3,0,0,2,0,8,22,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,573,"                next = setDayOfWeek(chrono, next);",0,0,0,1,2,0,0,0,0,3,34,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,574,                if (next <= instant) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,575,"                    next = chrono.year().add(next, 1);",2,0,0,2,4,0,8,0,0,11,34,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,576,"                    next = chrono.monthOfYear().set(next, iMonthOfYear);",0,0,0,2,4,0,0,0,0,6,52,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,577,"                    next = setDayOfMonthNext(chrono, next);",2,0,0,1,2,0,6,0,0,9,39,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,578,"                    next = setDayOfWeek(chrono, next);",2,0,0,1,2,0,6,0,0,9,34,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,583,            return next - offset;,4,1,0,0,0,1,0,0,0,5,21,5,1.0,0,0
