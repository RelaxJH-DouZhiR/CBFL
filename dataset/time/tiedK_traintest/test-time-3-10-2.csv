dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/chrono/BaseChronology,11,265,        return values;,1,0,0,0,0,1,0,0,0,2,14,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,276,        int size = period.size();,1,0,0,1,2,1,2,0,0,5,25,5,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,277,        int[] values = new int[size];,1,0,1,0,4,3,0,0,0,4,29,5,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,278,        if (duration != 0) {,1,1,0,1,3,1,0,0,0,5,20,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,289,        return values;,1,0,0,0,0,1,0,0,0,2,14,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,225,    public DateTimeZoneBuilder() {,1,0,0,1,3,1,0,0,1,5,30,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,226,        iRuleSets = new ArrayList<RuleSet>(10);,1,0,0,1,2,1,0,2,2,6,39,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,227,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,252,        if (iRuleSets.size() > 0) {,0,1,0,2,5,1,2,0,0,5,27,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,258,        iRuleSets.add(new RuleSet());,0,0,0,2,4,1,2,1,1,6,29,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,259,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,268,        getLastRuleSet().setStandardOffset(standardOffset);,0,0,0,1,4,0,3,0,1,4,51,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,269,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,309,        if (fromYear <= toYear) {,2,1,0,1,3,1,0,0,0,5,25,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,310,            OfYear ofYear = new OfYear,1,0,0,0,0,1,0,2,1,4,26,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,312,"            Recurrence recurrence = new Recurrence(ofYear, nameKey, saveMillis);",4,0,0,0,2,1,0,2,1,5,68,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,313,"            Rule rule = new Rule(recurrence, fromYear, toYear);",4,0,0,0,2,1,0,2,1,5,51,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,314,            getLastRuleSet().addRule(rule);,0,0,0,1,4,0,3,0,1,4,31,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,316,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,320,        if (iRuleSets.size() == 0) {,0,1,0,2,5,1,2,0,0,5,28,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,323,        return iRuleSets.get(iRuleSets.size() - 1);,0,1,0,2,4,1,4,0,0,5,43,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,333,        if (id == null) {,1,1,0,1,3,1,0,0,0,5,17,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,339,        ArrayList<Transition> transitions = new ArrayList<Transition>();,1,0,0,1,2,1,0,4,1,6,64,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,343,        DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,345,        long millis = Long.MIN_VALUE;,3,0,0,0,0,1,0,0,0,2,29,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,346,        int saveMillis = 0;,1,0,0,0,0,1,0,0,0,2,19,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,348,        int ruleSetCount = iRuleSets.size();,1,0,0,1,2,1,2,0,0,5,36,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,349,        for (int i=0; i<ruleSetCount; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,350,            RuleSet rs = iRuleSets.get(i);,1,0,0,1,2,0,3,1,0,5,30,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,351,            Transition next = rs.firstTransition(millis);,1,0,0,1,2,0,3,1,0,5,45,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,352,            if (next == null) {,1,1,0,1,3,1,0,0,0,5,19,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,355,"            addTransition(transitions, next);",0,0,0,0,2,0,3,0,1,3,33,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,356,            millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,357,            saveMillis = next.getSaveMillis();,1,0,0,1,2,0,2,0,1,5,34,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,360,            rs = new RuleSet(rs);,2,0,0,1,2,1,0,1,2,6,21,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,362,"            while ((next = rs.nextTransition(millis, saveMillis)) != null) {",1,1,0,0,7,1,4,0,1,6,64,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,363,"                if (addTransition(transitions, next)) {",0,0,0,0,5,1,3,0,1,4,39,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,364,                    if (tailZone != null) {,1,1,0,1,3,1,0,0,0,5,23,10,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,366,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,369,                millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,370,                saveMillis = next.getSaveMillis();,1,0,0,1,2,0,2,0,1,5,34,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,371,                if (tailZone == null && i == ruleSetCount - 1) {,3,4,0,1,3,1,0,0,0,5,48,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,372,                    tailZone = rs.buildTailZone(id);,1,0,0,1,2,0,3,0,1,5,32,10,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,379,            millis = rs.getUpperLimit(saveMillis);,1,0,0,1,2,0,3,0,1,5,38,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,383,        if (transitions.size() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,390,        if (transitions.size() == 1 && tailZone == null) {,1,3,0,2,5,1,2,0,0,6,50,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,396,"        PrecalculatedZone zone = PrecalculatedZone.create(id, outputID, transitions, tailZone);",1,0,0,0,2,0,6,1,0,4,87,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,397,        if (zone.isCachable()) {,0,0,0,2,5,1,2,0,0,4,24,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,398,            return CachedDateTimeZone.forZone(zone);,0,0,0,1,2,1,3,0,0,4,40,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,404,        int size = transitions.size();,1,0,0,1,2,1,2,0,0,5,30,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,405,        if (size == 0) {,1,1,0,1,3,1,0,0,0,5,16,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,406,            transitions.add(tr);,0,0,0,1,2,0,3,0,0,3,20,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,407,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,410,        Transition last = transitions.get(size - 1);,2,1,0,1,2,0,2,1,0,6,44,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,411,        if (!tr.isTransitionFrom(last)) {,0,0,0,2,5,1,3,0,1,5,33,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,417,        int offsetForLast = 0;,1,0,0,0,0,1,0,0,0,2,22,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,418,        if (size >= 2) {,1,1,0,1,3,1,0,0,0,5,16,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,419,            offsetForLast = transitions.get(size - 2).getWallOffset();,2,1,0,1,4,0,3,0,1,6,58,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,421,        int offsetForNew = last.getWallOffset();,1,0,0,1,2,1,2,0,0,5,40,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,423,        long lastLocal = last.getMillis() + offsetForLast;,2,1,0,1,2,1,2,0,0,6,50,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,424,        long newLocal = tr.getMillis() + offsetForNew;,2,1,0,1,2,1,2,0,0,6,46,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,426,        if (newLocal != lastLocal) {,2,1,0,1,3,1,0,0,0,5,28,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,427,            transitions.add(tr);,0,0,0,1,2,0,3,0,0,3,20,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,428,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,time,org/joda/time/tz/ZoneInfoCompiler,11,78,        return cVerbose.get();,0,0,0,1,2,1,2,0,0,4,22,5,1.0,0,0
defect4j,time,org/joda/time/chrono/ISOChronology,11,86,        return getInstance(DateTimeZone.getDefault());,0,0,0,2,4,1,3,0,1,5,46,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,816,"        Rule(Recurrence recurrence, int fromYear, int toYear) {",4,0,0,0,3,2,0,1,0,4,55,3,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,817,            iRecurrence = recurrence;,2,0,0,0,0,0,0,0,1,2,25,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,818,            iFromYear = fromYear;,2,0,0,0,0,0,0,0,1,2,21,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,819,            iToYear = toYear;,2,0,0,0,0,0,0,0,1,2,17,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,820,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,827,            return iToYear;,1,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,835,            return iRecurrence.getNameKey();,0,0,0,1,2,1,2,0,0,4,32,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,839,            return iRecurrence.getSaveMillis();,0,0,0,1,2,1,2,0,0,4,35,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,843,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,1.0,0,0
