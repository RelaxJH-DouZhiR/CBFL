dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1043,                            if (rule.getSaveMillis() == 0) {,0,1,0,2,5,1,2,0,0,5,32,13,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1044,"                                first = new Transition(firstMillis, rule, iStandardOffset);",4,0,0,0,2,1,0,1,2,5,59,15,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1045,                                break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1047,                        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1049,                    if (first == null) {,1,1,0,1,3,1,0,0,0,5,20,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1066,            iRules = copy;,2,0,0,0,0,0,0,0,1,2,14,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1067,            return first;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1082,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1085,            Rule nextRule = null;,1,0,0,0,0,0,0,1,0,2,21,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1086,            long nextMillis = Long.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,33,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1088,            Iterator<Rule> it = iRules.iterator();,1,0,0,1,2,0,2,2,0,5,38,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1089,            while (it.hasNext()) {,0,0,0,2,5,1,2,0,0,4,22,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1090,                Rule rule = it.next();,1,0,0,1,2,0,2,1,0,5,22,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1091,"                long next = rule.next(instant, iStandardOffset, saveMillis);",1,0,0,0,2,1,5,0,0,4,60,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1092,                if (next <= instant) {,2,1,0,1,3,1,0,0,0,5,22,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1098,                if (next <= nextMillis) {,2,1,0,1,3,1,0,0,0,5,25,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1100,                    nextRule = rule;,2,0,0,0,0,0,0,0,1,2,16,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1101,                    nextMillis = next;,2,0,0,0,0,0,0,0,1,2,18,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1103,            },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1105,            if (nextRule == null) {,1,1,0,1,3,1,0,0,0,5,23,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1110,            if (chrono.year().get(nextMillis) >= YEAR_LIMIT) {,1,1,0,2,7,1,4,0,0,6,50,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1115,            if (iUpperYear < Integer.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,37,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1124,"            return new Transition(nextMillis, nextRule, iStandardOffset);",3,0,0,0,2,2,0,1,1,5,61,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1131,            if (iUpperYear == Integer.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,38,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1132,                return Long.MAX_VALUE;,2,0,0,0,0,1,0,0,0,2,22,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1141,            if (iRules.size() == 2) {,0,1,0,2,5,1,2,0,0,5,25,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1142,                Rule startRule = iRules.get(0);,1,0,0,1,2,0,2,1,0,5,31,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1143,                Rule endRule = iRules.get(1);,1,0,0,1,2,0,2,1,0,5,29,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1144,                if (startRule.getToYear() == Integer.MAX_VALUE &&,2,2,0,1,3,1,2,0,0,6,49,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1154,"                    return new DSTZone(id, iStandardOffset,",2,0,0,0,1,2,0,1,1,5,39,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,890,"        Transition(long millis, Rule rule, int standardOffset) {",4,0,0,0,3,2,0,1,0,4,56,3,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,891,            iMillis = millis;,2,0,0,0,0,0,0,0,1,2,17,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,892,            iNameKey = rule.getNameKey();,1,0,0,1,2,0,2,0,1,5,29,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,893,            iWallOffset = standardOffset + rule.getSaveMillis();,2,1,0,1,2,0,2,0,1,6,52,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,894,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,895,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,906,            return iMillis;,1,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,910,            return iNameKey;,1,0,0,0,0,1,0,0,0,2,16,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,914,            return iWallOffset;,1,0,0,0,0,1,0,0,0,2,19,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,918,            return iStandardOffset;,1,0,0,0,0,1,0,0,0,2,23,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,922,            return iWallOffset - iStandardOffset;,2,1,0,0,0,1,0,0,0,3,37,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,929,            if (other == null) {,1,1,0,1,3,1,0,0,0,5,20,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,930,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,932,            return iMillis > other.iMillis &&,3,2,0,0,0,1,0,0,0,3,33,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1389,            int size = transitions.size();,1,0,0,1,2,1,2,0,0,5,30,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1390,            if (size == 0) {,1,1,0,1,3,1,0,0,0,5,16,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1394,            long[] trans = new long[size];,1,0,1,0,4,3,0,0,0,4,30,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1395,            int[] wallOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,34,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1396,            int[] standardOffsets = new int[size];,1,0,1,0,4,3,0,0,0,4,38,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1397,            String[] nameKeys = new String[size];,1,0,1,0,4,1,0,2,0,5,37,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1399,            Transition last = null;,1,0,0,0,0,0,0,1,0,2,23,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1400,            for (int i=0; i<size; i++) {,4,1,0,1,3,2,0,0,1,6,28,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1401,                Transition tr = transitions.get(i);,1,0,0,1,2,0,3,1,0,5,35,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1403,                if (!tr.isTransitionFrom(last)) {,0,0,0,2,5,1,3,0,1,5,33,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1407,                trans[i] = tr.getMillis();,0,0,1,1,4,0,2,0,1,5,26,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1408,                wallOffsets[i] = tr.getWallOffset();,0,0,1,1,4,0,2,0,1,5,36,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1409,                standardOffsets[i] = tr.getStandardOffset();,0,0,1,1,4,0,2,0,1,5,44,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1410,                nameKeys[i] = tr.getNameKey();,0,0,1,1,4,0,2,0,1,5,30,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1412,                last = tr;,2,0,0,0,0,0,0,0,1,2,10,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1417,            String[] zoneNameData = new String[5];,1,0,0,0,4,1,0,2,0,4,38,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1418,            String[][] zoneStrings = new DateFormatSymbols(Locale.ENGLISH).getZoneStrings();,3,0,0,1,8,1,1,2,1,7,80,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1419,            for (int j = 0; j < zoneStrings.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1420,                String[] set = zoneStrings[j];,1,0,1,0,4,0,0,1,0,4,30,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1421,                if (set != null && set.length == 5 && id.equals(set[0])) {,3,4,1,2,7,1,2,0,0,7,58,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1426,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,5,51,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1428,            for (int i = 0; i < nameKeys.length - 1; i++) {,5,2,0,1,3,2,0,0,1,6,47,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1429,                String curNameKey = nameKeys[i];,1,0,1,0,2,0,0,1,0,4,32,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1430,                String nextNameKey = nameKeys[i + 1];,2,1,1,0,2,0,0,1,0,5,37,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1431,                long curOffset = wallOffsets[i];,1,0,1,0,2,1,0,0,0,4,32,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1432,                long nextOffset = wallOffsets[i + 1];,2,1,1,0,2,1,0,0,0,5,37,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1433,                long curStdOffset = standardOffsets[i];,1,0,1,0,2,1,0,0,0,4,39,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1434,                long nextStdOffset = standardOffsets[i + 1];,2,1,1,0,2,1,0,0,0,5,44,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1435,"                Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay(), chrono);",3,1,1,1,8,1,2,2,1,9,81,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1436,                if (curOffset != nextOffset &&,2,8,0,0,1,1,0,0,0,4,30,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1457,            if (tailZone != null) {,1,1,0,1,3,1,0,0,0,5,23,5,1.0,0,0
