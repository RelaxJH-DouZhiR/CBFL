dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/field/UnsupportedDurationField,1,227,        if (durationField.isSupported()) {,0,0,0,2,5,0,4,0,0,4,34,5,0.16667,1,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,1,228,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.16667,1,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,1,32,public final class UnsupportedDurationField extends DurationField implements Serializable {,2,0,0,0,1,2,0,4,0,8,91,1,0.16667,0,0
defect4j,time,org/joda/time/DurationFieldType,1,286,                    return chronology.eras();,0,0,0,1,2,1,4,0,0,4,25,7,0.11111,0,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,1,136,        return DateTimeConstants.BCE;,4,0,0,0,0,1,0,0,0,4,29,5,0.1,0,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,1,140,        return DateTimeConstants.CE;,4,0,0,0,0,1,0,0,0,4,28,5,0.1,0,0
defect4j,time,org/joda/time/Partial,2,224,"                            throw new IllegalArgumentException(""Types array must not contain duplicate: "" +",0,1,0,0,1,0,0,2,0,4,79,16,1.0,0,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,2,227,        return 0;,4,1,0,0,0,1,2,2,0,9,9,3,0.2,1,1
defect4j,time,org/joda/time/field/UnsupportedDurationField,2,32,public final class UnsupportedDurationField extends DurationField implements Serializable {,6,0,0,0,1,2,0,4,0,13,91,1,0.2,0,0
defect4j,time,org/joda/time/Partial,2,223,                        if (loopType.getRangeDurationType() == null) {,0,1,0,2,5,0,4,0,0,5,46,13,0.2,0,0
defect4j,time,org/joda/time/DurationFieldType,2,286,                    return chronology.eras();,0,0,0,1,2,1,0,0,0,4,25,4,0.125,0,0
defect4j,time,org/joda/time/MutableDateTime,3,785,"            setMillis(getChronology().hours().add(getMillis(), hours));",4,1,0,5,10,0,4,0,0,9,59,3,2.77778,1,1
defect4j,time,org/joda/time/MutableDateTime,3,786,    },0,0,0,0,1,0,0,0,0,1,1,4,2.77778,1,1
defect4j,time,org/joda/time/DateTimeZone,3,931,                    return offsetPrev;,0,0,0,0,0,1,4,0,0,4,18,7,0.92593,0,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,351,            int offset = this.iZone.getOffsetFromLocal(instant);,6,0,0,1,2,0,4,0,0,10,52,1,0.45455,0,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,352,            long diff = instant - offset;,6,1,0,0,0,0,0,0,0,7,29,6,0.45455,0,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,354,            if ((instant ^ diff) < 0 && (instant ^ offset) < 0) {,0,0,0,3,7,0,0,0,0,10,53,4,0.45455,0,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,357,            return offset;,2,0,0,0,0,1,0,0,0,2,14,5,0.45455,0,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,4,148,        return getWrappedField().getMaximumValue() + 1;,0,0,0,2,4,1,0,0,0,7,47,4,0.5,0,0
defect4j,time,org/joda/time/DateTimeFieldType,4,514,                    return chronology.clockhourOfDay();,0,0,0,1,2,1,0,0,0,4,35,4,0.25,0,0
defect4j,time,org/joda/time/Partial,4,447,                            DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);,2,0,0,2,4,0,8,2,0,12,82,15,0.2,0,0
defect4j,time,org/joda/time/Partial,4,448,                            DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);,2,0,0,2,4,0,8,2,0,12,85,15,0.2,0,0
defect4j,time,org/joda/time/Partial,4,449,                            if (rangeField.compareTo(loopRangeField) > 0) {,0,1,0,2,5,0,6,0,0,7,47,15,0.2,0,0
defect4j,time,org/joda/time/PeriodType,5,690,"            throw new UnsupportedOperationException(""Field is not supported"");",2,0,0,1,2,0,6,4,0,13,66,1,3.0,0,0
defect4j,time,org/joda/time/Period,5,1631,                result = result.withYears(years);,0,0,0,1,2,0,0,0,0,3,33,4,1.125,1,0
defect4j,time,org/joda/time/Period,5,895,        int[] values = getValues();  // cloned,2,0,0,2,4,0,2,0,0,4,38,5,1.0,0,0
defect4j,time,org/joda/time/Period,5,896,"        getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);",0,0,0,2,4,0,0,0,0,6,76,4,1.0,0,0
defect4j,time,org/joda/time/Period,5,1629,            months = months % 12;,0,0,0,0,0,0,0,0,0,0,21,4,1.0,1,0
defect4j,time,org/joda/time/Period,5,1630,            if (years != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,975,"                instant = iGregorianField.add(instant, value);",2,0,0,1,2,0,8,0,0,11,46,7,4.0,1,1
defect4j,time,org/joda/time/chrono/GJChronology,6,976,                if (instant < iCutover) {,0,0,0,1,3,0,0,0,0,4,25,4,4.0,1,1
defect4j,time,org/joda/time/chrono/GJChronology,6,978,                    if (instant + iGapDuration < iCutover) {,6,2,0,1,3,0,0,0,0,8,40,9,4.0,0,0
defect4j,time,org/joda/time/chrono/GJChronology,6,979,                        instant = gregorianToJulian(instant);,0,0,0,1,2,0,0,0,0,3,37,4,4.0,1,1
defect4j,time,org/joda/time/chrono/GJChronology,6,339,            instant = iJulianChronology.getDateTimeMillis,0,0,0,0,0,0,0,0,0,0,45,4,1.6,0,0
defect4j,time,org/joda/time/chrono/GJChronology,6,341,            if (instant >= iCutoverMillis) {,4,1,0,1,3,0,0,0,0,5,32,6,1.6,0,0
defect4j,time,org/joda/time/LocalDate,6,1965,"            return iInstant.withLocalMillis(iField.add(iInstant.getLocalMillis(), value));",4,0,0,3,6,1,18,0,0,22,78,1,1.33333,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,314,        return iMessage;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,701,        DateTimeParser parser = requireParser();,0,0,0,1,2,0,0,0,0,3,40,4,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,702,        if (instant == null) {,2,1,0,1,3,0,6,0,0,9,22,3,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,706,        long instantMillis = instant.getMillis();,2,0,0,1,2,0,4,0,0,6,41,5,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,707,        Chronology chrono = instant.getChronology();,8,0,0,1,2,0,10,2,0,23,44,3,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,708,        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);,4,1,0,2,4,0,8,0,0,13,78,5,0.17391,1,1
defect4j,time,org/joda/time/format/DateTimeFormatter,7,709,        chrono = selectChronology(chrono);,2,0,0,1,2,0,4,0,0,7,34,4,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,710,        int defaultYear = chrono.year().get(instantLocal);,2,1,0,2,4,0,0,0,0,3,50,6,0.17391,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,712,        DateTimeParserBucket bucket = new DateTimeParserBucket(,2,0,0,0,1,0,0,4,0,6,55,4,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,714,"        int newPos = parser.parseInto(bucket, text, position);",0,0,0,1,2,0,0,0,0,3,54,4,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,7,715,"        instant.setMillis(bucket.computeMillis(false, text));",0,0,0,2,4,0,10,0,0,11,53,5,0.17391,0,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,7,358,"                saveField(DateTimeFieldType.year(), iDefaultYear);",0,0,0,2,4,0,8,0,0,8,50,9,0.15385,0,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,7,359,"                return computeMillis(resetFields, text);",0,0,0,1,2,1,6,0,0,6,40,9,0.15385,0,0
defect4j,time,org/joda/time/MutableDateTime,7,351,"        super(year, monthOfYear, dayOfMonth,",0,0,0,0,1,0,0,0,0,1,36,4,0.10811,0,0
defect4j,time,org/joda/time/MutableDateTime,7,353,    },0,1,0,0,1,0,6,0,0,7,1,4,0.10811,0,0
defect4j,time,org/joda/time/DateTimeZone,8,218,                return DateTimeZone.UTC;,0,0,0,0,0,1,0,0,0,1,24,4,1.0,0,0
defect4j,time,org/joda/time/DateTimeZone,8,274,            return DateTimeZone.UTC;,4,0,0,0,0,1,0,0,0,4,24,7,1.0,0,0
defect4j,time,org/joda/time/DateTimeZone,8,660,            buf.append('-');,6,0,0,1,2,0,22,0,0,29,16,3,0.08333,1,1
defect4j,time,org/joda/time/DateTimeZone,8,661,            offset = -offset;,4,0,0,0,0,0,0,0,0,6,17,6,0.08333,0,0
defect4j,time,org/joda/time/DateTimeZone,8,383,            zone = ref.get();,4,0,0,1,2,0,12,2,0,19,17,5,0.05263,0,0
defect4j,time,org/joda/time/DateTimeZone,8,384,            if (zone != null) {,2,1,0,1,3,0,0,0,0,3,19,6,0.05263,0,0
defect4j,time,org/joda/time/DateTimeZone,8,385,                return zone;,2,0,0,0,0,1,0,0,0,2,12,8,0.05263,0,0
defect4j,time,org/joda/time/DateTimeZone,9,256,        },4,0,0,0,1,0,0,0,0,4,1,9,1.0,0,0
defect4j,time,org/joda/time/DateTimeZone,9,265,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,1,0
defect4j,time,org/joda/time/DateTimeZone,9,636,            offset = -offset;,4,0,0,0,0,0,0,0,0,6,17,6,0.08333,1,1
defect4j,time,org/joda/time/DateTimeZone,9,637,        },2,0,0,0,1,0,2,2,0,6,1,4,0.08333,1,1
defect4j,time,org/joda/time/MonthDay,10,334,"        this(monthOfYear, dayOfMonth, null);",2,0,0,1,2,0,4,0,0,6,36,5,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,335,    },0,0,0,0,1,0,0,0,0,1,1,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,352,"        super(new int[] {monthOfYear, dayOfMonth}, chronology);",6,0,0,3,6,0,0,0,0,6,55,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,353,    },0,0,0,0,1,0,0,0,0,1,1,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,79,    private static final DateTimeFieldType[] FIELD_TYPES = new DateTimeFieldType[] {,2,0,0,2,5,3,0,4,0,9,80,2,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,84,    private static final DateTimeFormatter PARSER = new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,0,0,3,78,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,395,        return 2;,0,0,0,0,0,1,0,0,0,1,9,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,408,        switch (index) {,2,0,0,1,3,0,0,0,0,2,16,4,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,410,            return chrono.monthOfYear();,4,0,0,1,2,1,4,0,0,8,28,3,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,412,            return chrono.dayOfMonth();,4,3,0,1,2,1,4,0,0,11,27,3,2.0,0,0
defect4j,time,org/joda/time/MonthDay,10,426,        return FIELD_TYPES[index];,0,0,1,1,2,1,0,0,0,4,26,5,2.0,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,10,129,        return MAX_DAYS_PER_MONTH_ARRAY[month - 1];,2,1,1,1,2,1,0,0,0,5,43,5,2.0,0,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,10,89,                return iChronology.getDaysInMonthMax(month);,0,0,0,1,2,1,0,0,0,4,44,4,2.0,0,0
