dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/format/DateTimeFormat,10,147,"    private static final Map<String, DateTimeFormatter> cPatternedCache = new HashMap<String, DateTimeFormatter>(7);",1,0,0,1,2,4,0,6,4,6,112,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,149,    private static final DateTimeFormatter[] cStyleCache = new DateTimeFormatter[25];,1,0,0,0,4,4,0,2,3,5,81,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,170,        return createFormatterForPattern(pattern);,0,0,0,1,2,1,2,0,1,5,42,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,400,        int length = pattern.length();,1,0,0,1,2,1,2,0,0,5,30,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,401,        int[] indexRef = new int[1];,1,0,0,0,4,3,0,0,0,3,28,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,403,        for (int i=0; i<length; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,404,            indexRef[0] = i;,1,0,1,0,2,0,0,0,1,4,16,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,405,"            String token = parseToken(pattern, indexRef);",1,0,0,0,2,0,3,1,1,5,45,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,406,            i = indexRef[0];,1,0,1,0,2,0,0,0,1,4,16,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,408,            int tokenLen = token.length();,1,0,0,1,2,1,2,0,0,5,30,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,409,            if (tokenLen == 0) {,1,1,0,1,3,1,0,0,0,5,20,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,412,            char c = token.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,414,            switch (c) {,1,0,0,1,3,1,0,0,0,4,12,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,479,                if (tokenLen >= 3) {,1,1,0,1,3,1,0,0,0,5,20,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,486,                    builder.appendMonthOfYear(tokenLen);,0,0,0,1,2,0,3,0,0,3,36,10,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,488,                break;,0,0,0,0,0,1,0,0,0,1,6,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,490,                builder.appendDayOfMonth(tokenLen);,0,0,0,1,2,0,3,0,0,3,35,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,491,                break;,0,0,0,0,0,1,0,0,0,1,6,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,549,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,5,32,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,550,                if (sub.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,551,                    builder.appendLiteral(sub.charAt(0));,0,0,0,2,4,0,4,0,0,3,37,10,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,555,                    builder.appendLiteral(new String(sub));,1,0,0,2,4,1,2,1,1,7,39,10,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,557,                break;,0,0,0,0,0,1,0,0,0,1,6,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,563,    },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,574,        StringBuilder buf = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,40,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,576,        int i = indexRef[0];,1,0,1,0,2,1,0,0,0,4,20,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,577,        int length = pattern.length();,1,0,0,1,2,1,2,0,0,5,30,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,579,        char c = pattern.charAt(i);,1,0,0,1,2,1,3,0,0,5,27,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,580,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,1,0,0,4,6,51,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,583,            buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,585,            while (i + 1 < length) {,2,2,0,1,3,1,0,0,0,5,24,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,586,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,1,2,0,0,6,34,9,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,587,                if (peek == c) {,2,1,0,1,3,1,0,0,0,5,16,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,588,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,11,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,589,                    i++;,1,0,0,0,0,0,0,0,1,2,4,10,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,593,            },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,596,            buf.append('\'');,0,0,0,1,2,0,2,0,1,4,17,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,598,            boolean inLiteral = false;,1,0,0,0,0,1,0,0,1,3,26,7,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,600,            for (; i < length; i++) {,3,1,0,1,3,1,0,0,1,6,25,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,601,                c = pattern.charAt(i);,1,0,0,1,2,0,3,0,1,5,22,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,603,                if (c == '\'') {,1,1,0,1,3,1,0,0,1,6,16,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,611,                } else if (!inLiteral &&,1,1,0,0,2,2,0,0,1,5,24,9,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,613,                    i--;,1,0,0,0,0,0,0,0,1,2,4,11,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,614,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,616,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,621,        indexRef[0] = i;,1,0,1,0,2,0,0,0,1,4,16,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,622,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,674,        if (pattern == null || pattern.length() == 0) {,1,3,0,2,5,1,2,0,0,6,47,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,677,        DateTimeFormatter formatter = null;,1,0,0,0,0,0,0,1,0,2,35,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,678,        synchronized (cPatternedCache) {,1,0,0,1,3,1,0,0,0,4,32,4,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,679,            formatter = cPatternedCache.get(pattern);,1,0,0,1,2,0,3,0,1,5,41,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,680,            if (formatter == null) {,1,1,0,1,3,1,0,0,0,5,24,6,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,681,                DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder();,1,0,0,1,2,1,0,2,1,6,66,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,682,"                parsePatternTo(builder, pattern);",0,0,0,0,2,0,3,0,1,3,33,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,683,                formatter = builder.toFormatter();,1,0,0,1,2,0,2,0,1,5,34,8,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,685,"                cPatternedCache.put(pattern, formatter);",0,0,0,0,2,0,4,0,0,2,40,9,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,687,        },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,10,688,        return formatter;,1,0,0,0,0,1,0,0,0,2,17,4,2.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,10,93,            return instant; // the easy case,1,0,0,0,0,1,0,0,0,2,32,6,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,10,260,            int subtrahendDom = iChronology.getDayOfMonth,1,0,0,0,0,1,2,0,0,3,45,7,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,10,262,            if (subtrahendDom > minuendDom) {,2,1,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,10,595,        if (ldp == null) {,1,1,0,1,3,1,0,0,0,5,18,4,1.0,0,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,10,596,            ldp = dateElementParser().withZoneUTC();,1,0,0,1,4,0,2,0,2,5,40,6,1.0,0,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,10,598,        return ldp;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,10,301,        return withZone(DateTimeZone.UTC);,2,0,0,1,2,1,1,0,1,6,34,4,0.66667,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,10,321,        if (iZone == zone) {,2,1,0,1,3,1,0,0,0,5,20,4,0.66667,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,10,324,"        return new DateTimeFormatter(iPrinter, iParser, iLocale,",3,0,0,0,1,2,0,1,1,5,56,4,0.66667,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,255,        int size = period.size();,1,0,0,1,2,1,2,0,0,5,25,5,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,256,        int[] values = new int[size];,1,0,1,0,4,3,0,0,0,4,29,5,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,257,        if (startInstant != endInstant) {,2,1,0,1,3,1,0,0,0,5,33,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,258,            for (int i = 0; i < size; i++) {,4,1,0,1,3,2,0,0,1,6,32,6,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,259,                DurationField field = period.getFieldType(i).getField(this);,1,0,0,1,4,1,4,1,0,6,60,8,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,260,"                int value = field.getDifference(endInstant, startInstant);",1,0,0,0,2,1,4,0,0,4,58,9,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,261,"                startInstant = field.add(startInstant, value);",1,0,0,0,2,0,4,0,1,4,46,8,1.0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,262,                values[i] = value;,1,0,1,0,2,0,0,0,1,4,18,8,1.0,0,0
