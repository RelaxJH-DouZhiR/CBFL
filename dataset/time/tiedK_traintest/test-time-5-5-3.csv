dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/field/FieldUtils,11,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,8,5,0,3,7,0,0,0,0,13,45,4,0.2,0,0
defect4j,time,org/joda/time/field/FieldUtils,11,70,        return sum;,8,2,0,0,0,1,0,0,0,10,11,3,0.2,0,0
defect4j,time,org/joda/time/DateTimeZone,11,147,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,123,            return MIN_DAYS_PER_MONTH_ARRAY[month - 1];,2,1,1,1,2,1,0,0,0,5,43,7,0.16667,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,142,            return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,0,0,0,1,2,1,0,0,0,4,50,4,0.16667,0,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,12,129,            return (instant + 1) % iUnitMillis + iUnitMillis - 1;,6,4,0,1,2,1,0,0,0,10,53,6,4.0,0,0
defect4j,time,org/joda/time/LocalDateTime,12,2016,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,1,6,0,0,6,48,5,1.77778,1,1
defect4j,time,org/joda/time/LocalDateTime,12,612,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,1.33333,1,1
defect4j,time,org/joda/time/LocalDateTime,12,615,        return type.getField(getChronology()).isSupported();,4,0,0,3,6,3,4,4,0,14,52,1,1.33333,1,1
defect4j,time,org/joda/time/LocalDate,12,1805,        return ISODateTimeFormat.date().print(this);,0,0,0,2,4,1,6,0,0,6,44,5,1.33333,0,0
defect4j,time,org/joda/time/LocalDateTime,12,597,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.8,0,0
defect4j,time,org/joda/time/LocalDateTime,12,600,        return type.getField(getChronology()).get(getLocalMillis());,0,0,0,4,8,1,0,0,0,13,60,4,0.8,0,0
defect4j,time,org/joda/time/LocalDate,12,548,        return fieldType.getField(getChronology()).get(getLocalMillis());,4,3,0,4,8,1,0,0,0,7,65,4,0.8,1,1
defect4j,time,org/joda/time/LocalDateTime,12,567,        switch (index) {,0,0,0,1,3,0,0,0,0,4,16,4,0.7619,0,0
defect4j,time,org/joda/time/LocalDateTime,12,569,                return getChronology().year().get(getLocalMillis());,6,0,0,4,8,1,0,0,0,6,52,4,0.7619,0,0
defect4j,time,org/joda/time/LocalDateTime,12,571,                return getChronology().monthOfYear().get(getLocalMillis());,0,0,0,4,8,1,18,0,0,19,59,3,0.7619,0,0
defect4j,time,org/joda/time/LocalDateTime,12,573,                return getChronology().dayOfMonth().get(getLocalMillis());,0,0,0,4,8,1,0,0,0,13,58,4,0.7619,0,0
defect4j,time,org/joda/time/LocalDateTime,12,575,                return getChronology().millisOfDay().get(getLocalMillis());,4,0,0,4,8,1,8,0,0,12,59,3,0.7619,0,0
defect4j,time,org/joda/time/LocalDate,12,542,        if (fieldType == null) {,4,0,0,1,3,0,6,2,0,13,24,3,0.7619,1,1
defect4j,time,org/joda/time/LocalDate,12,545,        if (isSupported(fieldType) == false) {,0,0,0,2,5,0,0,0,0,7,38,4,0.7619,1,1
defect4j,time,org/joda/time/Period,13,967,        int[] values = getValues();  // cloned,2,0,0,2,4,0,2,0,0,4,38,5,1.0,0,0
defect4j,time,org/joda/time/Period,13,968,"        getPeriodType().setIndexedField(this, PeriodType.MILLI_INDEX, values, millis);",4,1,0,2,4,0,0,0,0,5,78,7,1.0,0,0
defect4j,time,org/joda/time/Period,13,969,"        return new Period(values, getPeriodType());",0,0,0,2,4,1,0,0,0,7,43,4,1.0,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,337,            if (value != Long.MIN_VALUE) {,0,0,0,1,3,0,0,0,0,4,30,4,0.5,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,338,                return calculateDigitCount(-value) + 1;,2,0,0,1,2,1,12,0,0,15,39,4,0.5,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,237,            buf.append('-');,0,0,0,1,2,0,0,0,0,3,16,4,0.33333,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,238,            if (value != Integer.MIN_VALUE) {,6,1,0,1,3,0,0,0,0,7,33,6,0.33333,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,239,                value = -value;,4,0,0,0,0,0,0,0,0,6,15,8,0.33333,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,81,                digits = 3;,2,0,0,0,0,0,0,0,0,3,11,9,0.25,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,251,            int d = ((value + 1) * 13421772) >> 27;,4,3,0,2,4,0,6,0,0,13,39,4,0.25,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,252,            buf.append((char) (d + '0'));,2,1,0,3,6,0,4,0,0,8,29,8,0.25,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,254,            buf.append((char) (value - (d << 3) - (d << 1) + '0'));,8,4,0,5,10,0,8,0,0,21,55,4,0.25,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,255,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.25,0,0
defect4j,time,org/joda/time/format/FormatUtils,13,247,        } else if (value < 100) {,2,0,0,1,4,0,8,2,0,12,25,10,0.2,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,14,314,        return iMessage;,2,0,0,0,0,1,0,0,0,2,16,4,18.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,206,        if (valueToAdd == 0) {,2,1,0,1,3,0,0,0,0,3,22,4,4.92308,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,210,        if (DateTimeUtils.isContiguous(partial)) {,0,0,0,2,5,0,0,0,0,7,42,4,4.92308,1,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,211,            long instant = 0L;,0,0,0,0,0,0,0,0,0,0,18,4,4.92308,1,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,212,"            for (int i = 0, isize = partial.size(); i < isize; i++) {",0,0,0,2,5,0,0,0,0,7,57,4,4.92308,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,213,"                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);",2,0,1,4,8,0,14,0,0,21,80,8,4.92308,0,0
defect4j,time,org/joda/time/MonthDay,14,518,        int[] newValues = getValues();,2,0,0,2,4,0,8,0,0,10,30,1,4.92308,0,0
defect4j,time,org/joda/time/MonthDay,14,519,"        newValues = getField(index).add(this, index, newValues, amount);",0,0,0,2,4,0,0,0,0,6,64,4,4.92308,0,0
defect4j,time,org/joda/time/MonthDay,14,515,        if (amount == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,3.55556,0,0
defect4j,time,org/joda/time/MonthDay,14,514,        int index = indexOfSupported(fieldType);,0,0,0,1,2,0,0,0,0,3,40,4,3.04762,0,0
defect4j,time,org/joda/time/DateTimeUtils,14,347,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,2.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,138,                return -val1;,2,0,0,0,0,1,0,0,0,3,13,5,0.08333,1,0
defect4j,time,org/joda/time/field/FieldUtils,15,142,                return val1;,0,0,0,0,0,1,0,0,0,1,12,4,0.04,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,144,        long total = val1 * val2;,6,1,0,0,0,0,0,0,0,7,25,5,0.03846,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,145,        if (total / val2 != val1) {,10,2,0,1,3,0,0,0,0,12,27,3,0.03846,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,148,        return total;,2,1,0,0,0,1,2,0,0,7,13,4,0.03846,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,136,        switch (val2) {,2,0,0,1,3,0,0,0,0,2,15,4,0.01961,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,108,"        super(createMessage(fieldType.getName(), value, lowerBound, upperBound, null));",0,0,0,3,6,0,0,0,0,9,79,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,109,        iDateTimeFieldType = fieldType;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,110,        iDurationFieldType = null;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,111,        iFieldName = fieldType.getName();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,112,        iNumberValue = value;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,113,        iStringValue = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,114,        iLowerBound = lowerBound;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,115,        iUpperBound = upperBound;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,116,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,117,    },0,0,0,0,1,0,14,0,0,14,1,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,129,"        super(createMessage(fieldType.getName(), value, null, null, explain));",0,0,0,3,6,0,10,0,0,12,70,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,130,        iDateTimeFieldType = fieldType;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,131,        iDurationFieldType = null;,2,0,0,0,0,0,0,0,0,3,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,132,        iFieldName = fieldType.getName();,2,0,0,1,2,0,4,0,0,7,33,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,133,        iNumberValue = value;,8,3,0,0,0,0,0,0,0,12,21,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,134,        iStringValue = null;,2,0,0,0,0,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,135,        iLowerBound = null;,4,0,0,0,0,0,4,0,0,9,19,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,136,        iUpperBound = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,137,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,138,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,150,"        super(createMessage(fieldType.getName(), value, lowerBound, upperBound, null));",4,0,0,3,6,0,9,0,0,13,79,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,151,        iDateTimeFieldType = null;,6,0,0,0,0,0,4,2,0,14,26,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,152,        iDurationFieldType = fieldType;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,153,        iFieldName = fieldType.getName();,2,0,0,1,2,0,4,0,0,7,33,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,154,        iNumberValue = value;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,155,        iStringValue = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,156,        iLowerBound = lowerBound;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,157,        iUpperBound = upperBound;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,158,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,159,    },2,0,0,0,1,0,2,0,0,4,1,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,171,"        super(createMessage(fieldName, value, lowerBound, upperBound, null));",0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,172,        iDateTimeFieldType = null;,8,1,0,0,0,0,0,2,0,12,26,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,173,        iDurationFieldType = null;,6,0,0,0,0,0,0,0,0,7,26,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,174,        iFieldName = fieldName;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,175,        iNumberValue = value;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,176,        iStringValue = null;,4,1,0,0,0,0,4,0,0,10,20,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,177,        iLowerBound = lowerBound;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,178,        iUpperBound = upperBound;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,179,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,180,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,189,"        super(createMessage(fieldType.getName(), value));",4,0,0,3,6,0,0,0,0,4,49,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,190,        iDateTimeFieldType = fieldType;,4,0,0,0,0,0,0,0,0,5,31,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,191,        iDurationFieldType = null;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,192,        iFieldName = fieldType.getName();,4,1,0,1,2,0,4,0,0,10,33,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,193,        iStringValue = value;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,194,        iNumberValue = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,195,        iLowerBound = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,196,        iUpperBound = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,197,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,198,    },6,4,0,0,1,0,0,0,0,11,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,207,"        super(createMessage(fieldType.getName(), value));",2,1,0,3,6,0,8,0,0,11,49,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,208,        iDateTimeFieldType = null;,10,2,0,0,0,0,4,2,0,20,26,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,209,        iDurationFieldType = fieldType;,4,0,0,0,0,0,2,0,0,7,31,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,210,        iFieldName = fieldType.getName();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,211,        iStringValue = value;,4,0,0,0,0,0,18,0,0,22,21,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,212,        iNumberValue = null;,2,0,0,0,0,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,213,        iLowerBound = null;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,214,        iUpperBound = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,215,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,216,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,225,"        super(createMessage(fieldName, value));",0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,226,        iDateTimeFieldType = null;,2,0,0,0,0,0,0,0,0,3,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,227,        iDurationFieldType = null;,2,0,0,0,0,0,0,0,0,3,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,228,        iFieldName = fieldName;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,229,        iStringValue = value;,4,0,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,230,        iNumberValue = null;,2,0,0,0,0,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,231,        iLowerBound = null;,2,0,0,0,0,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,232,        iUpperBound = null;,4,1,0,0,0,0,0,0,0,6,19,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,233,        iMessage = super.getMessage();,4,0,0,1,2,0,4,0,0,9,30,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,234,    },0,0,0,0,1,0,8,0,0,8,1,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,41,        StringBuffer buf = new StringBuffer(),2,0,0,1,2,0,0,4,0,6,37,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,44,        if (lowerBound == null) {,2,1,1,1,3,0,0,0,0,7,25,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,45,            if (upperBound == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,46,"                buf.append(""is not supported"");",0,0,0,1,2,0,4,0,0,5,31,9,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,48,"                buf.append(""must not be larger than "").append(upperBound);",0,0,0,2,4,0,10,0,0,12,58,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,50,        } else if (upperBound == null) {,2,0,0,1,4,0,8,0,0,10,32,8,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,51,"            buf.append(""must not be smaller than "").append(lowerBound);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,53,"            buf.append(""must be in the range ["")",6,0,0,1,3,0,12,0,0,20,36,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,59,        if (explain != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,60,"            buf.append("": "").append(explain);",0,0,0,2,4,0,8,0,0,9,33,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,63,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,74,"        StringBuffer buf = new StringBuffer().append(""Value "");",0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,76,        if (value == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,77,"            buf.append(""null"");",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,79,"            buf.append('""');",0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,80,            buf.append(value);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,81,"            buf.append('""');",0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,84,"        buf.append("" for "").append(fieldName).append(' ').append(""is not supported"");",0,0,0,4,8,0,0,0,0,12,77,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,86,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,243,        return iDateTimeFieldType;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,252,        return iDurationFieldType;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,261,        return iFieldName;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,270,        return iNumberValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,279,        return iStringValue;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,288,        String value = iStringValue;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,289,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,290,            value = String.valueOf(iNumberValue);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,292,        return value;,10,0,0,0,0,1,2,2,0,15,13,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,301,        return iLowerBound;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,310,        return iUpperBound;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,314,        return iMessage;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,323,        if (iMessage == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,324,            iMessage = message;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,325,        } else if (message != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,326,"            iMessage = message + "": "" + iMessage;",4,0,0,0,0,0,0,0,0,5,37,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,328,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,36,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,37,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,49,        if (value == Integer.MIN_VALUE) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,50,"            throw new ArithmeticException(""Integer.MIN_VALUE cannot be negated"");",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,52,        return -value;,6,0,0,0,0,1,0,0,0,8,14,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,64,        int sum = val1 + val2;,12,2,0,0,0,0,4,0,0,19,22,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,67,            throw new ArithmeticException,4,0,0,0,0,0,0,2,0,6,29,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,70,        return sum;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,82,        long sum = val1 + val2;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,10,5,0,3,7,0,14,2,0,31,45,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,85,            throw new ArithmeticException,0,0,0,0,0,0,0,0,0,0,29,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,88,        return sum;,2,0,0,0,0,1,8,0,0,11,11,9,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,100,        long diff = val1 - val2;,6,1,0,0,0,0,0,0,0,7,24,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,102,        if ((val1 ^ diff) < 0 && (val1 ^ val2) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,103,            throw new ArithmeticException,2,1,0,0,0,0,0,0,0,3,29,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,106,        return diff;,4,0,0,0,0,1,2,2,0,9,12,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,119,        long total = (long) val1 * (long) val2;,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,120,        if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {,0,0,0,1,3,0,0,0,0,4,61,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,121,"          throw new ArithmeticException(""Multiplication overflows an int: "" + val1 + "" * "" + val2);",0,0,0,1,2,0,0,0,0,3,89,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,123,        return (int) total;,0,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,140,                return 0L;,8,3,0,0,0,1,8,0,0,21,10,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,146,"          throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",2,0,0,1,2,0,4,0,0,6,89,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,160,        if (val2 == 1) {,8,1,0,1,3,0,6,4,0,19,16,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,161,            return val1;,10,2,1,0,0,1,0,0,0,17,12,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,163,        if (val1 == 1) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,164,            return val2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,166,        if (val1 == 0 || val2 == 0) {,8,3,0,1,3,0,0,0,0,12,29,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,167,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,169,        long total = val1 * val2;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,170,        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {,4,1,0,1,3,0,0,0,0,5,107,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,171,"            throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",6,2,0,1,2,0,0,2,0,12,89,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,173,        return total;,4,0,0,0,0,1,4,0,0,8,13,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,184,        if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,63,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,185,            return (int) value;,0,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,187,"        throw new ArithmeticException(""Value cannot fit in an int: "" + value);",18,6,0,1,2,0,0,2,0,28,70,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,199,"        long val = FieldUtils.safeMultiply(val1, val2);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,200,        return FieldUtils.safeToInt(val);,8,1,0,1,2,1,8,0,0,17,33,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,214,        if ((value < lowerBound) || (value > upperBound)) {,8,3,0,3,7,0,0,0,0,11,51,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,215,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,219,    },6,0,0,0,1,0,0,2,0,9,1,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,232,        if ((value < lowerBound) || (value > upperBound)) {,8,0,0,3,7,0,0,2,0,10,51,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,233,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,237,    },6,1,0,0,1,0,0,0,0,8,1,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,249,        if ((value < lowerBound) || (value > upperBound)) {,16,3,0,3,7,0,10,2,0,32,51,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,250,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,254,    },0,0,1,0,1,0,4,0,0,9,1,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,273,"        return getWrappedValue(currentValue + wrapValue, minValue, maxValue);",0,0,0,1,2,1,0,0,0,4,69,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,289,        if (minValue >= maxValue) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,290,"            throw new IllegalArgumentException(""MIN > MAX"");",16,5,0,1,2,0,4,2,0,29,48,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,293,        int wrapRange = maxValue - minValue + 1;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,294,        value -= minValue;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,296,        if (value >= 0) {,6,1,0,1,3,0,4,2,0,14,17,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,297,            return (value % wrapRange) + minValue;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,300,        int remByRange = (-value) % wrapRange;,8,1,0,1,2,0,4,0,0,15,38,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,302,        if (remByRange == 0) {,8,3,0,1,3,0,0,0,0,11,22,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,303,            return 0 + minValue;,2,1,0,0,0,1,0,0,0,3,20,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,305,        return (wrapRange - remByRange) + minValue;,0,0,0,1,2,1,0,0,0,4,43,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,318,        if (object1 == object2) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,319,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,321,        if (object1 == null || object2 == null) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,322,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,324,        return object1.equals(object2);,6,4,0,1,2,1,18,2,0,31,31,3,0.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,698,        DateTimeParser parser = requireParser();,2,0,0,1,2,0,2,2,0,6,40,4,6.125,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,699,        if (instant == null) {,0,0,0,1,3,0,0,0,0,4,22,4,6.125,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,703,        long instantMillis = instant.getMillis();,0,0,0,1,2,0,0,0,0,3,41,4,6.125,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,704,        Chronology chrono = instant.getChronology();,2,0,0,1,2,0,4,2,0,8,44,4,6.125,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,705,        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);,0,0,0,2,4,0,0,0,0,6,78,4,6.125,0,0
