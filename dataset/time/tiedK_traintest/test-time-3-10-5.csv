dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1458,                if (tailZone.iStartRecurrence.getNameKey(),4,0,0,1,3,0,2,0,0,6,42,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1480,            return new PrecalculatedZone,0,0,0,0,0,1,0,0,0,1,28,4,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1690,            if (iTailZone != null) {,2,1,0,1,3,0,8,0,0,11,24,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1691,                return true;,2,0,0,0,0,1,0,2,0,6,12,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,761,"            return iOfYear.next(instant, standardOffset, saveMillis);",2,0,0,1,2,4,10,16,0,31,57,1,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,772,            return iNameKey;,2,0,0,0,0,1,0,0,0,2,16,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,776,            return iSaveMillis;,2,0,0,0,0,1,0,0,0,2,19,5,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,86,        return cMillisProvider.getMillis();,0,0,0,1,2,1,4,0,0,4,35,5,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,283,            return ISOChronology.getInstance();,0,0,0,1,2,1,4,0,0,4,35,7,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,316,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,317,            return PeriodType.standard();,0,0,0,1,2,1,0,0,0,4,29,4,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,319,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,595,        super();,2,0,0,1,2,0,4,0,0,7,8,9,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,596,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,597,        iTypes = types;,4,0,0,0,0,0,4,0,0,9,15,3,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,598,        iIndices = indices;,0,0,0,0,0,0,0,0,0,0,19,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,599,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,56,"    private static final Map<PeriodType, Object> cTypes = new HashMap<PeriodType, Object>(32);",2,0,0,1,2,3,0,12,0,17,90,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,58,    static int YEAR_INDEX = 0;,0,0,0,0,0,0,6,0,0,6,26,5,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,59,    static int MONTH_INDEX = 1;,2,0,0,0,0,1,0,0,0,3,27,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,60,    static int WEEK_INDEX = 2;,2,0,0,0,0,1,0,0,0,3,26,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,61,    static int DAY_INDEX = 3;,2,0,0,0,0,1,0,0,0,3,25,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,62,    static int HOUR_INDEX = 4;,0,0,0,0,0,0,0,0,0,0,26,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,63,    static int MINUTE_INDEX = 5;,2,0,0,0,0,1,0,0,0,3,28,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,64,    static int SECOND_INDEX = 6;,2,0,0,0,0,1,0,0,0,3,28,2,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,65,    static int MILLI_INDEX = 7;,0,0,0,0,0,0,0,0,0,0,27,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,102,        PeriodType type = cStandard;,4,0,0,0,0,0,0,2,0,6,28,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,103,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,104,            type = new PeriodType(,2,0,0,0,1,0,0,2,0,5,22,6,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,114,            cStandard = type;,4,0,0,0,0,0,0,0,0,5,17,6,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,116,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,163,        PeriodType type = cYMD;,0,0,0,0,0,0,0,0,0,0,23,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,164,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,165,            type = new PeriodType(,6,0,0,0,1,0,6,2,0,16,22,3,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,173,            cYMD = type;,6,1,0,0,0,0,0,0,0,8,12,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,175,        return type;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,617,        return iTypes.length;,0,0,0,0,0,1,0,0,0,1,21,4,1.0,0,0
defect4j,time,org/joda/time/PeriodType,11,628,        return iTypes[index];,0,0,1,1,2,1,0,0,0,4,21,5,1.0,0,0
defect4j,time,org/joda/time/DateTimeUtils,11,515,            return System.currentTimeMillis();,0,0,0,1,2,1,4,0,0,4,34,6,1.0,0,0
defect4j,time,org/joda/time/DurationFieldType,11,282,            chronology = DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,0,0,0,3,53,4,1.0,0,0
defect4j,time,org/joda/time/DurationFieldType,11,284,            switch (iOrdinal) {,2,0,0,1,3,0,0,0,0,2,19,5,1.0,0,0
defect4j,time,org/joda/time/DurationFieldType,11,292,                    return chronology.years();,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0
defect4j,time,org/joda/time/DurationFieldType,11,294,                    return chronology.months();,0,0,0,1,2,1,4,0,0,4,27,7,1.0,0,0
defect4j,time,org/joda/time/DurationFieldType,11,298,                    return chronology.days();,0,0,0,1,2,1,4,0,0,4,25,7,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,57,    private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {,2,0,0,1,3,3,0,4,0,9,73,2,1.0,0,0
defect4j,time,org/joda/time/base/AbstractPeriod,11,45,        super();,0,0,0,1,2,0,0,0,0,3,8,4,1.0,0,0
defect4j,time,org/joda/time/base/AbstractPeriod,11,46,    },2,1,0,0,1,0,0,0,0,3,1,4,1.0,0,0
defect4j,time,org/joda/time/base/AbstractPeriod,11,56,        return getPeriodType().size();,2,0,0,2,4,1,4,0,0,6,30,8,1.0,0,0
defect4j,time,org/joda/time/base/AbstractPeriod,11,68,        return getPeriodType().getFieldType(index);,0,0,0,2,4,1,0,0,0,7,43,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,106,        super();,4,1,0,1,2,0,0,0,0,5,8,5,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,107,        type = checkPeriodType(type);,2,0,0,1,2,0,4,0,0,7,29,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,108,        chrono = DateTimeUtils.getChronology(chrono);,2,0,0,1,2,0,6,0,0,9,45,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,109,        iType = type;,4,0,0,0,0,0,0,0,0,5,13,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,110,"        iValues = chrono.get(this, startInstant, endInstant);",2,0,0,1,2,0,8,0,0,11,53,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,111,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,254,        super();,0,0,0,1,2,0,0,0,0,3,8,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,255,        type = checkPeriodType(type);,2,0,0,1,2,0,4,0,0,7,29,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,256,        chrono = DateTimeUtils.getChronology(chrono);,0,0,0,1,2,0,0,0,0,3,45,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,257,        iType = type;,4,0,0,0,0,0,0,0,0,5,13,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,258,"        iValues = chrono.get(this, duration);",2,0,0,1,2,0,6,0,0,9,37,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,259,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,57,    private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {,2,0,0,1,3,3,0,4,0,9,73,2,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,308,        return DateTimeUtils.getPeriodType(type);,0,0,0,1,2,1,6,0,0,6,41,5,1.0,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,318,        return iType;,2,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0
defect4j,time,org/joda/time/Period,11,298,"        super(0L, null, null);",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,time,org/joda/time/Period,11,299,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/Period,11,490,"        super(startInstant, endInstant, type, chrono);",8,0,0,1,2,0,0,0,0,8,46,4,1.0,0,0
defect4j,time,org/joda/time/Period,11,491,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,time,org/joda/time/Period,11,65,    public static final Period ZERO = new Period();,2,0,0,1,2,3,0,4,0,9,47,2,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,243,        if (minuendInstant < subtrahendInstant) {,4,1,0,1,3,0,0,0,0,5,41,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,247,        int minuendYear = iChronology.getYear(minuendInstant);,4,0,0,1,2,0,10,0,0,15,54,3,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,248,"        int minuendMonth = iChronology.getMonthOfYear(minuendInstant, minuendYear);",0,0,0,1,2,0,0,0,0,3,75,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,249,        int subtrahendYear = iChronology.getYear(subtrahendInstant);,0,0,0,1,2,0,0,0,0,3,60,4,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,250,"        int subtrahendMonth = iChronology.getMonthOfYear(subtrahendInstant, subtrahendYear);",2,0,0,1,2,0,8,0,0,10,84,5,1.0,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,252,        long difference = (minuendYear - subtrahendYear) * ((long) iMax) + minuendMonth - subtrahendMonth;,12,4,0,3,6,0,0,0,0,16,98,5,1.0,0,0
