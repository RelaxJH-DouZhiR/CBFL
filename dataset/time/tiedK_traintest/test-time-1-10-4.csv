dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,672,"                next = setDayOfMonth(chrono, next);",1,0,0,0,2,0,3,0,2,4,35,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,682,            },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,683,            return next;,1,0,0,0,0,1,0,0,0,2,12,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,706,            if (iDayOfMonth >= 0) {,1,1,0,1,3,1,0,0,0,5,23,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,709,"                instant = chrono.dayOfMonth().set(instant, 1);",1,0,0,1,4,0,4,0,1,5,46,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,710,"                instant = chrono.monthOfYear().add(instant, 1);",1,0,0,1,4,0,4,0,1,5,47,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,711,"                instant = chrono.dayOfMonth().add(instant, iDayOfMonth);",1,0,0,1,4,0,5,0,1,5,56,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,713,            return instant;,1,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,717,            int dayOfWeek = chrono.dayOfWeek().get(instant);,1,0,0,1,4,1,4,0,0,5,48,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,718,            int daysToAdd = iDayOfWeek - dayOfWeek;,3,1,0,0,0,1,0,0,0,3,39,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,719,            if (daysToAdd != 0) {,1,1,0,1,3,1,0,0,0,5,21,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,720,                if (iAdvance) {,1,0,0,1,3,1,0,0,0,4,15,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,725,                    if (daysToAdd > 0) {,1,1,0,1,3,1,0,0,0,5,20,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,729,"                instant = chrono.dayOfWeek().add(instant, daysToAdd);",1,0,0,1,4,0,5,0,1,5,53,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,731,            return instant;,1,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,963,        RuleSet() {,1,0,0,1,3,0,0,0,0,3,11,3,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,964,            iRules = new ArrayList<Rule>(10);,1,0,0,1,2,1,0,2,2,6,33,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,965,            iUpperYear = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,31,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,966,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,971,        RuleSet(RuleSet rs) {,2,0,0,1,3,0,0,1,0,4,21,3,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,972,            iStandardOffset = rs.iStandardOffset;,3,0,0,0,0,0,0,0,1,2,37,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,973,            iRules = new ArrayList<Rule>(rs.iRules);,3,0,0,1,2,1,0,2,2,6,40,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,974,            iInitialNameKey = rs.iInitialNameKey;,3,0,0,0,0,0,0,0,1,2,37,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,975,            iInitialSaveMillis = rs.iInitialSaveMillis;,3,0,0,0,0,0,0,0,1,2,43,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,976,            iUpperYear = rs.iUpperYear;,3,0,0,0,0,0,0,0,1,2,27,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,977,            iUpperOfYear = rs.iUpperOfYear;,3,0,0,0,0,0,0,0,1,2,31,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,978,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,948,            long now = DateTimeUtils.currentTimeMillis();,1,0,0,1,2,1,2,0,0,5,45,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,949,            YEAR_LIMIT = ISOChronology.getInstanceUTC().year().get(now) + 100;,1,1,0,1,6,0,5,0,1,6,66,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,950,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,985,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,1,2,33,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,986,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,994,            if (!iRules.contains(rule)) {,0,0,0,2,5,1,3,0,1,5,29,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,995,                iRules.add(rule);,0,0,0,1,2,0,3,0,0,3,17,8,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,997,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1011,            if (iInitialNameKey != null) {,1,1,0,1,3,1,0,0,0,5,30,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1018,            ArrayList<Rule> copy = new ArrayList<Rule>(iRules);,2,0,0,1,2,1,0,4,1,6,51,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1024,            long millis = Long.MIN_VALUE;,3,0,0,0,0,1,0,0,0,2,29,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1025,            int saveMillis = 0;,1,0,0,0,0,1,0,0,0,2,19,6,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1026,            Transition first = null;,1,0,0,0,0,0,0,1,0,2,24,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1029,"            while ((next = nextTransition(millis, saveMillis)) != null) {",1,1,0,0,7,1,3,0,2,6,61,5,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1030,                millis = next.getMillis();,1,0,0,1,2,0,2,0,1,5,26,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1032,                if (millis == firstMillis) {,2,1,0,1,3,1,0,0,0,5,28,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1037,                if (millis > firstMillis) {,2,1,0,1,3,1,0,0,0,5,27,7,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1038,                    if (first == null) {,1,1,0,1,3,1,0,0,0,5,20,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1042,                        for (Rule rule : copy) {,2,0,0,1,3,1,0,1,0,5,24,11,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1043,                            if (rule.getSaveMillis() == 0) {,0,1,0,2,5,1,2,0,0,5,32,13,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1044,"                                first = new Transition(firstMillis, rule, iStandardOffset);",4,0,0,0,2,1,0,1,2,5,59,15,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1045,                                break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1047,                        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1049,                    if (first == null) {,1,1,0,1,3,1,0,0,0,5,20,9,1.0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,1066,            iRules = copy;,2,0,0,0,0,0,0,0,1,2,14,5,1.0,0,0
