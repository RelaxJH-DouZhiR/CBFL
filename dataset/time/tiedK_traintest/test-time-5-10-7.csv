dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/IllegalFieldValueException,15,215,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,216,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,225,"        super(createMessage(fieldName, value));",0,0,0,2,4,0,6,0,0,6,39,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,226,        iDateTimeFieldType = null;,2,0,0,0,0,0,0,0,0,3,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,227,        iDurationFieldType = null;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,228,        iFieldName = fieldName;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,229,        iStringValue = value;,6,0,0,0,0,0,16,0,0,24,21,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,230,        iNumberValue = null;,2,0,0,0,0,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,231,        iLowerBound = null;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,232,        iUpperBound = null;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,233,        iMessage = super.getMessage();,4,0,0,1,2,0,0,0,0,5,30,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,234,    },10,0,0,0,1,0,0,4,0,14,1,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,41,        StringBuffer buf = new StringBuffer(),4,0,0,1,2,0,0,4,0,8,37,3,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,44,        if (lowerBound == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,45,            if (upperBound == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,46,"                buf.append(""is not supported"");",0,0,0,1,2,0,4,0,0,5,31,9,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,48,"                buf.append(""must not be larger than "").append(upperBound);",0,0,0,2,4,0,8,0,0,9,58,9,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,50,        } else if (upperBound == null) {,2,1,0,1,4,0,0,0,0,3,32,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,51,"            buf.append(""must not be smaller than "").append(lowerBound);",0,0,0,2,4,0,8,0,0,9,59,8,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,53,"            buf.append(""must be in the range ["")",2,0,0,1,3,0,10,0,0,14,36,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,59,        if (explain != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,60,"            buf.append("": "").append(explain);",0,0,0,2,4,0,8,0,0,9,33,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,63,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,74,"        StringBuffer buf = new StringBuffer().append(""Value "");",2,0,0,2,4,0,2,4,0,9,55,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,76,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,77,"            buf.append(""null"");",0,0,0,1,2,0,4,0,0,5,19,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,79,"            buf.append('""');",0,0,0,1,2,0,4,0,0,5,16,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,80,            buf.append(value);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,81,"            buf.append('""');",0,0,0,1,2,0,4,0,0,5,16,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,84,"        buf.append("" for "").append(fieldName).append(' ').append(""is not supported"");",0,0,0,4,8,0,12,0,0,15,77,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,86,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,243,        return iDateTimeFieldType;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,252,        return iDurationFieldType;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,261,        return iFieldName;,2,1,0,0,0,1,8,0,0,11,18,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,270,        return iNumberValue;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,279,        return iStringValue;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,288,        String value = iStringValue;,4,0,0,0,0,0,6,2,0,12,28,1,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,289,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,290,            value = String.valueOf(iNumberValue);,2,0,0,1,2,0,6,0,0,9,37,6,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,292,        return value;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,301,        return iLowerBound;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,310,        return iUpperBound;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,314,        return iMessage;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,323,        if (iMessage == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,324,            iMessage = message;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,325,        } else if (message != null) {,2,1,0,1,4,0,0,0,0,3,29,5,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,326,"            iMessage = message + "": "" + iMessage;",6,1,0,0,0,0,0,0,0,9,37,7,0.0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,15,328,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,36,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,37,    },2,0,0,0,1,0,20,0,0,24,1,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,49,        if (value == Integer.MIN_VALUE) {,6,1,0,1,3,0,0,0,0,7,33,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,50,"            throw new ArithmeticException(""Integer.MIN_VALUE cannot be negated"");",0,0,0,1,2,0,0,2,0,3,69,7,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,52,        return -value;,2,0,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,64,        int sum = val1 + val2;,6,1,0,0,0,0,0,0,0,7,22,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,8,5,0,3,7,0,0,0,0,13,45,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,67,            throw new ArithmeticException,0,0,0,0,0,0,0,2,0,2,29,8,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,70,        return sum;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,82,        long sum = val1 + val2;,8,1,0,0,0,0,2,0,0,11,23,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,8,5,0,3,7,0,0,0,0,13,45,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,85,            throw new ArithmeticException,0,0,0,0,0,0,0,2,0,2,29,8,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,88,        return sum;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,100,        long diff = val1 - val2;,6,1,0,0,0,0,0,0,0,7,24,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,102,        if ((val1 ^ diff) < 0 && (val1 ^ val2) < 0) {,8,5,0,3,7,0,0,0,0,13,45,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,103,            throw new ArithmeticException,2,1,0,0,0,0,0,2,0,5,29,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,106,        return diff;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,119,        long total = (long) val1 * (long) val2;,6,1,0,2,4,0,0,0,0,7,39,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,120,        if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {,2,0,0,1,3,0,0,0,0,3,61,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,121,"          throw new ArithmeticException(""Multiplication overflows an int: "" + val1 + "" * "" + val2);",4,1,0,1,2,0,0,2,0,9,89,7,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,123,        return (int) total;,4,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,140,                return 0L;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,146,"          throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",2,0,0,1,2,1,0,4,0,7,89,2,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,160,        if (val2 == 1) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,161,            return val1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,163,        if (val1 == 1) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,164,            return val2;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,166,        if (val1 == 0 || val2 == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,167,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,169,        long total = val1 * val2;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,170,        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {,22,10,0,1,3,0,6,0,0,40,107,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,171,"            throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",4,1,0,1,2,0,0,2,0,9,89,7,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,173,        return total;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,184,        if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {,18,3,0,1,3,0,0,2,0,25,63,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,185,            return (int) value;,2,0,0,1,2,1,0,0,0,2,19,7,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,187,"        throw new ArithmeticException(""Value cannot fit in an int: "" + value);",2,1,0,1,2,0,0,2,0,6,70,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,199,"        long val = FieldUtils.safeMultiply(val1, val2);",2,0,0,1,2,0,8,0,0,10,47,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,200,        return FieldUtils.safeToInt(val);,0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,214,        if ((value < lowerBound) || (value > upperBound)) {,8,3,0,3,7,0,0,0,0,11,51,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,215,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,2,0,2,36,8,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,219,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,232,        if ((value < lowerBound) || (value > upperBound)) {,16,6,0,3,7,0,0,0,0,22,51,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,233,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,2,0,2,36,8,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,237,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,249,        if ((value < lowerBound) || (value > upperBound)) {,8,3,0,3,7,0,0,0,0,11,51,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,250,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,2,0,2,36,8,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,254,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,273,"        return getWrappedValue(currentValue + wrapValue, minValue, maxValue);",4,1,0,1,2,1,6,0,0,11,69,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,289,        if (minValue >= maxValue) {,4,1,0,1,3,0,0,0,0,5,27,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,290,"            throw new IllegalArgumentException(""MIN > MAX"");",0,0,0,1,2,0,0,2,0,3,48,7,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,293,        int wrapRange = maxValue - minValue + 1;,6,2,0,0,0,0,0,0,0,8,40,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,294,        value -= minValue;,6,0,0,0,0,0,4,0,0,11,18,3,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,296,        if (value >= 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,297,            return (value % wrapRange) + minValue;,6,2,0,1,2,1,0,0,0,8,38,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,300,        int remByRange = (-value) % wrapRange;,6,1,0,1,2,0,0,0,0,8,38,5,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,302,        if (remByRange == 0) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,303,            return 0 + minValue;,2,1,0,0,0,1,0,0,0,3,20,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,305,        return (wrapRange - remByRange) + minValue;,8,2,0,1,2,2,0,0,0,11,43,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,318,        if (object1 == object2) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,319,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,321,        if (object1 == null || object2 == null) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,322,            return false;,2,0,0,0,0,1,8,0,0,12,13,1,0.0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,324,        return object1.equals(object2);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,698,        DateTimeParser parser = requireParser();,2,0,0,1,2,0,2,2,0,6,40,4,6.125,0,0
