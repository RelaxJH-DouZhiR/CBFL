project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/data/time/TimeSeries,17,880,"            throw new IllegalArgumentException(""Requires start <= end."");",1.0,0,,0
org/jfree/data/time/TimeSeries,17,857,"        Object clone = createCopy(0, getItemCount() - 1);",0.5,1,,0
org/jfree/data/time/TimeSeries,17,876,        if (start < 0) {,0.25,0,,0
org/jfree/data/time/TimeSeries,17,879,        if (end < start) {,0.25,0,,0
org/jfree/data/time/TimeSeries,17,140,"        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, ",0.1,0,,0
org/jfree/data/time/TimeSeries,17,142,    },0.1,0,,0
org/jfree/data/time/TimeSeries,17,141,                Day.class);,0.09091,0,,0
org/jfree/data/time/Day,17,83,    protected static final DateFormat DATE_FORMAT ,0.07143,0,,0
org/jfree/data/time/Day,17,88,        DATE_FORMAT_SHORT = DateFormat.getDateInstance(DateFormat.SHORT);,0.07143,0,,0
org/jfree/data/time/Day,17,92,        DATE_FORMAT_MEDIUM = DateFormat.getDateInstance(DateFormat.MEDIUM);,0.07143,0,,0
org/jfree/data/time/Day,17,96,        DATE_FORMAT_LONG = DateFormat.getDateInstance(DateFormat.LONG);,0.07143,0,,0
org/jfree/data/time/Year,17,96,    public Year(int year) {,0.05,0,,0
org/jfree/data/time/Year,17,97,        if ((year < SerialDate.MINIMUM_YEAR_SUPPORTED),0.05,0,,0
org/jfree/data/time/Year,17,103,        this.year = (short) year;,0.05,0,,0
org/jfree/data/time/Year,17,104,        peg(Calendar.getInstance());,0.05,0,,0
org/jfree/data/time/Year,17,105,    },0.05,0,,0
org/jfree/data/time/Year,17,136,        return this.year;,0.05,0,,0
org/jfree/data/time/Year,17,176,        this.firstMillisecond = getFirstMillisecond(calendar);,0.05,0,,0
org/jfree/data/time/Year,17,177,        this.lastMillisecond = getLastMillisecond(calendar);,0.05,0,,0
org/jfree/data/time/Year,17,178,    },0.05,0,,0
org/jfree/data/time/Year,17,218,        return this.year;,0.05,0,,0
org/jfree/data/time/Year,17,233,"        calendar.set(this.year, Calendar.JANUARY, 1, 0, 0, 0);",0.05,0,,0
org/jfree/data/time/Year,17,234,"        calendar.set(Calendar.MILLISECOND, 0);",0.05,0,,0
org/jfree/data/time/Year,17,237,        return calendar.getTime().getTime();,0.05,0,,0
org/jfree/data/time/Year,17,252,"        calendar.set(this.year, Calendar.DECEMBER, 31, 23, 59, 59);",0.05,0,,0
org/jfree/data/time/Year,17,253,"        calendar.set(Calendar.MILLISECOND, 999);",0.05,0,,0
org/jfree/data/time/Year,17,256,        return calendar.getTime().getTime();,0.05,0,,0
org/jfree/data/time/Year,17,317,        if (o1 instanceof Year) {,0.05,0,,0
org/jfree/data/time/Year,17,318,            Year y = (Year) o1;,0.05,0,,0
org/jfree/data/time/Year,17,319,            result = this.year - y.getYear();,0.05,0,,0
org/jfree/data/time/Year,17,320,        },0.05,0,,0
org/jfree/data/time/Year,17,336,        return result;,0.05,0,,0
org/jfree/data/time/TimeSeries,17,586,"        add(period, value, true);",0.04762,0,,0
org/jfree/data/time/TimeSeries,17,587,    },0.04762,0,,0
org/jfree/data/time/TimeSeries,17,600,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",0.04762,0,,0
org/jfree/data/time/TimeSeries,17,601,"        add(item, notify);",0.04762,0,,0
org/jfree/data/time/TimeSeries,17,602,    },0.04762,0,,0
org/jfree/data/time/TimeSeries,17,153,"        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, ",0.04348,0,,0
org/jfree/data/time/TimeSeries,17,155,    },0.04348,0,,0
org/jfree/data/general/Series,17,313,        if (this.notify) {,0.04,0,,0
org/jfree/data/general/Series,17,314,            notifyListeners(new SeriesChangeEvent(this));,0.04,0,,0
org/jfree/data/general/Series,17,316,    },0.04,0,,0
org/jfree/data/general/Series,17,326,        Object[] listenerList = this.listeners.getListenerList();,0.04,0,,0
org/jfree/data/general/Series,17,327,        for (int i = listenerList.length - 2; i >= 0; i -= 2) {,0.04,0,,0
org/jfree/data/general/Series,17,334,    },0.04,0,,0
org/jfree/data/general/SeriesChangeEvent,17,61,        super(source);,0.04,0,,0
org/jfree/data/general/SeriesChangeEvent,17,62,    },0.04,0,,0
org/jfree/data/time/TimeSeries,17,339,        return (TimeSeriesDataItem) this.data.get(index);,0.04,0,,0
org/jfree/data/time/TimeSeries,17,370,        return getDataItem(index).getPeriod();,0.04,0,,0
org/jfree/data/time/TimeSeries,17,489,        if (item == null) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,492,        if (!item.getPeriod().getClass().equals(this.timePeriodClass)) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,504,        boolean added = false;,0.04,0,,0
org/jfree/data/time/TimeSeries,17,505,        int count = getItemCount();,0.04,0,,0
org/jfree/data/time/TimeSeries,17,506,        if (count == 0) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,507,            this.data.add(item);,0.04,0,,0
org/jfree/data/time/TimeSeries,17,508,            added = true;,0.04,0,,0
org/jfree/data/time/TimeSeries,17,511,            RegularTimePeriod last = getTimePeriod(getItemCount() - 1);,0.04,0,,0
org/jfree/data/time/TimeSeries,17,512,            if (item.getPeriod().compareTo(last) > 0) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,513,                this.data.add(item);,0.04,0,,0
org/jfree/data/time/TimeSeries,17,514,                added = true;,0.04,0,,0
org/jfree/data/time/TimeSeries,17,534,        if (added) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,536,            if (getItemCount() > this.maximumItemCount) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,540,"            removeAgedItems(false);  // remove old items if necessary, but",0.04,0,,0
org/jfree/data/time/TimeSeries,17,543,            if (notify) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,544,                fireSeriesChanged();,0.04,0,,0
org/jfree/data/time/TimeSeries,17,548,    },0.04,0,,0
org/jfree/data/time/TimeSeries,17,738,        if (getItemCount() > 1) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,739,            long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();,0.04,0,,0
org/jfree/data/time/TimeSeries,17,740,            boolean removed = false;,0.04,0,,0
org/jfree/data/time/TimeSeries,17,742,                    > this.maximumItemAge) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,746,            if (removed && notify) {,0.04,0,,0
org/jfree/data/time/TimeSeries,17,750,    },0.04,0,,0
org/jfree/data/time/RegularTimePeriod,17,70,"public abstract class RegularTimePeriod implements TimePeriod, Comparable, ",0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,92,"    public TimeSeriesDataItem(RegularTimePeriod period, Number value) {",0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,93,        if (period == null) {,0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,96,        this.period = period;,0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,97,        this.value = value;,0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,98,    },0.04,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,116,        return this.period;,0.04,0,,0
org/jfree/data/time/TimeSeries,17,238,        return this.data.size();,0.03846,0,,0
org/jfree/data/general/Series,17,102,"        this(key, null);",0.03448,0,,0
org/jfree/data/general/Series,17,103,    },0.03448,0,,0
org/jfree/data/general/Series,17,111,"    protected Series(Comparable key, String description) {",0.03448,0,,0
org/jfree/data/general/Series,17,112,        if (key == null) {,0.03448,0,,0
org/jfree/data/general/Series,17,115,        this.key = key;,0.03448,0,,0
org/jfree/data/general/Series,17,116,        this.description = description;,0.03448,0,,0
org/jfree/data/general/Series,17,117,        this.listeners = new EventListenerList();,0.03448,0,,0
org/jfree/data/general/Series,17,118,        this.propertyChangeSupport = new PropertyChangeSupport(this);,0.03448,0,,0
org/jfree/data/general/Series,17,119,        this.notify = true;   ,0.03448,0,,0
org/jfree/data/general/Series,17,120,    },0.03448,0,,0
org/jfree/data/time/TimeSeries,17,172,        super(name);,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,173,        this.domain = domain;,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,174,        this.range = range;,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,175,        this.timePeriodClass = timePeriodClass;,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,176,        this.data = new java.util.ArrayList();,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,177,        this.maximumItemCount = Integer.MAX_VALUE;,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,178,        this.maximumItemAge = Long.MAX_VALUE;,0.03448,0,,0
org/jfree/data/time/TimeSeries,17,179,    },0.03448,0,,0
org/jfree/data/time/RegularTimePeriod,17,161,    public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault();,0.03448,0,,0
org/jfree/data/general/Series,17,113,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,,0
org/jfree/data/general/Series,17,130,        return this.key;,0.0,0,,0
org/jfree/data/general/Series,17,142,        if (key == null) {,0.0,0,,0
org/jfree/data/general/Series,17,143,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,,0
org/jfree/data/general/Series,17,145,        Comparable old = this.key;,0.0,0,,0
org/jfree/data/general/Series,17,146,        this.key = key;,0.0,0,,0
org/jfree/data/general/Series,17,147,"        this.propertyChangeSupport.firePropertyChange(""Key"", old, key);",0.0,0,,0
org/jfree/data/general/Series,17,148,    },0.0,0,,0
org/jfree/data/general/Series,17,158,        return this.description;,0.0,0,,0
org/jfree/data/general/Series,17,170,        String old = this.description;,0.0,0,,0
org/jfree/data/general/Series,17,171,        this.description = description;,0.0,0,,0
org/jfree/data/general/Series,17,172,"        this.propertyChangeSupport.firePropertyChange(""Description"", old, ",0.0,0,,0
org/jfree/data/general/Series,17,174,    },0.0,0,,0
org/jfree/data/general/Series,17,185,        return this.notify;,0.0,0,,0
org/jfree/data/general/Series,17,197,        if (this.notify != notify) {,0.0,0,,0
org/jfree/data/general/Series,17,198,            this.notify = notify;,0.0,0,,0
org/jfree/data/general/Series,17,199,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/general/Series,17,201,    },0.0,0,,0
org/jfree/data/general/Series,17,212,        return (getItemCount() == 0);,0.0,0,,0
org/jfree/data/general/Series,17,241,        Series clone = (Series) super.clone();,0.0,0,,0
org/jfree/data/general/Series,17,242,        clone.listeners = new EventListenerList();,0.0,0,,0
org/jfree/data/general/Series,17,243,        clone.propertyChangeSupport = new PropertyChangeSupport(clone);,0.0,0,,0
org/jfree/data/general/Series,17,244,        return clone;,0.0,0,,0
org/jfree/data/general/Series,17,256,        if (obj == this) {,0.0,0,,0
org/jfree/data/general/Series,17,257,            return true;,0.0,0,,0
org/jfree/data/general/Series,17,259,        if (!(obj instanceof Series)) {,0.0,0,,0
org/jfree/data/general/Series,17,260,            return false;,0.0,0,,0
org/jfree/data/general/Series,17,262,        Series that = (Series) obj;,0.0,0,,0
org/jfree/data/general/Series,17,263,        if (!getKey().equals(that.getKey())) {,0.0,0,,0
org/jfree/data/general/Series,17,264,            return false;,0.0,0,,0
org/jfree/data/general/Series,17,266,"        if (!ObjectUtilities.equal(getDescription(), that.getDescription())) {",0.0,0,,0
org/jfree/data/general/Series,17,267,            return false;,0.0,0,,0
org/jfree/data/general/Series,17,269,        return true;,0.0,0,,0
org/jfree/data/general/Series,17,279,        result = this.key.hashCode();,0.0,0,,0
org/jfree/data/general/Series,17,280,        result = 29 * result + (this.description != null ,0.0,0,,0
org/jfree/data/general/Series,17,282,        return result;,0.0,0,,0
org/jfree/data/general/Series,17,295,"        this.listeners.add(SeriesChangeListener.class, listener);",0.0,0,,0
org/jfree/data/general/Series,17,296,    },0.0,0,,0
org/jfree/data/general/Series,17,305,"        this.listeners.remove(SeriesChangeListener.class, listener);",0.0,0,,0
org/jfree/data/general/Series,17,306,    },0.0,0,,0
org/jfree/data/general/Series,17,328,            if (listenerList[i] == SeriesChangeListener.class) {,0.0,0,,0
org/jfree/data/general/Series,17,329,                ((SeriesChangeListener) listenerList[i + 1]).seriesChanged(,0.0,0,,0
org/jfree/data/general/Series,17,342,        this.propertyChangeSupport.addPropertyChangeListener(listener);,0.0,0,,0
org/jfree/data/general/Series,17,343,    },0.0,0,,0
org/jfree/data/general/Series,17,351,        this.propertyChangeSupport.removePropertyChangeListener(listener);,0.0,0,,0
org/jfree/data/general/Series,17,352,    },0.0,0,,0
org/jfree/data/general/Series,17,363,"        this.propertyChangeSupport.firePropertyChange(property, oldValue, ",0.0,0,,0
org/jfree/data/general/Series,17,365,    },0.0,0,,0
org/jfree/data/general/SeriesException,17,61,        super(message);,0.0,0,,0
org/jfree/data/general/SeriesException,17,62,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,189,        return this.domain;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,202,        String old = this.domain;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,203,        this.domain = description;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,204,"        firePropertyChange(""Domain"", old, description);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,205,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,215,        return this.range;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,227,        String old = this.range;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,228,        this.range = description;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,229,"        firePropertyChange(""Range"", old, description);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,230,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,248,        return Collections.unmodifiableList(this.data);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,260,        return this.maximumItemCount;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,275,        if (maximum < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,276,"            throw new IllegalArgumentException(""Negative 'maximum' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,278,        this.maximumItemCount = maximum;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,279,        int count = this.data.size();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,280,        if (count > maximum) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,281,"            delete(0, count - maximum - 1);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,283,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,293,        return this.maximumItemAge;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,309,        if (periods < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,310,"            throw new IllegalArgumentException(""Negative 'periods' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,312,        this.maximumItemAge = periods;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,313,        removeAgedItems(true);  // remove old items and notify if necessary,0.0,0,,0
org/jfree/data/time/TimeSeries,17,314,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,326,        return this.timePeriodClass;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,353,        int index = getIndex(period);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,354,        if (index >= 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,355,            return (TimeSeriesDataItem) this.data.get(index);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,358,            return null;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,380,        RegularTimePeriod last = getTimePeriod(getItemCount() - 1);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,381,        return last.next();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,390,        Collection result = new java.util.ArrayList();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,391,        for (int i = 0; i < getItemCount(); i++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,392,            result.add(getTimePeriod(i));,0.0,0,,0
org/jfree/data/time/TimeSeries,17,394,        return result;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,407,        Collection result = new java.util.ArrayList();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,408,        for (int i = 0; i < series.getItemCount(); i++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,409,            RegularTimePeriod period = series.getTimePeriod(i);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,410,            int index = getIndex(period);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,411,            if (index < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,412,                result.add(period);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,415,        return result;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,428,        if (period == null) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,429,"            throw new IllegalArgumentException(""Null 'period' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,431,        TimeSeriesDataItem dummy = new TimeSeriesDataItem(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,433,"        return Collections.binarySearch(this.data, dummy);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,444,        return getDataItem(index).getValue();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,457,        int index = getIndex(period);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,458,        if (index >= 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,459,            return getValue(index);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,462,            return null;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,476,"        add(item, true);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,477,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,490,"            throw new IllegalArgumentException(""Null 'item' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,493,            StringBuffer b = new StringBuffer();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,494,"            b.append(""You are trying to add data where the time period class "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,495,"            b.append(""is "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,496,            b.append(item.getPeriod().getClass().getName());,0.0,0,,0
org/jfree/data/time/TimeSeries,17,497,"            b.append("", but the TimeSeries is expecting an instance of "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,498,            b.append(this.timePeriodClass.getName());,0.0,0,,0
org/jfree/data/time/TimeSeries,17,499,"            b.append(""."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,500,            throw new SeriesException(b.toString());,0.0,0,,0
org/jfree/data/time/TimeSeries,17,517,"                int index = Collections.binarySearch(this.data, item);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,518,                if (index < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,519,"                    this.data.add(-index - 1, item);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,520,                    added = true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,523,                    StringBuffer b = new StringBuffer();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,524,"                    b.append(""You are attempting to add an observation for "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,525,"                    b.append(""the time period "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,526,                    b.append(item.getPeriod().toString());,0.0,0,,0
org/jfree/data/time/TimeSeries,17,527,"                    b.append("" but the series already contains an observation"");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,528,"                    b.append("" for that time period. Duplicates are not "");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,529,"                    b.append(""permitted.  Try using the addOrUpdate() method."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,530,                    throw new SeriesException(b.toString());,0.0,0,,0
org/jfree/data/time/TimeSeries,17,537,                this.data.remove(0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,559,"        add(period, value, true);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,560,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,572,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,573,"        add(item, notify);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,574,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,612,"        TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,613,"        int index = Collections.binarySearch(this.data, temp);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,614,        if (index >= 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,615,            TimeSeriesDataItem pair = (TimeSeriesDataItem) this.data.get(index);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,616,            pair.setValue(value);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,617,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,618,        },0.0,0,,0
org/jfree/data/time/TimeSeries,17,620,            throw new SeriesException(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,625,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,634,        TimeSeriesDataItem item = getDataItem(index);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,635,        item.setValue(value);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,636,        fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,637,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,648,"        TimeSeries overwritten = new TimeSeries(""Overwritten values from: "" ",0.0,0,,0
org/jfree/data/time/TimeSeries,17,650,        for (int i = 0; i < series.getItemCount(); i++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,651,            TimeSeriesDataItem item = series.getDataItem(i);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,652,"            TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(), ",0.0,0,,0
org/jfree/data/time/TimeSeries,17,654,            if (oldItem != null) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,655,                overwritten.add(oldItem);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,658,        return overwritten;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,675,"        return this.addOrUpdate(period, new Double(value));    ",0.0,0,,0
org/jfree/data/time/TimeSeries,17,693,        if (period == null) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,694,"            throw new IllegalArgumentException(""Null 'period' argument."");   ",0.0,0,,0
org/jfree/data/time/TimeSeries,17,696,        TimeSeriesDataItem overwritten = null;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,698,"        TimeSeriesDataItem key = new TimeSeriesDataItem(period, value);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,699,"        int index = Collections.binarySearch(this.data, key);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,700,        if (index >= 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,701,            TimeSeriesDataItem existing ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,703,            overwritten = (TimeSeriesDataItem) existing.clone();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,704,            existing.setValue(value);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,705,"            removeAgedItems(false);  // remove old items if necessary, but",0.0,0,,0
org/jfree/data/time/TimeSeries,17,708,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,709,        },0.0,0,,0
org/jfree/data/time/TimeSeries,17,711,"            this.data.add(-index - 1, new TimeSeriesDataItem(period, value));",0.0,0,,0
org/jfree/data/time/TimeSeries,17,714,            if (getItemCount() > this.maximumItemCount) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,715,                this.data.remove(0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,718,"            removeAgedItems(false);  // remove old items if necessary, but",0.0,0,,0
org/jfree/data/time/TimeSeries,17,721,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,723,        return overwritten;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,743,                this.data.remove(0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,744,                removed = true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,747,                fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,765,        long index = Long.MAX_VALUE; ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,767,            Method m = RegularTimePeriod.class.getDeclaredMethod(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,770,            RegularTimePeriod newest = (RegularTimePeriod) m.invoke(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,773,            index = newest.getSerialIndex();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,783,        },0.0,0,,0
org/jfree/data/time/TimeSeries,17,775,        catch (NoSuchMethodException e) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,776,            e.printStackTrace();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,778,        catch (IllegalAccessException e) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,779,            e.printStackTrace();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,781,        catch (InvocationTargetException e) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,782,            e.printStackTrace();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,787,        boolean removed = false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,788,        while (getItemCount() > 0 && (index ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,790,            this.data.remove(0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,791,            removed = true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,793,        if (removed && notify) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,794,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,796,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,803,        if (this.data.size() > 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,804,            this.data.clear();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,805,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,807,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,818,        int index = getIndex(period);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,819,        if (index >= 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,820,            this.data.remove(index);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,821,            fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,823,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,832,        if (end < start) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,833,"            throw new IllegalArgumentException(""Requires start <= end."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,835,        for (int i = 0; i <= (end - start); i++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,836,            this.data.remove(start);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,838,        fireSeriesChanged();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,839,    },0.0,0,,0
org/jfree/data/time/TimeSeries,17,858,        return clone;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,877,"            throw new IllegalArgumentException(""Requires start >= 0."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,882,        TimeSeries copy = (TimeSeries) super.clone();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,884,        copy.data = new java.util.ArrayList();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,885,        if (this.data.size() > 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,886,            for (int index = start; index <= end; index++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,887,                TimeSeriesDataItem item ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,889,                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,891,                    copy.add(clone);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,895,                },0.0,0,,0
org/jfree/data/time/TimeSeries,17,893,                catch (SeriesException e) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,894,                    e.printStackTrace();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,898,        return copy;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,916,        if (start == null) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,917,"            throw new IllegalArgumentException(""Null 'start' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,919,        if (end == null) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,920,"            throw new IllegalArgumentException(""Null 'end' argument."");",0.0,0,,0
org/jfree/data/time/TimeSeries,17,922,        if (start.compareTo(end) > 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,923,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,926,        boolean emptyRange = false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,927,        int startIndex = getIndex(start);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,928,        if (startIndex < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,929,            startIndex = -(startIndex + 1);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,930,            if (startIndex == this.data.size()) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,931,                emptyRange = true;  // start is after last data item,0.0,0,,0
org/jfree/data/time/TimeSeries,17,934,        int endIndex = getIndex(end);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,935,        if (endIndex < 0) {             // end period is not in original series,0.0,0,,0
org/jfree/data/time/TimeSeries,17,936,            endIndex = -(endIndex + 1); // this is first item AFTER end period,0.0,0,,0
org/jfree/data/time/TimeSeries,17,937,            endIndex = endIndex - 1;    // so this is last item BEFORE end ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,939,        if (endIndex < 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,940,            emptyRange = true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,942,        if (emptyRange) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,943,            TimeSeries copy = (TimeSeries) super.clone();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,944,            copy.data = new java.util.ArrayList();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,945,            return copy;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,948,"            return createCopy(startIndex, endIndex);",0.0,0,,0
org/jfree/data/time/TimeSeries,17,961,        if (object == this) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,962,            return true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,964,        if (!(object instanceof TimeSeries) || !super.equals(object)) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,965,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,967,        TimeSeries s = (TimeSeries) object;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,968,        if (!ObjectUtilities.equal(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,971,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,974,        if (!ObjectUtilities.equal(,0.0,0,,0
org/jfree/data/time/TimeSeries,17,977,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,980,        if (!getClass().equals(s.getClass())) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,981,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,984,        if (getMaximumItemAge() != s.getMaximumItemAge()) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,985,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,988,        if (getMaximumItemCount() != s.getMaximumItemCount()) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,989,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,992,        int count = getItemCount();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,993,        if (count != s.getItemCount()) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,994,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,996,        for (int i = 0; i < count; i++) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,997,            if (!getDataItem(i).equals(s.getDataItem(i))) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,998,                return false;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1001,        return true;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1010,        int result = super.hashCode();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1011,        result = 29 * result + (this.domain != null ? this.domain.hashCode() ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1013,        result = 29 * result + (this.range != null ? this.range.hashCode() : 0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1014,        result = 29 * result + (this.timePeriodClass != null ,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1018,        int count = getItemCount();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1019,        if (count > 0) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1020,            TimeSeriesDataItem item = getDataItem(0);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1021,            result = 29 * result + item.hashCode();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1023,        if (count > 1) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1024,            TimeSeriesDataItem item = getDataItem(count - 1);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1025,            result = 29 * result + item.hashCode();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1027,        if (count > 2) {,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1028,            TimeSeriesDataItem item = getDataItem(count / 2);,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1029,            result = 29 * result + item.hashCode();,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1031,        result = 29 * result + this.maximumItemCount;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1032,        result = 29 * result + (int) this.maximumItemAge;,0.0,0,,0
org/jfree/data/time/TimeSeries,17,1033,        return result;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,85,        RegularTimePeriod result = null;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,87,            Constructor constructor = c.getDeclaredConstructor(,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,89,            result = (RegularTimePeriod) constructor.newInstance(,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,94,        },0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,92,        catch (Exception e) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,95,        return result;  ,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,107,        if (c.equals(Year.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,108,            return Quarter.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,110,        else if (c.equals(Quarter.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,111,            return Month.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,113,        else if (c.equals(Month.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,114,            return Day.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,116,        else if (c.equals(Day.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,117,            return Hour.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,119,        else if (c.equals(Hour.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,120,            return Minute.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,122,        else if (c.equals(Minute.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,123,            return Second.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,125,        else if (c.equals(Second.class)) {,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,126,            return Millisecond.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,129,            return Millisecond.class;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,182,        return new Date(getFirstMillisecond());,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,194,        return new Date(getLastMillisecond());,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,254,        long m1 = getFirstMillisecond();,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,255,        long m2 = getLastMillisecond();,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,256,        return m1 + (m2 - m1) / 2;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,268,        long m1 = getFirstMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,269,        long m2 = getLastMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,270,        return m1 + (m2 - m1) / 2;,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,279,        return String.valueOf(getStart());,0.0,0,,0
org/jfree/data/time/RegularTimePeriod,17,88,"                    new Class[] {Date.class, TimeZone.class});",0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,94,"            throw new IllegalArgumentException(""Null 'period' argument."");   ",0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,107,"        this(period, new Double(value));",0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,108,    },0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,125,        return this.value;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,134,        this.value = value;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,135,    },0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,145,        if (this == o) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,146,            return true;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,148,        if (!(o instanceof TimeSeriesDataItem)) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,149,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,151,        TimeSeriesDataItem timeSeriesDataItem = (TimeSeriesDataItem) o;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,152,        if (this.period != null) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,153,            if (!this.period.equals(timeSeriesDataItem.period)) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,154,                return false;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,157,        else if (timeSeriesDataItem.period != null) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,158,           return false;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,161,        if (this.value != null) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,162,            if (!this.value.equals(timeSeriesDataItem.value)) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,163,                return false;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,166,        else if (timeSeriesDataItem.value != null) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,167,            return false;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,170,        return true;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,180,        result = (this.period != null ? this.period.hashCode() : 0);,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,181,        result = 29 * result + (this.value != null ? this.value.hashCode() : 0);,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,182,        return result;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,203,        if (o1 instanceof TimeSeriesDataItem) {,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,204,            TimeSeriesDataItem datapair = (TimeSeriesDataItem) o1;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,205,            result = getPeriod().compareTo(datapair.getPeriod());,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,206,        },0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,212,            result = 1;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,215,        return result;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,226,        Object clone = null;,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,228,            clone = super.clone();,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,232,        },0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,230,        catch (CloneNotSupportedException e) { // won't get here...,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,231,            e.printStackTrace();,0.0,0,,0
org/jfree/data/time/TimeSeriesDataItem,17,233,        return clone;,0.0,0,,0
org/jfree/data/time/SerialDate,17,210,    protected SerialDate() {,0.0,0,,0
org/jfree/data/time/SerialDate,17,211,    },0.0,0,,0
org/jfree/data/time/SerialDate,17,92,        DATE_FORMAT_SYMBOLS = new SimpleDateFormat().getDateFormatSymbols();,0.0,0,,0
org/jfree/data/time/SerialDate,17,137,    static final int[] LAST_DAY_OF_MONTH =,0.0,0,,0
org/jfree/data/time/SerialDate,17,141,    static final int[] AGGREGATE_DAYS_TO_END_OF_MONTH =,0.0,0,,0
org/jfree/data/time/SerialDate,17,145,    static final int[] AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,0.0,0,,0
org/jfree/data/time/SerialDate,17,149,    static final int[] LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_MONTH =,0.0,0,,0
org/jfree/data/time/SerialDate,17,156,        LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,0.0,0,,0
org/jfree/data/time/SerialDate,17,224,        switch(code) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,232,                return true;,0.0,0,,0
org/jfree/data/time/SerialDate,17,234,                return false;,0.0,0,,0
org/jfree/data/time/SerialDate,17,249,        final String[] shortWeekdayNames ,0.0,0,,0
org/jfree/data/time/SerialDate,17,251,        final String[] weekDayNames = DATE_FORMAT_SYMBOLS.getWeekdays();,0.0,0,,0
org/jfree/data/time/SerialDate,17,253,        int result = -1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,254,        s = s.trim();,0.0,0,,0
org/jfree/data/time/SerialDate,17,255,        for (int i = 0; i < weekDayNames.length; i++) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,256,            if (s.equals(shortWeekdayNames[i])) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,257,                result = i;,0.0,0,,0
org/jfree/data/time/SerialDate,17,258,                break;,0.0,0,,0
org/jfree/data/time/SerialDate,17,260,            if (s.equals(weekDayNames[i])) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,261,                result = i;,0.0,0,,0
org/jfree/data/time/SerialDate,17,262,                break;,0.0,0,,0
org/jfree/data/time/SerialDate,17,265,        return result;,0.0,0,,0
org/jfree/data/time/SerialDate,17,280,        final String[] weekdays = DATE_FORMAT_SYMBOLS.getWeekdays();,0.0,0,,0
org/jfree/data/time/SerialDate,17,281,        return weekdays[weekday];,0.0,0,,0
org/jfree/data/time/SerialDate,17,292,        return getMonths(false);,0.0,0,,0
org/jfree/data/time/SerialDate,17,306,        if (shortened) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,307,            return DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,310,            return DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,325,        switch(code) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,338,                return true;,0.0,0,,0
org/jfree/data/time/SerialDate,17,340,                return false;,0.0,0,,0
org/jfree/data/time/SerialDate,17,354,        switch(code) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,357,            case MARCH: return 1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,360,            case JUNE: return 2;,0.0,0,,0
org/jfree/data/time/SerialDate,17,363,            case SEPTEMBER: return 3;,0.0,0,,0
org/jfree/data/time/SerialDate,17,366,            case DECEMBER: return 4;,0.0,0,,0
org/jfree/data/time/SerialDate,17,367,            default: throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SerialDate,17,385,"        return monthCodeToString(month, false);",0.0,0,,0
org/jfree/data/time/SerialDate,17,405,        if (!isValidMonthCode(month)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,406,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SerialDate,17,412,        if (shortened) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,413,            months = DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,416,            months = DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,419,        return months[month - 1];,0.0,0,,0
org/jfree/data/time/SerialDate,17,437,        final String[] shortMonthNames = DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,438,        final String[] monthNames = DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,,0
org/jfree/data/time/SerialDate,17,440,        int result = -1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,441,        s = s.trim();,0.0,0,,0
org/jfree/data/time/SerialDate,17,445,            result = Integer.parseInt(s);,0.0,0,,0
org/jfree/data/time/SerialDate,17,449,        },0.0,0,,0
org/jfree/data/time/SerialDate,17,447,        catch (NumberFormatException e) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,452,        if ((result < 1) || (result > 12)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,453,            for (int i = 0; i < monthNames.length; i++) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,454,                if (s.equals(shortMonthNames[i])) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,455,                    result = i + 1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,456,                    break;,0.0,0,,0
org/jfree/data/time/SerialDate,17,458,                if (s.equals(monthNames[i])) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,459,                    result = i + 1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,460,                    break;,0.0,0,,0
org/jfree/data/time/SerialDate,17,465,        return result;,0.0,0,,0
org/jfree/data/time/SerialDate,17,479,        switch(code) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,484,            case LAST_WEEK_IN_MONTH: return true;,0.0,0,,0
org/jfree/data/time/SerialDate,17,485,            default: return false;,0.0,0,,0
org/jfree/data/time/SerialDate,17,499,        if ((yyyy % 4) != 0) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,500,            return false;,0.0,0,,0
org/jfree/data/time/SerialDate,17,502,        else if ((yyyy % 400) == 0) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,503,            return true;,0.0,0,,0
org/jfree/data/time/SerialDate,17,505,        else if ((yyyy % 100) == 0) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,506,            return false;,0.0,0,,0
org/jfree/data/time/SerialDate,17,509,            return true;,0.0,0,,0
org/jfree/data/time/SerialDate,17,526,        final int leap4 = (yyyy - 1896) / 4;,0.0,0,,0
org/jfree/data/time/SerialDate,17,527,        final int leap100 = (yyyy - 1800) / 100;,0.0,0,,0
org/jfree/data/time/SerialDate,17,528,        final int leap400 = (yyyy - 1600) / 400;,0.0,0,,0
org/jfree/data/time/SerialDate,17,529,        return leap4 - leap100 + leap400;,0.0,0,,0
org/jfree/data/time/SerialDate,17,544,        final int result = LAST_DAY_OF_MONTH[month];,0.0,0,,0
org/jfree/data/time/SerialDate,17,545,        if (month != FEBRUARY) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,546,            return result;,0.0,0,,0
org/jfree/data/time/SerialDate,17,548,        else if (isLeapYear(yyyy)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,549,            return result + 1;,0.0,0,,0
org/jfree/data/time/SerialDate,17,552,            return result;,0.0,0,,0
org/jfree/data/time/SerialDate,17,568,        final int serialDayNumber = base.toSerial() + days;,0.0,0,,0
org/jfree/data/time/SerialDate,17,569,        return SerialDate.createInstance(serialDayNumber);,0.0,0,,0
org/jfree/data/time/SerialDate,17,588,        final int yy = (12 * base.getYYYY() + base.getMonth() + months - 1) ,0.0,0,,0
org/jfree/data/time/SerialDate,17,590,        final int mm = (12 * base.getYYYY() + base.getMonth() + months - 1) ,0.0,0,,0
org/jfree/data/time/SerialDate,17,592,        final int dd = Math.min(,0.0,0,,0
org/jfree/data/time/SerialDate,17,595,"        return SerialDate.createInstance(dd, mm, yy);",0.0,0,,0
org/jfree/data/time/SerialDate,17,610,        final int baseY = base.getYYYY();,0.0,0,,0
org/jfree/data/time/SerialDate,17,611,        final int baseM = base.getMonth();,0.0,0,,0
org/jfree/data/time/SerialDate,17,612,        final int baseD = base.getDayOfMonth();,0.0,0,,0
org/jfree/data/time/SerialDate,17,614,        final int targetY = baseY + years;,0.0,0,,0
org/jfree/data/time/SerialDate,17,615,        final int targetD = Math.min(,0.0,0,,0
org/jfree/data/time/SerialDate,17,619,"        return SerialDate.createInstance(targetD, baseM, targetY);",0.0,0,,0
org/jfree/data/time/SerialDate,17,637,        if (!SerialDate.isValidWeekdayCode(targetWeekday)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,638,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SerialDate,17,645,        final int baseDOW = base.getDayOfWeek();,0.0,0,,0
org/jfree/data/time/SerialDate,17,646,        if (baseDOW > targetWeekday) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,647,"            adjust = Math.min(0, targetWeekday - baseDOW);",0.0,0,,0
org/jfree/data/time/SerialDate,17,650,"            adjust = -7 + Math.max(0, targetWeekday - baseDOW);",0.0,0,,0
org/jfree/data/time/SerialDate,17,653,"        return SerialDate.addDays(adjust, base);",0.0,0,,0
org/jfree/data/time/SerialDate,17,671,        if (!SerialDate.isValidWeekdayCode(targetWeekday)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,672,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SerialDate,17,679,        final int baseDOW = base.getDayOfWeek();,0.0,0,,0
org/jfree/data/time/SerialDate,17,680,        if (baseDOW > targetWeekday) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,681,"            adjust = 7 + Math.min(0, targetWeekday - baseDOW);",0.0,0,,0
org/jfree/data/time/SerialDate,17,684,"            adjust = Math.max(0, targetWeekday - baseDOW);",0.0,0,,0
org/jfree/data/time/SerialDate,17,687,"        return SerialDate.addDays(adjust, base);",0.0,0,,0
org/jfree/data/time/SerialDate,17,704,        if (!SerialDate.isValidWeekdayCode(targetDOW)) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,705,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SerialDate,17,711,        final int baseDOW = base.getDayOfWeek();,0.0,0,,0
org/jfree/data/time/SerialDate,17,712,        int adjust = -Math.abs(targetDOW - baseDOW);,0.0,0,,0
org/jfree/data/time/SerialDate,17,713,        if (adjust >= 4) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,714,            adjust = 7 - adjust;,0.0,0,,0
org/jfree/data/time/SerialDate,17,716,        if (adjust <= -4) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,717,            adjust = 7 + adjust;,0.0,0,,0
org/jfree/data/time/SerialDate,17,719,"        return SerialDate.addDays(adjust, base);",0.0,0,,0
org/jfree/data/time/SerialDate,17,731,        final int last = SerialDate.lastDayOfMonth(,0.0,0,,0
org/jfree/data/time/SerialDate,17,734,"        return SerialDate.createInstance(last, base.getMonth(), base.getYYYY());",0.0,0,,0
org/jfree/data/time/SerialDate,17,748,        switch (count) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,749,"            case SerialDate.FIRST_WEEK_IN_MONTH : return ""First"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,750,"            case SerialDate.SECOND_WEEK_IN_MONTH : return ""Second"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,751,"            case SerialDate.THIRD_WEEK_IN_MONTH : return ""Third"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,752,"            case SerialDate.FOURTH_WEEK_IN_MONTH : return ""Fourth"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,753,"            case SerialDate.LAST_WEEK_IN_MONTH : return ""Last"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,755,"                return ""SerialDate.weekInMonthToString(): invalid code."";",0.0,0,,0
org/jfree/data/time/SerialDate,17,771,        switch (relative) {,0.0,0,,0
org/jfree/data/time/SerialDate,17,772,"            case SerialDate.PRECEDING : return ""Preceding"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,773,"            case SerialDate.NEAREST : return ""Nearest"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,774,"            case SerialDate.FOLLOWING : return ""Following"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,775,"            default : return ""ERROR : Relative To String"";",0.0,0,,0
org/jfree/data/time/SerialDate,17,792,"        return new SpreadsheetDate(day, month, yyyy);",0.0,0,,0
org/jfree/data/time/SerialDate,17,804,        return new SpreadsheetDate(serial);,0.0,0,,0
org/jfree/data/time/SerialDate,17,816,        final GregorianCalendar calendar = new GregorianCalendar();,0.0,0,,0
org/jfree/data/time/SerialDate,17,817,        calendar.setTime(date);,0.0,0,,0
org/jfree/data/time/SerialDate,17,818,"        return new SpreadsheetDate(calendar.get(Calendar.DATE),",0.0,0,,0
org/jfree/data/time/SerialDate,17,849,        return this.description;,0.0,0,,0
org/jfree/data/time/SerialDate,17,859,        this.description = description;,0.0,0,,0
org/jfree/data/time/SerialDate,17,860,    },0.0,0,,0
org/jfree/data/time/SerialDate,17,868,"        return getDayOfMonth() + ""-"" + SerialDate.monthCodeToString(getMonth())",0.0,0,,0
org/jfree/data/time/SerialDate,17,1005,"        return getPreviousDayOfWeek(targetDOW, this);",0.0,0,,0
org/jfree/data/time/SerialDate,17,1018,"        return getFollowingDayOfWeek(targetDOW, this);",0.0,0,,0
org/jfree/data/time/SerialDate,17,1029,"        return getNearestDayOfWeek(targetDOW, this);",0.0,0,,0
org/jfree/data/time/Month,17,94,        this(new Date());,0.0,0,,0
org/jfree/data/time/Month,17,95,    },0.0,0,,0
org/jfree/data/time/Month,17,103,"    public Month(int month, int year) {",0.0,0,,0
org/jfree/data/time/Month,17,104,        if ((month < 1) || (month > 12)) {,0.0,0,,0
org/jfree/data/time/Month,17,105,"            throw new IllegalArgumentException(""Month outside valid range."");",0.0,0,,0
org/jfree/data/time/Month,17,107,        this.month = month;,0.0,0,,0
org/jfree/data/time/Month,17,108,        this.year = year;,0.0,0,,0
org/jfree/data/time/Month,17,109,        peg(Calendar.getInstance());,0.0,0,,0
org/jfree/data/time/Month,17,110,    },0.0,0,,0
org/jfree/data/time/Month,17,118,"    public Month(int month, Year year) {",0.0,0,,0
org/jfree/data/time/Month,17,119,        if ((month < 1) || (month > 12)) {,0.0,0,,0
org/jfree/data/time/Month,17,120,"            throw new IllegalArgumentException(""Month outside valid range."");",0.0,0,,0
org/jfree/data/time/Month,17,122,        this.month = month;,0.0,0,,0
org/jfree/data/time/Month,17,123,        this.year = year.getYear();,0.0,0,,0
org/jfree/data/time/Month,17,124,        peg(Calendar.getInstance());,0.0,0,,0
org/jfree/data/time/Month,17,125,    },0.0,0,,0
org/jfree/data/time/Month,17,134,"        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE);",0.0,0,,0
org/jfree/data/time/Month,17,135,    },0.0,0,,0
org/jfree/data/time/Month,17,145,"    public Month(Date time, TimeZone zone) {",0.0,0,,0
org/jfree/data/time/Month,17,146,        Calendar calendar = Calendar.getInstance(zone);,0.0,0,,0
org/jfree/data/time/Month,17,147,        calendar.setTime(time);,0.0,0,,0
org/jfree/data/time/Month,17,148,        this.month = calendar.get(Calendar.MONTH) + 1;,0.0,0,,0
org/jfree/data/time/Month,17,149,        this.year = calendar.get(Calendar.YEAR);,0.0,0,,0
org/jfree/data/time/Month,17,150,        peg(calendar);,0.0,0,,0
org/jfree/data/time/Month,17,151,    },0.0,0,,0
org/jfree/data/time/Month,17,159,        return new Year(this.year);,0.0,0,,0
org/jfree/data/time/Month,17,168,        return this.year;,0.0,0,,0
org/jfree/data/time/Month,17,177,        return this.month;,0.0,0,,0
org/jfree/data/time/Month,17,191,        return this.firstMillisecond;,0.0,0,,0
org/jfree/data/time/Month,17,205,        return this.lastMillisecond;,0.0,0,,0
org/jfree/data/time/Month,17,217,        this.firstMillisecond = getFirstMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/Month,17,218,        this.lastMillisecond = getLastMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/Month,17,219,    },0.0,0,,0
org/jfree/data/time/Month,17,228,        if (this.month != MonthConstants.JANUARY) {,0.0,0,,0
org/jfree/data/time/Month,17,229,"            result = new Month(this.month - 1, this.year);",0.0,0,,0
org/jfree/data/time/Month,17,232,            if (this.year > 1900) {,0.0,0,,0
org/jfree/data/time/Month,17,233,"                result = new Month(MonthConstants.DECEMBER, this.year - 1);",0.0,0,,0
org/jfree/data/time/Month,17,236,                result = null;,0.0,0,,0
org/jfree/data/time/Month,17,239,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,249,        if (this.month != MonthConstants.DECEMBER) {,0.0,0,,0
org/jfree/data/time/Month,17,250,"            result = new Month(this.month + 1, this.year);",0.0,0,,0
org/jfree/data/time/Month,17,253,            if (this.year < 9999) {,0.0,0,,0
org/jfree/data/time/Month,17,254,"                result = new Month(MonthConstants.JANUARY, this.year + 1);",0.0,0,,0
org/jfree/data/time/Month,17,257,                result = null;,0.0,0,,0
org/jfree/data/time/Month,17,260,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,269,        return this.year * 12L + this.month;,0.0,0,,0
org/jfree/data/time/Month,17,280,"        return SerialDate.monthCodeToString(this.month) + "" "" + this.year;",0.0,0,,0
org/jfree/data/time/Month,17,295,        if (obj != null) {,0.0,0,,0
org/jfree/data/time/Month,17,296,            if (obj instanceof Month) {,0.0,0,,0
org/jfree/data/time/Month,17,297,                Month target = (Month) obj;,0.0,0,,0
org/jfree/data/time/Month,17,298,                return (this.month == target.getMonth() ,0.0,0,,0
org/jfree/data/time/Month,17,302,                return false;,0.0,0,,0
org/jfree/data/time/Month,17,306,            return false;,0.0,0,,0
org/jfree/data/time/Month,17,321,        int result = 17;,0.0,0,,0
org/jfree/data/time/Month,17,322,        result = 37 * result + this.month;,0.0,0,,0
org/jfree/data/time/Month,17,323,        result = 37 * result + this.year;,0.0,0,,0
org/jfree/data/time/Month,17,324,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,342,        if (o1 instanceof Month) {,0.0,0,,0
org/jfree/data/time/Month,17,343,            Month m = (Month) o1;,0.0,0,,0
org/jfree/data/time/Month,17,344,            result = this.year - m.getYearValue();,0.0,0,,0
org/jfree/data/time/Month,17,345,            if (result == 0) {,0.0,0,,0
org/jfree/data/time/Month,17,346,                result = this.month - m.getMonth();,0.0,0,,0
org/jfree/data/time/Month,17,348,        },0.0,0,,0
org/jfree/data/time/Month,17,352,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,,0
org/jfree/data/time/Month,17,354,            result = 0;,0.0,0,,0
org/jfree/data/time/Month,17,361,            result = 1;,0.0,0,,0
org/jfree/data/time/Month,17,364,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,380,"        calendar.set(this.year, this.month - 1, 1, 0, 0, 0);",0.0,0,,0
org/jfree/data/time/Month,17,381,"        calendar.set(Calendar.MILLISECOND, 0);",0.0,0,,0
org/jfree/data/time/Month,17,384,        return calendar.getTime().getTime();,0.0,0,,0
org/jfree/data/time/Month,17,399,"        int eom = SerialDate.lastDayOfMonth(this.month, this.year);",0.0,0,,0
org/jfree/data/time/Month,17,400,"        calendar.set(this.year, this.month - 1, eom, 23, 59, 59);",0.0,0,,0
org/jfree/data/time/Month,17,401,"        calendar.set(Calendar.MILLISECOND, 999);",0.0,0,,0
org/jfree/data/time/Month,17,404,        return calendar.getTime().getTime();,0.0,0,,0
org/jfree/data/time/Month,17,420,        Month result = null;,0.0,0,,0
org/jfree/data/time/Month,17,421,        if (s != null) {,0.0,0,,0
org/jfree/data/time/Month,17,424,            s = s.trim();,0.0,0,,0
org/jfree/data/time/Month,17,426,            int i = Month.findSeparator(s);,0.0,0,,0
org/jfree/data/time/Month,17,427,            if (i != -1) {,0.0,0,,0
org/jfree/data/time/Month,17,428,"                String s1 = s.substring(0, i).trim();",0.0,0,,0
org/jfree/data/time/Month,17,429,"                String s2 = s.substring(i + 1, s.length()).trim();",0.0,0,,0
org/jfree/data/time/Month,17,431,                Year year = Month.evaluateAsYear(s1);,0.0,0,,0
org/jfree/data/time/Month,17,433,                if (year != null) {,0.0,0,,0
org/jfree/data/time/Month,17,434,                    month = SerialDate.stringToMonthCode(s2);,0.0,0,,0
org/jfree/data/time/Month,17,435,                    if (month == -1) {,0.0,0,,0
org/jfree/data/time/Month,17,436,                        throw new TimePeriodFormatException(,0.0,0,,0
org/jfree/data/time/Month,17,440,"                    result = new Month(month, year);",0.0,0,,0
org/jfree/data/time/Month,17,443,                    year = Month.evaluateAsYear(s2);,0.0,0,,0
org/jfree/data/time/Month,17,444,                    if (year != null) {,0.0,0,,0
org/jfree/data/time/Month,17,445,                        month = SerialDate.stringToMonthCode(s1);,0.0,0,,0
org/jfree/data/time/Month,17,446,                        if (month == -1) {,0.0,0,,0
org/jfree/data/time/Month,17,447,                            throw new TimePeriodFormatException(,0.0,0,,0
org/jfree/data/time/Month,17,451,"                        result = new Month(month, year);",0.0,0,,0
org/jfree/data/time/Month,17,454,                        throw new TimePeriodFormatException(,0.0,0,,0
org/jfree/data/time/Month,17,460,            },0.0,0,,0
org/jfree/data/time/Month,17,462,                throw new TimePeriodFormatException(,0.0,0,,0
org/jfree/data/time/Month,17,468,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,482,        int result = s.indexOf('-');,0.0,0,,0
org/jfree/data/time/Month,17,483,        if (result == -1) {,0.0,0,,0
org/jfree/data/time/Month,17,484,"            result = s.indexOf(',');",0.0,0,,0
org/jfree/data/time/Month,17,486,        if (result == -1) {,0.0,0,,0
org/jfree/data/time/Month,17,487,            result = s.indexOf(' ');,0.0,0,,0
org/jfree/data/time/Month,17,489,        if (result == -1) {,0.0,0,,0
org/jfree/data/time/Month,17,490,            result = s.indexOf('.');,0.0,0,,0
org/jfree/data/time/Month,17,492,        return result;,0.0,0,,0
org/jfree/data/time/Month,17,506,        Year result = null;,0.0,0,,0
org/jfree/data/time/Month,17,508,            result = Year.parseYear(s);,0.0,0,,0
org/jfree/data/time/Month,17,512,        },0.0,0,,0
org/jfree/data/time/Month,17,510,        catch (TimePeriodFormatException e) {,0.0,0,,0
org/jfree/data/time/Month,17,513,        return result;,0.0,0,,0
org/jfree/data/time/TimePeriodFormatException,17,55,        super(message);,0.0,0,,0
org/jfree/data/time/TimePeriodFormatException,17,56,    },0.0,0,,0
org/jfree/data/time/Year,17,88,        this(new Date());,0.0,0,,0
org/jfree/data/time/Year,17,89,    },0.0,0,,0
org/jfree/data/time/Year,17,100,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/Year,17,114,"        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE);",0.0,0,,0
org/jfree/data/time/Year,17,115,    },0.0,0,,0
org/jfree/data/time/Year,17,123,"    public Year(Date time, TimeZone zone) {",0.0,0,,0
org/jfree/data/time/Year,17,124,        Calendar calendar = Calendar.getInstance(zone);,0.0,0,,0
org/jfree/data/time/Year,17,125,        calendar.setTime(time);,0.0,0,,0
org/jfree/data/time/Year,17,126,        this.year = (short) calendar.get(Calendar.YEAR);,0.0,0,,0
org/jfree/data/time/Year,17,127,        peg(calendar);,0.0,0,,0
org/jfree/data/time/Year,17,128,    },0.0,0,,0
org/jfree/data/time/Year,17,150,        return this.firstMillisecond;,0.0,0,,0
org/jfree/data/time/Year,17,164,        return this.lastMillisecond;,0.0,0,,0
org/jfree/data/time/Year,17,187,        if (this.year > SerialDate.MINIMUM_YEAR_SUPPORTED) {,0.0,0,,0
org/jfree/data/time/Year,17,188,            return new Year(this.year - 1);,0.0,0,,0
org/jfree/data/time/Year,17,191,            return null;,0.0,0,,0
org/jfree/data/time/Year,17,202,        if (this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED) {,0.0,0,,0
org/jfree/data/time/Year,17,203,            return new Year(this.year + 1);,0.0,0,,0
org/jfree/data/time/Year,17,206,            return null;,0.0,0,,0
org/jfree/data/time/Year,17,271,        if (object != null) {,0.0,0,,0
org/jfree/data/time/Year,17,272,            if (object instanceof Year) {,0.0,0,,0
org/jfree/data/time/Year,17,273,                Year target = (Year) object;,0.0,0,,0
org/jfree/data/time/Year,17,274,                return (this.year == target.getYear());,0.0,0,,0
org/jfree/data/time/Year,17,277,                return false;,0.0,0,,0
org/jfree/data/time/Year,17,281,            return false;,0.0,0,,0
org/jfree/data/time/Year,17,295,        int result = 17;,0.0,0,,0
org/jfree/data/time/Year,17,296,        int c = this.year;,0.0,0,,0
org/jfree/data/time/Year,17,297,        result = 37 * result + c;,0.0,0,,0
org/jfree/data/time/Year,17,298,        return result;,0.0,0,,0
org/jfree/data/time/Year,17,324,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,,0
org/jfree/data/time/Year,17,326,            result = 0;,0.0,0,,0
org/jfree/data/time/Year,17,333,            result = 1;,0.0,0,,0
org/jfree/data/time/Year,17,346,        return Integer.toString(this.year);,0.0,0,,0
org/jfree/data/time/Year,17,364,            y = Integer.parseInt(s.trim());,0.0,0,,0
org/jfree/data/time/Year,17,368,        },0.0,0,,0
org/jfree/data/time/Year,17,366,        catch (NumberFormatException e) {,0.0,0,,0
org/jfree/data/time/Year,17,367,"            throw new TimePeriodFormatException(""Cannot parse string."");",0.0,0,,0
org/jfree/data/time/Year,17,372,            return new Year(y);,0.0,0,,0
org/jfree/data/time/Year,17,374,        catch (IllegalArgumentException e) {,0.0,0,,0
org/jfree/data/time/Year,17,375,"            throw new TimePeriodFormatException(""Year outside valid range."");",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,107,"    public SpreadsheetDate(final int day, final int month, final int year) {",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,109,        if ((year >= 1900) && (year <= 9999)) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,110,            this.year = year;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,113,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,118,        if ((month >= MonthConstants.JANUARY) ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,120,            this.month = month;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,123,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,128,"        if ((day >= 1) && (day <= SerialDate.lastDayOfMonth(month, year))) {",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,129,            this.day = day;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,132,"            throw new IllegalArgumentException(""Invalid 'day' argument."");",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,136,"        this.serial = calcSerial(day, month, year);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,138,    },0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,146,    public SpreadsheetDate(final int serial) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,148,        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,149,            this.serial = serial;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,152,            throw new IllegalArgumentException(,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,158,      final int days = this.serial - SERIAL_LOWER_BOUND;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,160,      final int overestimatedYYYY = 1900 + (days / 365);,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,161,      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,162,      final int nonleapdays = days - leaps;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,164,      int underestimatedYYYY = 1900 + (nonleapdays / 365);,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,166,      if (underestimatedYYYY == overestimatedYYYY) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,167,          this.year = underestimatedYYYY;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,170,"          int ss1 = calcSerial(1, 1, underestimatedYYYY);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,171,          while (ss1 <= this.serial) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,172,              underestimatedYYYY = underestimatedYYYY + 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,173,"              ss1 = calcSerial(1, 1, underestimatedYYYY);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,175,          this.year = underestimatedYYYY - 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,178,"      final int ss2 = calcSerial(1, 1, this.year);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,180,      int[] daysToEndOfPrecedingMonth ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,183,      if (isLeapYear(this.year)) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,184,          daysToEndOfPrecedingMonth ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,189,      int mm = 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,190,      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,191,      while (sss < this.serial) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,192,          mm = mm + 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,193,          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,195,      this.month = mm - 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,198,      this.day = this.serial - ss2 ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,201,    },0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,211,        return this.serial;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,220,        final Calendar calendar = Calendar.getInstance();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,221,"        calendar.set(getYYYY(), getMonth() - 1, getDayOfMonth(), 0, 0, 0);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,222,        return calendar.getTime();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,231,        return this.year;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,240,        return this.month;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,249,        return this.day;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,263,        return (this.serial + 6) % 7 + 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,279,        if (object instanceof SerialDate) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,280,            final SerialDate s = (SerialDate) object;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,281,            return (s.toSerial() == this.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,284,            return false;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,295,        return toSerial();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,308,        return this.serial - other.toSerial();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,320,        return compare((SerialDate) other);    ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,333,        return (this.serial == other.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,346,        return (this.serial < other.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,359,        return (this.serial <= other.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,372,        return (this.serial > other.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,385,        return (this.serial >= other.toSerial());,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,399,"        return isInRange(d1, d2, SerialDate.INCLUDE_BOTH);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,417,        final int s1 = d1.toSerial();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,418,        final int s2 = d2.toSerial();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,419,"        final int start = Math.min(s1, s2);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,420,"        final int end = Math.max(s1, s2);",0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,422,        final int s = toSerial();,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,423,        if (include == SerialDate.INCLUDE_BOTH) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,424,            return (s >= start && s <= end);,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,426,        else if (include == SerialDate.INCLUDE_FIRST) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,427,            return (s >= start && s < end);            ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,429,        else if (include == SerialDate.INCLUDE_SECOND) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,430,            return (s > start && s <= end);            ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,433,            return (s > start && s < end);            ,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,449,        final int yy = ((y - 1900) * 365) + SerialDate.leapYearCount(y - 1);,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,450,        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,451,        if (m > MonthConstants.FEBRUARY) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,452,            if (SerialDate.isLeapYear(y)) {,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,453,                mm = mm + 1;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,456,        final int dd = d;,0.0,0,,0
org/jfree/data/time/SpreadsheetDate,17,457,        return yy + mm + dd + 1;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,73,        this(new Date());,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,74,    },0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,82,        this(new Date(millisecond));,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,83,    },0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,90,    public FixedMillisecond(Date time) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,91,        this.time = time;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,92,    },0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,100,        return this.time;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,112,    },0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,120,        RegularTimePeriod result = null;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,121,        long t = this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,122,        if (t != Long.MIN_VALUE) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,123,            result = new FixedMillisecond(t - 1);,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,125,        return result;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,134,        RegularTimePeriod result = null;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,135,        long t = this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,136,        if (t != Long.MAX_VALUE) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,137,            result = new FixedMillisecond(t + 1);,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,139,        return result;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,150,        if (object instanceof FixedMillisecond) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,151,            FixedMillisecond m = (FixedMillisecond) object;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,152,            return this.time.equals(m.getTime());,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,155,            return false;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,166,        return this.time.hashCode();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,185,        if (o1 instanceof FixedMillisecond) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,186,            FixedMillisecond t1 = (FixedMillisecond) o1;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,187,            difference = this.time.getTime() - t1.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,188,            if (difference > 0) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,189,                result = 1;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,192,                if (difference < 0) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,193,                   result = -1;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,196,                    result = 0;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,199,        },0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,203,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,205,            result = 0;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,212,            result = 1;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,215,        return result;,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,225,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,237,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,246,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,257,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,266,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,277,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/FixedMillisecond,17,286,        return this.time.getTime();,0.0,0,,0
org/jfree/data/time/Day,17,112,        this(new Date());,0.0,0,,0
org/jfree/data/time/Day,17,113,    },0.0,0,,0
org/jfree/data/time/Day,17,122,"    public Day(int day, int month, int year) {",0.0,0,,0
org/jfree/data/time/Day,17,123,"        this.serialDate = SerialDate.createInstance(day, month, year);",0.0,0,,0
org/jfree/data/time/Day,17,124,        peg(Calendar.getInstance());,0.0,0,,0
org/jfree/data/time/Day,17,125,    },0.0,0,,0
org/jfree/data/time/Day,17,132,    public Day(SerialDate serialDate) {,0.0,0,,0
org/jfree/data/time/Day,17,133,        if (serialDate == null) {,0.0,0,,0
org/jfree/data/time/Day,17,134,"            throw new IllegalArgumentException(""Null 'serialDate' argument."");",0.0,0,,0
org/jfree/data/time/Day,17,136,        this.serialDate = serialDate;,0.0,0,,0
org/jfree/data/time/Day,17,137,        peg(Calendar.getInstance());,0.0,0,,0
org/jfree/data/time/Day,17,138,    },0.0,0,,0
org/jfree/data/time/Day,17,148,"        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE);",0.0,0,,0
org/jfree/data/time/Day,17,149,    },0.0,0,,0
org/jfree/data/time/Day,17,157,"    public Day(Date time, TimeZone zone) {",0.0,0,,0
org/jfree/data/time/Day,17,158,        if (time == null) {,0.0,0,,0
org/jfree/data/time/Day,17,159,"            throw new IllegalArgumentException(""Null 'time' argument."");",0.0,0,,0
org/jfree/data/time/Day,17,161,        if (zone == null) {,0.0,0,,0
org/jfree/data/time/Day,17,162,"            throw new IllegalArgumentException(""Null 'zone' argument."");",0.0,0,,0
org/jfree/data/time/Day,17,164,        Calendar calendar = Calendar.getInstance(zone);,0.0,0,,0
org/jfree/data/time/Day,17,165,        calendar.setTime(time);,0.0,0,,0
org/jfree/data/time/Day,17,166,        int d = calendar.get(Calendar.DAY_OF_MONTH);,0.0,0,,0
org/jfree/data/time/Day,17,167,        int m = calendar.get(Calendar.MONTH) + 1;,0.0,0,,0
org/jfree/data/time/Day,17,168,        int y = calendar.get(Calendar.YEAR);,0.0,0,,0
org/jfree/data/time/Day,17,169,"        this.serialDate = SerialDate.createInstance(d, m, y);",0.0,0,,0
org/jfree/data/time/Day,17,170,        peg(calendar);,0.0,0,,0
org/jfree/data/time/Day,17,171,    },0.0,0,,0
org/jfree/data/time/Day,17,183,        return this.serialDate;,0.0,0,,0
org/jfree/data/time/Day,17,192,        return this.serialDate.getYYYY();,0.0,0,,0
org/jfree/data/time/Day,17,201,        return this.serialDate.getMonth();,0.0,0,,0
org/jfree/data/time/Day,17,210,        return this.serialDate.getDayOfMonth();,0.0,0,,0
org/jfree/data/time/Day,17,224,        return this.firstMillisecond;,0.0,0,,0
org/jfree/data/time/Day,17,238,        return this.lastMillisecond;,0.0,0,,0
org/jfree/data/time/Day,17,250,        this.firstMillisecond = getFirstMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/Day,17,251,        this.lastMillisecond = getLastMillisecond(calendar);,0.0,0,,0
org/jfree/data/time/Day,17,252,    },0.0,0,,0
org/jfree/data/time/Day,17,262,        int serial = this.serialDate.toSerial();,0.0,0,,0
org/jfree/data/time/Day,17,263,        if (serial > SerialDate.SERIAL_LOWER_BOUND) {,0.0,0,,0
org/jfree/data/time/Day,17,264,            SerialDate yesterday = SerialDate.createInstance(serial - 1);,0.0,0,,0
org/jfree/data/time/Day,17,265,            return new Day(yesterday);,0.0,0,,0
org/jfree/data/time/Day,17,268,            result = null;,0.0,0,,0
org/jfree/data/time/Day,17,270,        return result;,0.0,0,,0
org/jfree/data/time/Day,17,284,        int serial = this.serialDate.toSerial();,0.0,0,,0
org/jfree/data/time/Day,17,285,        if (serial < SerialDate.SERIAL_UPPER_BOUND) {,0.0,0,,0
org/jfree/data/time/Day,17,286,            SerialDate tomorrow = SerialDate.createInstance(serial + 1);,0.0,0,,0
org/jfree/data/time/Day,17,287,            return new Day(tomorrow);,0.0,0,,0
org/jfree/data/time/Day,17,290,            result = null;,0.0,0,,0
org/jfree/data/time/Day,17,292,        return result;,0.0,0,,0
org/jfree/data/time/Day,17,302,        return this.serialDate.toSerial();,0.0,0,,0
org/jfree/data/time/Day,17,317,        int year = this.serialDate.getYYYY();,0.0,0,,0
org/jfree/data/time/Day,17,318,        int month = this.serialDate.getMonth();,0.0,0,,0
org/jfree/data/time/Day,17,319,        int day = this.serialDate.getDayOfMonth();,0.0,0,,0
org/jfree/data/time/Day,17,320,        calendar.clear();,0.0,0,,0
org/jfree/data/time/Day,17,321,"        calendar.set(year, month - 1, day, 0, 0, 0);",0.0,0,,0
org/jfree/data/time/Day,17,322,"        calendar.set(Calendar.MILLISECOND, 0);",0.0,0,,0
org/jfree/data/time/Day,17,324,        return calendar.getTime().getTime();,0.0,0,,0
org/jfree/data/time/Day,17,339,        int year = this.serialDate.getYYYY();,0.0,0,,0
org/jfree/data/time/Day,17,340,        int month = this.serialDate.getMonth();,0.0,0,,0
org/jfree/data/time/Day,17,341,        int day = this.serialDate.getDayOfMonth();,0.0,0,,0
org/jfree/data/time/Day,17,342,        calendar.clear();,0.0,0,,0
org/jfree/data/time/Day,17,343,"        calendar.set(year, month - 1, day, 23, 59, 59);",0.0,0,,0
org/jfree/data/time/Day,17,344,"        calendar.set(Calendar.MILLISECOND, 999);",0.0,0,,0
org/jfree/data/time/Day,17,346,        return calendar.getTime().getTime();,0.0,0,,0
org/jfree/data/time/Day,17,361,        if (obj == this) {,0.0,0,,0
org/jfree/data/time/Day,17,362,            return true;,0.0,0,,0
org/jfree/data/time/Day,17,364,        if (!(obj instanceof Day)) {,0.0,0,,0
org/jfree/data/time/Day,17,365,            return false;,0.0,0,,0
org/jfree/data/time/Day,17,367,        Day that = (Day) obj;,0.0,0,,0
org/jfree/data/time/Day,17,368,        if (!this.serialDate.equals(that.getSerialDate())) {,0.0,0,,0
org/jfree/data/time/Day,17,369,            return false;,0.0,0,,0
org/jfree/data/time/Day,17,371,        return true;,0.0,0,,0
org/jfree/data/time/Day,17,385,        return this.serialDate.hashCode();,0.0,0,,0
org/jfree/data/time/Day,17,404,        if (o1 instanceof Day) {,0.0,0,,0
org/jfree/data/time/Day,17,405,            Day d = (Day) o1;,0.0,0,,0
org/jfree/data/time/Day,17,406,            result = -d.getSerialDate().compare(this.serialDate);,0.0,0,,0
org/jfree/data/time/Day,17,407,        },0.0,0,,0
org/jfree/data/time/Day,17,411,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,,0
org/jfree/data/time/Day,17,413,            result = 0;,0.0,0,,0
org/jfree/data/time/Day,17,420,            result = 1;,0.0,0,,0
org/jfree/data/time/Day,17,423,        return result;,0.0,0,,0
org/jfree/data/time/Day,17,433,        return this.serialDate.toString();,0.0,0,,0
org/jfree/data/time/Day,17,450,            return new Day (Day.DATE_FORMAT.parse(s));,0.0,0,,0
org/jfree/data/time/Day,17,452,        catch (ParseException e1) {,0.0,0,,0
org/jfree/data/time/Day,17,454,                return new Day (Day.DATE_FORMAT_SHORT.parse(s));,0.0,0,,0
org/jfree/data/time/Day,17,456,            catch (ParseException e2) {,0.0,0,,0
org/jfree/data/time/Day,17,460,        return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,89,    private ObjectUtilities() {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,90,    },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,80,    private static String classLoaderSource = THREAD_CONTEXT;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,99,        return classLoaderSource;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,113,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,114,    },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,125,        if (o1 == o2) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,126,            return true;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,128,        if (o1 != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,129,            return o1.equals(o2);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,132,            return false;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,145,        int result = 0;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,146,        if (object != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,147,            result = object.hashCode();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,149,        return result;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,162,        if (object == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,163,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,165,        if (object instanceof PublicCloneable) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,166,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,167,            return pc.clone();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,171,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,173,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,174,"                    return method.invoke(object, (Object[]) null);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,185,            },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,177,            catch (NoSuchMethodException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,178,                e.printStackTrace();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,180,            catch (IllegalAccessException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,181,                e.printStackTrace();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,183,            catch (InvocationTargetException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,184,                e.printStackTrace();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,187,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,203,        if (collection == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,204,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,209,        final Collection result,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,211,        result.clear();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,212,        final Iterator iterator = collection.iterator();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,213,        while (iterator.hasNext()) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,214,            final Object item = iterator.next();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,215,            if (item != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,216,                result.add(clone(item));,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,219,                result.add(null);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,221,        },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,222,        return result;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,232,        ObjectUtilities.classLoader = classLoader;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,233,    },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,241,      return classLoader;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,255,        if (classLoader != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,256,            return classLoader;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,258,"        if (""ThreadContext"".equals(classLoaderSource)) {",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,259,            final ClassLoader threadLoader,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,261,            if (threadLoader != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,262,                return threadLoader;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,267,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,268,        if (applicationCL == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,269,            return ClassLoader.getSystemClassLoader();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,272,            return applicationCL;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,285,        final ClassLoader cl = getClassLoader(c);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,286,        if (cl == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,287,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,289,        return cl.getResource(name);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,300,        final ClassLoader cl = getClassLoader(c);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,301,"        final String cname = convertName(name, c);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,302,        if (cl == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,303,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,305,        return cl.getResource(cname);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,319,"        if (name.startsWith(""/"")) {",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,321,            return name.substring(1);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,325,        while (c.isArray()) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,326,            c = c.getComponentType();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,329,        final String baseName = c.getName();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,330,        final int index = baseName.lastIndexOf('.');,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,331,        if (index == -1) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,332,            return name;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,335,"        final String pkgName = baseName.substring(0, index);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,336,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,349,"        final URL url = getResource(name, context);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,350,        if (url == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,351,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,355,            return url.openStream();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,357,        catch (IOException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,358,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,372,"        final URL url = getResourceRelative(name, context);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,373,        if (url == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,374,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,378,            return url.openStream();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,380,        catch (IOException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,381,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,396,            final ClassLoader loader = getClassLoader(source);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,397,            final Class c = loader.loadClass(className);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,398,            return c.newInstance();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,400,        catch (Exception e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,401,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,421,            ClassLoader loader = getClassLoader(source);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,422,            Class c = loader.loadClass(className);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,423,            if (type.isAssignableFrom(c)) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,424,                return c.newInstance();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,429,        },0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,427,        catch (Exception e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,428,            return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,430,        return null;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,439,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,440,        if (loader != null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,442,"              loader.loadClass(""java.util.RandomAccess"");",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,443,              return true;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,445,            catch (ClassNotFoundException e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,446,              return false;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,448,            catch(Exception e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,455,            String version = System.getProperty(,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,458,            if (version == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,459,                return false;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,462,            String[] versions = parseVersions(version);,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,463,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,464,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,466,        catch(Exception e) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,467,            return false;,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,472,      if (version == null) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,473,        return new String[0];,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,476,      ArrayList versions = new ArrayList();,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,477,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,478,      while (strtok.hasMoreTokens()) {,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,479,          versions.add (strtok.nextToken());,0.0,0,,0
org/jfree/chart/util/ObjectUtilities,17,481,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,,0
