project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/util/ShapeUtilities,11,265,        if (p1 == null) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,268,        if (p2 == null) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,271,        if (p1.getWindingRule() != p2.getWindingRule()) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,274,        PathIterator iterator1 = p1.getPathIterator(null);,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,275,        PathIterator iterator2 = p1.getPathIterator(null);,0.06667,1,,0
org/jfree/chart/util/ShapeUtilities,11,276,        double[] d1 = new double[6];,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,277,        double[] d2 = new double[6];,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,278,        boolean done = iterator1.isDone() && iterator2.isDone();,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,279,        while (!done) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,280,            if (iterator1.isDone() != iterator2.isDone()) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,283,            int seg1 = iterator1.currentSegment(d1);,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,284,            int seg2 = iterator2.currentSegment(d2);,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,285,            if (seg1 != seg2) {,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,288,"            if (!Arrays.equals(d1, d2)) {",0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,291,            iterator1.next();,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,292,            iterator2.next();,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,293,            done = iterator1.isDone() && iterator2.isDone();,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,294,        },0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,295,        return true;,0.06667,0,,0
org/jfree/chart/util/ShapeUtilities,11,389,"    private static final float SQRT2 = (float) Math.pow(2.0, 0.5);",0.0038,0,,0
org/jfree/chart/util/ShapeUtilities,11,84,    private ShapeUtilities() {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,85,    },0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,103,        if (shape instanceof Cloneable) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,105,                return (Shape) ObjectUtilities.clone(shape);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,107,            catch (CloneNotSupportedException cnse) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,110,        Shape result = null;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,111,        return result;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,128,        if (s1 instanceof Line2D && s2 instanceof Line2D) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,129,"            return equal((Line2D) s1, (Line2D) s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,131,        else if (s1 instanceof Ellipse2D && s2 instanceof Ellipse2D) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,132,"            return equal((Ellipse2D) s1, (Ellipse2D) s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,134,        else if (s1 instanceof Arc2D && s2 instanceof Arc2D) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,135,"            return equal((Arc2D) s1, (Arc2D) s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,137,        else if (s1 instanceof Polygon && s2 instanceof Polygon) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,138,"            return equal((Polygon) s1, (Polygon) s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,140,        else if (s1 instanceof GeneralPath && s2 instanceof GeneralPath) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,141,"            return equal((GeneralPath) s1, (GeneralPath) s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,145,"            return ObjectUtilities.equal(s1, s2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,159,        if (l1 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,160,            return (l2 == null);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,162,        if (l2 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,163,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,165,        if (!l1.getP1().equals(l2.getP1())) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,166,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,168,        if (!l1.getP2().equals(l2.getP2())) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,169,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,171,        return true;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,184,        if (e1 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,185,            return (e2 == null);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,187,        if (e2 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,188,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,190,        if (!e1.getFrame().equals(e2.getFrame())) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,191,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,193,        return true;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,206,        if (a1 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,207,            return (a2 == null);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,209,        if (a2 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,210,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,212,        if (!a1.getFrame().equals(a2.getFrame())) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,213,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,215,        if (a1.getAngleStart() != a2.getAngleStart()) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,216,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,218,        if (a1.getAngleExtent() != a2.getAngleExtent()) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,219,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,221,        if (a1.getArcType() != a2.getArcType()) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,222,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,224,        return true;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,237,        if (p1 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,238,            return (p2 == null);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,240,        if (p2 == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,241,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,243,        if (p1.npoints != p2.npoints) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,244,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,246,"        if (!Arrays.equals(p1.xpoints, p2.xpoints)) {",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,247,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,249,"        if (!Arrays.equals(p1.ypoints, p2.ypoints)) {",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,250,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,252,        return true;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,266,            return (p2 == null);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,269,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,272,            return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,281,                return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,286,                return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,289,                return false;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,310,        if (shape == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,311,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,313,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,315,        return transform.createTransformedShape(shape);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,334,        if (shape == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,335,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,337,        if (anchor == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,338,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,340,"        Point2D anchorPoint = RectangleAnchor.coordinates(shape.getBounds2D(),",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,342,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,344,        return transform.createTransformedShape(shape);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,360,        if (base == null) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,361,            return null;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,363,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,364,        Shape result = rotate.createTransformedShape(base);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,365,        return result;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,380,        AffineTransform saved = g2.getTransform();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,381,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,382,        g2.transform(rotate);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,383,        g2.draw(shape);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,384,        g2.setTransform(saved);,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,386,    },0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,400,        GeneralPath p0 = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,401,"        p0.moveTo(-l - t, -l + t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,402,"        p0.lineTo(-l + t, -l - t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,403,"        p0.lineTo(0.0f, -t * SQRT2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,404,"        p0.lineTo(l - t, -l - t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,405,"        p0.lineTo(l + t, -l + t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,406,"        p0.lineTo(t * SQRT2, 0.0f);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,407,"        p0.lineTo(l + t, l - t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,408,"        p0.lineTo(l - t, l + t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,409,"        p0.lineTo(0.0f, t * SQRT2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,410,"        p0.lineTo(-l + t, l + t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,411,"        p0.lineTo(-l - t, l - t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,412,"        p0.lineTo(-t * SQRT2, 0.0f);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,413,        p0.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,414,        return p0;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,426,        GeneralPath p0 = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,427,"        p0.moveTo(-l, t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,428,"        p0.lineTo(-t, t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,429,"        p0.lineTo(-t, l);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,430,"        p0.lineTo(t, l);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,431,"        p0.lineTo(t, t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,432,"        p0.lineTo(l, t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,433,"        p0.lineTo(l, -t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,434,"        p0.lineTo(t, -t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,435,"        p0.lineTo(t, -l);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,436,"        p0.lineTo(-t, -l);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,437,"        p0.lineTo(-t, -t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,438,"        p0.lineTo(-l, -t);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,439,        p0.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,440,        return p0;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,451,        GeneralPath p0 = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,452,"        p0.moveTo(0.0f, -s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,453,"        p0.lineTo(s, 0.0f);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,454,"        p0.lineTo(0.0f, s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,455,"        p0.lineTo(-s, 0.0f);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,456,        p0.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,457,        return p0;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,468,        GeneralPath p0 = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,469,"        p0.moveTo(0.0f, -s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,470,"        p0.lineTo(s, s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,471,"        p0.lineTo(-s, s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,472,        p0.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,473,        return p0;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,484,        GeneralPath p0 = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,485,"        p0.moveTo(0.0f, s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,486,"        p0.lineTo(s, -s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,487,"        p0.lineTo(-s, -s);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,488,        p0.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,489,        return p0;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,503,        GeneralPath result = new GeneralPath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,504,        float x1 = (float) line.getX1();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,505,        float x2 = (float) line.getX2();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,506,        float y1 = (float) line.getY1();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,507,        float y2 = (float) line.getY2();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,508,        if ((x2 - x1) != 0.0) {,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,509,            double theta = Math.atan((y2 - y1) / (x2 - x1));,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,510,            float dx = (float) Math.sin(theta) * width;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,511,            float dy = (float) Math.cos(theta) * width;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,512,"            result.moveTo(x1 - dx, y1 + dy);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,513,"            result.lineTo(x1 + dx, y1 - dy);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,514,"            result.lineTo(x2 + dx, y2 - dy);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,515,"            result.lineTo(x2 - dx, y2 + dy);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,516,            result.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,517,        },0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,520,"            result.moveTo(x1 - width / 2.0f, y1);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,521,"            result.lineTo(x1 + width / 2.0f, y1);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,522,"            result.lineTo(x2 + width / 2.0f, y2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,523,"            result.lineTo(x2 - width / 2.0f, y2);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,524,            result.closePath();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,526,        return result;,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,545,"        x = Math.max(area.getMinX(), Math.min(x, area.getMaxX()));",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,546,"        y = Math.max(area.getMinY(), Math.min(y, area.getMaxY()));",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,547,"        return new Point2D.Double(x, y);",0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,562,        double x0 = rect1.getX();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,563,        double y0 = rect1.getY();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,564,        double x = rect2.getX();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,565,        double y = rect2.getY();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,566,        double w = rect2.getWidth();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,567,        double h = rect2.getHeight();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,569,        return ((x >= x0) && (y >= y0),0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,587,      double x0 = rect1.getX();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,588,      double y0 = rect1.getY();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,590,      double x = rect2.getX();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,591,      double width = rect2.getWidth();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,592,      double y = rect2.getY();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,593,      double height = rect2.getHeight();,0.0,0,,0
org/jfree/chart/util/ShapeUtilities,11,594,      return (x + width >= x0 && y + height >= y0 && x <= x0 + rect1.getWidth(),0.0,0,,0
