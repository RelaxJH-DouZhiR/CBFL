dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,1,0,0,1,2,0,2,0,1,5,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,2,1,0,1,2,2,2,0,1,7,44,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,1,1,0,1,3,2,0,0,0,5,42,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,1,1,0,1,3,2,0,0,0,5,43,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",1,0,0,0,4,1,0,1,7,5,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,2,0,0,1,3,2,0,1,1,6,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,1,3,0,0,4,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,1,1,0,1,3,1,0,0,0,5,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,1,0,0,0,0,1,0,0,0,2,9,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,1,0,0,1,2,1,2,0,1,6,128,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,2,3,0,1,3,1,0,0,0,5,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,2,4,0,3,7,61,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,1,0,0,1,2,1,2,1,2,7,33,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,0,2,1,3,1,1,7,64,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,1,7,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,2,0,0,0,0,1,0,0,0,2,18,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,2,2,0,2,5,1,2,0,0,6,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,5,1,0,1,3,2,0,0,1,6,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,1,0,0,0,1,3,0,0,2,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,2,0,0,1,5,2,0,1,2,6,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",1,0,0,1,2,1,0,3,2,6,54,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,49,        if (lookup != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,50,            for (final CharSequence[] seq : lookup) {,2,0,0,1,5,2,0,1,1,6,41,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",1,0,1,0,6,1,1,0,0,5,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,1,0,1,1,4,2,1,0,1,7,31,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,2,1,0,1,3,1,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,2,0,0,0,0,0,0,0,1,2,15,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,2,1,0,1,3,1,0,0,0,5,20,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,2,0,0,0,0,0,0,0,1,2,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,2,0,0,0,0,0,0,0,1,2,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,62,        longest = _longest;,2,0,0,0,0,0,0,0,1,2,19,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,1,0,0,1,2,2,2,0,1,6,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,1,1,0,1,3,1,0,0,0,5,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,1,0,0,1,2,2,2,0,1,6,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,1,0,0,1,2,2,2,0,1,6,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,2,7,1,6,0,2,6,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,1,0,0,0,1,2,0,0,1,4,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,1,0,0,3,6,1,4,4,1,7,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,1,5,59,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,297,            AVAILABLE_LOCALE_SET = Collections.unmodifiableSet(new HashSet<Locale>(list));,2,0,0,2,4,1,2,2,2,7,78,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,298,        },0,0,0,0,1,0,0,0,0,1,1,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",1,0,0,0,0,3,0,4,3,4,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",1,0,0,0,0,3,0,4,3,4,79,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,2,0,0,0,0,1,0,0,0,2,39,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,0,0,0,1,4,1,3,0,1,5,46,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,3,0,0,4,35,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,1,1,0,1,3,1,0,0,0,5,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,1,7,1,5,0,0,4,67,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,4,0,0,3,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,0,0,0,1,2,1,2,0,0,4,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,3,1,0,0,4,1,0,2,0,5,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,0,2,1,0,0,1,4,19,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",2,0,0,0,2,0,4,0,0,3,66,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,1,0,0,1,2,2,0,1,1,6,41,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,1,0,0,0,0,3,0,1,3,4,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,1,0,0,1,2,4,0,2,4,6,73,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,2,0,0,0,0,3,0,1,3,4,79,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,1,0,0,1,2,4,0,2,4,6,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,2,0,0,1,3,1,0,1,1,6,67,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,1,0,0,1,2,1,3,0,1,6,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,1,0,0,1,6,3,2,1,4,7,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,1,0,0,1,6,3,2,1,4,7,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,68,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,80,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,84,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,3,0,0,0,8,1,0,2,0,4,50,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,0,0,1,0,8,0,0,0,1,3,29,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,1,0,8,0,0,0,1,3,29,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",1,0,0,1,2,3,1,1,5,7,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",1,0,0,1,2,4,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",1,0,0,1,2,4,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",1,0,0,1,2,3,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,1,0,0,1,2,3,2,1,4,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",1,0,0,1,2,3,1,1,5,7,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,1,0,0,1,2,3,3,1,3,7,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,1,0,0,0,0,3,0,1,3,4,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,108,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",1,0,0,1,2,3,1,1,5,7,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",1,0,0,1,2,3,1,1,5,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",1,1,0,1,2,3,1,1,5,8,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,1,0,0,1,2,3,2,1,4,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",1,0,0,1,2,3,1,1,5,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",1,0,0,1,2,4,1,0,5,6,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",1,0,0,1,2,4,1,0,5,6,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",1,1,0,1,4,4,2,0,7,7,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",1,0,0,1,2,4,1,0,5,6,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",1,0,0,1,2,4,1,0,5,6,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",1,0,0,1,2,4,1,0,5,6,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,6,1,0,0,0,4,0,0,3,4,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,1,0,0,1,2,4,2,0,4,6,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",2,1,0,0,2,4,1,0,6,6,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",2,1,0,1,2,4,1,0,5,7,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",1,0,0,0,2,4,2,0,5,5,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",1,0,0,0,2,4,2,0,5,5,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",1,0,0,0,2,4,2,0,5,5,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,0,2,1,3,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,0,2,1,5,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,0,2,1,3,0,1,4,44,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,0,0,0,1,2,1,3,0,0,4,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,3,0,0,4,67,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,        if (version == null) {,1,1,0,1,3,1,0,0,0,5,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,3,0,0,4,41,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,2,3,0,1,3,1,0,0,0,5,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,1,4,1,6,0,0,5,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,3,0,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",3,0,0,0,3,3,0,1,2,5,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,2,0,0,0,0,1,0,0,1,3,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,1,0,0,0,1,2,0,0,1,4,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,3,1,0,0,0,2,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,1,2,0,1,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,1,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,1,1,0,1,2,1,2,0,0,6,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,1,2,0,1,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,1,1,0,1,3,2,0,0,0,5,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,1,2,0,0,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,2,0,1,5,23,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,1,6,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,455,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {",0,1,0,2,11,1,8,0,4,6,101,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,469,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,490,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,492,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,494,        if (!Character.isDigit(lastChar) && lastChar != '.') {,1,2,0,2,5,1,3,0,2,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,495,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,502,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,506,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,510,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,609,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,631,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,634,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,650,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,664,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,668,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,698,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,714,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,195,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,235,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,238,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,240,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,685,        return Long.decode(str);,0,0,0,1,2,1,3,0,0,4,24,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1296,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1299,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1304,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,1,0,1,3,1,2,0,0,5,26,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,0,4,0,6,0,2,3,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,        },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,1,0,0,1,3,2,0,1,0,5,40,6,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,2,0,0,1,2,0,0,2,0,4,51,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,                return,0,0,0,0,0,0,0,0,0,0,6,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,1,1,0,1,4,2,0,0,0,5,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,1,0,0,0,0,1,0,0,0,2,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,2,6,0,7,0,1,4,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,1,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",1,0,0,0,2,0,4,1,0,4,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,2,0,0,3,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,4,1,0,1,3,2,0,0,0,5,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,2,0,1,0,2,0,0,1,1,5,35,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,1,4,1,6,0,0,4,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,1,1,0,2,4,0,4,0,0,5,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,2,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,1,0,0,1,4,0,3,1,0,5,56,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",2,0,0,0,4,2,4,1,2,6,93,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,1,1,0,1,3,1,0,0,0,5,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",1,0,1,0,4,0,3,0,0,4,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,1,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,2,1,0,2,6,1,3,0,1,7,42,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,0,2,1,7,0,1,4,65,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,2,3,0,1,3,1,0,0,0,5,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,1,0,1,0,4,3,0,0,0,4,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,3,1,0,0,0,1,0,0,0,3,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,1,1,0,1,3,1,0,0,1,6,22,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,1,1,0,1,4,2,0,0,0,5,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,2,1,1,1,4,0,3,0,1,7,40,8,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,        if (count == 0) {,1,1,0,1,3,1,0,0,0,5,17,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,1,1,0,1,4,2,0,0,0,5,23,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,2,3,0,1,3,1,0,0,0,5,29,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,2,1,0,1,3,1,0,0,2,6,27,6,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,1,0,1,0,4,3,0,0,0,4,32,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,3,1,0,0,0,1,0,0,0,3,22,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,1,1,0,1,3,1,0,0,1,6,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,            if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,6,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,1,0,0,1,2,4,0,2,4,6,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",2,0,0,0,2,1,0,0,1,4,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,1,0,2,1,6,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,1,6,1,3,1,2,7,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,1,0,0,1,4,0,2,2,0,5,35,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,1,0,0,1,2,1,0,0,1,5,10,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,2,0,0,0,0,1,0,0,1,3,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,252,        },0,0,0,0,1,0,0,0,0,1,1,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,            String name = desc.getName();,1,0,0,1,2,0,2,1,0,5,29,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",0,0,0,0,2,1,4,0,1,4,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,1,0,0,1,4,1,2,0,1,6,38,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,0,0,0,1,2,1,3,0,0,4,23,5,0.0625,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",1,0,0,1,2,3,2,1,4,7,72,2,0.00321,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,    private static class InitStripAccents {,1,0,0,0,1,3,0,0,2,4,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",1,0,0,1,4,3,2,1,4,7,108,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,2,0,0,0,0,3,0,1,3,4,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,1,0,0,0,0,0,0,1,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,1,0,0,0,0,0,0,1,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,1,0,0,0,0,0,0,1,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,            Throwable _java6Exception = null;,1,0,0,0,0,0,0,1,0,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,            Throwable _sunException = null;,1,0,0,0,0,0,0,1,0,2,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",1,0,0,1,4,0,3,0,2,5,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,73,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",1,0,0,0,1,0,2,0,2,4,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,1,0,0,1,4,1,0,1,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,2,0,0,0,0,0,0,0,1,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",1,0,0,0,1,0,2,0,2,4,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,1,0,0,1,4,1,0,1,0,5,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,                    _sunException = e2;,2,0,0,0,0,0,0,0,1,2,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,2,0,0,0,0,0,0,0,1,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,2,0,0,0,0,0,0,0,1,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,2,0,0,0,0,0,0,0,1,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,2,0,0,0,0,0,0,0,1,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,2,0,0,0,0,0,0,0,1,2,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",1,1,0,1,4,1,5,0,0,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",1,0,0,2,6,1,3,1,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,5,1,0,1,3,2,0,0,1,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,1,1,0,2,5,1,3,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,1,6,1,6,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",1,0,0,2,6,1,3,1,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,120,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,2,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,2,1,0,0,0,0,0,0,1,3,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,4,1,0,1,3,2,0,0,1,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,1,1,0,2,5,1,3,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",0,0,0,1,6,1,6,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,1,0,0,2,6,1,1,1,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,1,0,0,1,6,3,2,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,0,0,1,1,4,0,3,0,1,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,2,1,0,1,3,3,0,2,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",2,0,0,2,8,1,5,2,0,6,93,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,1,6,1,9,0,0,4,95,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,159,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,160,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,229,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,253,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,1,1,0,1,2,1,2,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,1,0,0,1,2,0,2,1,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,1,0,0,1,2,1,2,0,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,362,"        return strip(str, null);",0,0,0,0,2,1,2,0,1,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",1,0,0,0,2,0,2,0,2,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,419,"        return str == null ? EMPTY : strip(str, null);",2,1,0,0,2,1,2,0,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",1,0,0,0,2,0,3,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,2,2,0,3,7,1,5,0,0,6,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,491,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,493,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,3,3,0,3,7,1,5,0,0,6,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,527,        if (str == null || (end = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,532,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,2,3,0,3,7,1,4,0,0,6,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,533,                end--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,535,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,3,4,0,3,7,1,4,0,0,6,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,1,0,0,0,0,0,0,0,1,2,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,542,"        return str.substring(0, end);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,597,        if (strs == null || (strsLen = strs.length) == 0) {,4,3,0,2,5,1,0,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,598,            return strs;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,600,        String[] newArr = new String[strsLen];,1,0,1,0,4,1,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,601,        for (int i = 0; i < strsLen; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,0,6,0,2,0,2,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,629,        if(input == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,630,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,1,0,0,0,0,0,0,1,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,2,1,0,1,3,1,0,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,1,0,0,1,2,0,2,0,2,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,636,            } else if (InitStripAccents.sunDecomposeMethod != null) {,2,1,0,1,4,2,0,0,0,5,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,637,                result = removeAccentsSUN(input);,1,0,0,1,2,0,2,0,2,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,639,                throw new UnsupportedOperationException(,0,0,0,0,1,2,0,1,1,4,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,645,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,647,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);",1,0,0,0,2,2,0,1,2,5,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,648,        } catch(IllegalAccessException iae) {,1,0,0,1,4,1,0,1,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,649,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);",1,0,0,0,2,2,0,1,2,5,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,651,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);",1,0,0,0,2,2,0,1,2,5,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,1,0,0,1,4,1,0,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,653,"            throw new RuntimeException(""SecurityException occurred"", se);",1,0,0,0,2,2,0,1,2,5,61,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,4,3,0,1,3,1,0,0,0,5,103,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,674,"            throw new IllegalStateException(""java.text.Normalizer is not available"", InitStripAccents.java6Exception);",2,0,0,0,2,2,0,1,2,5,106,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,677,"        result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] {text, InitStripAccents.java6NormalizerFormNFD});",6,0,0,1,8,1,1,2,1,7,131,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,678,"        result = InitStripAccents.java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$",3,0,0,1,4,0,3,0,2,5,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,697,        if (InitStripAccents.sunDecomposeMethod == null) {,2,1,0,1,3,1,0,0,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,698,"            throw new IllegalStateException(""sun.text.Normalizer is not available"", InitStripAccents.sunException);",2,0,0,0,2,2,0,1,2,5,103,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",6,0,0,1,10,1,3,2,1,7,123,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,702,"        result = InitStripAccents.sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$",3,0,0,1,4,0,3,0,2,5,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,703,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,786,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,814,            return str1 == str2;,2,1,0,0,0,1,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,816,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",0,0,0,1,8,1,10,0,1,5,103,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,843,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,846,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",0,0,0,0,2,1,4,0,0,3,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,876,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,877,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,879,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);",0,0,0,0,2,1,5,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,907,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,908,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,910,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,0,2,1,4,0,0,3,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,947,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,948,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,950,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,0,2,1,5,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,0,2,1,4,0,2,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,3,5,0,1,3,1,0,0,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1007,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1010,            return lastIndex ? str.length() : 0;,1,0,0,1,2,1,2,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1012,        int found = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1013,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,3,0,0,1,2,1,2,0,0,5,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1015,            if (lastIndex) {,1,0,0,1,3,1,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",2,1,0,0,2,0,4,0,1,5,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1018,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",2,1,0,0,2,0,4,0,1,5,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1023,            found++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1054,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,0,2,1,3,0,1,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1091,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1093,        if (startPos < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1094,            startPos = 0;,1,0,0,0,0,0,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1096,        int endLimit = str.length() - searchStr.length() + 1;,1,2,0,1,4,1,4,0,0,6,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1100,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1101,            return startPos;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1103,        for (int i = startPos; i < endLimit; i++) {,5,1,0,1,3,2,0,0,1,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,1,7,1,7,0,1,5,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1134,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",0,0,0,1,4,1,6,0,0,4,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1169,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1170,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1172,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",0,0,0,0,2,1,5,0,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1200,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,1,4,1,6,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1240,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0,0,0,0,2,1,4,0,2,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1274,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1276,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",0,0,0,0,2,1,5,0,0,3,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1304,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1306,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,1,4,1,5,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1340,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1342,        if (startPos > str.length() - searchStr.length()) {,1,2,0,2,7,1,4,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1343,            startPos = str.length() - searchStr.length();,1,1,0,1,4,0,4,0,1,6,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1345,        if (startPos < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1348,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1349,            return startPos;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1352,        for (int i = startPos; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1353,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,1,7,1,7,0,1,5,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1357,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1383,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1384,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",0,1,0,0,2,1,4,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1412,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1413,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1415,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",0,1,0,0,2,1,4,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1444,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1447,        int max = str.length() - len;,2,1,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1448,        for (int i = 0; i <= max; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,0,5,1,6,0,1,4,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1450,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1453,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1466,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1467,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1469,        int strLen = seq.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1470,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1472,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1475,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1504,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1505,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1508,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1509,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1510,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1511,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1512,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1513,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1514,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1515,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,4,0,2,5,1,3,0,0,6,68,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1517,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1518,                            return i;,1,0,0,0,0,1,0,0,0,2,9,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1521,                        return i;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1526,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1587,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1589,        int csLength = cs.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1590,        int searchLength = searchChars.length;,3,0,0,0,0,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1591,        int csLast = csLength - 1;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1592,        int searchLast = searchLength - 1;,2,1,0,0,0,1,0,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1593,        for (int i = 0; i < csLength; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1595,            for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,1,3,0,0,4,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1598,                        if (j == searchLast) {,2,1,0,1,3,1,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,1,2,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1602,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,4,5,1,2,7,1,2,0,0,7,59,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1603,                            return true;,0,0,0,0,0,1,0,0,1,2,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1607,                        return true;,0,0,0,0,0,1,0,0,1,2,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1612,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1644,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1645,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1647,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",0,0,0,1,4,1,5,0,1,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1677,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1678,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1680,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1681,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1683,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1685,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1686,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1688,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,4,0,2,5,1,3,0,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1690,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,1,0,0,0,0,1,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1698,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1727,        if (isEmpty(seq) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1728,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1731,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1732,            char ch = seq.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1733,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",1,1,0,0,2,1,4,0,0,5,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,2,3,0,2,5,1,3,0,0,6,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1735,                char ch2 = seq.charAt(i + 1);,2,1,0,1,2,1,2,0,0,6,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",1,2,0,0,5,1,4,0,0,5,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1737,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1740,                if (!chFound) {,1,0,0,1,3,1,0,0,1,5,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1745,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1774,        if (valid == null || cs == null) {,2,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1775,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,0,1,0,2,5,1,2,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1778,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1780,        if (valid.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1781,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1783,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1810,        if (cs == null || validChars == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1811,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1813,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1842,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1845,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1846,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1847,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1848,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1853,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,1,3,0,0,4,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,2,1,0,1,3,1,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1856,                            return false;,0,0,0,0,0,1,0,0,1,2,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1858,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,4,5,1,2,7,1,2,0,0,7,59,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1859,                            return false;,0,0,0,0,0,1,0,0,1,2,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1863,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1868,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1896,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1898,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1932,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1940,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1942,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1943,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1945,"            tmp = CharSequenceUtils.indexOf(str, search, 0);",1,0,0,0,2,0,4,0,1,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1946,            if (tmp == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1947,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1951,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,5,1,0,0,0,1,0,0,0,3,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1985,        if (str == null || searchStrs == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1986,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1988,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1989,        int ret = INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1990,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1993,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1994,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",1,0,0,1,4,0,6,0,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1997,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2001,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2031,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2036,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2037,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2040,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2041,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2044,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2047,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2086,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2087,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2092,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2095,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2099,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2104,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2108,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2111,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2112,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2115,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2142,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2144,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2145,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2147,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2148,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2150,"        return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2174,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2175,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2177,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2178,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2180,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2181,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2183,        return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2212,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2213,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2216,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2218,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2219,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2221,        if (str.length() <= pos + len) {,2,2,0,2,5,1,2,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2222,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2224,"        return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2257,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2260,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2261,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2264,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2265,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2267,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2299,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2300,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2303,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2309,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2344,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2345,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2347,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2380,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2381,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2384,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2386,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,3,4,0,2,7,1,4,0,0,6,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2388,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2390,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2417,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2448,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2449,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2451,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2453,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2458,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2484,        if (str == null || isEmpty(open) || isEmpty(close)) {,1,3,0,2,7,1,4,0,2,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2485,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2487,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2488,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2491,        int closeLen = close.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2492,        int openLen = open.length();,1,0,0,1,2,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2493,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2494,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,3,2,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2496,"            int start = str.indexOf(open, pos);",1,0,0,0,2,1,4,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2498,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,2,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2501,"            int end = str.indexOf(close, start);",1,0,0,0,2,1,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2503,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2505,"            list.add(str.substring(start, end));",0,0,0,0,4,0,6,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,3,1,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2507,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2508,        if (list.isEmpty()) {,0,0,0,2,5,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2509,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,0,0,2,6,2,4,1,0,5,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2599,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2633,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2660,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,0,2,1,3,0,3,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2691,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,0,2,1,4,0,2,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,0,2,1,3,0,3,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2753,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2772,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2773,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2778,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2779,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,1,2,0,2,5,1,3,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2784,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,0,2,1,4,0,1,4,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,1,0,0,1,2,1,2,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2789,        ArrayList<String> substrings = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,1,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2791,        int beg = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2792,        int end = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",1,0,0,0,2,0,4,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2796,            if (end > -1) {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2797,                if (end > beg) {,2,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2800,                    if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2801,                        end = len;,2,0,0,0,0,0,0,0,1,2,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2806,"                        substrings.add(str.substring(beg, end));",0,0,0,0,4,0,6,0,0,2,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2811,                        beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2815,                    if (preserveAllTokens) {,1,0,0,1,3,1,0,0,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2817,                        if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,2,0,0,0,0,0,0,0,1,2,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2819,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2821,                            substrings.add(EMPTY);,0,0,0,1,2,0,3,0,0,3,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2824,                    beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2828,                substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2829,                end = len;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,0,0,0,2,6,2,4,1,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2862,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2898,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2916,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2921,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2925,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2926,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2927,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2928,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2929,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2930,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2931,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2932,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2934,                start = ++i;,2,0,0,0,0,0,0,0,2,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2935,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2938,            match = true;,1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2939,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2941,        if (match || preserveAllTokens && lastMatch) {,3,2,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2942,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2944,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,0,2,1,3,0,3,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3021,"        return splitWorker(str, separatorChars, max, true);",0,0,0,0,2,1,4,0,2,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3043,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3044,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3047,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3048,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3052,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3053,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3054,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3057,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3059,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3060,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3061,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3062,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3065,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3066,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3069,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3071,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,2,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3077,            char sep = separatorChars.charAt(0);,1,0,0,1,2,1,2,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3078,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3079,                if (str.charAt(i) == sep) {,1,1,0,2,5,1,3,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3082,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3083,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3087,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3089,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3090,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3094,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3096,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3098,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3099,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,1,5,0,0,5,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3100,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3103,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3104,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3106,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3110,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3114,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,3,2,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3118,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3120,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3143,"        return splitByCharacterType(str, false);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3171,"        return splitByCharacterType(str, true);",0,0,0,0,2,1,2,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3189,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3190,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3192,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3195,        char[] c = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3196,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3197,        int tokenStart = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3198,        int currentType = Character.getType(c[tokenStart]);,1,0,1,1,4,1,2,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3199,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,6,2,0,1,3,2,0,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,1,0,1,1,4,1,2,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,2,1,0,1,3,1,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3202,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3204,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,7,4,0,1,3,1,0,0,0,5,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,2,1,0,0,0,1,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,2,1,0,1,3,1,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3207,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",4,1,0,0,4,1,2,1,1,7,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3208,                    tokenStart = newTokenStart;,2,0,0,0,0,0,0,0,1,2,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3210,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3211,"                list.add(new String(c, tokenStart, pos - tokenStart));",4,1,0,0,4,1,2,1,1,7,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",5,1,0,0,4,1,2,1,1,7,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3271,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3305,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3306,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3309,        if (noOfItems <= 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3313,        StringBuilder buf = new StringBuilder(noOfItems * 16);,2,1,0,1,2,1,0,2,1,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3315,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3317,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3319,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3320,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3323,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3350,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3351,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3353,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3384,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3385,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,2,0,0,0,0,0,0,0,1,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3393,        int noOfItems = endIndex - startIndex;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3395,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3398,        StringBuilder buf = new StringBuilder(noOfItems * 16);,2,1,0,1,2,1,0,2,1,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3400,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3405,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3408,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3428,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3429,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3431,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3435,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3436,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3441,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3445,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3446,            buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3447,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3449,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3451,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3453,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3473,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3475,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3476,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3478,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3479,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3480,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3485,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3486,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3489,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3493,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3494,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3495,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3497,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3498,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3517,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3540,"        return join(iterable.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3560,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3561,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3563,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3565,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3566,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3567,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3568,                chs[count++] = str.charAt(i);,1,0,1,1,4,0,3,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3572,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3605,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3607,        if (str.startsWith(remove)){,0,0,0,2,5,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3640,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3642,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3673,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3676,        if (str.endsWith(remove)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3677,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3679,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3710,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3715,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3742,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3743,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3745,"        return replace(str, remove, EMPTY, -1);",0,0,0,0,2,1,4,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3768,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,1,2,0,2,7,1,5,0,1,7,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3769,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3771,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3772,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3773,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3774,            if (chars[i] != remove) {,1,1,1,1,5,1,0,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3775,                chars[pos++] = chars[i];,1,0,1,0,4,0,0,0,2,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3778,"        return new String(chars, 0, pos);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3807,"        return replace(text, searchString, replacement, 1);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3834,"        return replace(text, searchString, replacement, -1);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3866,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,2,4,0,2,7,1,4,0,2,7,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3867,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",1,0,0,0,2,1,4,0,0,4,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3871,        if (end == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3874,        int replLength = searchString.length();,1,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3875,        int increase = replacement.length() - replLength;,2,1,0,1,2,1,2,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,3,1,0,0,0,0,0,0,1,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3877,        increase *= max < 0 ? 16 : max > 64 ? 64 : max;,4,2,0,0,0,0,0,0,1,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3878,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3880,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,1,6,0,8,0,0,3,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3882,            if (--max == 0) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3883,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",1,0,0,0,2,0,4,0,1,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3887,        buf.append(text.substring(start));,0,0,0,2,4,0,5,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3888,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3931,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,0,2,1,4,0,2,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,4,1,0,0,0,1,0,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3982,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,0,2,1,5,0,2,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,2,8,0,1,3,1,2,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4045,        if (timeToLive < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4046,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +",0,1,0,0,1,2,0,1,2,5,85,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4050,        int searchLength = searchList.length;,3,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,3,0,0,0,0,1,0,0,0,2,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4054,        if (searchLength != replacementLength) {,2,1,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,1,0,0,1,2,0,1,2,5,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,1,0,1,0,4,3,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4066,        int replaceIndex = -1;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4071,        for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4072,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,0,5,1,0,0,0,4,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4074,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4076,            tempIndex = text.indexOf(searchList[i]);,1,0,1,1,4,0,2,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4080,                noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4083,                    textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4092,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4098,        int increase = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4101,        for (int i = 0; i < searchList.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4102,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,1,7,1,0,0,0,5,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4103,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4106,            if (greater > 0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4107,                increase += 3 * greater; // assume 3 matches,2,1,0,0,0,0,0,0,1,3,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4111,"        increase = Math.min(increase, text.length() / 5);",1,1,0,1,4,0,5,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4115,        while (textIndex != -1) {,1,1,0,1,3,1,0,0,1,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,5,1,0,1,3,2,0,0,1,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4118,                buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,0,0,1,1,4,0,2,0,0,4,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,2,1,1,1,4,0,1,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4126,            tempIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,0,5,1,0,0,0,4,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4132,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4134,"                tempIndex = text.indexOf(searchList[i], start);",1,0,1,0,4,0,3,0,1,5,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4137,                if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4138,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4141,                        textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4149,        int textLength = text.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4151,            buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4154,        if (!repeat) {,1,0,0,1,3,1,0,0,1,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4155,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",1,1,0,0,2,1,5,0,1,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4184,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4185,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4187,"        return str.replace(searchChar, replaceChar);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4227,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4228,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4231,            replaceChars = EMPTY;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4234,        int replaceCharsLength = replaceChars.length();,1,0,0,1,2,1,2,0,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4236,        StringBuilder buf = new StringBuilder(strLength);,2,0,0,1,2,1,0,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4237,        for (int i = 0; i < strLength; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4239,            int index = searchChars.indexOf(ch);,1,0,0,1,2,1,3,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4241,                modified = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4242,                if (index < replaceCharsLength) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4243,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,5,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4246,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4249,        if (modified) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4250,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4252,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4290,        if (overlay == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4293,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4294,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4303,        if (end > len) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4304,            end = len;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4306,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4307,            int temp = start;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4309,            end = temp;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4311,        return new StringBuilder(len + start - end + overlay.length() + 1),3,4,0,2,4,2,2,1,1,8,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4346,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4347,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4350,        if (str.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4352,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,6,3,0,1,3,1,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4358,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4359,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4361,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,3,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4366,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4368,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",0,0,0,0,2,1,3,0,1,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4430,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4432,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4433,        if (strLen < 2) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4434,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4436,        int lastIdx = strLen - 1;,2,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4437,"        String ret = str.substring(0, lastIdx);",1,0,0,0,2,0,3,1,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4438,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4439,        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,4,0,2,5,1,2,0,0,6,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",1,1,0,0,2,1,2,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4442,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4471,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4472,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4474,        if (repeat <= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4478,        if (repeat == 1 || inputLength == 0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4481,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4482,"            return repeat(str.charAt(0), repeat);",0,0,0,1,4,1,4,0,1,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4486,        switch (inputLength) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4488,"                return repeat(str.charAt(0), repeat);",0,0,0,1,4,1,4,0,1,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4490,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4491,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4492,                char[] output2 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4493,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",5,3,0,0,3,2,0,0,2,5,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4494,                    output2[i] = ch0;,1,0,1,0,2,0,0,0,1,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4495,                    output2[i + 1] = ch1;,2,1,1,0,2,0,0,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,2,0,0,1,2,1,0,2,1,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4500,                for (int i = 0; i < repeat; i++) {,4,1,0,1,3,2,0,0,1,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,0,0,0,1,2,0,3,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4503,                return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4528,        if(str == null || separator == null) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4529,"            return repeat(str, repeat);",0,0,0,0,2,1,3,0,1,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",3,1,0,0,2,0,2,1,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4533,"            return removeEnd(result, separator);",0,0,0,0,2,1,3,0,1,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4560,        char[] buf = new char[repeat];,1,0,1,0,4,3,0,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,4,2,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,1,0,1,0,2,0,0,0,1,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,1,0,0,1,2,2,0,1,1,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4587,"        return rightPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4612,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4613,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4617,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4622,"        return str.concat(repeat(padChar, pads));",0,0,0,0,4,1,5,0,1,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4649,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4652,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4653,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4655,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4656,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4658,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4661,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4662,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4665,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4666,            return str.concat(padStr);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4668,"            return str.concat(padStr.substring(0, pads));",0,0,0,0,4,1,5,0,0,3,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4672,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4675,            return str.concat(new String(padding));,1,0,0,2,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4699,"        return leftPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4725,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4727,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4728,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4731,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4732,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4734,"        return repeat(padChar, pads).concat(str);",0,0,0,1,4,1,5,0,1,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4761,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4762,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4764,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4767,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4769,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4770,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4771,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4773,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4777,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4778,            return padStr.concat(str);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4779,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4780,"            return padStr.substring(0, pads).concat(str);",0,0,0,1,4,1,5,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4783,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4784,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4785,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4787,            return new String(padding).concat(str);,1,0,0,1,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4803,        return cs == null ? 0 : cs.length();,1,1,0,1,2,1,2,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4832,"        return center(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4861,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4863,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4864,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4865,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4866,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",3,2,0,0,2,0,3,0,2,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4869,"        str = rightPad(str, size, padChar);",1,0,0,0,2,0,4,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4900,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4903,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4904,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4906,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4908,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4909,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",3,2,0,0,2,0,3,0,2,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4912,"        str = rightPad(str, size, padStr);",1,0,0,0,2,0,4,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4938,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4939,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4941,        return str.toUpperCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4962,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4964,        return str.toUpperCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4988,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5010,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5011,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5013,        return str.toLowerCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5039,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),1,0,0,1,2,2,0,1,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5069,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5070,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5072,        return new StringBuilder(strLen),1,0,0,1,2,2,0,1,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5106,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,5,1,0,1,3,2,0,0,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,1,0,1,0,2,1,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5114,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,1,4,0,3,0,1,5,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,0,0,1,1,4,0,3,0,1,5,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,1,4,0,3,0,1,5,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5122,        return new String(buffer);,1,0,0,1,2,2,0,1,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5148,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,2,7,1,4,0,2,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5152,        int idx = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5153,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {",2,1,0,0,7,1,5,0,1,6,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5154,            count++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5155,            idx += sub.length();,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,1,3,0,2,5,1,2,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5184,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5186,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5189,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5192,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5219,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,3,9,1,8,0,2,6,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5224,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5227,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,1,3,0,2,5,1,2,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5254,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5257,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5258,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5259,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5262,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5288,        if (cs == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5289,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5291,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,3,9,1,8,0,2,6,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5294,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5297,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5327,        if (cs == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5328,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5330,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5331,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5332,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5333,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,1,3,0,2,5,1,2,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5364,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5368,            if (Character.isDigit(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5369,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5372,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5401,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,3,9,1,8,0,2,6,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5406,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5409,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5436,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5437,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5439,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5442,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,1,2,0,2,5,1,2,0,1,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5466,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5468,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5469,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5470,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5471,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5474,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5497,        if (cs == null || isEmpty(cs)) {,1,2,0,2,5,1,2,0,1,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5498,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5500,        int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5501,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5503,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5506,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5549,        return str == null ? defaultStr : str;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5593,        return StringUtils.isEmpty(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5614,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5616,        return new StringBuilder(str).reverse().toString();,1,0,0,1,6,2,2,1,1,7,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",1,0,0,0,4,0,3,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5645,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5646,"        return join(strs, separatorChar);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5684,"        return abbreviate(str, 0, maxWidth);",0,0,0,0,2,1,3,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5723,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5729,        if (str.length() <= maxWidth) {,1,1,0,2,5,1,2,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5730,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,1,0,0,1,2,0,2,0,1,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5735,        if (str.length() - offset < maxWidth - 3) {,2,3,0,2,5,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5736,            offset = str.length() - (maxWidth - 3);,2,2,0,1,4,0,2,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",1,0,0,0,0,1,0,1,2,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5739,        if (offset <= 4) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5740,"            return str.substring(0, maxWidth - 3) + abrevMarker;",2,2,0,0,2,1,2,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5743,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,2,0,1,2,5,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5745,        if (offset + maxWidth - 3 < str.length()) {,2,3,0,2,5,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5746,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,1,4,1,4,0,1,7,69,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,2,3,0,2,6,1,4,0,0,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5782,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5785,        if (length >= str.length() || length < middle.length()+2) {,2,4,0,2,7,1,4,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,2,1,0,1,2,1,2,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5790,        int startOffset = targetSting/2+targetSting%2;,3,3,0,0,0,1,0,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5791,        int endOffset = str.length()-targetSting/2;,2,2,0,1,2,1,2,0,0,6,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,2,0,0,1,2,1,0,2,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5794,"        builder.append(str.substring(0,startOffset));",0,0,0,0,4,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5795,        builder.append(middle);,0,0,0,1,2,0,3,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5796,        builder.append(str.substring(endOffset));,0,0,0,2,4,0,5,0,0,3,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5798,        return builder.toString();,0,0,0,1,2,1,2,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5829,        if (str1 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5830,            return str2;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5832,        if (str2 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",1,0,0,0,2,1,3,0,1,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5836,        if (at == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5837,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5839,        return str2.substring(at);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5869,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5871,        if (cs1 == null || cs2 == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5872,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5875,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,4,3,0,2,7,1,4,0,2,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,0,1,0,2,7,1,6,0,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5877,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5880,        if (i < cs2.length() || i < cs1.length()) {,2,3,0,2,7,1,4,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5919,        if (css == null || css.length <= 1) {,3,3,0,1,3,1,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5920,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5922,        boolean anyStringNull = false;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5923,        boolean allStringsNull = true;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5924,        int arrayLen = css.length;,3,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5925,        int shortestStrLen = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5926,        int longestStrLen = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5931,        for (int i = 0; i < arrayLen; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5932,            if (css[i] == null) {,0,1,1,1,5,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5933,                anyStringNull = true;,1,0,0,0,0,0,0,0,2,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5934,                shortestStrLen = 0;,1,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5936,                allStringsNull = false;,1,0,0,0,0,0,0,0,2,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5937,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",1,0,1,1,6,0,4,0,1,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5938,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",1,0,1,1,6,0,4,0,1,6,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5943,        if (allStringsNull || longestStrLen == 0 && !anyStringNull) {,3,3,0,1,3,1,0,0,1,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5944,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5948,        if (shortestStrLen == 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5949,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5953,        int firstDiff = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5954,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,4,1,0,1,3,2,0,0,1,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5955,            char comparisonChar = css[0].charAt(stringPos);,1,0,1,1,4,1,2,0,0,6,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5956,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,1,0,1,3,2,0,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5957,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,1,1,1,2,7,1,2,0,0,7,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5958,                    firstDiff = stringPos;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5959,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5962,            if (firstDiff != -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5963,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5967,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,3,3,0,1,3,1,0,0,1,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5971,            return shortestStrLen;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5973,        return firstDiff;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6010,        if (strs == null || strs.length == 0) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6011,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6013,        int smallestIndexOfDiff = indexOfDifference(strs);,1,0,0,1,2,1,2,0,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6014,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6016,            if (strs[0] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6017,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6019,            return strs[0];,0,0,1,0,2,1,0,0,0,3,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6020,        } else if (smallestIndexOfDiff == 0) {,1,1,0,1,4,2,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6022,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6025,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,0,4,1,2,0,0,4,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6068,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6069,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6089,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6090,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6092,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6093,            return m;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6094,        } else if (m == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6095,            return n;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6098,        if (n > m) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6100,            CharSequence tmp = s;,2,0,0,0,0,0,0,1,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6101,            s = t;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6102,            t = tmp;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6103,            n = m;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6104,            m = t.length();,1,0,0,1,2,0,2,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6107,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally",2,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6108,"        int d[] = new int[n + 1]; // cost array, horizontally",2,1,0,0,4,3,0,0,0,4,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6119,        for (i = 0; i <= n; i++) {,4,1,0,1,3,1,0,0,2,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6120,            p[i] = i;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6123,        for (j = 1; j <= m; j++) {,4,1,0,1,3,1,0,0,2,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6124,            t_j = t.charAt(j - 1);,2,1,0,1,2,0,2,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6125,            d[0] = j;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6127,            for (i = 1; i <= n; i++) {,4,1,0,1,3,1,0,0,2,6,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6128,                cost = s.charAt(i - 1) == t_j ? 0 : 1;,3,2,0,1,2,0,2,0,1,6,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6130,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",3,5,1,0,12,0,4,0,1,6,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6134,            _d = p;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6135,            p = d;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6136,            d = _d;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6141,        return p[n];,0,0,1,0,2,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6177,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6178,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6180,        if (threshold < 0) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6181,"            throw new IllegalArgumentException(""Threshold must not be negative"");",0,0,0,1,2,2,0,1,2,5,69,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6228,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6229,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6232,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6233,            return m <= threshold ? m : -1;,3,1,0,0,0,1,0,0,1,4,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6234,        } else if (m == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6235,            return n <= threshold ? n : -1;,3,1,0,0,0,1,0,0,1,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6238,        if (n > m) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6240,            CharSequence tmp = s;,2,0,0,0,0,0,0,1,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6241,            s = t;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6242,            t = tmp;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6243,            n = m;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6244,            m = t.length();,1,0,0,1,2,0,2,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6247,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally",2,1,0,0,4,3,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6248,"        int d[] = new int[n + 1]; // cost array, horizontally",2,1,0,0,4,3,0,0,0,4,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6252,"        int boundary = Math.min(n, threshold) + 1;",1,1,0,0,2,1,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6253,        for (int i = 0; i < boundary; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6254,            p[i] = i;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6258,"        Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",4,0,0,0,2,0,4,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6259,"        Arrays.fill(d, Integer.MAX_VALUE);",2,0,0,0,2,0,3,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6262,        for (int j = 1; j <= m; j++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6263,            char t_j = t.charAt(j - 1); // jth character of t,2,1,0,1,2,1,2,0,0,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6264,            d[0] = j;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6267,"            int min = Math.max(1, j - threshold);",3,1,0,0,2,1,2,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6268,"            int max = Math.min(n, j + threshold);",3,1,0,0,2,1,3,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6271,            if (min > max) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6272,                return -1;,0,0,0,0,0,1,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6276,            if (min > 1) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6277,                d[min - 1] = Integer.MAX_VALUE;,3,1,1,0,2,0,0,0,1,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6281,            for (int i = min; i <= max; i++) {,5,1,0,1,3,2,0,0,1,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6282,                if (s.charAt(i - 1) == t_j) {,2,2,0,2,5,1,2,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6284,                    d[i] = p[i - 1];,1,1,1,0,4,0,0,0,1,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6287,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",2,3,1,0,12,0,4,0,1,6,56,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6292,            _d = p;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6293,            p = d;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6294,            d = _d;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6299,        if (p[n] <= threshold) {,1,1,1,1,5,1,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6300,            return p[n];,0,0,1,0,2,1,0,0,0,3,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6302,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6332,"        return startsWith(str, prefix, false);",0,0,0,0,2,1,3,0,2,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6358,"        return startsWith(str, prefix, true);",0,0,0,0,2,1,3,0,2,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6373,        if (str == null || prefix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6374,            return str == null && prefix == null;,2,3,0,0,0,1,0,0,0,3,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6376,        if (prefix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6377,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6379,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,1,4,1,7,0,0,4,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6402,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,1,0,2,7,1,5,0,1,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6403,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6405,        for (CharSequence searchString : searchStrings) {,2,0,0,1,3,1,0,1,0,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6406,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,0,5,1,4,0,0,3,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6407,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6410,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6440,"        return endsWith(str, suffix, false);",0,0,0,0,2,1,3,0,2,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6467,"        return endsWith(str, suffix, true);",0,0,0,0,2,1,3,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6482,        if (str == null || suffix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6483,            return str == null && suffix == null;,2,3,0,0,0,1,0,0,0,3,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6485,        if (suffix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6486,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6488,        int strOffset = str.length() - suffix.length();,1,1,0,1,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6489,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,1,4,1,8,0,0,4,95,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6534,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6535,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6537,"        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll("" "");",0,0,0,2,6,1,5,0,2,5,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6559,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,1,0,2,7,1,5,0,1,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6560,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6562,        for (CharSequence searchString : searchStrings) {,2,0,0,1,3,1,0,1,0,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6563,"            if (StringUtils.endsWith(string, searchString)) {",0,0,0,0,5,1,4,0,0,3,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6564,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6567,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6585,"        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);",4,1,0,1,4,3,0,2,2,7,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,1,0,0,0,0,1,0,0,0,2,22,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,        if (type instanceof Class<?>) {,1,0,0,1,3,2,0,1,0,5,31,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);",1,0,0,1,4,1,3,1,1,7,69,6,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,        if (type instanceof ParameterizedType) {,1,0,0,1,3,2,0,1,0,5,40,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);",1,0,0,1,4,1,3,1,1,7,78,6,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {",0,0,0,0,5,1,3,0,2,4,34,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",2,1,0,1,2,1,0,6,1,7,112,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,1,2,0,2,7,1,5,0,0,6,64,4,1.33333,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",1,0,0,1,2,3,1,1,5,7,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",1,0,0,1,2,4,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",1,0,0,1,2,4,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",1,0,0,1,2,3,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,1,0,0,1,2,3,2,1,4,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",1,0,0,1,2,3,1,1,5,7,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,1,0,0,1,2,3,3,1,3,7,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,1,0,0,0,0,3,0,1,3,4,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,108,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",1,0,0,1,2,3,1,1,5,7,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",1,0,0,1,2,3,1,1,5,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",1,1,0,1,2,3,1,1,5,8,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,1,0,0,1,2,3,2,1,4,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",1,0,0,1,2,3,1,1,5,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",1,0,0,1,2,4,1,0,5,6,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",1,0,0,1,2,4,1,0,5,6,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",1,1,0,1,4,4,2,0,7,7,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",1,0,0,1,2,4,1,0,5,6,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",1,0,0,1,2,4,1,0,5,6,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",1,0,0,1,2,4,1,0,5,6,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,6,1,0,0,0,4,0,0,3,4,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,1,0,0,1,2,4,2,0,4,6,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",2,1,0,0,2,4,1,0,6,6,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",2,1,0,1,2,4,1,0,5,7,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",1,0,0,0,2,4,2,0,5,5,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",1,0,0,0,2,4,2,0,5,5,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,0,2,1,3,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,0,2,1,5,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,0,2,1,3,0,1,4,44,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,            return System.getProperty(property);,0,0,0,1,2,1,3,0,0,4,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,3,0,0,4,67,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,1,1,0,1,3,1,0,0,0,5,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,3,0,0,4,41,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,2,3,0,1,3,1,0,0,0,5,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,1,4,1,6,0,0,5,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,3,0,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",3,0,0,0,3,3,0,1,2,5,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,2,0,0,0,0,1,0,0,1,3,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,public enum JavaVersion {,1,0,0,0,1,2,0,0,1,4,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,3,1,0,0,0,2,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,1,2,0,1,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,            return JAVA_1_7;,1,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,56,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,1,0,0,0,0,3,0,1,3,4,62,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,    public static final CharSequenceTranslator ESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,55,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,1,0,0,1,2,4,0,2,4,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,2,0,0,0,0,3,0,1,3,4,79,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,59,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,59,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,1,0,0,1,2,4,0,2,4,6,77,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,        return ESCAPE_HTML4.translate(input);,0,0,0,1,2,1,3,0,0,4,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,public abstract class CharSequenceTranslator {,1,0,0,0,1,3,0,0,2,4,46,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,        if (input == null) {,1,1,0,1,3,1,0,0,0,5,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,1,1,0,2,4,1,2,2,1,8,59,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);",0,0,0,0,2,0,3,0,1,3,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,            return writer.toString();,0,0,0,1,2,1,2,0,0,4,25,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,        if (out == null) {,1,1,0,1,3,1,0,0,0,5,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,        if (input == null) {,1,1,0,1,3,1,0,0,0,5,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,        int len = input.length();,1,0,0,1,2,1,2,0,0,5,25,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,        while (pos < len) {,2,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);",1,0,0,0,2,1,4,0,1,5,42,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,            if (consumed == 0) {,1,1,0,1,3,1,0,0,0,5,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));",1,0,0,0,6,1,6,0,0,4,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,88,                out.write(c);,0,0,0,1,2,0,3,0,0,3,13,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,                pos+= c.length;,3,0,0,0,0,0,0,0,1,2,15,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,            for (int pt = 0; pt < consumed; pt++) {,4,1,0,1,3,2,0,0,1,6,39,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",1,0,0,0,4,0,6,0,1,4,62,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,3,1,0,0,4,1,0,2,0,5,87,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,109,        newArray[0] = this;,0,0,1,0,2,1,0,0,1,4,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",2,0,0,0,2,0,4,0,0,3,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,        return new AggregateTranslator(newArray);,1,0,0,1,2,2,0,1,1,6,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,2,0,0,1,3,1,0,1,1,6,67,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,        this.translators = ArrayUtils.clone(translators);,1,0,0,1,2,1,3,0,1,6,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,        for (CharSequenceTranslator translator : translators) {,2,0,0,1,3,1,0,1,0,5,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);",1,0,0,0,2,1,5,0,0,4,55,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,            if(consumed != 0) {,1,1,0,1,3,1,0,0,0,5,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,                return consumed;,1,0,0,0,0,1,0,0,0,2,16,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,    static class CsvEscaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,56,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,    static class CsvUnescaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,63,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,0,2,1,2,1,0,5,53,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,0,2,1,2,1,0,5,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,72,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,0,2,1,2,1,0,5,57,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,0,2,1,2,1,0,5,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,74,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,0,2,1,2,1,0,5,53,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,75,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,0,2,1,2,1,0,5,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,0,2,1,2,1,0,5,51,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,77,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,0,2,1,2,1,0,5,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,78,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,0,2,0,2,0,0,3,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,84,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,1,2,1,0,6,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,87,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,1,3,0,1,5,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,0,2,0,4,0,0,2,54,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,91,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,89,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");",0,0,0,0,2,1,1,0,3,4,28,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,120,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,0,2,1,1,0,3,4,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");",0,0,0,0,2,1,1,0,3,4,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");",0,0,0,0,2,1,1,0,3,4,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");",0,0,0,0,2,1,1,0,3,4,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");",0,0,0,0,2,1,1,0,3,4,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");",0,0,0,0,2,1,1,0,3,4,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,126,"        addAbbreviation(""char"", ""C"");",0,0,0,0,2,1,1,0,3,4,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,0,2,0,4,0,0,2,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,112,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,0,2,0,4,0,0,2,52,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));",2,0,0,1,4,1,5,0,1,6,90,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,        if (autoboxing) {,1,0,0,1,3,1,0,0,0,4,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,630,                cls = primitiveToWrapper(cls);,1,0,0,1,2,0,2,0,2,5,30,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,        if (cls.equals(toClass)) {,0,0,0,2,5,1,3,0,0,4,26,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,3,0,0,4,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,        Class<?> convertedClass = cls;,2,0,0,0,0,0,0,1,0,2,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,        if (cls != null && cls.isPrimitive()) {,1,2,0,2,5,1,2,0,0,6,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,            convertedClass = primitiveWrapperMap.get(cls);,1,0,0,1,2,0,3,0,1,5,46,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,        return convertedClass;,1,0,0,0,0,1,0,0,0,2,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,81,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,85,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,117,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,121,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);",0,0,0,0,2,1,3,0,1,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,        if (toType == null || toType instanceof Class<?>) {,2,2,0,1,3,2,0,1,0,6,51,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);",1,0,0,1,4,1,2,1,1,7,45,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);",1,0,0,1,4,1,3,1,1,7,69,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,        if (type == null) {,1,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,            return toClass == null || !toClass.isPrimitive();,1,2,0,1,2,1,2,0,1,7,49,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,121,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,125,        if (toClass.equals(type)) {,0,0,0,2,5,1,3,0,0,4,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,        if (type instanceof Class<?>) {,1,0,0,1,3,2,0,1,0,5,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);",1,0,0,1,4,1,3,1,0,6,57,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,        if (type instanceof ParameterizedType) {,1,0,0,1,3,2,0,1,0,5,40,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);",1,0,0,2,6,1,3,1,2,7,67,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,        if (type instanceof TypeVariable<?>) {,1,0,0,1,3,2,0,1,0,5,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,        if (type instanceof GenericArrayType) {,1,0,0,1,3,2,0,1,0,5,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,            return toClass.equals(Object.class),0,1,0,1,2,2,2,1,0,6,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,        if (type == null) {,1,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,        if (toGenericArrayType == null) {,1,1,0,1,3,1,0,0,0,5,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,        if (toGenericArrayType.equals(type)) {,0,0,0,2,5,1,3,0,0,4,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,        Type toComponentType = toGenericArrayType.getGenericComponentType();,1,0,0,1,2,0,2,1,0,5,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,        if (type instanceof Class<?>) {,1,0,0,1,3,2,0,1,0,5,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,            Class<?> cls = (Class<?>) type;,2,0,0,1,2,0,0,2,0,4,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,            return cls.isArray(),0,1,0,1,2,1,2,0,0,5,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,        if (type instanceof GenericArrayType) {,1,0,0,1,3,2,0,1,0,5,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),",1,0,0,2,7,1,2,1,1,7,72,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,            WildcardType wildcardType = (WildcardType) type;,2,0,0,1,2,0,0,2,0,4,48,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,            Type[] upperBounds = getImplicitUpperBounds(wildcardType);,1,0,0,1,4,0,2,1,1,6,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);,1,0,0,1,4,0,2,1,1,6,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,            for (Type toBound : toUpperBounds) {,2,0,0,1,3,1,0,1,0,5,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",1,0,0,0,2,0,3,0,2,4,59,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,                for (Type bound : upperBounds) {,2,0,0,1,3,1,0,1,0,5,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {",0,0,0,0,5,1,4,0,2,4,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,371,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,            for (Type toBound : toLowerBounds) {,2,0,0,1,3,1,0,1,0,5,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",1,0,0,0,2,0,3,0,2,4,59,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,                for (Type bound : lowerBounds) {,2,0,0,1,3,1,0,1,0,5,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,385,"                    if (!isAssignable(toBound, bound, typeVarAssigns)) {",0,0,0,0,5,1,4,0,2,4,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,386,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,391,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,408,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,        Class<?> cls = getRawType(parameterizedType);,1,0,0,1,2,0,2,1,1,6,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {",0,0,0,0,5,1,3,0,2,4,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,        Type ownerType = parameterizedType.getOwnerType();,1,0,0,1,2,0,2,1,0,5,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,        if (ownerType instanceof ParameterizedType) {,1,0,0,1,3,2,0,1,0,5,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,617,"            typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",2,1,0,1,2,1,0,3,2,7,81,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,        Type[] typeArgs = parameterizedType.getActualTypeArguments();,1,0,0,1,4,0,2,1,0,5,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,        TypeVariable<?>[] typeParams = cls.getTypeParameters();,1,0,0,1,4,0,2,1,0,5,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,        for (int i = 0; i < typeParams.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,            Type typeArg = typeArgs[i];,1,0,1,0,2,0,0,1,0,4,27,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns",0,0,1,1,5,0,6,0,0,4,86,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,633,        if (toClass.equals(cls)) {,0,0,0,2,5,1,3,0,0,4,26,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,            return typeVarAssigns;,1,0,0,0,0,1,0,0,0,2,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,660,            if (toClass.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,28,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,            cls = ClassUtils.primitiveToWrapper(cls);,1,0,0,1,2,0,3,0,1,5,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,        if (superClass.isInterface()) {,0,0,0,2,5,1,2,0,0,4,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,            Type[] interfaceTypes = cls.getGenericInterfaces();,1,0,0,1,4,0,2,1,0,5,51,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,            Type genericInterface = null;,1,0,0,0,0,0,0,1,0,2,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,            for (Type midType : interfaceTypes) {,2,0,0,1,3,1,0,1,0,5,37,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,                Class<?> midClass = null;,1,0,0,0,0,0,0,1,0,2,25,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,                if (midType instanceof ParameterizedType) {,1,0,0,1,3,2,0,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,                    midClass = getRawType((ParameterizedType) midType);,2,0,0,2,4,0,1,1,2,6,51,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,820,"                if (isAssignable(midClass, superClass)",0,1,0,0,3,1,3,0,1,5,38,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,                    genericInterface = midType;,2,0,0,0,0,0,0,0,1,2,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,            if (genericInterface != null) {,1,1,0,1,3,1,0,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,                return genericInterface;,1,0,0,0,0,1,0,0,0,2,24,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,986,        Type rawType = parameterizedType.getRawType();,1,0,0,1,2,0,2,1,0,5,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,        if (!(rawType instanceof Class<?>)) {,1,0,0,2,5,2,0,1,1,6,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,        return (Class<?>) rawType;,1,0,0,1,2,1,0,1,0,5,26,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,    public LookupTranslator(CharSequence[]... lookup) {,2,0,0,1,5,1,0,1,1,6,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",1,0,0,1,2,1,0,3,2,6,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,        int _shortest = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,34,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,        int _longest = 0;,1,0,0,0,0,1,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,        if (lookup != null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,            for (CharSequence[] seq : lookup) {,2,0,0,1,5,1,0,1,0,5,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);",1,0,1,0,6,1,1,0,0,5,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,47,                int sz = seq[0].length();,1,0,1,1,4,1,1,0,0,6,25,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,                if (sz < _shortest) {,2,1,0,1,3,1,0,0,0,5,21,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,                    _shortest = sz;,2,0,0,0,0,0,0,0,1,2,15,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,                if (sz > _longest) {,2,1,0,1,3,1,0,0,0,5,20,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,                    _longest = sz;,2,0,0,0,0,0,0,0,1,2,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,        shortest = _shortest;,2,0,0,0,0,0,0,0,1,2,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,        longest = _longest;,2,0,0,0,0,0,0,0,1,2,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,        int max = longest;,2,0,0,0,0,1,0,0,0,2,18,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,        if (index + longest > input.length()) {,2,2,0,2,5,1,2,0,0,6,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,        for (int i = max; i >= shortest; i--) {,5,1,0,1,3,2,0,0,1,6,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,0,2,0,3,1,0,5,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,            CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,0,3,1,0,5,44,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,            if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,                out.write(result.toString());,0,0,0,2,4,0,4,0,0,3,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,78,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,public abstract class CodePointTranslator extends CharSequenceTranslator {,1,0,0,0,1,4,0,1,2,5,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,    public NumericEntityUnescaper(OPTION... options) {,2,0,0,1,3,1,0,1,1,6,50,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,        if(options.length > 0) {,2,1,0,1,3,1,0,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));,3,0,0,2,8,2,4,1,1,7,88,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }",4,0,0,0,2,3,0,0,2,4,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {",4,0,0,0,3,4,0,0,1,4,63,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,        this.below = below;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,        this.above = above;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,        this.between = between;,2,0,0,0,0,1,0,0,1,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,55,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",2,0,0,0,2,2,0,1,2,5,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,public class OctalUnescaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,60,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,    private static int OCTAL_MAX = 377;,1,0,0,0,0,3,0,0,2,3,35,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,    private static final String[][] ISO8859_1_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,52,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,1,0,0,1,6,3,2,1,4,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,    private static final String[][] BASIC_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,48,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,1,0,0,1,6,3,2,1,4,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,    private static final String[][] APOS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,47,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,84,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,        String[][] newarray = new String[array.length][2];,3,0,0,0,8,1,0,2,0,4,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,        for(int i = 0; i<array.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,            newarray[i][0] = array[i][1];,0,0,1,0,8,0,0,0,1,3,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,420,            newarray[i][1] = array[i][0];,0,0,1,0,8,0,0,0,1,3,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,422,        return newarray;,1,0,0,0,0,1,0,0,0,2,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,30,public class UnicodeUnescaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,62,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,                if (expPos > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,                    return createLong(str);,0,0,0,1,2,1,2,0,1,5,23,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,        if (!Character.isDigit(lastChar) && lastChar != '.') {,1,2,0,2,5,1,3,0,2,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,491,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,497,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,605,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,610,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,627,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,630,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,643,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,646,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,660,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,664,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,680,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1287,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1290,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1291,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1295,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,223,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,226,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,227,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,54,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,228,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,        return ESCAPE_XML.translate(input);,0,0,0,1,2,1,3,0,0,4,35,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,        for (CharSequenceTranslator translator : translators) {,2,0,0,1,3,1,0,1,0,5,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);",1,0,0,0,2,1,5,0,0,4,55,7,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,            if(consumed != 0) {,1,1,0,1,3,1,0,0,0,5,19,6,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",5,0,0,0,2,1,0,2,1,5,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,1,0,0,1,2,0,3,1,0,5,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);",1,0,0,0,2,0,5,0,1,4,51,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",1,0,0,0,2,0,4,1,0,4,61,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,            if (prior != null) {,1,1,0,1,3,1,0,0,0,5,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",5,0,0,0,2,1,0,1,2,5,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,                break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",2,1,0,1,4,0,4,0,1,6,52,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1241,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1248,            buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1249,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",3,0,0,0,2,2,0,1,0,4,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,            if (daylight) {,1,0,0,1,3,1,0,0,0,4,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,1,0,0,0,0,0,0,0,1,2,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,            mStyle = style;,2,0,0,0,0,0,0,0,1,2,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1490,            mLocale = locale;,2,0,0,0,0,0,0,0,1,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1491,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,1,4,0,2,6,1,4,0,0,6,71,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",4,0,0,0,3,1,0,2,0,4,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",1,0,0,0,2,0,4,0,3,4,63,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",1,0,0,0,2,0,4,0,3,4,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1392,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,1,6,1,6,0,0,4,56,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,498,                    rule = TwoDigitYearField.INSTANCE;,3,0,0,0,0,0,0,0,1,2,34,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,500,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,503,"                    rule = new TextField(Calendar.MONTH, months);",4,0,0,0,2,1,0,1,2,5,45,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",4,0,0,0,2,1,0,1,2,5,50,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,547,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,2,6,0,5,0,0,4,45,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1024,        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1062,            } else if (value < 100) {,1,1,0,1,4,2,0,0,0,5,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1063,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1064,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1226,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1227,        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1220,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,1,0,0,1,2,3,0,2,3,6,66,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1233,            return 2;,0,0,0,0,0,1,0,0,0,1,9,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1153,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,2,0,0,1,6,33,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1154,                    buffer.append('0');,0,0,0,1,2,0,2,0,1,4,19,10,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1156,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1157,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1053,"            appendTo(buffer, calendar.get(mField));",0,0,0,1,4,0,5,0,1,4,39,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1054,        },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1060,            if (value < 10) {,1,1,0,1,3,1,0,0,0,5,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1068,        },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1096,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,1,4,0,4,0,1,6,51,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1097,        },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1103,            if (value < 10) {,1,1,0,1,3,1,0,0,0,5,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1104,                buffer.append((char)(value + '0'));,1,1,0,2,6,1,2,0,1,7,35,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1109,        },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,2,1,0,0,0,1,0,0,0,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,1,0,0,0,0,1,0,0,1,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,1,0,0,1,2,1,3,0,0,5,37,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,                isHex = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,40,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,1,2,2,1,9,116,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",1,0,0,1,2,3,2,1,4,7,73,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,1,0,0,0,5,4,0,0,3,4,39,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,2,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,2,0,0,0,0,0,0,0,1,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",2,0,0,0,2,0,2,0,1,4,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,3,0,0,4,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,            if (spot.equals(endFinal)) {,0,0,0,2,5,1,3,0,0,4,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,0,0,0,1,2,2,0,1,1,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",2,0,0,0,2,0,2,0,0,3,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,1,4,1,2,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,            throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,    static class DateIterator implements Iterator<Calendar> {,1,0,0,0,1,3,0,2,1,5,57,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,158,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,3,0,1,3,1,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,177,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,        cal1.setTime(date1);,0,0,0,1,2,0,3,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,182,        cal2.setTime(date2);,0,0,0,1,2,0,3,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,183,"        return isSameDay(cal1, cal2);",0,0,0,0,2,1,3,0,1,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,        if (cal1 == null || cal2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,201,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,203,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,4,3,0,1,5,1,4,0,0,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,221,        if (date1 == null || date2 == null) {,2,3,0,1,3,1,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,222,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,224,        return date1.getTime() == date2.getTime();,0,1,0,1,4,1,4,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,239,        if (cal1 == null || cal2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,240,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,242,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,1,0,1,8,1,6,0,0,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,        if (cal1 == null || cal2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,260,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,4,8,0,1,5,1,4,0,0,6,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,288,"        return parseDateWithLeniency(str, parsePatterns, true);",0,0,0,0,2,1,3,0,2,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,308,"        return parseDateWithLeniency(str, parsePatterns, false);",0,0,0,0,2,1,3,0,2,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,328,        if (str == null || parsePatterns == null) {,2,3,0,1,3,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,329,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",0,0,0,1,2,2,0,1,2,5,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,332,        SimpleDateFormat parser = new SimpleDateFormat();,1,0,0,1,2,1,0,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,333,        parser.setLenient(lenient);,0,0,0,1,2,0,3,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,334,        ParsePosition pos = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,335,        for (int i = 0; i < parsePatterns.length; i++) {,5,1,0,1,3,2,0,0,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,337,            String pattern = parsePatterns[i];,1,0,1,0,2,0,0,1,0,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,340,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,2,7,1,1,0,1,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,341,"                pattern = pattern.substring(0, pattern.length() - 1);",1,1,0,1,4,0,4,0,1,6,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,344,            parser.applyPattern(pattern);,0,0,0,1,2,0,3,0,0,3,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,345,            pos.setIndex(0);,0,0,0,1,2,0,2,0,0,3,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,347,            String str2 = str;,2,0,0,0,0,0,0,1,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,349,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,2,7,1,1,0,1,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,350,"                str2 = str.replaceAll(""([-+][0-9][0-9]):([0-9][0-9])$"", ""$1$2""); ",1,0,0,1,16,0,2,0,3,5,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,353,"            Date date = parser.parse(str2, pos);",1,0,0,0,2,0,4,1,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,354,            if (date != null && pos.getIndex() == str2.length()) {,1,3,0,2,7,1,4,0,0,6,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,355,                return date;,1,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,358,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",1,1,0,0,2,2,0,1,3,6,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,372,"        return add(date, Calendar.YEAR, amount);",2,0,0,0,2,1,3,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,386,"        return add(date, Calendar.MONTH, amount);",2,0,0,0,2,1,3,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,400,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",2,0,0,0,2,1,3,0,1,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,414,"        return add(date, Calendar.DAY_OF_MONTH, amount);",2,0,0,0,2,1,3,0,1,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,428,"        return add(date, Calendar.HOUR_OF_DAY, amount);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,442,"        return add(date, Calendar.MINUTE, amount);",2,0,0,0,2,1,3,0,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,456,"        return add(date, Calendar.SECOND, amount);",2,0,0,0,2,1,3,0,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,470,"        return add(date, Calendar.MILLISECOND, amount);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,485,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,486,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,488,        Calendar c = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,489,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,490,"        c.add(calendarField, amount);",0,0,0,0,2,0,4,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,491,        return c.getTime();,0,0,0,1,2,1,2,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,506,"        return set(date, Calendar.YEAR, amount);",2,0,0,0,2,1,3,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,521,"        return set(date, Calendar.MONTH, amount);",2,0,0,0,2,1,3,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,536,"        return set(date, Calendar.DAY_OF_MONTH, amount);",2,0,0,0,2,1,3,0,1,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,552,"        return set(date, Calendar.HOUR_OF_DAY, amount);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,567,"        return set(date, Calendar.MINUTE, amount);",2,0,0,0,2,1,3,0,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,582,"        return set(date, Calendar.SECOND, amount);",2,0,0,0,2,1,3,0,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,597,"        return set(date, Calendar.MILLISECOND, amount);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,614,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,615,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,618,        Calendar c = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,619,        c.setLenient(false);,0,0,0,1,2,0,2,0,1,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,620,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,621,"        c.set(calendarField, amount);",0,0,0,0,2,0,4,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,622,        return c.getTime();,0,0,0,1,2,1,2,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,635,        Calendar c = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,636,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,637,        return c;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,670,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,671,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,673,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,674,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,675,"        modify(gval, field, MODIFY_ROUND);",0,0,0,0,2,0,4,0,1,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,676,        return gval.getTime();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,708,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,709,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,711,        Calendar rounded = (Calendar) date.clone();,1,0,0,1,4,0,2,2,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,712,"        modify(rounded, field, MODIFY_ROUND);",0,0,0,0,2,0,4,0,1,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,713,        return rounded;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,747,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,748,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,750,        if (date instanceof Date) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,751,"            return round((Date) date, field);",1,0,0,1,4,1,2,1,1,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,752,        } else if (date instanceof Calendar) {,1,0,0,1,4,3,0,1,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,753,"            return round((Calendar) date, field).getTime();",1,0,0,1,6,1,3,1,1,7,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,755,"            throw new ClassCastException(""Could not round "" + date);",1,1,0,1,2,2,0,1,2,7,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,777,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,778,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,780,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,781,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,782,"        modify(gval, field, MODIFY_TRUNCATE);",0,0,0,0,2,0,4,0,1,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,783,        return gval.getTime();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,803,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,804,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,806,        Calendar truncated = (Calendar) date.clone();,1,0,0,1,4,0,2,2,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,807,"        modify(truncated, field, MODIFY_TRUNCATE);",0,0,0,0,2,0,4,0,1,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,808,        return truncated;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,832,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,833,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,835,        if (date instanceof Date) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,836,"            return truncate((Date) date, field);",1,0,0,1,4,1,2,1,1,7,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,837,        } else if (date instanceof Calendar) {,1,0,0,1,4,3,0,1,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,838,"            return truncate((Calendar) date, field).getTime();",1,0,0,1,6,1,3,1,1,7,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,840,"            throw new ClassCastException(""Could not truncate "" + date);",1,1,0,1,2,2,0,1,2,7,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,863,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,864,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,866,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,867,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,868,"        modify(gval, field, MODIFY_CEILING);",0,0,0,0,2,0,4,0,1,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,869,        return gval.getTime();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,890,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,891,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,893,        Calendar ceiled = (Calendar) date.clone();,1,0,0,1,4,0,2,2,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,894,"        modify(ceiled, field, MODIFY_CEILING);",0,0,0,0,2,0,4,0,1,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,895,        return ceiled;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,920,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,921,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,923,        if (date instanceof Date) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,924,"            return ceiling((Date) date, field);",1,0,0,1,4,1,2,1,1,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,925,        } else if (date instanceof Calendar) {,1,0,0,1,4,3,0,1,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,926,"            return ceiling((Calendar) date, field).getTime();",1,0,0,1,6,1,3,1,1,7,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,928,"            throw new ClassCastException(""Could not find ceiling of for type: "" + date.getClass());",0,1,0,2,4,3,2,1,2,7,87,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,942,        if (val.get(Calendar.YEAR) > 280000000) {,2,1,0,2,5,1,2,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,943,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",0,0,0,1,2,3,0,1,2,5,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,946,        if (field == Calendar.MILLISECOND) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,947,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,956,        Date date = val.getTime();,1,0,0,1,2,0,2,1,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,957,        long time = date.getTime();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,958,        boolean done = false;,1,0,0,0,0,1,0,0,1,3,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,961,        int millisecs = val.get(Calendar.MILLISECOND);,3,0,0,1,2,1,2,0,0,5,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,962,        if (MODIFY_TRUNCATE == modType || millisecs < 500) {,3,3,0,1,3,1,0,0,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,963,            time = time - millisecs;,3,1,0,0,0,0,0,0,1,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,965,        if (field == Calendar.SECOND) {,3,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,966,            done = true;,1,0,0,0,0,0,0,0,2,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,970,        int seconds = val.get(Calendar.SECOND);,3,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,971,        if (!done && (MODIFY_TRUNCATE == modType || seconds < 30)) {,4,4,0,2,5,1,0,0,1,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,972,            time = time - (seconds * 1000L);,3,2,0,1,2,0,0,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,974,        if (field == Calendar.MINUTE) {,3,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,975,            done = true;,1,0,0,0,0,0,0,0,2,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,979,        int minutes = val.get(Calendar.MINUTE);,3,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,980,        if (!done && (MODIFY_TRUNCATE == modType || minutes < 30)) {,4,4,0,2,5,1,0,0,1,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,981,            time = time - (minutes * 60000L);,3,2,0,1,2,0,0,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,985,        if (date.getTime() != time) {,1,1,0,2,5,1,2,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,986,            date.setTime(time);,0,0,0,1,2,0,3,0,0,3,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,987,            val.setTime(date);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,991,        boolean roundUp = false;,1,0,0,0,0,1,0,0,1,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,992,        for (int i = 0; i < fields.length; i++) {,5,1,0,1,3,2,0,0,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,993,            for (int j = 0; j < fields[i].length; j++) {,4,1,1,1,5,2,0,0,1,7,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,994,                if (fields[i][j] == field) {,1,1,1,1,7,1,0,0,0,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,996,                    if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {,5,4,0,2,5,1,0,0,0,5,72,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,997,                        if (field == DateUtils.SEMI_MONTH) {,3,1,0,1,3,1,0,0,0,5,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1001,                            if (val.get(Calendar.DATE) == 1) {,2,1,0,2,5,1,2,0,0,6,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1002,"                                val.add(Calendar.DATE, 15);",2,0,0,0,2,0,2,0,0,3,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1004,"                                val.add(Calendar.DATE, -15);",2,0,0,0,2,0,2,0,1,4,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1005,"                                val.add(Calendar.MONTH, 1);",2,0,0,0,2,0,2,0,0,3,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1008,                        } else if (field == Calendar.AM_PM) {,3,1,0,1,4,2,0,0,0,5,37,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1012,                            if (val.get(Calendar.HOUR_OF_DAY) == 0) {,2,1,0,2,5,1,2,0,0,6,41,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1013,"                                val.add(Calendar.HOUR_OF_DAY, 12);",2,0,0,0,2,0,2,0,0,3,34,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1015,"                                val.add(Calendar.HOUR_OF_DAY, -12);",2,0,0,0,2,0,2,0,1,4,35,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1016,"                                val.add(Calendar.DATE, 1);",2,0,0,0,2,0,2,0,0,3,26,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1022,"                            val.add(fields[i][0], 1);",0,0,1,0,6,0,2,0,0,3,25,16,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1025,                    return;,0,0,0,0,0,1,0,0,1,2,7,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1029,            int offset = 0;,1,0,0,0,0,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1030,            boolean offsetSet = false;,1,0,0,0,0,1,0,0,1,3,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1032,            switch (field) {,1,0,0,1,3,1,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1034,                    if (fields[i][0] == Calendar.DATE) {,2,1,1,1,7,1,0,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1038,                        offset = val.get(Calendar.DATE) - 1;,3,1,0,1,2,0,2,0,1,6,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1041,                        if (offset >= 15) {,1,1,0,1,3,1,0,0,0,5,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1042,                            offset -= 15;,1,0,0,0,0,0,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1045,                        roundUp = offset > 7;,2,1,0,0,0,0,0,0,1,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1046,                        offsetSet = true;,1,0,0,0,0,0,0,0,2,2,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1050,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,2,1,1,1,7,1,0,0,0,6,43,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1053,                        offset = val.get(Calendar.HOUR_OF_DAY);,3,0,0,1,2,0,2,0,1,5,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1054,                        if (offset >= 12) {,1,1,0,1,3,1,0,0,0,5,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1055,                            offset -= 12;,1,0,0,0,0,0,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1057,                        roundUp = offset >= 6;,2,1,0,0,0,0,0,0,1,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1058,                        offsetSet = true;,1,0,0,0,0,0,0,0,2,2,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1062,            if (!offsetSet) {,1,0,0,1,3,1,0,0,1,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1063,                int min = val.getActualMinimum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1064,                int max = val.getActualMaximum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1066,                offset = val.get(fields[i][0]) - min;,2,1,1,1,6,0,2,0,1,7,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1068,                roundUp = offset > ((max - min) / 2);,4,3,0,2,4,0,0,0,1,5,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1071,            if (offset != 0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1072,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",1,1,1,1,12,0,4,0,0,6,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1075,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",1,1,0,1,2,2,0,1,3,7,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1105,        if (focus == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1106,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1108,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1109,        gval.setTime(focus);,0,0,0,1,2,0,3,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1110,"        return iterator(gval, rangeStyle);",0,0,0,0,2,1,3,0,1,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1138,        if (focus == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1139,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1141,        Calendar start = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1142,        Calendar end = null;,1,0,0,0,0,0,0,1,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1143,        int startCutoff = Calendar.SUNDAY;,3,0,0,0,0,1,0,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1144,        int endCutoff = Calendar.SATURDAY;,3,0,0,0,0,1,0,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1145,        switch (rangeStyle) {,1,0,0,1,3,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1149,"                start = truncate(focus, Calendar.MONTH);",3,0,0,0,2,0,2,0,2,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1151,                end = (Calendar) start.clone();,1,0,0,1,4,0,2,1,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1152,"                end.add(Calendar.MONTH, 1);",2,0,0,0,2,0,2,0,0,3,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1153,"                end.add(Calendar.DATE, -1);",2,0,0,0,2,0,2,0,1,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1155,                if (rangeStyle == RANGE_MONTH_MONDAY) {,2,1,0,1,3,1,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1156,                    startCutoff = Calendar.MONDAY;,3,0,0,0,0,0,0,0,1,2,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1157,                    endCutoff = Calendar.SUNDAY;,3,0,0,0,0,0,0,0,1,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1165,"                start = truncate(focus, Calendar.DATE);",3,0,0,0,2,0,2,0,2,4,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1166,"                end = truncate(focus, Calendar.DATE);",3,0,0,0,2,0,2,0,2,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1167,                switch (rangeStyle) {,1,0,0,1,3,1,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1170,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1172,                        startCutoff = Calendar.MONDAY;,3,0,0,0,0,0,0,0,1,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1173,                        endCutoff = Calendar.SUNDAY;,3,0,0,0,0,0,0,0,1,2,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1174,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1176,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,3,0,0,1,2,0,2,0,1,5,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1177,                        endCutoff = startCutoff - 1;,2,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1178,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1180,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,3,1,0,1,2,0,2,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1181,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,3,1,0,1,2,0,2,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1184,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1186,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",1,1,0,1,2,2,0,1,3,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1188,        if (startCutoff < Calendar.SUNDAY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1189,            startCutoff += 7;,1,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1191,        if (startCutoff > Calendar.SATURDAY) {,3,1,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1192,            startCutoff -= 7;,1,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1194,        if (endCutoff < Calendar.SUNDAY) {,3,1,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1195,            endCutoff += 7;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1197,        if (endCutoff > Calendar.SATURDAY) {,3,1,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1198,            endCutoff -= 7;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1200,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,3,1,0,2,5,1,2,0,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1201,"            start.add(Calendar.DATE, -1);",2,0,0,0,2,0,2,0,1,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1203,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,3,1,0,2,5,1,2,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1204,"            end.add(Calendar.DATE, 1);",2,0,0,0,2,0,2,0,0,3,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1206,"        return new DateIterator(start, end);",2,0,0,0,2,2,0,1,1,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1229,        if (focus == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1230,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1232,        if (focus instanceof Date) {,1,0,0,1,3,2,0,1,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1233,"            return iterator((Date) focus, rangeStyle);",1,0,0,1,4,1,2,1,1,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1234,        } else if (focus instanceof Calendar) {,1,0,0,1,4,3,0,1,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1235,"            return iterator((Calendar) focus, rangeStyle);",1,0,0,1,4,1,2,1,1,7,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1237,"            throw new ClassCastException(""Could not iterate based on "" + focus);",1,1,0,1,2,2,0,1,2,7,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1275,"        return getFragment(date, fragment, Calendar.MILLISECOND);    ",2,0,0,0,2,1,3,0,1,5,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1315,"        return getFragment(date, fragment, Calendar.SECOND);",2,0,0,0,2,1,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1355,"        return getFragment(date, fragment, Calendar.MINUTE);",2,0,0,0,2,1,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1395,"        return getFragment(date, fragment, Calendar.HOUR_OF_DAY);",2,0,0,0,2,1,3,0,1,5,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1435,"        return getFragment(date, fragment, Calendar.DAY_OF_YEAR);",2,0,0,0,2,1,3,0,1,5,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1475,"    return getFragment(calendar, fragment, Calendar.MILLISECOND);",2,0,0,0,2,1,3,0,1,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1514,"        return getFragment(calendar, fragment, Calendar.SECOND);",2,0,0,0,2,1,3,0,1,5,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1554,"        return getFragment(calendar, fragment, Calendar.MINUTE);",2,0,0,0,2,1,3,0,1,5,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1594,"        return getFragment(calendar, fragment, Calendar.HOUR_OF_DAY);",2,0,0,0,2,1,3,0,1,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1636,"        return getFragment(calendar, fragment, Calendar.DAY_OF_YEAR);",2,0,0,0,2,1,3,0,1,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1651,        if(date == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1652,"            throw  new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1654,        Calendar calendar = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1655,        calendar.setTime(date);,0,0,0,1,2,0,3,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1656,"        return getFragment(calendar, fragment, unit);",0,0,0,0,2,1,4,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1671,        if(calendar == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1672,"            throw  new IllegalArgumentException(""The date must not be null""); ",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1674,        long millisPerUnit = getMillisPerUnit(unit);,1,0,0,1,2,1,2,0,1,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1675,        long result = 0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1678,        switch (fragment) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1680,                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;,5,2,0,2,4,0,2,0,1,6,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1681,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1683,                result += (calendar.get(Calendar.DAY_OF_MONTH) * MILLIS_PER_DAY) / millisPerUnit;,5,2,0,2,4,0,2,0,1,6,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1687,        switch (fragment) {,1,0,0,1,3,1,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1695,                result += (calendar.get(Calendar.HOUR_OF_DAY) * MILLIS_PER_HOUR) / millisPerUnit;,5,2,0,2,4,0,2,0,1,6,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1698,                result += (calendar.get(Calendar.MINUTE) * MILLIS_PER_MINUTE) / millisPerUnit;,5,2,0,2,4,0,2,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1701,                result += (calendar.get(Calendar.SECOND) * MILLIS_PER_SECOND) / millisPerUnit;,5,2,0,2,4,0,2,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1704,                result += (calendar.get(Calendar.MILLISECOND) * 1) / millisPerUnit;,4,2,0,2,4,0,2,0,1,6,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1705,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1706,            case Calendar.MILLISECOND: break;//never useful,2,0,0,0,0,2,0,0,0,2,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1707,"                default: throw new IllegalArgumentException(""The fragment "" + fragment + "" is not supported"");",1,1,0,1,2,3,0,1,4,7,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1709,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1726,"        return truncatedCompareTo(cal1, cal2, field) == 0;",0,1,0,0,2,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1743,"        return truncatedCompareTo(date1, date2, field) == 0;",0,1,0,0,2,1,4,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1761,"        Calendar truncatedCal1 = truncate(cal1, field);",1,0,0,0,2,0,3,1,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1762,"        Calendar truncatedCal2 = truncate(cal2, field);",1,0,0,0,2,0,3,1,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1763,        return truncatedCal1.compareTo(truncatedCal2);,0,0,0,1,2,1,3,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1781,"        Date truncatedDate1 = truncate(date1, field);",1,0,0,0,2,0,3,1,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1782,"        Date truncatedDate2 = truncate(date2, field);",1,0,0,0,2,0,3,1,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1783,        return truncatedDate1.compareTo(truncatedDate2);,0,0,0,1,2,1,3,0,0,4,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1795,        long result = Long.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1796,        switch (unit) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1799,                result = MILLIS_PER_DAY;,2,0,0,0,0,0,0,0,1,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1800,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1802,                result = MILLIS_PER_HOUR;,2,0,0,0,0,0,0,0,1,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1803,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1805,                result = MILLIS_PER_MINUTE;,2,0,0,0,0,0,0,0,1,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1806,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1808,                result = MILLIS_PER_SECOND;,2,0,0,0,0,0,0,0,1,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1809,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1811,                result = 1;,1,0,0,0,0,0,0,0,1,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1812,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1813,"            default: throw new IllegalArgumentException(""The unit "" + unit + "" cannot be represented is milleseconds"");",1,1,0,1,2,3,0,1,4,7,107,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1815,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,2,0,1,2,5,66,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,2,0,0,0,0,0,0,0,2,2,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,2,0,1,2,5,56,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,2,0,0,0,0,0,0,0,2,2,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,2,0,0,0,0,0,0,0,2,2,27,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,1,0,0,1,2,2,2,0,1,6,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,1,4,1,5,0,1,6,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,        if (gcd == 1) {,1,1,0,1,3,1,0,0,0,5,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,0,2,1,2,0,0,5,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,3,1,0,1,4,1,0,0,2,6,37,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,594,        int k=0;,1,0,0,0,0,1,0,0,0,2,8,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,2,7,2,0,0,0,5,72,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,598,        if (k==31) {,1,1,0,1,3,1,0,0,0,5,12,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,2,6,1,0,0,1,6,38,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,39,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,613,            if (t>0) {,1,1,0,1,3,1,0,0,0,5,10,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,614,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,616,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,619,            t = (v - u)/2;,3,2,0,1,2,0,0,0,1,5,14,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,622,        } while (t!=0);,1,1,0,1,3,1,0,0,0,5,15,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,623,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,33,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,2,7,1,6,0,0,5,43,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,585,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,    },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,0,2,4,0,2,5,5,69,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,4,0,2,5,6,68,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,1,0,0,1,2,4,0,2,5,6,69,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,4,1,2,5,7,94,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,4,0,2,4,6,65,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,1,0,0,1,2,4,0,2,5,6,77,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",1,0,0,1,2,4,0,2,5,6,76,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,4,1,2,5,7,88,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,1,0,0,1,2,4,0,2,4,6,63,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,        return SPLIT_MATCHER;,1,0,0,0,0,1,0,0,0,2,21,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",2,0,0,0,2,1,3,0,1,5,46,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,418,        },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,390,        },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,2,0,0,0,0,1,0,0,1,3,13,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,320,        },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,284,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,1,0,0,1,2,1,2,0,1,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,            Arrays.sort(this.chars);,1,0,0,1,2,1,2,0,0,5,24,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,287,        },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,0,4,1,3,0,0,5,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,1,0,0,1,2,1,0,4,1,6,57,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,62,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,1,0,0,2,4,1,2,2,1,7,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,        ParsePosition pos = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,        while (pos.getIndex() < pattern.length()) {,0,1,0,2,7,1,4,0,0,5,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,            switch (c[pos.getIndex()]) {,0,0,1,2,7,1,2,0,0,5,28,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,                fmtCount++;,1,0,0,0,0,0,0,0,1,2,11,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,165,"                seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,                int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,167,"                int index = readArgumentIndex(pattern, next(pos));",1,0,0,1,4,1,4,0,2,6,50,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,                stripCustom.append(START_FE).append(index);,0,0,0,1,4,0,5,0,0,3,43,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,169,"                seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,                Format format = null;,1,0,0,0,0,0,0,1,0,2,21,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,171,                String formatDescription = null;,1,0,0,0,0,0,0,1,0,2,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,172,                if (c[pos.getIndex()] == START_FMT) {,1,1,1,2,7,1,2,0,0,7,37,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,173,"                    formatDescription = parseFormatDescription(pattern,",1,0,0,0,1,0,2,0,2,4,51,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,175,                    format = getFormat(formatDescription);,1,0,0,1,2,0,2,0,2,5,38,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,176,                    if (format == null) {,1,1,0,1,3,1,0,0,0,5,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,180,                foundFormats.add(format);,0,0,0,1,2,0,3,0,0,3,25,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,                foundDescriptions.add(format == null ? null : formatDescription);,2,1,0,1,2,0,2,0,0,5,65,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,                Validate.isTrue(foundFormats.size() == fmtCount);,1,1,0,2,4,0,4,0,0,5,49,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,183,                Validate.isTrue(foundDescriptions.size() == fmtCount);,1,1,0,2,4,0,4,0,0,5,54,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,184,                if (c[pos.getIndex()] != END_FE) {,1,1,1,2,7,1,2,0,0,7,34,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,190,                stripCustom.append(c[pos.getIndex()]);,0,0,1,2,6,0,4,0,0,4,38,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,194,        super.applyPattern(stripCustom.toString());,1,0,0,2,4,1,2,0,0,5,43,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,195,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",2,0,0,1,4,1,2,0,2,6,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,        if (containsElements(foundFormats)) {,0,0,0,2,5,1,2,0,1,5,37,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,197,            Format[] origFormats = getFormats();,1,0,0,1,4,0,1,1,1,6,36,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,200,            int i = 0;,1,0,0,0,0,1,0,0,0,2,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {,2,0,0,2,7,1,4,2,1,7,72,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,                Format f = it.next();,1,0,0,1,2,0,2,1,0,5,21,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,                if (f != null) {,1,1,0,1,3,1,0,0,0,5,16,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,204,                    origFormats[i] = f;,1,0,1,0,2,0,0,0,1,4,19,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,            super.setFormats(origFormats);,2,0,0,1,2,1,0,0,0,4,30,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,209,    },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,2,0,0,0,0,0,0,1,0,2,19,6,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,279,            String args = null;,1,0,0,0,0,0,0,1,0,2,19,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,280,            int i = desc.indexOf(START_FMT);,1,0,0,1,2,1,3,0,0,5,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,281,            if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,            FormatFactory factory = registry.get(name);,1,0,0,1,2,0,3,1,0,5,43,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,286,            if (factory != null) {,1,1,0,1,3,1,0,0,0,5,22,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());",0,0,0,1,4,1,5,0,1,5,50,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,301,        int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,302,"        seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,303,        StringBuffer result = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,        boolean error = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,305,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,1,2,0,2,9,1,6,0,2,7,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,            char c = pattern.charAt(pos.getIndex());,1,0,0,2,4,1,4,0,0,5,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,307,            if (Character.isWhitespace(c)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,4,5,0,2,7,1,2,0,0,6,61,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,317,                    return Integer.parseInt(result.toString());,0,0,0,2,4,1,4,0,0,4,43,11,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,323,            error = !Character.isDigit(c);,1,0,0,1,2,0,3,0,2,5,30,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,324,            result.append(c);,0,0,0,1,2,0,3,0,0,3,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,343,        int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,344,"        seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,345,        int text = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,26,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,346,        int depth = 1;,1,0,0,0,0,1,0,0,0,2,14,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,347,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,2,9,1,6,0,1,6,54,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,1,4,0,0,4,41,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,353,                depth--;,1,0,0,0,0,0,0,0,1,2,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,354,                if (depth == 0) {,1,1,0,1,3,1,0,0,0,5,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,355,"                    return pattern.substring(text, pos.getIndex());",0,0,0,1,4,1,5,0,0,4,47,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,375,        if (!containsElements(customPatterns)) {,0,0,0,2,5,1,2,0,2,5,40,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,        StringBuilder sb = new StringBuilder(pattern.length() * 2);,1,1,0,2,4,1,2,2,1,8,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,379,        ParsePosition pos = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,380,        int fe = -1;,1,0,0,0,0,1,0,0,1,3,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,381,        int depth = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,382,        while (pos.getIndex() < pattern.length()) {,0,1,0,2,7,1,4,0,0,5,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,383,            char c = pattern.charAt(pos.getIndex());,1,0,0,2,4,1,4,0,0,5,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,            switch (c) {,1,0,0,1,3,1,0,0,0,4,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,389,                depth++;,1,0,0,0,0,0,0,0,1,2,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,390,                if (depth == 1) {,1,1,0,1,3,1,0,0,0,5,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,                    fe++;,1,0,0,0,0,0,0,0,1,2,5,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,                    sb.append(START_FE).append(,0,0,0,1,3,0,4,0,0,3,27,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,394,                    String customPattern = customPatterns.get(fe);,1,0,0,1,2,0,3,1,0,5,46,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,395,                    if (customPattern != null) {,1,1,0,1,3,1,0,0,0,5,28,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,                        sb.append(START_FMT).append(customPattern);,0,0,0,1,4,0,5,0,0,3,43,12,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,398,                },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,401,                depth--;,1,0,0,0,0,0,0,0,1,2,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,404,                sb.append(c);,0,0,0,1,2,0,3,0,0,3,13,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,405,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,407,        },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,408,        return sb.toString();,0,0,0,1,2,1,2,0,0,4,21,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,        int len = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,419,        char[] buffer = pattern.toCharArray();,1,0,0,1,4,1,2,0,0,5,38,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",1,0,0,1,6,0,6,0,1,5,64,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,            pos.setIndex(pos.getIndex() + len);,1,1,0,2,4,0,4,0,0,5,35,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,        } while (len > 0 && pos.getIndex() < pattern.length());,1,3,0,2,7,1,4,0,0,6,55,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,424,    },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,4,0,0,4,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,        return pos;,1,0,0,0,0,1,0,0,0,2,11,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,        if (coll == null || coll.size() == 0) {,1,3,0,2,5,1,2,0,0,6,39,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {,1,0,0,2,7,1,4,1,0,6,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,            if (iter.next() != null) {,0,1,0,2,5,1,2,0,0,5,26,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,500,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,179,    },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,125,        super(DUMMY_PATTERN);,1,0,0,1,2,1,0,0,1,5,21,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,126,        setLocale(locale);,0,0,0,1,2,0,2,0,1,4,18,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,127,        this.registry = registry;,2,0,0,0,0,1,0,0,1,3,25,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,128,        applyPattern(pattern);,0,0,0,1,2,0,2,0,1,4,22,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,129,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,146,        if (registry == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,147,            super.applyPattern(pattern);,2,0,0,1,2,1,0,0,0,4,28,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,148,            toPattern = super.toPattern();,2,0,0,1,2,1,0,0,1,5,30,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,149,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,351,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,352,            chars = str.toCharArray();,1,0,0,1,2,0,2,0,1,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,353,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,366,            int len = chars.length;,3,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,367,            if (pos + len > bufferEnd) {,3,2,0,1,3,1,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,368,                return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,370,"            for (int i = 0; i < chars.length; i++, pos++) {",6,1,0,0,3,2,0,0,2,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,371,                if (chars[i] != buffer[pos]) {,0,1,1,1,7,1,0,0,0,5,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,372,                    return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,375,            return len;,1,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,80,        return COMMA_MATCHER;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,89,        return TAB_MATCHER;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,98,        return SPACE_MATCHER;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,117,        return TRIM_MATCHER;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,126,        return SINGLE_QUOTE_MATCHER;,1,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,135,        return DOUBLE_QUOTE_MATCHER;,1,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,144,        return QUOTE_MATCHER;,1,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,153,        return NONE_MATCHER;,1,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,163,        return new CharMatcher(ch);,1,0,0,1,2,2,0,1,1,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,173,        if (chars == null || chars.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,174,            return NONE_MATCHER;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,176,        if (chars.length == 1) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,177,            return new CharMatcher(chars[0]);,0,0,1,1,4,2,0,1,1,6,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,179,        return new CharSetMatcher(chars);,1,0,0,1,2,2,0,1,1,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,189,        if (chars == null || chars.length() == 0) {,1,3,0,2,5,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,190,            return NONE_MATCHER;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,192,        if (chars.length() == 1) {,0,1,0,2,5,1,2,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,2,2,1,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,2,2,1,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,205,        if (str == null || str.length() == 0) {,1,3,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,206,            return NONE_MATCHER;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,208,        return new StringMatcher(str);,1,0,0,1,2,2,0,1,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,431,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,0,2,1,0,0,0,4,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,403,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,333,            return ch == buffer[pos] ? 1 : 0;,1,1,1,0,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",1,0,0,1,4,1,2,0,0,5,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,92,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,102,"        this(pattern, locale, null);",2,0,0,0,2,1,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,113,"        this(pattern, Locale.getDefault(), registry);",2,0,0,1,4,1,2,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,114,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,136,        return toPattern;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,161,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,0,2,0,4,0,2,3,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,162,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,177,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,1,4,0,5,0,0,3,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,185,                    throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,220,        throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,232,        throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,243,        throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,254,        throw new UnsupportedOperationException();,0,0,0,1,2,2,0,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,282,"                name = desc.substring(0, i).trim();",1,0,0,1,4,0,4,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,283,                args = desc.substring(i + 1).trim();,2,1,0,1,4,0,3,0,1,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,290,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,308,"                seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,309,                c = pattern.charAt(pos.getIndex());,1,0,0,2,4,0,4,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,310,                if (c != START_FMT && c != END_FE) {,4,3,0,1,3,1,0,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,311,                    error = true;,1,0,0,0,0,0,0,0,2,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,312,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,318,                } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,326,        if (error) {,1,0,0,1,3,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,327,            throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,331,        throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,350,                depth++;,1,0,0,0,0,0,0,0,1,2,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,351,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,359,"                getQuotedString(pattern, pos, false);",0,0,0,0,2,0,3,0,2,3,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,363,        throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,376,            return pattern;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,386,"                appendQuotedString(pattern, pos, sb, false);",0,0,0,0,2,0,4,0,2,3,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,387,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,449,        int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,450,        char[] c = pattern.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,451,        if (escapingOn && c[start] == QUOTE) {,2,2,1,1,5,1,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,452,            next(pos);,0,0,0,1,2,0,2,0,1,4,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,453,            return appendTo == null ? null : appendTo.append(QUOTE);,1,1,0,1,2,1,3,0,0,6,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,455,        int lastHold = start;,2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,456,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,3,1,0,2,7,2,4,0,1,7,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,457,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,1,1,0,2,7,1,5,0,0,6,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,458,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",1,1,0,1,5,0,7,0,0,5,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,460,                pos.setIndex(i + ESCAPED_QUOTE.length());,1,1,0,2,4,0,4,0,0,5,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,461,                lastHold = pos.getIndex();,1,0,0,1,2,0,2,0,1,5,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,462,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,464,            switch (c[pos.getIndex()]) {,0,0,1,2,7,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,466,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,467,"                return appendTo == null ? null : appendTo.append(c, lastHold,",1,1,0,0,1,1,4,0,0,5,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,470,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,473,        throw new IllegalArgumentException(,0,0,0,0,1,2,0,1,1,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,486,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,0,2,0,4,0,1,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,487,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,496,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,503,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,76,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,77,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,102,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,103,"            throw new IllegalArgumentException(String.format(message, Long.valueOf(value)));",0,0,0,1,6,2,6,1,1,6,80,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,105,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,127,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,128,"            throw new IllegalArgumentException(String.format(message, new Double(value)));",1,0,0,1,6,3,3,2,2,7,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,130,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,151,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,152,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,154,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,177,            throw new IllegalArgumentException(DEFAULT_IS_TRUE_EX_MESSAGE);,1,0,0,1,2,2,0,1,1,6,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,200,"        return notNull(object, DEFAULT_IS_NULL_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,218,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,219,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,221,        return object;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,243,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,244,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,246,        if (array.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,247,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,249,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,269,"        return notEmpty(array, DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,291,        if (collection == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,292,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,294,        if (collection.size() == 0) {,0,1,0,2,5,1,2,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,295,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,297,        return collection;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,317,"        return notEmpty(collection, DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,339,        if (map == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,340,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,342,        if (map.size() == 0) {,0,1,0,2,5,1,2,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,343,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,345,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,365,"        return notEmpty(map, DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,387,        if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,388,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,390,        if (chars.length() == 0) {,0,1,0,2,5,1,2,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,391,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,393,        return chars;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,414,"        return notEmpty(chars, DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,437,        if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,438,"            throw new NullPointerException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,440,        if (StringUtils.isBlank(chars)) {,0,0,0,2,5,1,3,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,441,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,443,        return chars;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,464,"        return notBlank(chars, DEFAULT_NOT_BLANK_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,492,        Validate.notNull(array);,0,0,0,1,2,0,3,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,493,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,494,            if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,495,"                Object[] values2 = ArrayUtils.add(values, Integer.valueOf(i));",1,0,0,1,6,0,6,1,0,5,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,496,"                throw new IllegalArgumentException(String.format(message, values2));",0,0,0,0,4,2,4,1,1,5,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,499,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,524,"        return noNullElements(array, DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,552,        Validate.notNull(iterable);,0,0,0,1,2,0,3,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,553,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,554,        for (Iterator<?> it = iterable.iterator(); it.hasNext(); i++) {,2,0,0,2,7,1,4,1,1,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,555,            if (it.next() == null) {,0,1,0,2,5,1,2,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,556,"                Object[] values2 = ArrayUtils.addAll(values, Integer.valueOf(i));",1,0,0,1,6,0,6,1,0,5,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,557,"                throw new IllegalArgumentException(String.format(message, values2));",0,0,0,0,4,2,4,1,1,5,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,560,        return iterable;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,585,"        return noNullElements(iterable, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE);",0,0,0,0,2,1,3,0,1,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,610,        Validate.notNull(array);,0,0,0,1,2,0,3,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,611,        if (index < 0 || index >= array.length) {,4,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,612,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,614,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,639,"        return validIndex(array, index, DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE, Integer.valueOf(index));",0,0,0,1,4,1,7,0,1,5,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,664,        Validate.notNull(collection);,0,0,0,1,2,0,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,665,        if (index < 0 || index >= collection.size()) {,2,3,0,2,5,1,2,0,0,6,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,666,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,668,        return collection;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,690,"        return validIndex(collection, index, DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE, Integer.valueOf(index));",0,0,0,1,4,1,7,0,1,5,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,716,        Validate.notNull(chars);,0,0,0,1,2,0,3,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,717,        if (index < 0 || index >= chars.length()) {,2,3,0,2,5,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,718,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,720,        return chars;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,746,"        return validIndex(chars, index, DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE, Integer.valueOf(index));",0,0,0,1,4,1,7,0,1,5,102,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,767,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,768,            throw new IllegalStateException(DEFAULT_VALID_STATE_EX_MESSAGE);,1,0,0,1,2,2,0,1,1,6,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,770,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,787,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,788,"            throw new IllegalStateException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,790,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,807,"        if (Pattern.matches(pattern, input) == false)",0,1,0,0,4,1,4,0,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,809,"            throw new IllegalArgumentException(String.format(DEFAULT_MATCHES_PATTERN_EX, input, pattern));",0,0,0,0,4,2,5,1,1,5,94,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,811,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,830,"        if (Pattern.matches(pattern, input) == false)",0,1,0,0,4,1,4,0,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,832,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,834,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,850,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),0,3,0,2,6,1,6,0,0,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,852,"            throw new IllegalArgumentException(String.format(DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,0,4,2,6,1,1,5,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,854,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,873,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),0,3,0,2,6,1,6,0,0,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,875,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,877,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,893,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,2,6,1,6,0,0,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,895,"            throw new IllegalArgumentException(String.format(DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,0,4,2,6,1,1,5,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,897,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,916,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,2,6,1,6,0,0,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,918,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,920,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,939,        if (type.isInstance(o) == false),0,1,0,2,4,1,3,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,941,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));",0,0,0,1,6,2,5,1,1,6,101,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,943,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,961,        if (type.isInstance(o) == false),0,1,0,2,4,1,3,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,963,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,965,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,984,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,1,3,0,1,6,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,986,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, superType.getName()));",0,0,0,1,6,2,5,1,1,6,105,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,988,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1009,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,1,3,0,1,6,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1011,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,0,4,2,4,1,1,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1013,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,40,        super(message);,1,0,0,1,2,1,0,0,1,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,41,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,50,        super(cause);,1,0,0,1,2,1,0,0,1,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,51,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,61,"        super(message, cause);",2,0,0,0,2,1,0,0,1,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,62,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,74,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,63,    public static final Null NULL = new Null();,1,0,0,1,2,4,0,2,4,6,43,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,96,        return object != null ? object : defaultValue;,3,1,0,0,0,1,0,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,120,        if (values != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,121,            for (T val : values) {,2,0,0,1,3,1,0,1,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,122,                if (val != null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,123,                    return val;,1,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,127,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,152,        if (object1 == object2) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,153,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,155,        if ((object1 == null) || (object2 == null)) {,2,3,0,2,7,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,156,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,158,        return object1.equals(object2);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,181,"        return ObjectUtils.equals(object1, object2) == false;",0,1,0,0,2,1,4,0,1,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,198,        return (obj == null) ? 0 : obj.hashCode();,1,1,0,1,4,1,2,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,220,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,221,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,223,        StringBuffer buffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,224,"        identityToString(buffer, object);",0,0,0,0,2,0,3,0,1,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,225,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,244,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,245,"            throw new NullPointerException(""Cannot get the toString of a null identity"");",0,0,0,1,2,2,0,1,2,5,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,247,        buffer.append(object.getClass().getName()),0,0,0,2,6,0,5,0,0,3,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,250,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,272,"        return obj == null ? """" : obj.toString();",1,1,0,1,2,1,2,0,1,7,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,295,        return obj == null ? nullStr : obj.toString();,2,1,0,1,2,1,2,0,0,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,313,        T result = null;,1,0,0,0,0,0,0,1,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,314,        if (values != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,315,            for (T value : values) {,2,0,0,1,3,1,0,1,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,316,"                if (compare(value, result, true) < 0) {",0,1,0,0,5,1,3,0,2,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,317,                    result = value;,2,0,0,0,0,0,0,0,1,2,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,321,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,337,        T result = null;,1,0,0,0,0,0,0,1,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,338,        if (values != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,339,            for (T value : values) {,2,0,0,1,3,1,0,1,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,340,"                if (compare(value, result, false) > 0) {",0,1,0,0,5,1,3,0,2,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,341,                    result = value;,2,0,0,0,0,0,0,0,1,2,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,345,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,358,"        return compare(c1, c2, false);",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,374,        if (c1 == c2) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,375,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,376,        } else if (c1 == null) {,1,1,0,1,4,2,0,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,377,            return (nullGreater ? 1 : -1);,1,0,0,1,2,1,0,0,1,5,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,378,        } else if (c2 == null) {,1,1,0,1,4,2,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,379,            return (nullGreater ? -1 : 1);,1,0,0,1,2,1,0,0,1,5,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,381,        return c1.compareTo(c2);,0,0,0,1,2,1,3,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,394,        if (o instanceof Cloneable) {,1,0,0,1,3,2,0,1,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,396,            if (o.getClass().isArray()) {,0,0,0,2,7,1,3,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,397,                final Class<?> componentType = o.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,63,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,398,                if (!componentType.isPrimitive()) {,0,0,0,2,5,1,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,399,                    result = ((Object[])o).clone();,2,0,0,2,8,0,1,1,1,6,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,401,                    int length = Array.getLength(o);,1,0,0,1,2,1,3,0,0,5,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,402,"                    result = Array.newInstance(componentType, length);",1,0,0,0,2,0,4,0,1,4,50,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,403,                    while (length-- > 0) {,1,1,0,1,3,1,0,0,1,6,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,404,"                        Array.set(result, length, Array.get(o, length));",0,0,0,0,4,0,8,0,0,2,48,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,407,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,409,"                    final Method clone = o.getClass().getMethod(""clone"");",1,0,0,1,4,1,3,1,2,7,53,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,410,                    result = clone.invoke(o);,1,0,0,1,2,0,3,0,1,5,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,421,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,411,                } catch (final NoSuchMethodException e) {,1,0,0,1,4,2,0,1,1,6,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,412,"                    throw new CloneFailedException(""Cloneable type """,0,1,0,0,1,2,0,1,2,5,48,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,415,                } catch (final IllegalAccessException e) {,1,0,0,1,4,2,0,1,1,6,42,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,416,"                    throw new CloneFailedException(""Cannot clone Cloneable type """,0,1,0,0,1,2,0,1,2,5,61,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,418,                } catch (final InvocationTargetException e) {,1,0,0,1,4,2,0,1,1,6,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,419,"                    throw new CloneFailedException(""Exception cloning Cloneable type """,0,1,0,0,1,2,0,1,2,5,66,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,424,            final T checked = (T)result;,2,0,0,1,2,1,0,2,1,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,425,            return checked;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,428,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,446,        final T clone = clone(o);,1,0,0,1,2,1,2,1,2,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,447,        return clone == null ? o : clone;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,478,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,479,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,487,            return ObjectUtils.NULL;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,1,2,0,0,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,0,0,0,1,2,1,2,0,1,5,23,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,1,6,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,453,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,469,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,498,        if (!Character.isDigit(lastChar) && lastChar != '.') {,1,2,0,2,5,1,3,0,2,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,502,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,505,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,506,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,514,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,613,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,616,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,618,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,638,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,654,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,672,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,704,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,721,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,688,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1303,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,199,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,239,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,243,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,54,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,52,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,131,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,1,0,0,1,6,3,2,1,4,7,78,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,135,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,333,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,336,    private static final String[][] BASIC_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,48,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,344,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,1,0,0,1,6,3,2,1,4,7,70,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,347,    private static final String[][] APOS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,47,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,352,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,68,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,355,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,364,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,372,        String[][] newarray = new String[array.length][2];,3,0,0,0,8,1,0,2,0,4,50,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,373,        for(int i = 0; i<array.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,374,            newarray[i][0] = array[i][1];,0,0,1,0,8,0,0,0,1,3,29,6,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,375,            newarray[i][1] = array[i][0];,0,0,1,0,8,0,0,0,1,3,29,6,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,377,        return newarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,28,public class EntityArrays {,1,0,0,0,1,2,0,0,1,4,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,130,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,84,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,134,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,332,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,335,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,343,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,346,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,351,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,354,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,363,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,2,6,0,5,0,0,4,45,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,2,0,0,1,2,1,0,2,1,6,46,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,1,6,2,3,1,2,7,70,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,2,0,0,1,3,0,0,1,0,4,29,3,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,2,0,0,0,0,0,0,0,1,2,15,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,0,0,0,1,2,1,2,0,0,4,23,6,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",0,0,0,1,4,0,5,0,1,4,39,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,1,1,0,1,3,1,0,0,0,5,18,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1357,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1361,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,196,"        return getInstance(pattern, null, locale);",0,0,0,0,2,1,3,0,1,4,42,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",6,1,0,0,2,1,0,1,2,6,84,7,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,2,0,0,1,2,1,0,1,2,6,30,9,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,689,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,3,5,0,2,5,1,2,0,1,7,54,10,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,2,0,0,0,0,0,0,0,2,2,23,12,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,2,1,0,1,3,1,0,0,0,5,22,8,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,0,0,0,1,2,1,2,0,1,5,23,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,1,6,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,1,2,0,2,5,1,3,0,2,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,54,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",1,0,0,1,6,0,7,0,1,5,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,3,0,0,3,23,7,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,3,2,0,1,4,1,0,0,0,5,47,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,2,1,0,0,0,1,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,1,0,0,0,0,1,0,0,1,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,1,0,0,1,2,1,3,0,0,5,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,2,3,0,1,3,1,0,0,2,6,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,2,0,0,0,0,1,0,0,0,2,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,1,3,0,1,6,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,1,0,0,0,0,0,0,0,1,2,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,1,0,0,1,3,1,0,0,0,4,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,1,4,0,2,7,1,5,0,2,7,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",1,0,0,1,2,3,1,1,5,7,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",1,0,0,1,2,3,1,1,5,7,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",1,0,0,1,2,3,1,1,5,7,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",1,0,0,1,2,3,1,1,5,7,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",1,0,0,1,2,3,1,1,5,7,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",1,0,0,1,2,3,1,1,5,7,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",1,0,0,1,2,4,1,1,5,7,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",1,0,0,1,2,4,1,1,5,7,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",1,0,0,1,2,3,1,1,5,7,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",1,0,0,1,2,3,1,1,5,7,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",1,0,0,1,2,3,1,1,5,7,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,1,0,0,1,2,3,2,1,4,7,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",1,0,0,1,2,3,1,1,5,7,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",1,0,0,1,2,3,1,1,5,7,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",1,0,0,1,2,3,1,1,5,7,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",1,0,0,1,2,3,1,1,5,7,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",1,0,0,1,2,3,1,1,5,7,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",1,0,0,1,2,3,1,1,5,7,121,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",1,0,0,1,2,3,1,1,5,7,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",1,0,0,1,2,3,1,1,5,7,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",1,0,0,1,2,3,1,1,5,7,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",1,0,0,1,2,3,1,1,5,7,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",1,0,0,1,2,3,1,1,5,7,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",1,0,0,1,2,3,1,1,5,7,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",1,0,0,1,2,3,1,1,5,7,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",1,0,0,1,2,3,1,1,5,7,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",1,0,0,1,2,3,1,1,5,7,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",1,0,0,1,2,3,1,1,5,7,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",1,0,0,1,2,3,1,1,5,7,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",1,0,0,1,2,3,1,1,5,7,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",1,1,0,1,4,3,2,1,7,8,118,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,1,0,0,1,2,3,2,1,4,7,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",1,0,0,1,2,3,1,1,5,7,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",1,0,0,1,2,3,1,1,5,7,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",1,0,0,1,2,3,1,1,5,7,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,1,0,0,1,2,3,1,1,4,7,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,1,0,0,1,2,4,1,0,4,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,1,0,0,1,2,4,1,0,4,6,65,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",1,0,0,1,2,4,1,0,5,6,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",1,0,0,1,2,4,1,0,5,6,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",1,0,0,1,2,4,1,0,5,6,68,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",1,0,0,1,2,4,1,0,5,6,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",1,1,0,1,4,4,2,0,7,7,97,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",1,0,0,1,2,4,1,0,5,6,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",1,0,0,1,2,4,1,0,5,6,73,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",1,0,0,1,2,4,1,0,5,6,65,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",1,0,0,1,2,4,1,0,5,6,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",1,0,0,1,2,4,1,0,5,6,69,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,7,1,0,0,0,4,0,0,3,4,128,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,1,0,0,1,2,4,2,0,4,6,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",1,0,0,0,2,4,2,0,5,5,93,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,0,0,2,4,1,0,6,6,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,1,0,0,2,4,1,0,6,6,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",1,0,0,0,2,4,2,0,5,5,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",2,1,0,1,2,4,1,0,5,7,96,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",1,0,0,0,2,4,2,0,5,5,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",1,0,0,0,2,4,2,0,5,5,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",1,0,0,0,2,4,2,0,5,5,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,0,0,0,4,1,3,0,2,5,95,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,0,0,0,4,1,3,0,2,5,93,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,0,2,1,3,0,1,4,63,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1410,        if (JAVA_VERSION != null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,3,1,0,2,5,2,2,0,1,7,49,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,1,0,0,1,2,1,3,0,0,5,33,9,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1413,                if (ch >= '0' && ch <= '9') {,2,3,0,1,3,1,0,0,2,6,29,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1414,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,3,0,0,4,33,11,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,0,2,1,5,0,1,4,69,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,0,2,1,3,0,1,4,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1462,            return System.getProperty(property);,0,0,0,1,2,1,3,0,0,4,36,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1577,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,3,0,0,4,41,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,1,4,1,6,0,0,5,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1616,        if (osName == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1619,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,3,0,0,4,39,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1716,        if (version == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",1,0,0,1,8,0,4,1,1,6,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",3,0,0,0,6,3,3,0,0,4,54,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1721,        int j = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,7,3,0,1,3,2,0,0,1,6,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1723,            String s = strings[i];,1,0,1,0,2,0,0,1,0,4,22,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1724,            if (s.length() > 0) {,0,1,0,2,5,1,2,0,0,5,21,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,1,0,1,1,4,0,3,0,2,6,32,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1728,        return ints;,1,0,0,0,0,1,0,0,0,2,12,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,3,3,0,1,3,1,0,0,0,5,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1755,        if (javaVersions.length == 1) {,2,1,0,1,3,1,0,0,0,5,31,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1758,        StringBuilder builder = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,1,4,0,2,0,0,4,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1760,        builder.append('.');,0,0,0,1,2,0,2,0,1,4,20,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1761,        for (int i = 1; i < javaVersions.length; i++) {,5,1,0,1,3,2,0,0,1,6,47,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1762,            builder.append(javaVersions[i]);,0,0,1,1,4,0,2,0,0,4,32,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1765,            return Float.parseFloat(builder.toString());,0,0,0,2,4,1,4,0,0,4,44,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1795,        int intVersion = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,3,0,0,0,0,1,0,0,0,2,30,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,1,1,0,1,3,1,0,0,0,5,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,1,1,1,0,2,0,0,0,1,5,35,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,1,1,0,1,3,1,0,0,0,5,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1801,            intVersion += javaVersions[1] * 10;,1,1,1,0,2,0,0,0,1,5,35,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1803,        if (len >= 3) {,1,1,0,1,3,1,0,0,0,5,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1804,            intVersion += javaVersions[2];,1,0,1,0,2,0,0,0,1,4,30,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,1,0,0,0,0,1,0,0,0,2,18,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,1,0,0,1,2,13,10,1.6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,41,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,52,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,1,0,0,1,2,1,2,0,0,5,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,3,0,0,0,0,1,0,0,0,2,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,2,0,0,1,6,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,1,2,12,10,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,0,2,1,2,0,2,4,61,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,2,0,2,1,5,28,8,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,2,0,0,4,22,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,1,0,0,2,6,2,2,1,2,7,48,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,0,0,0,2,5,1,2,0,1,5,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,2,0,1,4,17,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,1,0,0,1,4,0,2,1,0,5,43,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,0,2,0,3,0,1,3,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,2,0,0,1,3,1,0,1,0,5,28,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,1,0,1,5,1,5,0,1,6,56,8,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,1,0,0,1,2,0,3,1,0,5,38,12,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,3,0,0,3,27,13,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,0,0,0,1,2,0,2,0,1,4,19,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,1,0,0,1,2,0,2,1,0,5,35,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,0,2,0,6,0,1,3,72,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,2,3,0,2,5,1,2,0,0,6,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,1,0,0,1,2,0,2,0,1,5,30,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,0,2,0,6,0,1,3,72,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,0,0,0,1,2,1,2,0,0,4,28,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,36,5,0.14286,1,1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,2,0,0,1,3,1,0,1,1,6,29,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,1,0,0,1,2,0,3,0,1,5,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,2,0,0,0,0,0,0,0,1,2,15,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,1,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,1,0,0,2,5,2,0,1,1,6,32,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,2,0,0,1,2,0,0,2,0,4,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,3,1,0,1,3,1,0,0,0,5,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,3,1,0,0,0,1,0,0,0,3,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",3,0,0,0,2,1,0,2,1,5,99,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,94,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,0,2,1,2,1,0,5,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,0,2,1,2,1,0,5,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,0,2,0,2,0,0,3,46,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,1,2,1,0,6,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,1,3,0,1,5,43,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,0,2,0,4,0,0,2,54,9,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,0,2,1,1,0,3,4,28,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,0,2,1,1,0,3,4,32,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,0,2,1,1,0,3,4,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,0,2,1,1,0,3,4,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,0,2,1,1,0,3,4,31,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,0,2,0,4,0,0,2,45,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,0,2,0,4,0,0,2,52,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,3,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,1,2,0,1,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,1,2,0,1,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,1,4,0,2,0,1,4,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,3,9,1,6,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",1,1,0,1,4,0,4,0,1,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,1,0,0,1,2,0,3,0,1,5,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,1,0,0,0,1,1,2,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,2,1,0,1,2,0,2,1,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,1,1,0,1,3,1,0,0,1,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,2,1,0,0,0,1,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,3,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,1,3,0,2,5,1,2,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,0,1,0,2,6,1,2,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,3,9,1,6,0,2,6,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,1,0,0,1,2,0,2,1,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,1,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,3,0,0,3,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,1,0,0,1,2,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,1,0,0,1,2,1,0,4,1,6,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,0,2,0,3,0,1,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,1,0,0,1,2,2,0,2,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,1,0,0,1,4,0,2,1,0,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,2,0,0,1,3,1,0,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,0,0,0,2,5,1,3,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,336,"                    getAllInterfaces(i, interfacesFound);",0,0,0,0,2,0,3,0,1,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,342,     },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,362,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,1,0,0,2,4,1,2,4,1,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,363,        for (String className : classNames) {,2,0,0,1,3,1,0,1,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,0,0,0,2,4,0,5,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,368,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,0,0,0,1,2,0,2,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,387,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,1,0,0,2,4,1,2,4,1,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,2,0,0,1,3,1,0,1,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,2,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,0,0,0,2,4,0,4,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,396,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,439,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,1,4,1,5,0,1,5,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,0,5,1,4,0,1,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,476,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,482,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",0,1,1,0,9,1,2,0,2,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,524,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,1,4,1,5,0,1,5,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,556,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,2,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,1,0,0,1,3,1,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,567,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,570,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,571,                cls = wrapperToPrimitive(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,577,        if (cls.equals(toClass)) {,0,0,0,2,5,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,578,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,580,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,1,2,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,584,            if (Integer.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,594,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,2,0,0,1,2,1,2,0,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,609,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,622,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,624,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,3,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,2,0,0,0,0,0,0,1,0,2,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,1,2,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,642,            convertedClass = primitiveWrapperMap.get(cls);,1,0,0,1,2,0,3,0,1,5,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,658,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,659,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,662,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,690,        return wrapperPrimitiveMap.get(cls);,0,0,0,1,2,1,3,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,709,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,718,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,734,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,736,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,0,1,0,1,4,1,4,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",1,1,0,1,3,0,3,1,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",1,0,0,1,4,0,6,0,1,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",1,0,0,1,4,0,6,0,2,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,761,        return clazz;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,776,"        return getClass(classLoader, className, true);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,790,"        return getClass(className, true);",0,0,0,0,2,1,2,0,2,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,805,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,1,0,0,1,4,0,3,1,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,3,1,0,1,2,1,1,2,0,7,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,807,"        return getClass(loader, className, initialize );",0,0,0,0,2,1,4,0,1,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,836,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,1,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,4,0,1,4,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,4,0,1,4,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,2,0,0,1,3,1,0,1,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,1,4,0,1,5,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,847,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,851,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,0,1,4,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,854,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,1,0,0,1,4,1,0,1,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,853,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,856,                return candidateMethod;,1,0,0,0,0,1,0,0,0,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,860,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,4,0,1,2,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,874,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,2,0,1,2,5,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,2,8,2,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",0,0,0,2,7,1,2,0,1,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,878,"                className = className.substring(0, className.length() - 2);",1,1,0,1,4,0,4,0,1,6,59,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,2,0,1,4,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,1,0,0,1,2,0,3,1,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,1,1,0,1,3,1,0,0,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,3,0,0,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,885,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,1,6,0,5,0,2,4,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,1,0,0,1,2,0,2,0,1,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,0,4,1,0,2,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,943,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,956,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,987,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1001,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1023,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,1,0,0,0,0,1,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,0,0,2,6,1,2,0,1,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1027,                dim++;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1030,            if (dim < 1) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,1,0,0,0,0,1,0,0,0,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,1,2,0,1,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,1,0,0,0,1,0,2,0,1,4,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1040,                    if (className.length() > 0) {,0,1,0,2,5,1,2,0,0,5,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",1,0,0,0,4,0,4,0,1,4,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,2,0,0,1,2,1,0,2,1,6,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,4,1,0,1,3,2,0,0,1,6,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,1,4,0,2,0,1,4,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1048,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,2,0,0,4,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,144,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",0,0,0,0,4,1,2,0,2,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,178,            return stringIfNull;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",3,0,0,1,6,2,3,1,1,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,1,6,2,4,1,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,225,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",3,1,0,2,6,3,0,6,2,7,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,1,0,1,0,2,0,0,1,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",3,0,0,0,3,2,0,0,0,3,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",6,0,0,0,2,0,0,0,0,2,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,1,6,0,6,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,1,0,0,1,6,3,0,1,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,235,                Object[] entry = (Object[]) object;,2,0,0,1,6,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,236,                if (entry.length < 2) {,2,1,0,1,3,1,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,241,"                map.put(entry[0], entry[1]);",0,0,1,0,6,0,2,0,0,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,242,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,293,        return items;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,312,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,330,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,375,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,378,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,391,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,410,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,440,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,442,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,462,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,463,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,465,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,486,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,502,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,503,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,524,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,526,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,546,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,548,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,567,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,569,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,587,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,588,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,589,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,609,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,632,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,651,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,653,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,655,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,692,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,714,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,715,        }else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,718,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,734,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,755,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,756,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,758,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,776,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,778,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,781,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,802,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,820,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,860,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,1,0,0,1,4,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",1,0,0,1,8,1,3,2,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",1,0,0,1,8,0,4,2,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,875,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,901,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,902,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,908,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,909,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,914,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,937,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,943,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,944,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,946,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,948,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,951,        int[] subarray = new int[newSize];,1,0,1,0,4,3,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,979,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,980,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,983,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,985,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,986,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1018,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1019,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1055,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1058,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1060,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1061,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1063,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1064,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1070,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1093,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1100,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1132,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1138,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1141,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1146,        float[] subarray = new float[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1148,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1175,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1178,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,1,0,1,0,4,3,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1187,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1209,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1225,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1227,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1243,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1245,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1279,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1281,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1297,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1315,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1333,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1335,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1351,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1381,        return Array.getLength(array);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1394,        if (array1 == null || array2 == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,2,10,1,7,0,0,4,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1413,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1418,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1421,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1439,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1442,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1443,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1448,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1459,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1464,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1465,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1466,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1467,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1468,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1482,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1485,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1488,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1489,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1494,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1505,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1507,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1512,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1528,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1536,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1550,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1553,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1558,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1559,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1560,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1561,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1573,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1574,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1580,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1581,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1583,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1597,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1599,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1600,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1603,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1604,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1605,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1606,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1609,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1651,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1652,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1658,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1660,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1697,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1699,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1702,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1704,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1712,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1713,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1717,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1764,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1768,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1770,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1771,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1807,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1808,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1810,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1811,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1871,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1873,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1911,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1913,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1914,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1918,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1970,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1973,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1974,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1977,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2016,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2018,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2026,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2056,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2076,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2078,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2083,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2128,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2130,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2133,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2192,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2229,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2233,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2283,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,0,2,1,4,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2301,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2304,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2305,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2309,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2312,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2340,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",2,0,0,0,2,1,4,0,1,5,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2395,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2396,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2398,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2400,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2401,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2403,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2405,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2408,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2437,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2440,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",1,1,0,0,2,1,4,0,1,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2514,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2519,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2555,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2556,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2560,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2564,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2616,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2618,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2620,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2623,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2662,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2664,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2700,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2707,            result[i] = array[i].charValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2709,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2727,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2728,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2729,            Character b = array[i];,1,0,1,0,2,0,0,1,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,3,0,0,0,4,2,0,2,1,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2750,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2769,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2775,            result[i] = array[i].longValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2793,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2798,            result[i] = (b == null ? valueForNull : b.longValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2821,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2841,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2842,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2843,            result[i] = array[i].intValue();,0,0,1,1,6,0,1,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2845,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2858,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2860,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2865,            Integer b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,2,1,1,2,6,0,2,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2880,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2904,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2906,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2909,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2910,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2911,            result[i] = array[i].shortValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2926,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2927,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2936,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2948,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2950,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2955,            result[i] = Short.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2957,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2972,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2978,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2979,            result[i] = array[i].byteValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2994,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2995,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2997,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3000,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3021,        final Byte[] result = new Byte[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3023,            result[i] = Byte.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3025,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3045,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3046,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,0,0,1,1,6,0,1,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3064,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3065,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,1,0,1,0,2,0,0,1,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,2,1,1,2,6,0,2,0,1,7,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3085,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,3,0,0,0,4,2,0,2,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3093,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3109,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3115,            result[i] = array[i].floatValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3117,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3131,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3132,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3137,            Float b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3152,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3161,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3182,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3183,            result[i] = array[i].booleanValue();,0,0,1,1,6,0,1,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3200,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3204,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3205,            Boolean b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,2,1,1,2,6,0,2,0,1,7,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3225,        final Boolean[] result = new Boolean[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3226,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,4,0,1,1,6,0,0,0,1,5,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3241,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3244,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3255,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3256,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3258,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3269,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3270,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3272,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3284,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3286,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3298,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3300,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3312,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3314,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3325,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3328,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3339,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3340,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3342,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3379,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3434,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3445,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3483,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3506,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3494,        } catch (ArrayStoreException ase) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,1,3,0,1,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",1,1,0,1,6,2,4,1,3,8,108,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3505,"            throw ase; // No, so rethrow original",1,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3529,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3531,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3558,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3586,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3587,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3589,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3618,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3620,        short[] joinedArray = new short[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,1,0,0,1,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",3,0,0,1,8,2,2,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",3,0,0,1,8,2,2,0,1,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",3,0,0,1,8,2,2,0,1,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",3,0,0,1,8,2,2,0,1,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",2,1,0,1,6,0,5,1,0,6,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,0,2,0,5,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,1,0,0,1,4,0,3,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",1,0,0,1,8,1,5,2,2,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",2,0,0,1,8,2,6,0,1,6,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",2,0,0,1,8,2,6,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,0,0,1,8,2,6,0,1,6,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",2,0,0,1,8,2,6,0,1,6,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",1,1,0,0,2,2,0,1,3,6,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",1,0,0,0,2,0,3,1,0,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",0,0,0,0,2,0,4,0,0,2,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,3,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",2,1,0,0,2,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,0,2,0,5,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",3,2,0,0,2,0,5,0,0,4,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",1,0,0,1,8,1,2,2,1,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,3,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",2,1,0,1,6,0,5,1,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",3,2,0,0,2,0,5,0,0,4,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,0,0,0,1,2,1,3,0,0,4,50,5,135.2,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,0,2,1,2,0,3,4,50,4,112.66667,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",3,0,0,0,2,1,0,0,1,4,29,3,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,1,2,0,0,4,36,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,1,2,0,0,4,43,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,1,2,0,0,4,37,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",5,0,0,0,2,2,0,1,1,5,108,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,2,0,0,0,0,1,0,0,1,3,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,2,0,0,0,0,1,0,0,1,3,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,2,0,1,2,5,72,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,66,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,2,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,3,0,0,0,0,1,0,0,0,2,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,1,0,0,0,0,1,0,0,1,3,23,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,1,0,0,0,0,1,0,0,1,3,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,1,0,0,0,0,1,0,0,1,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,1,0,0,0,0,1,0,0,1,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,1,4,1,0,0,1,7,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,2,2,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,1,7,1,0,0,2,7,53,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,2,1,0,0,0,1,0,0,0,3,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,2,1,0,1,3,1,0,0,0,5,14,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,4,1,0,1,3,1,0,0,1,6,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,4,1,1,7,1,0,0,2,6,38,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,1,0,0,1,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,2,0,0,0,0,1,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,1,0,0,1,6,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,1,0,0,0,0,0,0,0,2,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,1,1,1,6,2,0,0,1,6,29,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,2,1,0,1,3,1,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,0,0,0,0,0,1,0,0,1,2,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,1,0,0,0,0,0,0,0,2,2,19,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,8,2,0,0,2,6,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,1,0,0,1,3,1,0,0,0,4,13,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,1,0,0,1,3,1,0,0,1,5,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,1,0,0,0,0,0,0,0,2,2,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,1,0,0,0,0,0,0,0,2,2,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,1,8,2,0,0,2,6,48,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,1,0,0,1,3,1,0,0,1,5,18,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,0,1,2,13,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,2,2,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,1,2,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,3,1,0,1,3,1,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,1,1,0,0,1,1,0,0,1,5,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,1,0,0,0,0,1,0,0,0,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',0,2,1,0,3,1,0,0,1,5,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,0,4,1,2,0,2,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",3,0,0,1,6,2,3,1,1,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,1,6,2,4,1,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",3,1,0,2,6,3,0,6,2,7,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,1,0,1,0,2,0,0,1,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",3,0,0,0,3,2,0,0,0,3,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",6,0,0,0,2,0,0,0,0,2,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,1,6,0,6,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,1,0,0,1,6,3,0,1,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,2,0,0,1,6,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,2,1,0,1,3,1,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",0,0,1,0,6,0,2,0,0,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,1,0,0,1,4,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,1,6,1,3,1,0,5,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",1,0,0,1,8,0,4,2,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,470,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,473,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,476,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,479,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,484,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,508,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,512,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,515,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,519,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,1,0,1,0,4,3,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,523,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,556,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,562,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,587,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,592,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,596,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,601,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,634,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,635,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,636,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,639,        byte[] subarray = new byte[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,641,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,665,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,668,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,671,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,673,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,675,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,679,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,704,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,718,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,743,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,745,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,746,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,752,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,753,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,1,0,1,0,4,3,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,757,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,775,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,778,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,796,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,798,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,814,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,832,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,834,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,852,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,865,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,904,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,919,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,924,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,966,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,2,10,1,7,0,0,4,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,983,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,989,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,990,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,991,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,992,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,993,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,996,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1007,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1009,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1013,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1014,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1019,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1029,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1030,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1033,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1040,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1042,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1052,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1053,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1058,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1059,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1060,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1061,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1062,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1065,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1075,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1076,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1078,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1079,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1081,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1082,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1084,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1088,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1098,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1099,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1106,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1107,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1109,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1122,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1124,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1131,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1132,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1134,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1144,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1148,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1150,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1152,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1153,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1177,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1180,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1198,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1216,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1217,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1223,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1224,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1231,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1235,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1268,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1270,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1271,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1281,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1301,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1317,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1341,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1342,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1383,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1386,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1404,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1420,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1438,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1439,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1441,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1463,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1484,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1485,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1486,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1491,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1494,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1541,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1544,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1547,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1548,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1549,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1552,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1566,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1584,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1587,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1588,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1594,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1597,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1610,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1627,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1654,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1691,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1697,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1699,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1700,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1704,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1718,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1734,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1755,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1800,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1804,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1805,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1837,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1854,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,0,2,1,4,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1872,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1880,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1904,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1907,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1911,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1913,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1914,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1948,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",2,0,0,0,2,1,4,0,1,5,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1966,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1969,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1972,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1975,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2000,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2003,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2009,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2012,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2045,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",1,1,0,0,2,1,4,0,1,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2082,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2086,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2090,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2123,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2125,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2126,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2131,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2148,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2164,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2194,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2209,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2227,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2231,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2235,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2272,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2294,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2295,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2298,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2299,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,1,0,1,0,2,0,0,1,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2303,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2317,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2318,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,3,0,0,0,4,2,0,2,1,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2321,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2340,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2345,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2346,            result[i] = array[i].longValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2361,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2362,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2363,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2366,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2369,            result[i] = (b == null ? valueForNull : b.longValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2386,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2390,            result[i] = Long.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2392,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2407,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2408,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2410,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,0,0,1,1,6,0,1,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2431,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2432,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,2,1,1,2,6,0,2,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2452,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2476,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2481,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2484,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2497,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2498,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2499,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2500,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2505,            result[i] = (b == null ? valueForNull : b.shortValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2507,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2519,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2520,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2521,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2522,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2524,        final Short[] result = new Short[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2525,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2526,            result[i] = Short.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2528,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2543,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2544,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2545,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2546,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2548,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2549,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2550,            result[i] = array[i].byteValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2552,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2565,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2566,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2567,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2568,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2570,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2571,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2572,            Byte b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2573,            result[i] = (b == null ? valueForNull : b.byteValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2575,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2587,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2588,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2589,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2590,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2592,        final Byte[] result = new Byte[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2593,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2594,            result[i] = Byte.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2596,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2611,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2612,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2613,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2614,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2616,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2617,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2618,            result[i] = array[i].doubleValue();,0,0,1,1,6,0,1,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2620,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2633,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2634,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2635,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2636,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2638,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2639,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2640,            Double b = array[i];,1,0,1,0,2,0,0,1,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2641,            result[i] = (b == null ? valueForNull : b.doubleValue());,2,1,1,2,6,0,2,0,1,7,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2643,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2655,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2656,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2657,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2658,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2660,        final Double[] result = new Double[array.length];,3,0,0,0,4,2,0,2,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2661,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2662,            result[i] = Double.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2664,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2679,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2680,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2681,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2682,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2684,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2685,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2686,            result[i] = array[i].floatValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2688,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2701,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2702,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2703,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2704,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2706,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2707,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2708,            Float b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2709,            result[i] = (b == null ? valueForNull : b.floatValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2711,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2723,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2724,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2725,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2726,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2728,        final Float[] result = new Float[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2729,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2730,            result[i] = Float.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2732,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2747,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2748,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2749,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2750,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2752,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2753,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2754,            result[i] = array[i].booleanValue();,0,0,1,1,6,0,1,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2756,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2769,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2770,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2771,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2772,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2774,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2775,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2776,            Boolean b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2777,            result[i] = (b == null ? valueForNull : b.booleanValue());,2,1,1,2,6,0,2,0,1,7,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2779,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2791,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2792,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2793,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2794,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2796,        final Boolean[] result = new Boolean[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2797,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2798,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,4,0,1,1,6,0,0,0,1,5,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2800,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2812,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2813,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2815,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2826,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2827,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2829,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2840,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2841,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2843,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2854,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2855,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2857,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2868,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2869,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2871,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2882,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2883,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2885,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2896,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2897,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2899,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2910,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2911,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2913,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2924,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2925,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2927,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2955,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2957,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2985,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2986,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2987,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2988,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2990,        boolean[] joinedArray = new boolean[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2991,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2992,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2993,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3014,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3015,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3016,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3017,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3019,        char[] joinedArray = new char[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3020,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3021,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3022,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3043,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3044,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3045,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3046,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3048,        byte[] joinedArray = new byte[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3049,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3050,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3051,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3072,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3073,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3074,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3075,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3077,        short[] joinedArray = new short[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3078,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3079,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3080,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3101,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3102,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3103,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3104,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3106,        int[] joinedArray = new int[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3107,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3108,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3109,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3130,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3131,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3132,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3133,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3135,        long[] joinedArray = new long[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3136,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3137,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3138,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3159,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3160,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3161,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3162,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3164,        float[] joinedArray = new float[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3165,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3166,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3167,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3188,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3189,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3190,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3191,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3193,        double[] joinedArray = new double[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3194,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3195,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3196,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3225,        Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);,3,2,0,2,6,1,4,2,0,7,105,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3226,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3227,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3228,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3253,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",3,0,0,1,8,2,2,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3254,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3255,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3280,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3281,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3282,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3307,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",3,0,0,1,8,2,2,0,1,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3308,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3309,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3334,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",3,0,0,1,8,2,2,0,1,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3335,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3336,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3361,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3362,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3363,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3388,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",3,0,0,1,8,2,2,0,1,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3389,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3390,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3415,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3416,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3417,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3442,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3443,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3444,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3457,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3458,            int arrayLength = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3459,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",2,1,0,1,6,0,5,1,0,6,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3460,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,0,2,0,5,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3461,            return newArray;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3463,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3496,        Class<?> clss = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3497,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3498,            clss = array.getClass().getComponentType();,1,0,0,1,4,0,3,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3499,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3500,            clss = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3502,            return (T[]) new Object[] { null };,0,0,0,1,8,2,0,2,0,4,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3504,"        return (T[]) add(array, index, element, clss);",0,0,0,1,6,1,5,1,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3535,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",2,0,0,1,8,2,6,0,1,6,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3567,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",2,0,0,1,8,2,6,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3598,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3629,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3660,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,0,0,1,8,2,6,0,1,6,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3691,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3722,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3753,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",2,0,0,1,8,2,6,0,1,6,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3768,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3769,            if (index != 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3770,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",1,1,0,0,2,2,0,1,3,6,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3772,"            Object joinedArray = Array.newInstance(clss, 1);",1,0,0,0,2,0,3,1,0,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3773,"            Array.set(joinedArray, 0, element);",0,0,0,0,2,0,4,0,0,2,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3774,            return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3776,        int length = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3777,        if (index > length || index < 0) {,3,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3778,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3780,"        Object result = Array.newInstance(clss, length + 1);",2,1,0,0,2,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3781,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3782,"        Array.set(result, index, element);",0,0,0,0,2,0,5,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3783,        if (index < length) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3784,"            System.arraycopy(array, index, result, index + 1, length - index);",3,2,0,0,2,0,5,0,0,4,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3786,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3819,"        return (T[]) remove((Object) array, index);",1,0,0,1,8,1,2,2,1,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3848,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3849,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3850,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3852,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3884,"        return (boolean[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3913,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3914,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3915,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3917,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3949,"        return (byte[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3978,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3979,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3980,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3982,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4014,"        return (char[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4043,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4044,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4045,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4047,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4079,"        return (double[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4108,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4109,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4110,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4112,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4144,"        return (float[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4173,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4174,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4175,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4177,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4209,"        return (int[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4238,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4239,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4240,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4242,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4274,"        return (long[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4303,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4304,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4305,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4307,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4339,"        return (short[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4368,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4369,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4370,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4372,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4397,        int length = getLength(array);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4398,        if (index < 0 || index >= length) {,3,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4399,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4402,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",2,1,0,1,6,0,5,1,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4403,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4404,        if (index < length - 1) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4405,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",3,2,0,0,2,0,5,0,0,4,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4408,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,0,2,1,3,0,1,4,44,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,2,0,0,1,6,33,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,2,0,1,4,19,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,1,4,0,4,0,1,6,51,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },0,0,0,0,1,0,0,0,0,1,1,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,2,8,0,1,3,1,2,0,0,6,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,3,0,0,0,0,1,0,0,0,2,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,3,0,0,0,0,1,0,0,0,2,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,2,1,0,1,3,1,0,0,0,5,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,1,0,1,0,4,3,0,0,0,4,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,1,0,0,0,0,1,0,0,1,3,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,1,0,1,1,4,0,2,0,1,6,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,1,0,0,0,0,1,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,1,1,0,1,3,1,0,0,0,5,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",1,1,0,1,4,0,5,0,1,6,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,1,1,0,1,3,1,0,0,1,6,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,5,1,0,1,3,2,0,0,1,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,0,0,1,1,4,0,2,0,0,4,42,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,1,1,4,0,1,0,1,7,54,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,1,0,0,0,0,0,0,0,2,2,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",1,0,1,0,4,0,3,0,1,5,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,1,0,0,1,2,1,2,0,0,5,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,1,0,0,1,2,0,2,1,0,5,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,1,0,0,1,3,1,0,0,1,5,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,1,1,0,1,2,1,2,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,1,0,0,1,2,0,2,1,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,1,0,0,1,2,1,2,0,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",0,0,0,0,2,1,2,0,1,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",1,0,0,0,2,0,2,0,2,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",2,1,0,0,2,1,2,0,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",1,0,0,0,2,0,3,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,2,0,3,9,1,5,0,0,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,3,0,4,11,1,5,0,1,7,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,2,3,0,3,9,1,4,0,0,6,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,541,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,2,4,0,4,11,1,4,0,1,7,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,1,0,0,0,0,0,0,0,1,2,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,4,3,0,2,5,1,0,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,603,        String[] newArr = new String[strsLen];,1,0,1,0,4,1,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,605,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,0,6,0,2,0,2,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,627,        if(input == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,628,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,630,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,1,2,0,0,4,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,637,"                Class normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",1,0,0,0,2,0,2,1,2,5,84,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,640,"                Class normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",1,0,0,0,2,0,2,1,2,5,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,643,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",5,0,0,0,2,1,3,1,1,6,115,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,646,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",5,0,0,1,2,0,2,0,1,5,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,649,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",1,0,0,1,6,0,5,2,0,5,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,652,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",9,0,0,1,4,0,1,0,1,5,109,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,653,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,1,4,1,4,0,1,5,56,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,654,            } catch(ClassNotFoundException cnfe) {,1,0,0,1,4,1,0,1,0,5,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,655,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",1,0,0,0,2,2,0,1,2,5,95,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,656,            } catch(NoSuchMethodException nsme) {,1,0,0,1,4,1,0,1,0,5,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,657,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",1,0,0,0,2,2,0,1,2,5,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,658,            } catch(NoSuchFieldException nsfe) {,1,0,0,1,4,1,0,1,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,659,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",1,0,0,0,2,2,0,1,2,5,93,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,660,            } catch(IllegalAccessException iae) {,1,0,0,1,4,1,0,1,0,5,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,661,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",1,0,0,0,2,2,0,1,2,5,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,662,            } catch(IllegalArgumentException iae) {,1,0,0,1,4,1,0,1,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,663,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",1,0,0,0,2,2,0,1,2,5,96,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,664,            } catch(java.lang.reflect.InvocationTargetException ite) {,5,0,0,1,4,1,0,0,0,4,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,665,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",1,0,0,0,2,2,0,1,2,5,97,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,666,            } catch(SecurityException se) {,1,0,0,1,4,1,0,1,0,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,667,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",1,0,0,0,2,2,0,1,2,5,88,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,670,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,2,0,1,2,5,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,697,        return str1 == null ? str2 == null : str1.equals(str2);,2,2,0,1,2,1,3,0,0,6,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,722,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,2,2,0,1,2,1,3,0,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,747,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,748,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,750,        return str.indexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,779,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,780,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,782,"        return str.indexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,808,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,809,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,811,        return str.indexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,842,        if (str == null || searchStr == null || ordinal <= 0) {,3,5,0,1,3,1,0,0,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,843,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,845,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,846,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,848,        int found = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,849,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,851,"            index = str.indexOf(searchStr, index + 1);",2,1,0,0,2,0,3,0,1,5,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,852,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,853,                return index;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,855,            found++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,856,        } while (found < ordinal);,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,857,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,892,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,893,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,896,        if (searchStr.length() == 0 && startPos >= str.length()) {,1,3,0,2,7,1,4,0,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,897,            return str.length();,0,0,0,1,2,1,2,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,899,"        return str.indexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,924,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,925,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,927,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,958,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,959,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,961,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,987,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,988,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,990,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1022,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1023,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1025,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1050,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1051,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1053,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,3,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1078,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1079,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1081,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,3,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1108,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1109,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1111,        int len = searchStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1112,        int max = str.length() - len;,2,1,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1113,        for (int i = 0; i <= max; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1114,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0,0,0,0,5,1,5,0,1,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1115,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1118,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1146,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1147,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1149,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1150,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1151,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1152,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1153,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1157,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1183,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1184,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1186,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1215,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,4,7,0,2,5,1,2,0,0,6,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1216,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1218,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1219,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1220,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1221,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1222,                    return true;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1226,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1257,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1258,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1260,"        return containsAny(str, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1288,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1289,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1291,        outer : for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,2,2,0,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1292,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1293,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1294,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1295,                    continue outer;,1,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1298,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1300,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1326,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1327,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1329,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1330,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,1,0,3,7,1,5,0,0,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1331,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1334,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1362,        if ((valid == null) || (str == null)) {,2,3,0,2,7,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1363,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1365,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1366,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1368,        if (valid.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1369,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1371,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,0,2,1,3,0,2,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1397,        if (str == null || validChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1398,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1400,"        return containsOnly(str, validChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1428,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1429,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1431,        int strSize = str.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1432,        int validSize = invalidChars.length;,3,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1433,        for (int i = 0; i < strSize; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1434,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1435,            for (int j = 0; j < validSize; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1436,                if (invalidChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1437,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1441,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1467,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1468,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1470,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1502,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1503,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1505,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1508,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1510,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1511,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1512,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1513,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1514,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1516,            tmp = str.indexOf(search);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1517,            if (tmp == -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1518,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1521,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1522,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1526,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,4,1,0,1,2,1,0,0,1,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1555,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1556,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1558,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1559,        int ret = -1;,1,0,0,0,0,1,0,0,1,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1560,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1561,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1562,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1563,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1564,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1566,            tmp = str.lastIndexOf(search);,1,0,0,1,2,0,3,0,1,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1567,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1568,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1571,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1601,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1602,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1606,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1607,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1610,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1611,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1613,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1614,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1617,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1656,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1657,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1661,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1662,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1664,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1665,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1669,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1670,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1674,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1675,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1678,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1679,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1681,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1682,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1685,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1711,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1712,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1714,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1715,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1717,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1718,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1720,"        return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1744,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1747,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1748,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1750,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1751,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1753,        return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1781,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1782,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1784,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1785,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1787,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1788,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1790,        if (str.length() <= (pos + len)) {,2,2,0,2,7,1,2,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1791,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1793,"        return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1826,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1827,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1829,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1830,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1832,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1833,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1834,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1836,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1868,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1869,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1871,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1872,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1874,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1875,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1876,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1878,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1909,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1910,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1912,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1913,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1914,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1916,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1949,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1950,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1952,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1953,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1955,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1956,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,4,0,3,9,1,4,0,1,7,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1957,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1959,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1986,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2017,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2018,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2020,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2021,        if (start != -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2022,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2023,            if (end != -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2024,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2027,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2053,        if (str == null || isEmpty(open) || isEmpty(close)) {,1,3,0,2,7,1,4,0,2,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2054,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2056,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2057,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2058,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2060,        int closeLen = close.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2061,        int openLen = open.length();,1,0,0,1,2,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2062,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2063,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2064,        while (pos < (strLen - closeLen)) {,3,2,0,2,5,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2065,"            int start = str.indexOf(open, pos);",1,0,0,0,2,1,4,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2066,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2067,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2069,            start += openLen;,2,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2070,"            int end = str.indexOf(close, start);",1,0,0,0,2,1,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2071,            if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2072,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2074,"            list.add(str.substring(start, end));",0,0,0,0,4,0,6,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2075,            pos = end + closeLen;,3,1,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2076,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2077,        if (list.isEmpty()) {,0,0,0,2,5,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2078,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2080,        return list.toArray(new String [list.size()]);,0,0,0,2,6,2,4,1,0,5,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2111,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2139,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2168,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2202,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2229,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,0,2,1,3,0,3,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2260,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,0,2,1,4,0,2,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2289,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,0,2,1,3,0,3,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2322,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2342,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2343,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2346,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2348,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2349,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2352,        if ((separator == null) || (EMPTY.equals(separator))) {,1,2,0,3,9,1,3,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2354,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,0,2,1,4,0,1,4,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2357,        int separatorLength = separator.length();,1,0,0,1,2,1,2,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2359,        ArrayList<String> substrings = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2360,        int numberOfSubstrings = 0;,1,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2361,        int beg = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2362,        int end = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2363,        while (end < len) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2364,"            end = str.indexOf(separator, beg);",1,0,0,0,2,0,4,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2366,            if (end > -1) {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2367,                if (end > beg) {,2,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2368,                    numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2370,                    if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2371,                        end = len;,2,0,0,0,0,0,0,0,1,2,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2372,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2376,"                        substrings.add(str.substring(beg, end));",0,0,0,0,4,0,6,0,0,2,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2381,                        beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2385,                    if (preserveAllTokens) {,1,0,0,1,3,1,0,0,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2386,                        numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2387,                        if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2388,                            end = len;,2,0,0,0,0,0,0,0,1,2,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2389,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2391,                            substrings.add(EMPTY);,0,0,0,1,2,0,3,0,0,3,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2394,                    beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2398,                substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2399,                end = len;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2403,        return substrings.toArray(new String[substrings.size()]);,0,0,0,2,6,2,4,1,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2432,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2468,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2486,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2487,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2489,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2490,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2491,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2493,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2494,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2495,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2496,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2497,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2498,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2499,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2500,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2501,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2502,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2504,                start = ++i;,2,0,0,0,0,0,0,0,2,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2505,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2507,            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2508,            match = true;,1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2509,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2511,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2512,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2514,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2551,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,0,2,1,3,0,3,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2591,"        return splitWorker(str, separatorChars, max, true);",0,0,0,0,2,1,4,0,2,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2613,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2614,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2616,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2617,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2618,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2620,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2621,        int sizePlus1 = 1;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2622,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2623,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2624,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2625,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2627,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2628,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2629,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2630,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2631,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2632,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2633,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2635,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2636,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2638,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2639,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2641,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2642,                match = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2643,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2645,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,2,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2647,            char sep = separatorChars.charAt(0);,1,0,0,1,2,1,2,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2648,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2649,                if (str.charAt(i) == sep) {,1,1,0,2,5,1,3,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2650,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2651,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2652,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2653,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2654,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2656,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2657,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2659,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2660,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2662,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2663,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2664,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2666,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2668,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2669,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,1,5,0,0,5,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2670,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2671,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2672,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2673,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2674,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2676,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2677,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2679,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2680,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2682,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2683,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2684,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2687,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2688,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2690,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2713,"        return splitByCharacterType(str, false);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2741,"        return splitByCharacterType(str, true);",0,0,0,0,2,1,2,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2759,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2760,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2762,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2763,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2765,        char[] c = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2766,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2767,        int tokenStart = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2768,        int currentType = Character.getType(c[tokenStart]);,1,0,1,1,4,1,2,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2769,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,6,2,0,1,3,2,0,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2770,            int type = Character.getType(c[pos]);,1,0,1,1,4,1,2,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2771,            if (type == currentType) {,2,1,0,1,3,1,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2772,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2774,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,7,4,0,1,3,1,0,0,0,5,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2775,                int newTokenStart = pos - 1;,2,1,0,0,0,1,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2776,                if (newTokenStart != tokenStart) {,2,1,0,1,3,1,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2777,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",4,1,0,0,4,1,2,1,1,7,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2778,                    tokenStart = newTokenStart;,2,0,0,0,0,0,0,0,1,2,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2780,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2781,"                list.add(new String(c, tokenStart, pos - tokenStart));",4,1,0,0,4,1,2,1,1,7,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2782,                tokenStart = pos;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2784,            currentType = type;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2786,"        list.add(new String(c, tokenStart, c.length - tokenStart));",5,1,0,0,4,1,2,1,1,7,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2787,        return list.toArray(new String[list.size()]);,0,0,0,2,6,2,4,1,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2813,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2839,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2840,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2843,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2873,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2874,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2876,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2877,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2878,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2881,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,0,2,0,1,7,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2882,        StringBuilder buf = new StringBuilder(bufSize);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2884,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2885,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2886,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2888,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2889,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2892,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2920,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2921,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2923,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2954,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2957,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2958,            separator = EMPTY;,2,0,0,0,0,0,0,0,1,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2963,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2964,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2965,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2968,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),1,2,1,2,11,0,2,0,1,7,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2971,        StringBuilder buf = new StringBuilder(bufSize);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2973,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2974,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2975,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2977,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2978,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2981,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3001,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3002,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3004,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3005,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3007,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3008,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3009,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3013,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3014,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3015,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3018,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3019,            buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3020,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3021,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3022,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3024,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3026,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3045,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3046,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3048,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3049,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3051,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3052,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3053,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3057,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3058,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3059,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3062,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3063,            if (separator != null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3064,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3066,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3067,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3068,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3070,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3071,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3089,        if (iterable == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3090,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3092,"        return join(iterable.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3110,        if (iterable == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3113,"        return join(iterable.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3133,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3134,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3136,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3137,        char[] chs = new char[sz];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3138,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3139,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3140,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3141,                chs[count++] = str.charAt(i);,1,0,1,1,4,0,3,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3144,        if (count == sz) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3145,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3147,"        return new String(chs, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3177,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3178,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3180,        if (str.startsWith(remove)){,0,0,0,2,5,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3181,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3183,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3212,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3213,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3215,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3216,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3218,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3246,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3247,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3249,        if (str.endsWith(remove)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3250,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3252,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3280,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3281,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3283,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3284,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3286,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3313,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3314,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3316,"        return replace(str, remove, EMPTY, -1);",0,0,0,0,2,1,4,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3339,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,2,7,1,5,0,2,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3340,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3342,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3343,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3344,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3345,            if (chars[i] != remove) {,1,1,1,1,5,1,0,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3346,                chars[pos++] = chars[i];,1,0,1,0,4,0,0,0,2,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3349,"        return new String(chars, 0, pos);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3378,"        return replace(text, searchString, replacement, 1);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3405,"        return replace(text, searchString, replacement, -1);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3437,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,2,4,0,2,7,1,4,0,2,7,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3438,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3440,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3441,"        int end = text.indexOf(searchString, start);",1,0,0,0,2,1,4,0,0,4,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3442,        if (end == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3443,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3445,        int replLength = searchString.length();,1,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3446,        int increase = replacement.length() - replLength;,2,1,0,1,2,1,2,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3447,        increase = (increase < 0 ? 0 : increase);,3,1,0,1,2,0,0,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3448,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,4,2,0,2,4,0,0,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3449,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3450,        while (end != -1) {,1,1,0,1,3,1,0,0,1,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3451,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,1,6,0,8,0,0,3,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3452,            start = end + replLength;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3453,            if (--max == 0) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3454,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3456,"            end = text.indexOf(searchString, start);",1,0,0,0,2,0,4,0,1,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3458,        buf.append(text.substring(start));,0,0,0,2,4,0,5,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3459,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3502,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,0,2,1,4,0,2,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3553,        int timeToLive = searchList == null ? 0 : searchList.length;,4,1,0,0,0,1,0,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3554,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,0,2,1,5,0,2,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3620,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",2,1,0,1,2,2,0,1,3,7,92,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3628,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,1,0,0,1,2,0,1,2,5,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3648,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3678,                increase += 3 * greater; // assume 3 matches,2,1,0,0,0,0,0,0,1,3,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3704,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3727,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3730,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",1,1,0,0,2,1,5,0,1,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3756,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3757,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3759,"        return str.replace(searchChar, replaceChar);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3799,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3800,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3802,        if (replaceChars == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3803,            replaceChars = EMPTY;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3805,        boolean modified = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3806,        int replaceCharsLength = replaceChars.length();,1,0,0,1,2,1,2,0,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3807,        int strLength = str.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3808,        StringBuilder buf = new StringBuilder(strLength);,2,0,0,1,2,1,0,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3809,        for (int i = 0; i < strLength; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3810,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3811,            int index = searchChars.indexOf(ch);,1,0,0,1,2,1,3,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3812,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3813,                modified = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3814,                if (index < replaceCharsLength) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3815,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,5,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3818,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3821,        if (modified) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3822,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3824,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3859,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3860,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3862,        if (overlay == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3863,            overlay = EMPTY;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3865,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3866,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3867,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3869,        if (start > len) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3870,            start = len;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3872,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3873,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3875,        if (end > len) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3876,            end = len;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3878,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3879,            int temp = start;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3880,            start = end;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3881,            end = temp;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3883,        return new StringBuilder(len + start - end + overlay.length() + 1),3,4,0,2,4,2,2,1,1,8,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3918,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3919,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3922,        if (str.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3923,            char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3924,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,6,3,0,1,3,1,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3925,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3927,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3930,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3931,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3933,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3934,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3935,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3937,        } else if (last != CharUtils.CR) {,3,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3938,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3940,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3970,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3971,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3973,        if (str.endsWith(separator)) {,0,0,0,2,5,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3974,"            return str.substring(0, str.length() - separator.length());",0,1,0,1,6,1,6,0,0,5,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3976,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4005,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4006,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4008,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4009,        if (strLen < 2) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4010,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4012,        int lastIdx = strLen - 1;,2,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4013,"        String ret = str.substring(0, lastIdx);",1,0,0,0,2,0,3,1,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4014,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4015,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4016,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4017,"                return ret.substring(0, lastIdx - 1);",1,1,0,0,2,1,2,0,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4020,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4049,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4050,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4052,        if (repeat <= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4053,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4055,        int inputLength = str.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4056,        if (repeat == 1 || inputLength == 0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4057,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4059,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4060,"            return padding(repeat, str.charAt(0));",0,0,0,1,4,1,4,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4063,        int outputLength = inputLength * repeat;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4064,        switch (inputLength) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4066,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4067,                char[] output1 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4068,                for (int i = repeat - 1; i >= 0; i--) {,4,2,0,1,3,2,0,0,1,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4069,                    output1[i] = ch;,1,0,1,0,2,0,0,0,1,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4071,                return new String(output1);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4073,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4074,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4075,                char[] output2 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4076,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",5,3,0,0,3,2,0,0,2,5,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4077,                    output2[i] = ch0;,1,0,1,0,2,0,0,0,1,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4078,                    output2[i + 1] = ch1;,2,1,1,0,2,0,0,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4080,                return new String(output2);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4082,                StringBuilder buf = new StringBuilder(outputLength);,2,0,0,1,2,1,0,2,1,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4083,                for (int i = 0; i < repeat; i++) {,4,1,0,1,3,2,0,0,1,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4084,                    buf.append(str);,0,0,0,1,2,0,3,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4086,                return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4110,        if(str == null || separator == null) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4111,"            return repeat(str, repeat);",0,0,0,0,2,1,3,0,1,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4114,"            String result = repeat(str + separator, repeat);",3,1,0,0,2,0,2,1,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4115,"            return removeEnd(result, separator);",0,0,0,0,2,1,3,0,1,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4143,        if (repeat < 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4144,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",1,1,0,1,2,2,0,1,2,7,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4146,        final char[] buf = new char[repeat];,1,0,1,0,4,4,0,0,1,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4147,        for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4148,            buf[i] = padChar;,1,0,1,0,2,0,0,0,1,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4150,        return new String(buf);,1,0,0,1,2,2,0,1,1,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4173,"        return rightPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4198,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4199,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4201,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4202,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4203,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4205,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4206,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4208,"        return str.concat(padding(pads, padChar));",0,0,0,0,4,1,5,0,1,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4235,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4236,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4238,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4239,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4241,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4242,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4243,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4244,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4245,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4247,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4248,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4251,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4252,            return str.concat(padStr);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",0,0,0,0,4,1,5,0,0,3,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4256,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4257,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4258,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,1,0,0,2,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4311,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4314,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4315,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4320,"        return padding(pads, padChar).concat(str);",0,0,0,1,4,1,5,0,1,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4348,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4356,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4359,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4360,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4364,            return padStr.concat(str);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,1,4,1,5,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4371,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,1,0,0,1,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4447,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4449,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",3,2,0,0,2,0,3,0,2,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",1,0,0,0,2,0,4,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4484,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4486,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4490,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4491,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",3,2,0,0,2,0,3,0,2,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",1,0,0,0,2,0,4,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4522,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4544,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4545,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4570,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4571,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4573,        return str.toLowerCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4594,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4624,        return new StringBuilder(strLen),1,0,0,1,2,2,0,1,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),1,0,0,1,2,2,0,1,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4690,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,2,0,0,1,2,1,0,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4699,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4700,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4702,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4703,                ch = Character.toUpperCase(ch);,1,0,0,1,2,0,3,0,1,5,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4705,            buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,2,7,1,4,0,2,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4733,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4735,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",1,1,0,0,7,1,4,0,2,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4766,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4769,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4770,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4771,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4774,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4800,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4803,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4808,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4833,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4836,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4841,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4867,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4875,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4904,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4907,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4908,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4909,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4910,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4939,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4941,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4942,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4947,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4974,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4975,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4977,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4980,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4983,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5006,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5010,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5011,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5012,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5015,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5036,        if (str == null || isEmpty(str)) {,1,2,0,2,5,1,2,0,1,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5037,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5040,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5041,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5042,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5045,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5066,        if (str == null || isEmpty(str)) {,1,2,0,2,5,1,2,0,1,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5067,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5069,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5072,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5075,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5097,        return str == null ? EMPTY : str;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5118,        return str == null ? defaultStr : str;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5159,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,1,0,0,1,6,2,2,1,1,7,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5186,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",1,0,0,0,4,0,3,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5192,"        return join(strs, separatorChar);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5230,"        return abbreviate(str, 0, maxWidth);",0,0,0,0,2,1,3,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5269,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5270,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5272,        if (maxWidth < 4) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5273,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5275,        if (str.length() <= maxWidth) {,1,1,0,2,5,1,2,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,1,0,0,1,2,0,2,0,1,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,2,2,0,1,4,0,2,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",1,2,0,0,2,1,2,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5288,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,2,0,1,2,5,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",1,2,0,1,4,1,4,0,2,7,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",1,3,0,2,6,1,4,0,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5324,        if (str1 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5328,            return str1;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",1,0,0,0,2,1,3,0,1,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5331,        if (at == -1) {,1,1,0,1,3,1,0,0,1,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5334,        return str2.substring(at);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5365,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5368,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,4,3,0,2,7,1,4,0,2,7,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5369,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,2,7,1,6,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5370,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,2,3,0,2,7,1,4,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5412,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5416,        int arrayLen = strs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5418,        int longestStrLen = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5423,        for (int i = 0; i < arrayLen; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,1,0,0,0,0,0,0,0,2,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,1,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,1,0,0,0,0,0,0,0,2,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",1,0,1,1,6,0,4,0,1,6,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5430,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",1,0,1,1,6,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5435,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,3,3,0,2,5,1,0,0,1,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5436,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,4,1,0,1,3,2,0,0,1,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,1,0,1,1,4,1,2,0,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,1,0,1,3,2,0,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,1,1,1,2,7,1,2,0,0,7,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5455,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,3,3,0,1,3,1,0,0,1,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5463,            return shortestStrLen;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5502,        if (strs == null || strs.length == 0) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,1,0,0,1,2,1,2,0,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5506,        if (smallestIndexOfDiff == -1) {,1,1,0,1,3,1,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5509,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5511,            return strs[0];,0,0,1,0,2,1,0,0,0,3,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,1,1,0,1,4,2,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5514,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5517,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,0,4,1,2,0,0,4,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5558,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5559,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5580,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5582,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5585,            return n;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,2,0,0,0,0,0,0,1,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5592,            t = tmp;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,1,0,0,1,2,0,2,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",2,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5598,"        int d[] = new int[n+1]; // cost array, horizontally",2,1,0,0,4,3,0,0,0,4,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5610,            p[i] = i;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5613,        for (j = 1; j<=m; j++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5614,            t_j = t.charAt(j-1);,2,1,0,1,2,0,2,0,1,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5618,                cost = s.charAt(i-1)==t_j ? 0 : 1;,3,2,0,1,2,0,2,0,1,6,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",3,5,1,0,12,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5626,            d = _d;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5631,        return p[n];,0,0,1,0,2,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5680,"        return startsWith(str, prefix, false);",0,0,0,0,2,1,3,0,2,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5705,"        return startsWith(str, prefix, true);",0,0,0,0,2,1,3,0,2,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,2,3,0,1,2,1,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5724,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5726,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,1,4,1,6,0,0,4,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5748,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,1,0,2,7,1,5,0,1,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5749,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5751,        for (int i = 0; i < searchStrings.length; i++) {,5,1,0,1,3,2,0,0,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,1,0,1,0,2,0,0,1,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5753,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,0,5,1,4,0,0,3,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5757,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,0,2,1,3,0,2,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5812,"        return endsWith(str, suffix, true);",0,0,0,0,2,1,3,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,2,3,0,1,2,1,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5831,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5833,        int strOffset = str.length() - suffix.length();,1,1,0,1,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5834,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,1,4,1,7,0,0,4,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,1,6,1,5,0,1,5,60,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,3,0,0,5,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,0,2,1,3,0,0,3,33,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,1,1,0,3,8,2,2,2,1,8,67,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,0,2,0,3,0,1,3,24,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,2,0,0,4,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,1,1,0,1,3,1,0,0,0,5,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",2,0,0,0,2,0,3,0,0,3,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,2,0,1,4,19,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",0,0,0,0,4,0,5,0,0,2,38,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,2,0,1,4,18,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,2,0,0,1,2,2,0,0,0,4,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,1,1,0,1,3,1,0,0,0,5,15,8,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",1,0,0,1,4,0,4,0,1,5,63,18,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",2,0,0,1,4,1,2,0,0,5,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,1,0,0,1,2,1,0,2,1,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,1,0,0,1,2,1,0,2,1,6,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,1,0,0,2,4,1,2,2,1,7,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,0,1,0,2,7,1,4,0,0,5,43,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,0,0,1,2,7,1,2,0,0,5,28,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,2,6,0,4,0,0,4,38,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,4,0,0,4,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,1,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,1,0,0,1,2,1,0,0,1,5,21,3,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,2,0,1,4,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,2,0,0,0,0,1,0,0,1,3,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,2,0,1,4,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,2,0,0,1,2,1,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,2,0,0,1,2,1,0,0,1,5,30,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",0,0,0,0,2,1,2,0,1,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,3,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,1,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,2,1,0,1,3,1,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",2,1,0,1,4,0,4,0,1,6,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,2,0,1,5,26,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,2,0,1,5,23,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,0,0,0,1,2,1,2,0,1,5,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,1,0,0,1,2,0,2,1,1,6,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,1,0,0,1,2,0,2,1,1,6,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,0,0,1,2,1,2,0,1,5,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,2,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,0,0,0,1,2,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,3,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,2,0,0,1,2,1,0,2,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,2,0,0,1,2,1,0,2,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,1,0,0,1,2,1,3,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,1,0,0,1,2,1,3,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,1,0,0,1,2,1,3,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,1,0,0,1,2,1,3,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,1,3,0,3,9,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,3,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,1,0,0,0,0,1,0,0,1,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,1,0,0,0,0,1,0,0,1,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,1,0,0,0,0,1,0,0,1,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,1,4,1,0,0,1,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,2,2,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,1,7,1,0,0,2,7,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,2,1,0,0,0,1,0,0,0,3,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,2,1,0,1,3,1,0,0,0,5,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,1,2,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,4,1,0,1,3,1,0,0,1,6,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),0,4,1,1,7,1,0,0,2,6,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,1,0,0,1,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,1,0,0,1,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,1,6,2,0,0,1,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,2,1,0,1,3,1,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,1,0,0,0,0,0,0,0,2,2,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,8,2,0,0,2,6,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,1,0,0,1,3,1,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,1,0,0,1,3,1,0,0,1,5,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,1,0,0,0,0,0,0,0,2,2,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,1,8,2,0,0,2,6,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,1,0,0,1,3,1,0,0,1,5,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,1,2,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,2,2,50,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,0,0,0,0,0,1,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,3,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,1,1,0,0,1,1,0,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,1,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,2,1,0,3,1,0,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,2,1,0,0,0,1,0,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,3,1,0,0,0,1,0,0,0,3,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,1,1,0,1,2,1,2,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,1,0,0,1,2,0,2,1,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,1,0,0,1,2,1,2,0,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,0,2,1,2,0,1,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",1,0,0,0,2,0,2,0,2,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",2,1,0,0,2,1,2,0,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",1,0,0,0,2,0,3,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,2,0,3,9,1,5,0,0,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,3,0,4,11,1,5,0,1,7,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,2,3,0,3,9,1,4,0,0,6,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,2,4,0,4,11,1,4,0,1,7,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,1,0,0,0,0,0,0,0,1,2,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,4,3,0,2,5,1,0,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,1,0,1,0,4,1,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,0,6,0,2,0,2,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,2,2,0,1,2,1,3,0,0,6,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,2,2,0,1,2,1,3,0,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,3,5,0,1,3,1,0,0,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",2,1,0,0,2,0,3,0,1,5,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,1,3,0,2,7,1,4,0,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,2,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,3,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,3,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,1,6,1,5,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1138,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,4,7,0,2,5,1,2,0,0,6,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1168,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1171,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1172,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1174,                    return true;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1178,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1210,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1240,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,2,2,0,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1246,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1247,                    continue outer;,1,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1279,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1282,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,1,0,3,7,1,5,0,0,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,2,3,0,2,7,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1315,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,0,2,1,3,0,2,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,3,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,4,1,0,1,2,1,0,0,1,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,1,0,0,0,0,1,0,0,1,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,1,0,0,1,2,0,3,0,1,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,2,0,2,7,1,2,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,4,0,3,9,1,4,0,1,7,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,1,3,0,2,7,1,4,0,2,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,1,0,0,1,2,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,3,2,0,2,5,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",1,0,0,0,2,1,4,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,2,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",1,0,0,0,2,1,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,0,4,0,6,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,3,1,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,0,0,0,2,5,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,2,10,2,4,2,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,0,2,1,4,0,1,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,0,2,1,3,0,3,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,0,2,1,4,0,2,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,0,2,1,3,0,3,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,1,2,0,3,9,1,3,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,0,2,1,4,0,1,4,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,1,0,0,1,2,1,2,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,1,0,0,1,2,1,0,2,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,1,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",1,0,0,0,2,0,4,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,2,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,2,0,0,0,0,0,0,0,1,2,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",0,0,0,0,4,0,6,0,0,2,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,1,0,0,1,3,1,0,0,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,1,2,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,3,0,0,3,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,2,10,2,4,2,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,2,0,0,0,0,0,0,0,2,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,0,2,1,3,0,3,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,0,2,1,4,0,2,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,2,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,1,0,0,1,2,1,2,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,1,1,0,2,5,1,3,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,1,5,0,0,5,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,0,2,1,2,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,1,0,1,1,4,1,2,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,6,2,0,1,3,2,0,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,1,0,1,1,4,1,2,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,2,1,0,1,3,1,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,7,4,0,1,3,1,0,0,0,5,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,2,1,0,0,0,1,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,2,1,0,1,3,1,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",4,1,0,0,4,1,2,1,1,7,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,2,0,0,0,0,0,0,0,1,2,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",4,1,0,0,4,1,2,1,1,7,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",5,1,0,0,4,1,2,1,1,7,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,0,2,0,1,7,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,2,0,0,0,0,0,0,0,1,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),1,2,1,2,11,0,2,0,1,7,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,0,2,1,3,0,1,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,1,0,1,1,4,0,3,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",0,0,0,0,2,1,4,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,2,7,1,5,0,2,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,1,1,1,1,5,1,0,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,1,0,1,0,4,0,0,0,2,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,2,4,0,2,7,1,4,0,2,7,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",1,0,0,0,2,1,4,0,0,4,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,1,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,2,1,0,1,2,1,2,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,3,1,0,1,2,0,0,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,4,2,0,2,4,0,0,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,1,1,0,1,3,1,0,0,1,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,1,6,0,8,0,0,3,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",1,0,0,0,2,0,4,0,1,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,5,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,0,2,1,4,0,2,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,4,1,0,0,0,1,0,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,0,2,1,5,0,2,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,2,8,0,1,3,1,2,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",2,1,0,1,2,2,0,1,3,7,92,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,3,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,3,0,0,0,0,1,0,0,0,2,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,2,1,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,1,0,0,1,2,0,1,2,5,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,1,0,1,0,4,3,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,1,0,1,1,4,0,2,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,2,1,0,0,0,0,0,0,1,3,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",1,1,0,1,4,0,5,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,1,1,0,1,3,1,0,0,1,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,5,1,0,1,3,2,0,0,1,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,0,0,1,1,4,0,2,0,0,4,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,2,1,1,1,4,0,1,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",1,0,1,0,4,0,3,0,1,5,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,1,0,0,1,3,1,0,0,1,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",1,1,0,0,2,1,5,0,1,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,1,0,0,1,2,1,2,0,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,1,0,0,1,2,1,3,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,5,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),2,3,0,2,6,2,4,1,1,8,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),3,4,0,2,4,2,2,1,1,8,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,6,3,0,1,3,1,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,3,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,0,0,0,2,5,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,1,0,1,6,1,6,0,0,5,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,1,1,0,2,6,0,6,1,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",0,1,0,1,6,1,6,0,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,1,0,0,1,2,1,3,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,1,2,0,2,7,1,4,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,1,1,0,1,4,2,0,0,1,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,3,0,0,4,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",1,1,0,1,4,1,4,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,2,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",1,0,0,0,2,0,3,1,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",1,1,0,0,2,1,2,0,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,3,0,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,1,4,1,4,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,4,2,0,1,3,2,0,0,1,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,1,0,1,0,2,0,0,0,1,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",5,3,0,0,3,2,0,0,2,5,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,1,0,1,0,2,0,0,0,1,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,2,1,1,0,2,0,0,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,2,0,0,1,2,1,0,2,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,4,1,0,1,3,2,0,0,1,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,3,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",1,1,0,1,2,2,0,1,2,7,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,1,0,1,0,4,4,0,0,1,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,1,0,1,0,2,0,0,0,1,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,1,0,0,1,2,2,0,1,1,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,0,4,1,5,0,1,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",0,0,0,0,4,1,5,0,0,3,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,1,0,0,2,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,1,4,1,5,0,1,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,1,4,1,5,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,1,0,0,1,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",3,2,0,0,2,0,3,0,2,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",1,0,0,0,2,0,4,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",3,2,0,0,2,0,3,0,2,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",1,0,0,0,2,0,4,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,2,0,1,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,0,0,0,1,2,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,1,0,0,1,2,0,3,0,1,5,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,0,0,0,1,2,1,3,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,2,7,1,4,0,2,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",1,1,0,0,7,1,4,0,2,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,1,0,0,1,6,2,2,1,1,7,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",1,0,0,0,4,0,3,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",1,0,0,0,4,0,3,1,1,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",0,0,0,0,2,1,2,0,2,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,0,2,1,3,0,1,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,0,2,1,3,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,1,1,0,2,5,1,2,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,1,0,0,1,2,0,2,0,1,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,2,2,0,1,4,0,2,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",1,2,0,0,2,1,2,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,2,0,1,2,5,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",1,2,0,1,4,1,4,0,2,7,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",1,3,0,2,6,1,4,0,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",1,0,0,0,2,1,3,0,1,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,1,1,0,1,3,1,0,0,1,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,4,3,0,2,7,1,4,0,2,7,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,2,7,1,6,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,2,3,0,2,7,1,4,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,1,0,0,0,0,0,0,0,2,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,1,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,1,0,0,0,0,0,0,0,2,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",1,0,1,1,6,0,4,0,1,6,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",1,0,1,1,6,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,3,3,0,2,5,1,0,0,1,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,4,1,0,1,3,2,0,0,1,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,1,0,1,1,4,1,2,0,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,1,0,1,3,2,0,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,1,1,1,2,7,1,2,0,0,7,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,3,3,0,1,3,1,0,0,1,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,1,0,0,1,2,1,2,0,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,1,1,0,1,3,1,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,0,0,1,0,2,1,0,0,0,3,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,1,1,0,1,4,2,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,0,4,1,2,0,0,4,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,2,0,0,0,0,0,0,1,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,1,0,0,1,2,0,2,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5814,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",2,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",2,1,0,0,4,3,0,0,0,4,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5831,            t_j = t.charAt(j-1);,2,1,0,1,2,0,2,0,1,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,3,2,0,1,2,0,2,0,1,6,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",3,5,1,0,12,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5842,            p = d;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,1,0,2,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5897,"        return startsWith(str, prefix, false);",0,0,0,0,2,1,3,0,2,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5922,"        return startsWith(str, prefix, true);",0,0,0,0,2,1,3,0,2,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,2,3,0,1,2,1,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5943,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,1,4,1,6,0,0,4,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",0,0,0,0,2,1,3,0,2,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5997,"        return endsWith(str, suffix, true);",0,0,0,0,2,1,3,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,2,3,0,1,3,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,2,3,0,1,2,1,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,1,0,2,7,1,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6016,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,1,1,0,1,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,1,4,1,7,0,0,4,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,0,2,1,3,0,2,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,3,0,0,0,0,0,0,0,1,2,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,1,0,0,1,2,1,2,0,0,5,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,2,1,0,1,2,1,0,2,1,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,3,2,0,2,5,1,0,0,0,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,178,            if (str.charAt(offset) == ' ') {,0,1,0,2,5,1,3,0,1,6,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,1,0,0,0,0,0,0,0,1,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,180,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",3,1,0,0,2,1,2,0,1,6,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,2,1,0,1,3,1,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,0,4,0,6,0,0,2,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,187,                wrappedLine.append(newLineStr);,0,0,0,1,2,0,3,0,0,3,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,2,1,0,0,0,0,0,0,1,3,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,1,0,0,1,3,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",2,1,0,0,4,0,5,0,0,4,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,0,0,0,1,2,0,3,0,0,3,31,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,2,0,0,0,0,0,0,0,1,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",3,1,0,0,2,0,2,0,2,5,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,1,1,0,1,3,1,0,0,0,5,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,0,4,0,6,0,0,2,57,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,0,0,0,1,2,0,3,0,0,3,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,2,1,0,0,0,0,0,0,1,3,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,5,0,0,3,42,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,2,0,0,0,0,0,0,0,1,2,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,210,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,5,0,0,3,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,215,        return wrappedLine.toString();,0,0,0,1,2,1,2,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",0,0,0,0,2,1,2,0,1,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,4,1,0,1,2,1,0,0,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,2,5,0,2,5,1,2,0,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,286,"            if (isDelimiter(ch, delimiters)) {",0,0,0,0,5,1,3,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,287,                buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,1,0,0,0,0,0,0,0,2,2,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,1,0,0,1,4,2,0,0,0,4,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,5,0,0,3,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,1,0,0,0,0,0,0,0,2,2,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",0,0,0,0,2,1,2,0,1,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,4,1,0,1,2,1,0,0,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,2,5,0,2,5,1,2,0,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,1,0,0,1,2,0,2,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",0,0,0,0,2,1,3,0,1,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,377,"        return uncapitalize(str, null);",0,0,0,0,2,1,2,0,1,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,4,1,0,1,2,1,0,0,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,2,5,0,2,5,1,2,0,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,1,0,0,0,0,1,0,0,1,3,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,416,"            if (isDelimiter(ch, delimiters)) {",0,0,0,0,5,1,3,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,1,0,0,0,0,0,0,0,2,2,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,419,            } else if (uncapitalizeNext) {,1,0,0,1,4,2,0,0,0,4,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,420,                buffer.append(Character.toLowerCase(ch));,0,0,0,2,4,0,5,0,0,3,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,421,                uncapitalizeNext = false;,1,0,0,0,0,0,0,0,2,2,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,426,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,465,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,467,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,469,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,1,0,0,1,3,1,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,1,0,0,1,2,0,3,0,1,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,1,0,0,1,2,0,3,0,1,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,2,0,0,0,0,0,0,0,1,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,478,            buffer.append(tmp);,0,0,0,1,2,0,3,0,0,3,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,1,0,0,1,2,0,3,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,508,"        return initials(str, null);",0,0,0,0,2,1,2,0,1,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,1,3,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,3,3,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,543,"            return """";",0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,2,2,0,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,552,"            if (isDelimiter(ch, delimiters)) {",0,0,0,0,5,1,3,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,1,0,0,1,4,2,0,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,2,0,1,0,2,0,0,0,2,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,1,0,0,0,0,0,0,0,2,2,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,574,            return Character.isWhitespace(ch);,0,0,0,1,2,1,3,0,0,4,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",7,1,0,0,3,2,0,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,1,1,1,1,5,1,0,0,0,6,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,581,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,2,3,0,2,5,1,2,0,1,7,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,1,0,0,1,2,0,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,622,        if (upper < lower) {,2,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,2,0,0,0,0,0,0,0,1,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",1,0,0,0,2,1,4,0,1,5,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,629,"            result.append(str.substring(0, upper));",0,0,0,0,4,0,5,0,0,2,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,1,1,0,2,5,1,2,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,5,0,0,3,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,0,4,0,5,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,636,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,5,0,0,3,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,638,"            result.append(str.substring(0, index));",0,0,0,0,4,0,5,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,5,0,0,3,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,641,        return result.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,0,0,0,1,2,0,2,0,1,4,16,13,1.0,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,0,0,0,1,2,0,2,0,1,4,15,13,1.0,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",0,0,0,0,2,1,2,0,2,4,41,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,1,1,0,2,4,1,2,2,1,8,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,0,2,0,4,0,1,3,55,6,0.25,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,0,0,0,1,2,1,2,0,0,4,25,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,1,0,0,1,2,0,2,0,1,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,1,1,0,1,3,1,0,0,0,5,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,1,1,0,1,4,2,0,0,0,5,23,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,1,1,0,1,4,2,0,0,0,5,23,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,1,1,0,1,4,2,0,0,0,5,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,1,0,0,1,3,1,0,0,0,4,13,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,3,0,0,3,14,13,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,1,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,1,6,29,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,2,6,0,3,1,1,7,60,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,1,6,29,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,2,6,0,3,1,1,7,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,7,0.25,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,1,0,0,1,2,0,3,0,1,5,27,6,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,1,0,0,1,2,0,2,1,0,5,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.02222,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,0,2,2,23,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,2,0,0,0,0,0,0,0,2,2,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,3,1,0,1,4,1,0,0,2,6,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,1,0,0,0,0,1,0,0,0,2,8,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,2,7,2,0,0,0,5,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,1,1,0,1,3,1,0,0,0,5,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,2,6,1,0,0,1,6,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,39,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,1,1,0,1,3,1,0,0,0,5,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,3,2,0,1,2,0,0,0,1,5,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,1,1,0,1,3,1,0,0,0,5,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,33,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,2,7,1,6,0,0,5,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.11111,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",3,0,0,0,3,1,0,2,1,5,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,2,0,0,0,0,0,0,0,1,2,13,5,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,2,0,0,0,0,0,0,0,1,2,13,5,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },0,0,0,0,1,0,0,0,0,1,1,2,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,2,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,1,0,0,1,2,2,0,1,1,6,38,5,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,1,0,0,0,0,1,0,0,0,2,15,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,2,0,0,1,3,1,0,0,0,4,32,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,0,0,0,1,2,15,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,3,0,0,1,2,3,0,2,3,6,88,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,0,2,1,2,0,1,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,0,2,1,3,0,1,4,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",0,0,0,0,2,1,4,0,1,4,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",3,0,0,1,6,3,0,4,3,6,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,1,1,0,1,3,1,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",3,0,0,0,2,1,0,1,2,5,28,6,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,1,0,0,1,4,0,3,2,0,5,73,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,6,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",1,0,0,1,3,0,4,2,0,5,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,1,0,0,1,2,0,2,1,0,5,39,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",1,0,0,0,2,0,4,0,2,4,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",0,0,0,0,2,0,4,0,0,2,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,1,0,0,0,0,1,0,0,0,2,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",6,0,0,0,2,1,0,1,2,5,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,1,0,0,2,5,2,0,1,1,6,29,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,0,0,1,2,0,0,2,0,4,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,0,0,0,0,0,0,0,0,0,0,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",5,0,0,0,3,2,0,2,0,4,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,2,0,0,0,0,0,0,0,1,2,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,2,0,0,0,0,0,0,0,1,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,2,0,0,0,0,0,0,0,1,2,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,1,0,0,1,3,1,0,0,0,4,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,1,0,0,0,0,0,0,0,1,2,17,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,1,0,0,0,0,0,0,0,1,2,17,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,1,0,0,1,3,1,0,0,0,4,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,            } else if (mStyle == TimeZone.SHORT) {,3,1,0,1,4,2,0,0,0,5,38,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,4,0,0,2,4,1,2,0,0,5,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,2,0,2,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,0,0,0,1,2,1,2,0,2,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,2,0,2,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,2,0,2,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,5,0,0,0,0,1,0,0,0,2,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,2,0,2,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,2,0,2,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,1,1,0,0,0,1,0,0,2,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,5,1,0,0,0,1,0,0,0,3,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,4,1,0,1,2,1,2,0,0,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,2,1,0,1,4,2,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,2,0,1,2,5,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,1,1,0,1,4,2,0,0,0,5,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,0,0,0,0,0,1,0,0,1,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,0,0,0,2,6,2,3,0,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,2,3,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,            return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,2,0,1,2,5,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,350,        } else if (value == falseValue) {,2,1,0,1,4,2,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,2,1,0,1,4,2,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,353,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,356,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,2,0,1,2,5,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,1,1,0,1,4,2,0,0,0,5,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,1,1,0,1,4,2,0,0,0,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,385,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,387,        } else if (value.equals(trueValue)) {,0,0,0,2,6,2,3,0,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,389,        } else if (value.equals(falseValue)) {,0,0,0,2,6,2,3,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,        } else if (value.equals(nullValue)) {,0,0,0,2,6,2,3,0,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,2,0,1,2,5,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,1,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,5,0,0,0,0,1,0,0,0,2,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,4,0,0,1,2,1,2,0,0,5,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,3,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,            return nullValue;,1,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,2,0,0,1,2,1,2,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,        return bool ? trueValue : falseValue;,3,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,530,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,            return nullValue;,1,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,2,0,0,1,2,1,2,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,563,"        if (""true"".equalsIgnoreCase(str)) {",0,0,0,2,5,1,2,0,1,5,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {",0,0,0,2,6,2,2,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,567,"        } else if (""on"".equalsIgnoreCase(str)) {",0,0,0,2,6,2,2,0,1,5,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {",0,0,0,2,6,2,2,0,1,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {",0,0,0,2,6,2,2,0,1,5,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {",0,0,0,2,6,2,2,0,1,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,            } else if (falseString == null) {,1,1,0,1,4,2,0,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,            } else if (nullString == null) {,1,1,0,1,4,2,0,0,0,5,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,609,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,        } else if (str.equals(trueString)) {,0,0,0,2,6,2,3,0,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,613,        } else if (str.equals(falseString)) {,0,0,0,2,6,2,3,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,        } else if (str.equals(nullString)) {,0,0,0,2,6,2,3,0,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,616,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");",0,0,0,1,2,2,0,1,2,5,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",1,1,0,1,3,1,0,0,1,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,1,2,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,                return ,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,673,                    return ,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,678,                    return ,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,                    return ,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,                    return ,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,            if (trueString == null) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,734,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,            } else if (falseString == null) {,1,1,0,1,4,2,0,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,                return false;,0,0,0,0,0,1,0,0,1,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,0,0,0,2,6,2,3,0,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,739,            return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,740,        } else if (str.equals(falseString)) {,0,0,0,2,6,2,3,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,741,            return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,744,"        throw new IllegalArgumentException(""The String did not match either specified value"");",0,0,0,1,2,2,0,1,2,5,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",0,0,0,0,2,1,2,0,3,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",0,0,0,0,2,1,2,0,3,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",0,0,0,0,2,1,2,0,3,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,        return bool.booleanValue() ? trueString : falseString;,2,0,0,1,2,1,2,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,844,"        return toString(bool, ""true"", ""false"");",0,0,0,0,2,1,2,0,3,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",0,0,0,0,2,1,2,0,3,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");",0,0,0,0,2,1,2,0,3,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,        return bool ? trueString : falseString;,3,0,0,0,0,1,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,918,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,2,0,1,2,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,925,        int trueCount = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,1,1,5,1,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,                if (trueCount < 1) {,1,1,0,1,3,1,0,0,0,5,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,1,0,0,0,0,0,0,0,1,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,1,1,0,0,0,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,959,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,961,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,2,0,1,2,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,1,0,0,0,2,1,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,1,0,0,1,2,0,3,0,1,5,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");",0,0,0,1,2,2,0,1,2,5,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,4,0,0,1,2,1,2,0,1,6,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,2,0,1,2,5,66,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,0,0,0,1,2,0,2,0,1,4,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,2,0,1,4,15,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,1,0,0,1,3,1,0,0,0,4,24,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,0,0,0,1,2,0,2,0,1,4,16,13,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,1,0,0,0,1,6,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,1,1,0,2,4,1,2,2,1,8,57,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,0,2,0,4,0,1,3,55,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,2,0,0,4,25,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,1,0,0,1,2,0,2,0,1,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,1,1,0,1,3,1,0,0,0,5,17,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,1,1,0,1,4,2,0,0,0,5,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,            } else if (ch > 0x7f) {,1,1,0,1,4,2,0,0,0,5,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,            } else if (ch < 32) {,1,1,0,1,4,2,0,0,0,5,21,9,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,                switch (ch) {,1,0,0,1,3,1,0,0,0,4,13,11,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,0,0,0,1,2,0,3,0,0,3,14,13,0.33333,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,242,    },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,3,1,0,1,3,1,0,0,0,5,36,12,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,1,0,6,0,2,0,0,3,25,15,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",0,0,0,0,2,0,3,0,2,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,2,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,2,1,0,2,5,1,2,0,0,6,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,3,1,0,1,3,1,0,0,0,5,36,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,1,0,0,1,2,0,2,1,0,5,26,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,1,0,0,1,2,1,2,0,0,5,27,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,1,0,0,0,0,1,0,0,1,3,21,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,3,0,0,1,2,1,2,0,0,5,46,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,2,2,0,1,3,1,0,0,1,6,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,3,0,0,1,2,1,2,0,0,5,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,3,3,0,2,5,1,0,0,2,6,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,3,0,0,1,2,1,2,0,0,5,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,3,3,0,2,5,1,0,0,2,6,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,3,2,0,1,2,0,0,0,1,5,33,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,1,1,0,2,5,1,2,0,0,6,29,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,            date.setTime(time);,0,0,0,1,2,0,3,0,0,3,19,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,666,            val.setTime(date);,0,0,0,1,2,0,3,0,0,3,18,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,        boolean roundUp = false;,1,0,0,0,0,1,0,0,1,3,24,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,        for (int i = 0; i < fields.length; i++) {,5,1,0,1,3,2,0,0,1,6,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,4,1,1,1,5,2,0,0,1,7,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,                if (fields[i][j] == field) {,1,1,1,1,7,1,0,0,0,6,28,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,                    if (round && roundUp) {,2,1,0,1,3,1,0,0,0,5,23,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,                    return;,0,0,0,0,0,1,0,0,1,2,7,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,696,            int offset = 0;,1,0,0,0,0,1,0,0,0,2,15,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,1,0,0,0,0,1,0,0,1,3,26,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,1,0,0,1,3,1,0,0,0,4,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,            if (!offsetSet) {,1,0,0,1,3,1,0,0,1,5,17,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,                offset = val.get(fields[i][0]) - min;,2,1,1,1,6,0,2,0,1,7,37,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,4,3,0,2,4,0,0,0,1,5,37,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,739,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",1,1,1,1,12,0,4,0,0,6,54,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,8,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,0,1,0,2,5,1,2,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,1,0,0,1,2,1,2,0,0,5,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,1,0,0,1,2,1,2,0,0,5,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,4,7,0,1,3,1,0,0,4,6,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,3,5,0,1,3,1,0,0,0,5,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,4,7,0,1,3,1,0,0,4,6,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,107,        if (len == 2) {,1,1,0,1,3,1,0,0,0,5,15,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,1,0,0,1,2,0,2,0,1,5,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,2,0,0,0,0,1,0,0,1,3,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,2,1,0,1,3,2,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,2,1,0,0,0,3,0,0,0,3,38,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,57,7,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.07692,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,0,2,1,2,0,1,4,40,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",1,0,0,1,2,3,1,1,5,7,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",1,0,0,1,2,3,1,1,5,7,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",1,0,0,1,2,3,1,1,5,7,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",1,0,0,1,2,3,1,1,5,7,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",1,0,0,1,2,3,1,1,5,7,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",1,0,0,1,2,3,1,1,5,7,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",1,0,0,1,2,4,1,1,5,7,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",1,0,0,1,2,4,1,1,5,7,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",1,0,0,1,2,3,1,1,5,7,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",1,0,0,1,2,3,1,1,5,7,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",1,0,0,1,2,3,1,1,5,7,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,1,0,0,1,2,3,2,1,4,7,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",1,0,0,1,2,3,1,1,5,7,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",1,0,0,1,2,3,1,1,5,7,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",1,0,0,1,2,3,1,1,5,7,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",1,0,0,1,2,3,1,1,5,7,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",1,0,0,1,2,3,1,1,5,7,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,1,0,0,0,0,3,0,1,3,4,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",1,0,0,1,2,3,1,1,5,7,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",1,0,0,1,2,3,1,1,5,7,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",1,0,0,1,2,3,1,1,5,7,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",1,0,0,1,2,3,1,1,5,7,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",1,0,0,1,2,3,1,1,5,7,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",1,0,0,1,2,3,1,1,5,7,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,108,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",1,0,0,1,2,3,1,1,5,7,110,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",1,0,0,1,2,3,1,1,5,7,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",1,0,0,1,2,3,1,1,5,7,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",1,0,0,1,2,3,1,1,5,7,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",1,0,0,1,2,3,1,1,5,7,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",1,0,0,1,2,3,1,1,5,7,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,1,0,0,0,0,3,0,1,3,4,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,717,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,1,0,0,1,2,3,2,1,4,7,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",1,0,0,1,2,3,1,1,5,7,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");",1,0,0,1,2,3,1,1,5,7,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",1,0,0,1,2,3,1,1,5,7,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,1,0,0,1,2,3,1,1,4,7,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,1,0,0,1,2,4,1,0,4,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,1,0,0,1,2,4,1,0,4,6,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",1,0,0,1,2,4,1,0,5,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",1,0,0,1,2,4,1,0,5,6,60,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");",1,0,0,1,2,4,1,0,5,6,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",1,0,0,1,2,4,1,0,5,6,62,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",1,1,0,1,4,4,2,0,7,7,89,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",1,0,0,1,2,4,1,0,5,6,60,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",1,0,0,1,2,4,1,0,5,6,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");",1,0,0,1,2,4,1,0,5,6,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");",1,0,0,1,2,4,1,0,5,6,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",1,0,0,1,2,4,1,0,5,6,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,1,0,0,0,0,4,0,0,3,3,40,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,1,0,0,1,2,4,2,0,4,6,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",1,0,0,0,2,4,2,0,5,5,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,0,0,2,4,1,0,6,6,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,1,0,0,2,4,1,0,6,6,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",1,0,0,0,2,4,2,0,5,5,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");",2,1,0,1,2,4,1,0,5,7,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",1,0,0,0,2,4,2,0,5,5,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,1,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,1,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",1,0,0,0,2,0,2,1,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,1,2,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",2,1,0,0,2,0,2,0,1,5,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,            return Float.parseFloat(str);,0,0,0,1,2,1,3,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,        if (JAVA_VERSION_TRIMMED == null) {,1,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",1,0,0,0,2,0,2,1,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",2,1,0,0,2,0,2,0,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,1,2,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",2,1,0,0,2,0,2,0,1,5,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",2,1,0,0,0,0,0,0,2,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,            return Integer.parseInt(str);,0,0,0,1,2,1,3,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,3,1,0,2,5,2,2,0,1,7,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,1,0,0,1,2,1,3,0,0,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,2,3,0,1,3,1,0,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,3,0,0,4,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,1,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);,0,0,0,1,2,1,3,0,0,4,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,        if (OS_NAME == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,        return OS_NAME.startsWith(osNamePrefix);,0,0,0,1,2,1,3,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,        if (OS_NAME == null || OS_VERSION == null) {,2,3,0,1,3,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);,0,1,0,1,4,1,6,0,0,5,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,            return System.getProperty(property);,0,0,0,1,2,1,3,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,1,0,0,1,4,1,0,1,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,2,0,0,0,1,0,1,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,2,1,0,0,0,1,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,2,1,0,0,0,1,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,3,1,0,2,4,1,3,0,1,7,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,2,3,1,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,2,3,1,1,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,0,0,0,2,4,2,3,1,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,2,3,1,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,4,2,2,4,7,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,4,2,2,4,7,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,5,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,3,5,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,        char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,        char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,4,7,0,1,3,1,0,0,4,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",1,0,0,0,2,2,0,1,2,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,0,1,0,2,5,1,2,0,1,6,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,            char ch3 = str.charAt(3);,1,0,0,1,2,1,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,1,0,0,1,2,1,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,4,7,0,1,3,1,0,0,4,6,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,            if (len == 5) {,1,1,0,1,3,1,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,0,6,2,4,1,1,5,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,1,2,0,1,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,1,8,2,6,1,1,6,78,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);",0,0,0,0,2,1,3,0,1,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,1,0,0,1,2,1,0,2,1,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,        if (locale != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,            list.add(locale);,0,0,0,1,2,0,3,0,0,3,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,1,0,2,7,1,3,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,1,8,1,6,1,1,6,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,0,1,0,2,7,1,3,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,1,6,1,4,1,2,6,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,1,3,0,1,6,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,3,0,0,3,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,0,0,0,1,2,1,3,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,        return cAvailableLocaleList;,1,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,2,0,0,0,0,0,0,1,0,2,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,1,0,0,2,4,1,1,1,3,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,1,0,0,1,2,0,3,0,1,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,2,0,0,0,0,0,0,0,1,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,3,0,0,4,44,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,1,0,0,1,4,0,3,2,0,5,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,        if (langs == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,1,1,0,1,3,1,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,1,0,0,1,2,1,0,1,2,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,1,0,0,1,2,0,1,1,1,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,3,1,0,2,5,2,2,0,1,7,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,1,0,0,1,4,0,3,2,0,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,1,4,0,0,5,46,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,                        langs.add(locale);,0,0,0,1,2,0,3,0,0,3,18,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,1,0,0,1,2,0,3,0,1,5,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,3,0,0,0,0,0,0,0,1,2,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",0,0,0,0,2,0,4,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,1,0,0,1,4,0,3,2,0,5,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,        if (countries == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,            if (languageCode != null) {,1,1,0,1,3,1,0,0,0,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,1,0,0,1,2,1,0,1,2,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,1,0,0,1,2,0,1,1,1,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,3,1,0,2,5,2,2,0,1,7,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,1,0,0,1,4,0,3,2,0,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,1,4,0,0,5,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,                        countries.add(locale);,0,0,0,1,2,0,3,0,0,3,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,                countries = Collections.unmodifiableList(countries);,1,0,0,1,2,0,3,0,1,5,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,                countries = Collections.EMPTY_LIST;,3,0,0,0,0,0,0,0,1,2,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",0,0,0,0,2,0,4,0,0,2,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,1,4,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,1,6,29,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,2,6,0,3,1,1,7,60,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,1,0,0,0,5,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,0,2,0,5,0,0,2,38,9,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,1,1,0,1,3,1,0,0,0,5,27,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,1,0,1,0,2,2,0,0,1,5,35,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,2,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,3,1,0,1,3,1,0,0,0,5,31,4,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,0,2,1,0,0,0,3,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,1,5,1,0,0,0,6,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,1,2,0,0,6,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",1,0,0,0,2,1,2,0,1,5,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",2,1,0,0,2,0,3,0,1,5,36,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,1,5,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,1,0,0,0,5,40,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,1,1,0,1,3,1,0,0,0,5,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,2,1,0,1,3,1,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,0,2,1,0,0,0,3,24,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,3,2,0,0,0,1,0,0,0,3,28,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,2,0,0,1,6,40,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,2,0,0,1,6,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,2,7,1,3,0,0,7,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,1,0,0,0,0,1,0,0,0,2,15,11,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,1,5,47,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,1,0,0,0,5,40,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,1,1,0,1,3,1,0,0,0,5,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,2,1,0,1,3,1,0,0,0,5,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,2,0,0,0,2,1,0,0,0,3,24,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,1,0,0,0,3,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,2,0,0,1,6,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,2,0,0,1,6,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,2,7,1,3,0,0,7,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,1,0,0,0,0,1,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,1,2,0,0,6,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",1,0,0,0,2,1,2,0,1,5,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,1,1,0,1,3,1,0,0,0,5,20,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",2,1,0,0,2,0,3,0,1,5,36,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",1,0,0,0,2,0,3,0,2,4,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,1,2,0,0,6,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",1,0,0,0,2,1,2,0,1,5,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",2,1,0,0,2,0,3,0,1,5,36,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",0,0,0,0,2,1,2,0,1,4,23,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,0,2,0,6,0,0,4,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,2,0,0,0,0,0,0,0,1,2,12,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,2,0.30769,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,1,2,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,1,2,0,0,5,36,14,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,1,0,0,2,6,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,1,5,56,17,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,1,0,0,2,6,1,2,0,0,5,33,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,1,0,0,2,4,1,2,2,1,7,50,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,0,4,0,5,0,0,2,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,4,1,0,2,5,2,2,0,1,7,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,1,1,0,1,3,1,0,0,1,6,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",2,1,0,0,2,1,2,0,1,6,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,1,1,0,1,3,1,0,0,1,6,17,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",2,1,0,0,2,1,2,0,1,6,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,3,3,0,1,3,1,0,0,1,6,33,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,1,0,0,2,0,3,1,0,5,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,1,2,0,0,5,31,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,2,2,0,1,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,1,1,0,1,3,1,0,0,1,6,24,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,2,0,0,0,0,0,0,0,1,2,9,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,1,4,1,6,0,2,5,81,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,0,5,1,4,0,0,3,46,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,2,1,0,0,0,0,0,0,1,3,21,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,1,0,0,0,0,0,0,0,1,2,10,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,0,0,1,3,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,1,0,0,0,0,0,0,0,1,2,9,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,2,1,0,0,0,0,0,0,1,3,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,1,0,0,0,0,0,0,0,1,2,10,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,2,1,0,0,0,0,0,0,1,3,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,1,0,0,0,0,0,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,2,1,0,0,0,0,0,0,1,3,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,1,0,0,0,0,0,0,0,1,2,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,3,1,0,0,0,1,0,0,0,3,38,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,3,2,0,1,3,1,0,0,0,5,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,1,0,0,1,4,0,2,1,1,6,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,1,0,0,2,4,1,2,1,1,7,37,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,46,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,1,0,0,2,4,1,2,1,1,7,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,5,1,0,1,4,1,4,0,0,6,83,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,5,1,0,1,4,1,4,0,0,6,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,5,1,0,1,4,1,4,0,0,6,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,5,1,0,1,4,1,4,0,0,6,76,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,5,1,0,1,4,1,4,0,0,6,77,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,5,1,0,1,4,1,4,0,0,6,65,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,5,1,0,1,4,1,4,0,0,6,62,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,1,1,0,1,3,1,0,0,0,5,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",3,0,0,0,2,0,4,0,2,4,81,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",3,0,0,0,2,0,4,0,2,4,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",3,0,0,0,2,0,4,0,2,4,63,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",3,0,0,0,2,0,4,0,2,4,60,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",0,0,0,0,5,1,4,0,1,4,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,0,2,1,10,0,1,4,96,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,0,2,0,3,0,1,5,34,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,1,0,0,1,2,1,3,0,0,5,30,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,1,0,0,1,2,1,3,0,0,5,34,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,2,1,0,1,3,1,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",1,0,0,1,5,0,9,0,1,5,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,1,0,0,0,0,0,0,0,2,2,26,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,3,1,0,2,4,1,0,1,0,6,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,1,0,0,1,2,1,0,0,1,5,12,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,2,0,0,0,0,0,0,0,1,2,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,1,0,1,5,18,4,0.01754,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,1,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,1,0,0,1,2,0,2,1,0,5,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,0,2,0,3,0,2,3,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,0,0,0,1,2,1,2,0,0,4,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,2,1,0,2,5,1,2,0,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,1,0,0,0,0,1,0,0,1,3,24,5,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,5,1,0,1,3,2,0,0,1,6,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,4,1,1,1,5,2,0,0,1,7,44,6,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,1,1,1,1,7,1,0,0,0,6,28,8,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,2,1,0,1,3,1,0,0,0,5,23,10,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,0,0,1,2,7,9,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,1,0,0,0,0,1,0,0,0,2,15,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,1,0,0,0,0,1,0,0,1,3,26,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,1,0,0,1,3,1,0,0,0,4,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,1,0,0,1,3,1,0,0,1,5,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,702,                int max = val.getActualMaximum(fields[i][0]);,1,0,1,1,6,1,2,0,0,6,45,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,2,1,1,1,6,0,2,0,1,7,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,706,                roundUp = offset > ((max - min) / 2);,4,3,0,2,4,0,0,0,1,5,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",1,1,1,1,12,0,4,0,0,6,54,7,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",1,0,0,1,2,3,2,1,4,7,73,2,0.05,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,1,0,0,0,5,4,0,0,3,4,39,2,0.05,1,1
