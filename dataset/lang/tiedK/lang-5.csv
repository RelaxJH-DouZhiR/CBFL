dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,10,2,0,1,2,1,4,0,0,17,44,3,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,0,0,0,1,3,0,0,0,0,4,42,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,0,0,0,1,3,0,0,0,0,4,43,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,4,0,0,6,31,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",0,0,0,2,4,0,0,0,0,6,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,                return false;,2,0,0,0,0,4,0,4,0,9,13,2,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",0,0,0,4,8,0,0,0,0,12,94,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,8,1,0,1,2,0,0,0,0,10,32,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",6,1,0,1,2,0,12,2,0,22,40,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,6,0,0,7,32,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,2,0,0,1,2,0,4,0,0,7,128,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,4,0,0,5,47,11,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,4,3,0,1,3,0,0,0,0,7,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,61,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,33,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,488,            if (expPos > -1) { // there is an exponent,2,0,0,1,3,0,8,0,0,11,42,18,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,489,                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE,0,0,0,2,5,0,0,0,0,7,89,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,509,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,2,1,0,2,5,3,8,2,0,18,27,1,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,626,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,643,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,646,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",10,3,0,1,2,1,16,4,0,36,64,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,4,1,0,1,3,3,2,2,0,13,21,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,4,0,0,0,0,0,4,0,0,8,18,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,4,0,0,2,5,2,0,2,0,8,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,49,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,50,            for (final CharSequence[] seq : lookup) {,0,0,0,2,5,0,0,0,0,7,41,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,4,0,1,2,4,1,6,0,0,13,31,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,6,0,0,0,0,1,0,2,0,10,15,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,6,2,1,1,3,0,4,0,0,20,20,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,0,0,0,0,0,0,0,0,0,0,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,62,        longest = _longest;,4,0,0,0,0,0,0,0,0,5,19,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,40,    public AggregateTranslator(final CharSequenceTranslator... translators) {,4,0,0,1,3,2,0,2,0,8,73,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,41,        this.translators = ArrayUtils.clone(translators);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,42,    },8,1,0,0,1,0,0,0,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,51,        for (final CharSequenceTranslator translator : translators) {,4,0,0,1,3,1,0,2,0,7,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,52,"            final int consumed = translator.translate(input, index, out);",2,0,0,1,2,1,10,0,0,13,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,54,                return consumed;,2,0,0,0,0,1,0,0,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,54,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,55,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,58,            final StringWriter writer = new StringWriter(input.length() * 2);,2,1,0,2,4,1,4,4,0,12,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,59,"            translate(input, writer);",0,0,0,1,2,0,6,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,60,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,61,        } catch (final IOException ioe) {,2,0,0,1,4,1,0,2,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,63,            throw new RuntimeException(ioe);,2,0,0,1,2,0,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,76,        if (out == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,77,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,79,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,80,            return;,2,1,0,0,0,1,0,0,0,3,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,82,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,83,        final int len = input.length();,2,0,0,1,2,1,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,84,        while (pos < len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,85,"            final int consumed = translate(input, pos, out);",2,0,0,1,2,1,8,0,0,11,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,86,            if (consumed == 0) {,4,1,0,1,3,3,4,2,0,14,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,87,"                final char[] c = Character.toChars(Character.codePointAt(input, pos));",2,0,0,3,6,1,16,0,0,19,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,88,                out.write(c);,0,0,0,1,2,0,6,0,0,6,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,89,                pos+= c.length;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,90,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,94,            for (int pt = 0; pt < consumed; pt++) {,8,1,0,1,3,0,0,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,95,"                pos += Character.charCount(Character.codePointAt(input, pt));",2,0,0,2,4,0,12,0,0,15,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,97,        },2,0,0,0,1,3,4,2,0,11,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,98,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,108,        final CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,1,0,4,0,12,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,122,        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);,4,0,0,2,4,1,8,0,0,12,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,72,            max = input.length() - index;,4,1,0,1,2,0,4,0,0,10,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,79,                out.write(result.toString());,0,0,0,2,4,0,8,0,0,8,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,80,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,4,0,0,10,68,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,3,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,2,0,0,1,2,1,4,0,0,7,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,3,7,0,12,0,0,15,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,2,0,0,0,1,1,0,0,0,3,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,2,0,0,3,6,0,8,8,0,18,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,8,1,0,1,2,0,6,0,0,16,59,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,297,            AVAILABLE_LOCALE_SET = Collections.unmodifiableSet(new HashSet<Locale>(list));,4,0,0,2,4,0,4,4,0,13,78,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,298,        },0,0,0,0,1,0,4,0,0,6,1,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",2,0,0,0,0,3,0,8,0,13,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",6,1,0,0,0,3,4,10,0,24,79,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,6,1,0,0,0,1,0,0,0,7,39,3,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,0,0,0,2,4,1,6,0,0,6,46,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,57,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,58,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,90,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,94,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,101,            if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,102,                return new Locale(str);,2,0,0,1,2,1,0,2,0,4,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,104,            if (len < 5) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,105,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,107,            if (str.charAt(2) != '_') {,0,1,0,2,5,0,4,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,108,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",6,4,0,1,2,0,0,2,0,13,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,110,            final char ch3 = str.charAt(3);,2,0,0,1,2,1,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,111,            if (ch3 == '_') {,2,1,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,112,"                return new Locale(str.substring(0, 2), """", str.substring(4));",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,114,            final char ch4 = str.charAt(4);,4,0,0,1,2,1,14,4,0,26,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,115,            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {,0,0,0,3,7,0,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,118,            if (len == 5) {,4,1,0,1,3,3,0,2,0,10,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,121,            if (len < 7) {,4,1,0,1,3,3,0,4,0,12,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,122,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,0,6,0,12,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,124,            if (str.charAt(5) != '_') {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,125,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,127,"            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,12,2,0,14,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,144,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,166,        List<Locale> list = new ArrayList<Locale>(4);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,167,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,168,            list.add(locale);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,169,            if (locale.getVariant().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,170,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,172,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,173,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,8,2,0,11,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,175,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,176,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,179,        return Collections.unmodifiableList(list);,0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,207,        return SyncAvoid.AVAILABLE_LOCALE_SET;,4,0,0,0,0,1,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,232,        if (countryCode == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,233,            return Collections.emptyList();,0,0,0,1,2,1,10,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,235,        List<Locale> langs = cLanguagesByCountry.get(countryCode);,0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,236,        if (langs == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,237,            langs = new ArrayList<Locale>();,2,0,0,1,2,0,0,4,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,238,            List<Locale> locales = availableLocaleList();,2,0,0,1,2,0,2,4,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,239,            for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,240,                Locale locale = locales.get(i);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,241,                if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,0,8,0,0,9,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,243,                    langs.add(locale);,0,0,0,1,2,0,6,0,0,6,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,246,            langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,247,"            cLanguagesByCountry.putIfAbsent(countryCode, langs);",0,0,0,1,2,0,8,0,0,8,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,248,            langs = cLanguagesByCountry.get(countryCode);,2,0,0,1,2,0,6,0,0,9,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,250,        return langs;,2,0,0,0,0,1,8,0,0,10,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,264,        if (languageCode == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,265,            return Collections.emptyList();,0,0,0,1,2,1,8,0,0,9,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,267,        List<Locale> countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,6,4,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,268,        if (countries == null) {,8,1,0,1,3,0,6,2,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,269,            countries = new ArrayList<Locale>();,2,0,0,1,2,0,0,4,0,7,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,270,            List<Locale> locales = availableLocaleList();,2,0,0,1,2,0,2,4,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,271,            for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,272,                Locale locale = locales.get(i);,2,0,0,1,2,0,6,2,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,273,                if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,8,0,0,10,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,276,                    countries.add(locale);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,279,            countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,280,"            cCountriesByLanguage.putIfAbsent(languageCode, countries);",0,0,0,1,2,0,8,0,0,8,58,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,281,            countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,6,0,0,9,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,283,        return countries;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,0,0,0,4,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,2,1,0,1,3,0,0,0,0,3,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,3,7,0,16,0,0,17,67,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,2,1,0,1,2,1,4,0,0,7,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,0,1,0,0,0,0,10,0,0,12,31,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,4,0,0,1,2,3,8,2,0,18,23,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,4,0,0,1,2,3,4,0,0,11,46,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,4,3,0,1,2,0,4,0,0,12,73,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,10,79,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,8,0,0,1,3,1,0,2,0,12,67,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,1,0,1,2,3,14,2,0,24,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,2,0,0,1,2,1,8,2,0,12,21,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,12,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,10,2,0,17,68,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,0,0,5,10,3,4,4,0,14,96,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,8,2,0,14,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },6,0,0,5,10,3,4,4,0,16,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,0,0,0,4,8,0,0,0,0,12,50,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,12,1,0,1,3,0,0,2,0,16,37,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,4,3,1,4,8,0,4,0,0,21,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,4,0,0,13,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,40,    public LookupTranslator(CharSequence[]... lookup) {,4,0,0,2,5,1,0,2,0,7,51,2,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,0,0,3,54,8,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,42,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,43,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,44,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,45,            for (CharSequence[] seq : lookup) {,0,0,0,2,5,0,0,0,0,7,35,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,46,"                this.lookupMap.put(seq[0], seq[1]);",0,0,0,3,6,0,0,0,0,9,35,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,47,                int sz = seq[0].length();,2,0,1,2,4,0,2,0,0,6,25,9,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,48,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,49,                    _shortest = sz;,0,0,0,0,0,0,0,0,0,0,15,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,51,                if (sz > _longest) {,6,2,0,1,3,0,0,0,0,9,20,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,56,        shortest = _shortest;,4,0,0,0,0,0,0,0,0,5,21,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,57,        longest = _longest;,8,0,0,0,0,0,0,2,0,11,19,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,58,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,34,public class OctalUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,60,1,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,36,    private static int OCTAL_MAX = 377;,2,0,0,0,0,2,0,0,0,4,35,2,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",4,0,0,1,2,1,6,2,0,13,62,1,0.03846,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",0,0,0,1,2,0,0,0,0,3,92,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",4,0,0,1,2,6,2,6,0,20,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,6,0,0,1,2,3,4,2,0,16,82,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",4,1,0,1,2,0,8,0,0,14,102,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",4,0,0,1,2,6,4,4,0,20,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,8,0,0,0,0,3,0,4,0,16,64,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",0,0,0,1,2,0,0,0,0,3,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",6,0,0,1,2,3,6,4,0,20,104,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,4,0,0,4,108,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,8,2,0,16,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",4,0,0,1,2,6,4,4,0,20,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",0,0,0,1,2,0,0,0,0,3,85,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,0,0,1,2,3,4,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",10,0,0,1,2,3,2,2,0,19,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",0,0,0,1,2,0,0,0,0,3,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",0,0,0,1,2,0,0,0,0,3,73,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",6,0,0,1,2,3,6,0,0,16,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",0,0,0,1,2,0,0,0,0,3,73,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",2,0,0,1,2,3,2,0,0,8,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",4,1,0,1,2,3,2,0,0,11,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,14,1,0,0,0,3,0,2,0,20,111,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",4,1,0,1,2,3,2,0,0,12,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,8,0,0,18,98,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,1,2,1,6,0,0,6,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,4,0,0,1,2,1,10,0,0,14,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,0,0,0,4,67,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,8,5,0,1,3,0,10,0,0,23,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",6,0,0,1,2,0,0,2,0,9,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",4,0,0,1,2,0,8,2,0,15,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",4,0,0,1,2,0,4,0,0,10,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,6,1,0,0,0,1,0,0,0,7,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,0,4,0,0,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,2,1,0,1,2,0,4,0,0,7,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,0,4,0,0,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,2,1,0,1,3,0,0,0,0,3,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,6,1,0,1,2,0,4,0,0,12,32,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,4,0,0,1,2,0,10,2,0,18,43,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,0,8,2,0,19,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,2,0,0,0,0,0,4,2,0,9,11,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,0,2,0,4,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,4,0,0,6,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,455,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {",0,0,0,5,11,0,0,0,0,16,101,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,490,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,492,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,494,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,495,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,502,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,3,10,2,0,21,55,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,506,                    if (dec == null,8,1,0,0,1,0,4,0,0,14,15,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,510,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,609,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,0,2,0,4,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,4,0,0,0,0,1,0,0,0,4,13,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,631,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,634,        return Float.valueOf(str);,4,3,0,1,2,1,6,0,0,13,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,650,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,664,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,668,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,4,0,0,1,2,1,0,2,0,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,4,0,0,1,2,4,10,2,0,21,27,1,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,195,        return cs == null || cs.length() == 0;,2,0,0,1,2,4,4,0,0,10,38,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,235,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,238,        for (int i = 0; i < strLen; i++) {,4,0,0,1,3,0,0,0,0,5,34,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,240,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,2,1,0,1,3,0,4,0,0,8,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,685,        return Long.decode(str);,0,0,0,1,2,1,6,0,0,6,24,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1296,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1299,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1304,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,159,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",10,2,0,4,8,3,4,2,0,22,94,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,0,0,0,1,2,0,0,0,0,3,54,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,35,    public static final Long LONG_ONE = Long.valueOf(1L);,2,0,0,1,2,3,8,2,0,16,53,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,37,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,2,0,0,1,2,3,4,2,0,12,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,41,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,2,0,0,1,2,3,4,2,0,11,61,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,43,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,2,0,0,1,2,3,4,2,0,12,68,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,45,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,47,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,0,0,0,2,4,0,0,0,0,6,63,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,6,2,0,14,70,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,53,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,6,2,0,15,59,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,6,1,0,1,2,4,8,2,0,21,62,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,10,1,0,1,2,3,4,2,0,21,61,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,0,0,0,1,2,0,0,0,0,3,68,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,0,0,0,1,2,0,0,0,0,3,59,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,2,0,0,1,2,3,4,2,0,11,58,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,67,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,0,0,0,1,2,0,0,0,0,3,65,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,0,0,1,3,0,0,0,0,4,26,4,2.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,2,4,0,12,0,0,13,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,        },0,0,0,0,1,0,0,0,0,1,1,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,            if (this == obj) {,0,0,0,1,3,0,0,0,0,4,18,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,4,0,0,1,3,2,0,2,0,8,40,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,4,0,0,1,2,0,0,4,0,8,51,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,                return,0,0,0,0,0,0,0,0,0,0,6,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,2,1,0,1,4,0,0,0,0,3,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,14,0,0,19,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1216,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1217,            mTimeZone = timeZone;,4,0,0,0,0,0,0,0,0,5,21,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1218,            if (daylight) {,8,4,0,1,3,0,4,0,0,17,15,1,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1219,                style |= 0x80000000;,2,0,0,0,0,0,0,0,0,3,20,7,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1221,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1222,            mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1223,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1230,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,2,4,0,3,6,1,8,0,0,14,71,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,259,                if (tokenLen >= 4) {,0,0,0,1,3,0,0,0,0,4,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,262,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",0,0,0,1,2,0,0,0,0,3,64,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,264,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1079,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",12,0,0,1,2,0,4,6,0,22,77,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1080,        String value = cTimeZoneDisplayCache.get(key);,0,0,0,1,2,0,0,0,0,3,46,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1081,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1083,"            value = tz.getDisplayName(daylight, style, locale);",2,0,0,1,2,0,16,0,0,19,51,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1084,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",4,1,0,1,2,0,8,2,0,15,61,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1085,            if (prior != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1089,        return value;,0,0,0,0,0,1,0,0,0,1,13,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,692,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,693,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1109,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",0,0,0,1,3,0,0,0,0,4,63,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1110,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1111,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1112,            zone = timeZone;,0,0,0,0,0,0,0,0,0,0,16,4,0.8,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1114,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",2,0,0,1,2,0,8,0,0,12,63,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1115,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",0,0,0,1,2,0,0,0,0,3,62,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1116,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1126,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,732,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.66667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,740,        },0,0,0,0,1,0,0,0,0,1,1,4,0.66667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,8,2,1,0,0,1,12,0,0,26,20,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,0,0,0,0,0,1,0,0,0,1,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,4,0,0,4,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,8,0,1,1,2,0,4,6,0,22,35,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",2,1,0,2,4,0,12,0,0,15,50,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,0,0,0,2,4,0,0,0,0,6,35,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,250,"        Date date= parse(source, new ParsePosition(0));",2,0,0,2,4,0,4,4,0,10,47,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,251,        if(date==null) {,0,0,0,1,3,0,0,0,0,4,16,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,276,        int offset= pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,2,0,0,2,4,0,10,2,0,14,64,4,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,278,        if(!matcher.lookingAt()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,0,0,0,0,0,1,0,0,0,1,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,2,1,0,2,4,0,0,0,0,3,56,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",8,0,0,2,4,0,8,2,0,21,93,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,2,1,0,1,3,0,0,0,0,3,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",2,0,1,2,4,0,6,0,0,12,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,250,"        Date date= parse(source, new ParsePosition(0));",0,0,0,2,4,0,0,0,0,6,47,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,        if(date==null) {,4,1,0,1,3,0,6,0,0,11,16,9,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,260,        return date;,2,0,0,0,0,1,0,0,0,2,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,741,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,0,0,0,9,48,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,742,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,276,        int offset= pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,6,0,0,2,4,1,10,4,0,21,64,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,278,        if(!matcher.lookingAt()) {,0,1,0,2,5,0,4,0,0,6,26,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,283,        cal.clear();,0,0,0,1,2,0,0,0,0,3,12,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,285,        for(int i=0; i<strategies.length;) {,10,2,0,1,3,0,0,0,0,12,36,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,286,            Strategy strategy= strategies[i++];,4,0,1,1,2,0,0,2,0,9,35,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,2,4,0,12,0,0,12,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,288,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,290,        return cal.getTime();,0,0,0,1,2,1,8,0,0,8,21,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,0,0,0,3,6,0,0,0,0,9,42,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,1,2,1,14,0,0,15,65,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,4,2,0,1,3,0,0,0,0,7,22,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,4,2,0,1,3,1,8,0,0,15,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,43,    private static final Random RANDOM = new Random();,4,1,0,1,2,3,0,4,0,13,50,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,54,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,55,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,69,"        return random(count, false, false);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,83,"        return random(count, 32, 127, false, false);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,97,"        return random(count, true, false);",0,0,0,1,2,1,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,111,"        return random(count, true, true);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,125,"        return random(count, false, true);",0,0,0,1,2,1,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,143,"        return random(count, 0, 0, letters, numbers);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,187,"        return random(count, start, end, letters, numbers, chars, RANDOM);",0,0,0,1,2,1,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,226,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");",0,0,0,1,2,0,0,0,0,3,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,231,"            throw new IllegalArgumentException(""The chars array must not be empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,235,            if (chars != null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,236,                end = chars.length;,6,0,0,0,0,0,0,0,0,7,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,238,                if (!letters && !numbers) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,239,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,241,                    end = 'z' + 1;,2,1,0,0,0,0,0,0,0,5,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,242,                    start = ' ';                ,10,1,0,0,0,0,0,0,0,14,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,255,                ch = chars[random.nextInt(gap) + start];,4,1,1,2,4,0,6,0,0,14,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,257,            if (letters && Character.isLetter(ch),2,1,0,1,3,0,6,0,0,9,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,260,                if(ch >= 56320 && ch <= 57343) {,4,3,0,1,3,0,0,2,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,261,                    if(count == 0) {,2,1,0,1,3,0,0,0,0,3,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,262,                        count++;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,265,                        buffer[count] = ch;,8,1,0,1,2,0,0,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,266,                        count--;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,267,                        buffer[count] = (char) (55296 + random.nextInt(128));,0,1,1,4,8,0,4,0,0,10,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,269,                } else if(ch >= 55296 && ch <= 56191) {,4,3,0,1,4,0,0,0,0,7,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,270,                    if(count == 0) {,2,1,0,1,3,0,0,0,0,3,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,271,                        count++;,2,0,0,0,0,0,0,0,0,3,8,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,274,                        buffer[count] = (char) (56320 + random.nextInt(128));,0,1,1,4,8,0,4,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,275,                        count--;,2,0,0,0,0,0,0,0,0,3,8,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,276,                        buffer[count] = ch;,4,0,1,1,2,0,0,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,278,                } else if(ch >= 56192 && ch <= 56319) {,0,0,0,1,4,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,280,                    count++;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,282,                    buffer[count] = ch;,2,0,1,1,2,0,4,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,285,                count++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,288,        return new String(buffer);,2,0,0,1,2,1,0,2,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,306,        if (chars == null) {,4,1,0,1,3,3,0,4,0,12,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,307,"            return random(count, 0, 0, false, false, null, RANDOM);",4,0,0,1,2,1,6,0,0,13,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,309,"        return random(count, chars.toCharArray());",0,0,0,2,4,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,325,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,326,"            return random(count, 0, 0, false, false, null, RANDOM);",0,0,0,1,2,1,6,0,0,9,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,328,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",4,0,0,1,2,1,8,0,0,14,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,0,0,0,2,4,0,0,0,0,6,40,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,        if (count == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,8,4,0,1,4,3,2,2,0,20,23,1,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,4,3,0,1,3,0,6,0,0,14,29,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,8,0,0,15,27,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,4,1,1,2,4,0,0,0,0,7,32,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,2,0,1,1,3,0,0,0,0,5,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,2,0,0,1,2,3,0,4,0,9,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");",2,1,0,1,2,0,0,2,0,7,99,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,318,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,321,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",0,0,0,1,2,1,0,0,0,4,67,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",4,0,0,1,2,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,0,0,0,1,2,0,0,0,0,3,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,2,0,0,2,4,0,4,4,0,10,35,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,2,0,0,1,2,0,0,0,0,2,10,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,4,0,0,0,0,0,0,0,0,5,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,252,        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,            String name = desc.getName();,2,0,0,1,2,0,4,2,0,8,29,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",0,0,0,1,2,1,8,0,0,9,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,4,0,0,2,4,1,4,0,0,10,38,1,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,79,        if (object == null) {,2,1,0,1,3,0,8,0,0,13,21,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,164,        return baos.toByteArray();,0,0,0,1,2,1,4,0,0,4,26,5,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,2,0,0,1,2,1,6,4,0,12,23,3,0.0625,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.00321,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,    private static class InitStripAccents {,0,0,0,0,1,0,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,108,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,0,2,0,9,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,2,0,0,0,0,0,0,2,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,2,0,0,0,0,0,0,2,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,2,0,0,0,0,0,0,2,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,            Throwable _java6Exception = null;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,            Throwable _sunException = null;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",2,0,0,2,4,0,6,0,0,10,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,2,0,0,1,4,0,0,2,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,2,0,0,1,4,0,0,2,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,                    _sunException = e2;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,2,1,0,0,0,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,4,0,0,0,0,0,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,4,0,0,0,0,0,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,4,0,0,0,0,0,0,0,0,6,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },2,1,0,0,1,0,0,2,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,2,0,0,1,2,3,2,2,0,10,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,38,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",2,1,0,2,4,1,10,0,0,13,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",6,0,0,3,6,1,6,2,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",2,0,0,3,6,1,0,0,0,2,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,120,            int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,0,1,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,4,1,0,1,3,0,0,0,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,4,1,0,0,0,0,0,0,0,6,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,10,1,0,1,3,0,4,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,2,0,0,1,3,0,6,2,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,2,0,0,3,6,1,2,2,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,2,0,0,3,6,0,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,4,1,0,1,3,0,0,4,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",4,0,0,4,8,1,10,4,0,18,93,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,3,6,1,18,0,0,18,95,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,159,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,160,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,4,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,229,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,253,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,10,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,362,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",2,0,0,1,2,0,4,2,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,4,1,0,1,2,3,8,2,0,17,38,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,419,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,4,2,0,3,7,0,10,0,0,16,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,491,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,493,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,8,1,0,0,0,0,0,0,0,10,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,0,0,0,1,2,1,10,0,0,11,28,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,527,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,2,1,1,0,0,1,0,0,0,8,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,4,2,0,1,3,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,532,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,6,4,0,3,7,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,533,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,535,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,6,4,0,3,7,0,8,0,0,18,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,2,0,0,0,0,0,0,0,0,3,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,542,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",10,0,0,1,2,1,10,2,0,24,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,597,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,13,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,598,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,600,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,601,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,629,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,630,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,4,0,0,0,0,0,4,2,0,11,21,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,4,1,0,1,3,0,0,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,4,0,0,1,2,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,636,            } else if (InitStripAccents.sunDecomposeMethod != null) {,8,1,0,1,4,0,0,0,0,9,57,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,637,                result = removeAccentsSUN(input);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,639,                throw new UnsupportedOperationException(,8,0,0,0,1,0,0,2,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,645,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,647,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,648,        } catch(IllegalAccessException iae) {,2,0,0,1,4,3,0,4,0,9,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,649,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);",2,0,0,1,2,0,0,2,0,5,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,2,0,0,1,4,0,0,2,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,651,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);",2,0,0,1,2,0,0,2,0,5,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,653,"            throw new RuntimeException(""SecurityException occurred"", se);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,10,4,1,1,3,0,0,0,0,18,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,674,"            throw new IllegalStateException(""java.text.Normalizer is not available"", InitStripAccents.java6Exception);",0,0,0,1,2,0,0,0,0,3,106,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,677,"        result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] {text, InitStripAccents.java6NormalizerFormNFD});",12,0,0,4,8,0,2,4,0,19,131,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,678,"        result = InitStripAccents.java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,2,0,0,0,0,1,0,2,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,697,        if (InitStripAccents.sunDecomposeMethod == null) {,0,0,0,1,3,0,0,0,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,698,"            throw new IllegalStateException(""sun.text.Normalizer is not available"", InitStripAccents.sunException);",10,4,0,1,2,0,0,0,0,14,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",12,0,0,5,10,0,6,4,0,23,123,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,702,"        result = InitStripAccents.sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,703,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,786,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,814,            return str1 == str2;,4,1,0,0,0,1,0,0,0,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,816,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",0,0,0,4,8,1,20,0,0,21,103,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,843,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,4,2,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,846,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",2,0,0,1,2,1,14,0,0,18,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,876,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,877,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,879,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,907,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,908,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,910,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,1,2,1,8,0,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,947,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,948,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,950,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,18,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,8,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1007,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1010,            return lastIndex ? str.length() : 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1012,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1013,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1015,            if (lastIndex) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",6,1,0,1,2,0,8,2,0,18,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1018,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",6,1,0,1,2,0,8,0,0,16,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,14,2,0,1,3,0,0,0,0,18,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1023,            found++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1054,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1091,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1093,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1094,            startPos = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1096,        int endLimit = str.length() - searchStr.length() + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1100,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1101,            return startPos;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1103,        for (int i = startPos; i < endLimit; i++) {,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,14,0,0,15,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1134,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",4,0,0,2,4,1,12,2,0,18,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1169,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1170,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1172,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,6,3,0,1,3,0,0,2,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1200,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,2,4,1,0,0,0,7,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1240,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0,0,0,1,2,1,8,0,0,9,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1274,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1276,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1304,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1306,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,2,4,1,0,0,0,7,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1340,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1342,        if (startPos > str.length() - searchStr.length()) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1343,            startPos = str.length() - searchStr.length();,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1345,        if (startPos < 0) {,4,1,0,1,3,0,4,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1348,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1349,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1352,        for (int i = startPos; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1353,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",2,1,0,3,7,0,14,0,0,18,86,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1357,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1383,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1384,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",2,1,0,1,2,1,14,2,0,19,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1412,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1413,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1415,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",0,0,0,1,2,1,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1444,            return false;,6,3,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1447,        int max = str.length() - len;,8,1,0,1,2,0,4,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1448,        for (int i = 0; i <= max; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,2,5,0,12,0,0,13,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1450,                return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1453,        return false;,2,0,1,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1466,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1467,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1469,        int strLen = seq.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1470,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,8,1,0,3,7,0,10,0,0,20,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1472,                return true;,2,1,0,0,0,1,8,0,0,12,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1475,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1504,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1505,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1508,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1509,        int searchLen = searchChars.length;,0,1,0,0,0,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1510,        int searchLast = searchLen - 1;,6,1,0,0,0,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1511,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1512,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1513,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1514,                if (searchChars[j] == ch) {,2,2,1,2,5,0,4,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1515,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1517,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,4,3,1,3,7,0,4,0,0,13,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1518,                            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1521,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1526,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,4,4,0,3,7,0,8,0,0,16,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",2,1,1,2,4,1,8,0,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1587,            return false;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1589,        int csLength = cs.length();,6,1,0,1,2,0,0,0,0,7,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1590,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1591,        int csLast = csLength - 1;,12,4,0,0,0,0,10,0,0,26,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1592,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1593,        for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,2,1,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1595,            for (int j = 0; j < searchLength; j++) {,10,1,0,1,3,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,15,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1598,                        if (j == searchLast) {,6,2,0,1,3,0,0,0,0,8,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1602,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1603,                            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1607,                        return true;,0,0,0,0,0,1,0,0,0,1,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1612,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1644,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1645,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1647,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",0,0,0,2,4,1,10,0,0,10,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1677,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1678,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1680,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1681,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1683,        int searchLast = searchLen - 1;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1685,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1686,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,6,0,0,21,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1688,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,1,0,2,5,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1690,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,2,0,0,0,0,0,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1698,            return i;,6,2,0,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1727,        if (isEmpty(seq) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1728,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,4,3,0,1,2,0,12,0,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1731,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1732,            char ch = seq.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1733,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",2,1,1,1,2,0,16,0,0,28,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,4,3,0,2,5,0,6,0,0,13,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1735,                char ch2 = seq.charAt(i + 1);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",2,1,0,2,5,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1737,                    return i;,0,0,0,0,0,1,4,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,2,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1740,                if (!chFound) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1745,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1774,        if (valid == null || cs == null) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1775,            return false;,8,1,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,0,1,0,2,5,0,4,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1778,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1780,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1781,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1783,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1810,        if (cs == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1811,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1813,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1842,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,8,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1845,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1846,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1847,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1848,        int searchLast = searchLen - 1;,12,1,0,0,0,0,4,2,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1853,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,8,2,0,1,3,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1856,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1858,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1859,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1863,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1868,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,10,3,1,1,3,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1896,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1898,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,8,4,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1932,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,4,0,0,0,0,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,2,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1940,        for (int i = 0; i < sz; i++) {,8,2,1,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,4,0,0,1,2,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1942,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1943,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1945,"            tmp = CharSequenceUtils.indexOf(str, search, 0);",2,0,0,1,2,0,8,0,0,11,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1946,            if (tmp == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1947,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1951,                ret = tmp;,2,1,0,0,0,0,0,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,12,1,0,0,0,1,0,2,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1985,        if (str == null || searchStrs == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1986,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1988,        int sz = searchStrs.length;,2,1,0,0,0,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1989,        int ret = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1990,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,2,1,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1993,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1994,                continue;,2,0,0,0,0,0,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",2,0,0,2,4,0,12,0,0,15,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1997,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,8,1,0,0,0,0,14,0,0,25,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2001,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2031,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,6,2,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2036,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2037,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2040,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2041,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2044,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2047,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2086,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2087,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,6,2,0,1,3,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2092,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2095,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2099,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2104,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2108,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2111,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2112,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2115,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,10,1,1,1,3,0,12,6,0,39,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2142,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2144,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2145,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2147,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2148,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2150,"        return str.substring(0, len);",0,0,0,1,2,1,14,0,0,14,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2174,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2175,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2177,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2178,            return EMPTY;,2,0,0,0,0,1,6,6,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2180,        if (str.length() <= len) {,6,4,0,2,5,0,12,0,0,22,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2181,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2183,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2212,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2213,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,0,0,13,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2216,            return EMPTY;,0,0,0,0,0,1,8,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2218,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2219,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2221,        if (str.length() <= pos + len) {,8,2,0,2,5,0,4,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2222,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2224,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2257,        if (isEmpty(str) || separator == null) {,8,3,0,2,5,0,4,0,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2260,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2261,            return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2264,        if (pos == INDEX_NOT_FOUND) {,8,4,0,1,3,0,0,0,0,12,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2265,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2267,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2299,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2300,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2303,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,2,0,0,1,2,0,12,0,0,14,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2309,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,6,3,0,3,7,0,16,0,0,26,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2344,        if (pos == INDEX_NOT_FOUND) {,2,0,0,1,3,0,0,0,0,2,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2345,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2347,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2380,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2381,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2384,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2386,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,6,4,0,3,7,0,8,0,0,18,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2388,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2390,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2417,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2448,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2449,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2451,        int start = str.indexOf(open);,2,0,0,1,2,0,6,0,0,8,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2453,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,6,1,1,1,3,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2458,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2484,        if (str == null || isEmpty(open) || isEmpty(close)) {,2,3,0,3,7,0,8,0,0,15,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2485,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2487,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2488,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2491,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2492,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2493,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2494,        int pos = 0;,4,1,0,0,0,0,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,0,0,0,1,3,0,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2496,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2498,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,12,1,0,0,0,0,0,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2501,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2503,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2505,"            list.add(str.substring(start, end));",2,1,0,2,4,0,12,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2507,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2508,        if (list.isEmpty()) {,0,0,0,2,5,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2509,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,4,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",2,1,0,1,2,1,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2599,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2633,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2660,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2691,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2753,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2772,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2773,            return null;,8,1,0,0,0,1,0,0,0,10,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,4,0,0,1,2,0,8,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2778,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2779,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,6,0,0,10,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,2,2,0,2,5,0,12,0,0,16,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2784,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,10,1,0,1,2,0,4,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2789,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,12,8,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,2,0,0,0,0,0,6,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2791,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2792,        int end = 0;,8,2,0,0,0,0,0,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,6,1,0,1,3,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",6,1,0,1,2,0,12,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2796,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2797,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,6,1,0,0,0,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2800,                    if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2801,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,22,0,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2806,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2811,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2815,                    if (preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,4,1,0,0,0,0,6,0,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2817,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,2,0,0,0,0,0,0,0,0,4,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2819,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2821,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2824,                    beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2828,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2829,                end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2862,"        return splitWorker(str, null, -1, true);",4,3,0,1,2,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2898,"        return splitWorker(str, separatorChar, true);",2,0,0,1,2,1,6,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2916,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2921,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2925,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2926,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2927,        while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2928,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2929,                if (match || preserveAllTokens) {,22,4,0,1,3,0,0,0,0,28,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2930,"                    list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2931,                    match = false;,2,1,1,0,0,0,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2932,                    lastMatch = true;,0,0,0,0,0,0,6,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2934,                start = ++i;,8,0,0,0,0,0,0,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2935,                continue;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2938,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2939,            i++;,2,0,0,0,0,0,8,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2941,        if (match || preserveAllTokens && lastMatch) {,12,3,0,1,3,0,0,0,0,17,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2942,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2944,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",2,0,0,1,2,1,6,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3021,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3043,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3044,            return null;,4,0,0,0,0,1,0,0,0,5,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3047,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3048,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,12,1,0,0,0,0,4,2,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3052,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3053,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3054,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,0,0,0,1,3,0,4,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3057,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,10,1,0,3,7,0,0,0,0,12,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3059,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3060,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3061,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3062,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,14,3,0,0,0,0,6,0,0,25,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3065,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3066,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3069,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3071,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,16,1,0,0,0,0,4,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,4,1,1,2,6,0,4,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3077,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3078,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3079,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,4,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,0,1,0,0,0,0,8,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3082,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3083,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3087,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3089,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3090,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3094,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3096,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3098,            while (i < len) {,2,0,0,1,3,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3099,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3100,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3103,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3104,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3106,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3110,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,6,0,0,0,0,0,0,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3114,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,6,2,0,1,3,0,0,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3118,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3120,        return list.toArray(new String[list.size()]);,6,0,0,3,6,1,8,2,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3143,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3171,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3189,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3190,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3192,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,2,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3195,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3196,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3197,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3198,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3199,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,14,2,0,1,3,0,0,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3202,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3204,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,8,4,0,0,0,0,0,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3207,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3208,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3210,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3211,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,10,2,0,23,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,0,1,0,0,0,0,4,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,10,4,0,0,0,0,2,4,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,4,3,0,3,6,1,8,2,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3271,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3305,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3306,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,8,1,1,0,0,0,0,0,0,11,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3309,        if (noOfItems <= 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,2,0,0,0,0,1,0,8,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3313,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3315,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,8,1,0,1,3,0,0,2,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3317,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3319,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3320,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3323,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3350,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3351,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3353,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3384,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3385,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,12,2,0,1,3,1,4,4,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3393,        int noOfItems = endIndex - startIndex;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,0,0,0,1,3,0,10,0,0,10,21,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3395,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3398,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3400,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,4,1,0,1,3,0,12,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3405,                buf.append(array[i]);,2,0,0,2,4,0,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3408,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3428,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3429,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3431,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,2,0,0,0,0,1,6,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,2,0,0,1,2,0,20,2,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3435,        if (!iterator.hasNext()) {,0,0,0,2,5,0,8,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3436,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3441,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3445,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3446,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3447,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3449,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3451,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3453,        return buf.toString();,0,0,0,1,2,1,4,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,0,0,0,1,3,0,4,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3473,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3475,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3476,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3478,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3479,        if (!iterator.hasNext()) {,0,0,0,2,5,0,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3480,            return ObjectUtils.toString(first);,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",12,2,0,1,2,0,0,0,0,15,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3485,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3486,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3489,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,0,0,0,1,2,0,14,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3493,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3494,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3495,                buf.append(obj);,0,0,0,1,2,0,14,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3497,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3498,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,4,2,0,1,3,0,0,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3517,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,8,4,0,1,3,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,5,2,0,0,0,1,8,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3540,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,12,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3560,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3561,            return str;,10,1,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3563,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3565,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3566,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3567,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3568,                chs[count++] = str.charAt(i);,6,3,1,2,4,0,6,0,0,27,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3572,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3605,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3607,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,2,0,0,2,4,1,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3640,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3642,"        if (startsWithIgnoreCase(str, remove)) {",4,0,0,2,5,0,6,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,2,1,1,2,4,1,8,0,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3673,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3676,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3677,"            return str.substring(0, str.length() - remove.length());",12,2,1,3,6,1,12,0,0,34,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3679,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3710,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",4,3,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3715,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3742,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,1,14,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3743,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3745,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3768,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,2,2,0,3,7,0,10,0,0,14,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3769,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3771,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3772,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3773,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3774,            if (chars[i] != remove) {,6,2,1,2,5,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3775,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3778,"        return new String(chars, 0, pos);",4,3,0,1,2,1,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3807,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3834,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3866,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3867,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3871,        if (end == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3874,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3875,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,8,1,0,0,0,1,0,8,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3877,        increase *= max < 0 ? 16 : max > 64 ? 64 : max;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3878,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3880,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,0,0,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,6,1,1,0,0,0,2,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3882,            if (--max == 0) {,2,0,1,1,3,0,4,0,0,10,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3883,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",16,1,0,1,2,1,8,4,0,32,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3887,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3888,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3931,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,0,0,0,9,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3982,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",2,0,0,1,2,1,10,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,6,8,0,1,3,0,8,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,2,2,0,0,0,1,6,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4045,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4046,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +",2,1,0,0,1,0,0,2,0,6,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4050,        int searchLength = searchList.length;,0,0,0,0,0,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,6,1,0,0,0,0,0,0,0,7,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4054,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,4,1,1,2,4,0,0,0,0,7,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,4,1,0,0,0,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4066,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4071,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4072,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4074,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4076,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,4,1,1,1,3,0,0,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4080,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,12,3,0,1,3,1,4,4,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4083,                    textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4092,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4098,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4101,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4102,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,3,7,0,0,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4103,                continue;,0,0,0,0,0,0,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4106,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4107,                increase += 3 * greater; // assume 3 matches,6,1,0,0,0,0,6,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4111,"        increase = Math.min(increase, text.length() / 5);",10,1,0,2,4,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4115,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4118,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,2,0,1,2,4,0,10,2,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4126,            tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,2,4,1,2,5,0,0,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4132,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4134,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4137,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4138,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4141,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,10,2,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4149,        int textLength = text.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,2,0,0,1,3,0,0,0,0,3,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4151,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,4,0,0,1,2,0,12,2,0,18,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4154,        if (!repeat) {,2,0,0,1,3,0,4,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4155,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",4,1,0,1,2,2,14,0,0,20,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4184,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4185,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4187,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4227,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,4,0,0,4,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4228,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,6,2,0,1,3,0,2,0,0,10,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4231,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,8,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4234,        int replaceCharsLength = replaceChars.length();,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4236,        StringBuilder buf = new StringBuilder(strLength);,8,1,0,1,2,0,0,4,0,13,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4237,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,6,1,0,1,2,0,6,4,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4239,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,1,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4241,                modified = true;,12,1,0,0,0,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4242,                if (index < replaceCharsLength) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4243,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4246,                buf.append(ch);,2,0,0,1,2,0,6,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4249,        if (modified) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4250,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4252,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,2,0,0,1,3,0,4,2,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,10,1,0,0,0,1,0,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4290,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4293,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4294,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,10,1,0,0,0,0,0,0,0,14,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,2,0,0,1,3,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,6,1,0,0,0,0,0,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4303,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4304,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4306,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4307,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,8,1,0,0,0,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4309,            end = temp;,0,0,0,0,0,0,6,0,0,6,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4311,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4346,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4347,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4350,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4352,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4358,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4359,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4361,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,6,0,0,0,0,0,0,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4366,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4368,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",8,0,1,1,2,1,18,0,0,35,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4430,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4432,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4433,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4434,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4436,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4437,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4438,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4439,        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4442,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4471,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4472,            return null;,0,0,0,0,0,1,10,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4474,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,10,0,0,0,0,1,8,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,14,1,0,1,2,0,12,2,0,29,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4478,        if (repeat == 1 || inputLength == 0) {,2,0,0,1,3,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4481,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4482,"            return repeat(str.charAt(0), repeat);",2,0,0,2,4,2,8,8,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4486,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4488,"                return repeat(str.charAt(0), repeat);",0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4490,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,1,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4491,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4492,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4493,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4494,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4495,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,6,1,1,1,2,1,0,2,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,4,0,0,1,2,0,0,4,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4500,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4503,                return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4528,        if(str == null || separator == null) {,6,3,0,1,3,0,0,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4529,"            return repeat(str, repeat);",8,1,0,1,2,1,18,2,0,29,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",10,1,0,1,2,0,4,2,0,18,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4533,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4560,        char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,2,0,1,1,2,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,2,1,0,1,2,1,2,2,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4587,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,16,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4612,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,4,2,1,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4617,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4622,"        return str.concat(repeat(padChar, pads));",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4649,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4652,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4653,"            padStr = "" "";",0,0,0,0,0,0,6,0,0,6,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4655,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4656,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4658,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4661,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4662,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4665,        if (pads == padLen) {,12,1,0,1,3,0,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4666,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4668,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,6,2,0,2,4,0,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,8,1,0,2,4,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4672,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,2,0,0,2,4,0,0,4,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4675,            return str.concat(new String(padding));,2,0,0,2,4,1,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4699,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4725,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4727,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4728,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4731,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4732,"            return leftPad(str, size, String.valueOf(padChar));",8,0,0,2,4,2,12,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4734,"        return repeat(padChar, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4761,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4762,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4764,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4767,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4769,        int pads = size - strLen;,6,2,0,0,0,0,12,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4770,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4771,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4773,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",2,0,1,2,4,1,10,0,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4777,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4778,            return padStr.concat(str);,2,0,0,1,2,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4779,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4780,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4783,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4784,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,8,0,0,18,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4785,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4787,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4803,        return cs == null ? 0 : cs.length();,8,4,0,1,2,1,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4832,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,10,6,0,1,3,0,0,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4861,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4863,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4864,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4865,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4866,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4869,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4900,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,12,4,0,0,0,1,0,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4903,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4904,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4906,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4908,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4909,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",8,3,0,1,2,0,6,0,0,18,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4912,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,4,1,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4938,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4939,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4941,        return str.toUpperCase();,0,0,1,1,2,1,8,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4962,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4964,        return str.toUpperCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4988,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,6,3,0,1,2,1,0,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5010,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5011,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5013,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5039,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),4,1,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5069,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5070,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5072,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5106,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,2,0,1,1,2,0,0,0,0,6,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5114,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,2,4,0,6,0,0,11,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,2,0,0,2,4,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,2,4,0,6,0,0,11,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5122,        return new String(buffer);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5148,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5152,        int idx = 0;,6,1,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5153,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {",10,2,0,3,7,0,10,0,0,23,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5154,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5155,            idx += sub.length();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,2,0,0,0,0,1,6,2,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5186,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,4,0,0,3,7,0,0,0,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5189,                return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5192,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5219,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,2,1,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,4,9,0,16,0,0,21,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5224,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5254,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5257,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5258,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,2,0,3,7,0,18,0,0,21,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5259,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5262,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5288,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5289,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5291,        int sz = cs.length();,4,0,0,1,2,0,12,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,4,1,0,4,9,0,10,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5294,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5297,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5327,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5328,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5330,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5331,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5332,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5333,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5364,            return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5368,            if (Character.isDigit(cs.charAt(i)) == false) {,2,3,1,3,7,0,0,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5369,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5372,        return true;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,2,0,0,1,3,0,4,0,0,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5401,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,4,1,0,1,2,0,24,0,0,29,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,0,0,4,9,0,0,0,0,13,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5406,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5409,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,4,1,0,1,3,0,0,2,0,9,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,10,1,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5436,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5437,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,4,1,0,3,7,0,4,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5439,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5442,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,6,2,0,2,5,0,4,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5466,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5468,        int sz = cs.length();,4,1,0,1,2,0,14,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5469,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5470,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5471,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5474,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5497,        if (cs == null || isEmpty(cs)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5498,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5500,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5501,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5503,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5506,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,10,1,1,0,0,1,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5549,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5593,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5616,        return new StringBuilder(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,6,2,0,1,3,0,10,0,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,2,0,0,0,0,1,10,4,0,16,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5645,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,12,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5646,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5684,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5723,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,2,0,0,0,0,1,0,2,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5729,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,10,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5730,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,4,0,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5735,        if (str.length() - offset < maxWidth - 3) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5736,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",2,0,0,0,0,1,0,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5739,        if (offset <= 4) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5740,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5743,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5745,        if (offset + maxWidth - 3 < str.length()) {,4,3,0,2,5,0,10,2,0,19,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5746,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,4,3,0,3,6,1,8,0,0,15,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,3,7,0,16,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5782,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5785,        if (length >= str.length() || length < middle.length()+2) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,4,1,0,1,2,0,4,0,0,9,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5790,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,0,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5791,        int endOffset = str.length()-targetSting/2;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5794,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5795,        builder.append(middle);,0,0,0,1,2,0,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5796,        builder.append(str.substring(endOffset));,0,0,0,2,4,0,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5798,        return builder.toString();,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5829,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5830,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5832,        if (str2 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5836,        if (at == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5837,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5839,        return str2.substring(at);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5869,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5871,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5872,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5875,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5877,                break;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5880,        if (i < cs2.length() || i < cs1.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,4,0,1,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,0,4,1,0,0,1,0,0,0,12,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5919,        if (css == null || css.length <= 1) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5920,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5922,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5923,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5924,        int arrayLen = css.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5925,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5926,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5931,        for (int i = 0; i < arrayLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5932,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5933,                anyStringNull = true;,4,0,1,0,0,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5934,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5936,                allStringsNull = false;,4,0,0,0,0,0,8,0,0,12,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5937,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5938,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",2,1,1,3,6,0,22,0,0,31,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5943,        if (allStringsNull || longestStrLen == 0 && !anyStringNull) {,0,0,0,1,3,0,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5944,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5948,        if (shortestStrLen == 0) {,4,2,0,1,3,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5949,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5953,        int firstDiff = -1;,2,0,0,0,0,0,4,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5954,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0,0,0,1,3,0,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5955,            char comparisonChar = css[0].charAt(stringPos);,0,1,0,2,4,0,8,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5956,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5957,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,4,1,1,3,7,0,12,0,0,22,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5958,                    firstDiff = stringPos;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5959,                    break;,4,1,0,0,0,0,0,0,0,5,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5962,            if (firstDiff != -1) {,2,1,0,1,3,0,6,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5963,                break;,12,2,0,0,0,0,4,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5967,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5971,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5973,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6010,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6011,            return EMPTY;,2,0,0,0,0,1,14,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6013,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6014,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6016,            if (strs[0] == null) {,6,2,1,2,5,0,4,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6017,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6019,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6020,        } else if (smallestIndexOfDiff == 0) {,4,1,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6022,            return EMPTY;,0,0,0,0,0,1,10,0,0,10,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6025,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6068,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6069,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6089,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6090,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6092,        if (n == 0) {,2,0,0,1,3,0,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6093,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6094,        } else if (m == 0) {,2,1,0,1,4,0,10,0,0,13,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6095,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6098,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6100,            CharSequence tmp = s;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6101,            s = t;,10,1,1,0,0,0,0,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6102,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6103,            n = m;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6104,            m = t.length();,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6107,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6108,"        int d[] = new int[n + 1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6119,        for (i = 0; i <= n; i++) {,0,0,0,1,3,0,0,0,0,1,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6120,            p[i] = i;,2,1,0,1,2,0,6,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6123,        for (j = 1; j <= m; j++) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6124,            t_j = t.charAt(j - 1);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6125,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6127,            for (i = 1; i <= n; i++) {,8,1,0,1,3,0,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6128,                cost = s.charAt(i - 1) == t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6130,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",6,5,1,6,12,0,8,0,0,32,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6134,            _d = p;,6,0,0,0,0,0,0,0,0,7,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6135,            p = d;,10,0,0,0,0,0,4,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6136,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6141,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6177,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6178,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6180,        if (threshold < 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6181,"            throw new IllegalArgumentException(""Threshold must not be negative"");",0,0,0,1,2,0,0,2,0,3,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6228,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6229,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6232,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6233,            return m <= threshold ? m : -1;,6,1,0,0,0,1,0,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6234,        } else if (m == 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6235,            return n <= threshold ? n : -1;,8,1,0,0,0,1,0,0,0,11,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6238,        if (n > m) {,8,3,0,1,3,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6240,            CharSequence tmp = s;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6241,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6242,            t = tmp;,6,0,0,0,0,0,0,0,0,7,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6243,            n = m;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6244,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6247,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally",10,5,0,2,4,0,4,2,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6248,"        int d[] = new int[n + 1]; // cost array, horizontally",16,2,0,2,4,0,0,0,0,20,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6252,"        int boundary = Math.min(n, threshold) + 1;",2,1,0,1,2,0,8,0,0,11,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6253,        for (int i = 0; i < boundary; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6254,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6258,"        Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6259,"        Arrays.fill(d, Integer.MAX_VALUE);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6262,        for (int j = 1; j <= m; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6263,            char t_j = t.charAt(j - 1); // jth character of t,8,3,1,1,2,0,8,0,0,27,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6264,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6267,"            int min = Math.max(1, j - threshold);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6268,"            int max = Math.min(n, j + threshold);",6,1,0,1,2,0,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6271,            if (min > max) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6272,                return -1;,10,1,0,0,0,1,0,0,0,13,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6276,            if (min > 1) {,2,1,0,1,3,0,6,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6277,                d[min - 1] = Integer.MAX_VALUE;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6281,            for (int i = min; i <= max; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6282,                if (s.charAt(i - 1) == t_j) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6284,                    d[i] = p[i - 1];,0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6287,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",4,3,1,6,12,0,8,0,0,28,56,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6292,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6293,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6294,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6299,        if (p[n] <= threshold) {,2,1,1,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6300,            return p[n];,14,1,1,1,2,2,16,2,0,44,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6302,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6332,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6358,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,8,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6373,        if (str == null || prefix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6374,            return str == null && prefix == null;,4,3,0,0,0,1,0,0,0,7,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6376,        if (prefix.length() > str.length()) {,2,1,0,3,7,0,16,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6377,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6379,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,14,0,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6402,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6403,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6405,        for (CharSequence searchString : searchStrings) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6406,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6407,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6410,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6440,"        return endsWith(str, suffix, false);",4,3,0,1,2,1,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6467,"        return endsWith(str, suffix, true);",6,3,0,1,2,1,8,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6482,        if (str == null || suffix == null) {,6,4,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6483,            return str == null && suffix == null;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6485,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6486,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6488,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6489,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,16,0,0,16,95,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6534,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6535,            return null;,14,1,1,0,0,1,4,0,0,25,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6537,"        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll("" "");",0,0,0,3,6,1,10,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6559,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,2,0,0,3,7,0,0,0,0,2,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6560,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6562,        for (CharSequence searchString : searchStrings) {,4,0,0,1,3,0,0,2,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6563,"            if (StringUtils.endsWith(string, searchString)) {",8,1,0,2,5,0,8,0,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6564,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6567,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6585,"        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);",8,1,0,2,4,1,0,4,0,15,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,6,1,0,0,0,1,0,0,0,7,22,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,        if (type instanceof Class<?>) {,4,1,0,1,3,0,0,2,0,8,31,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);",0,0,0,2,4,1,0,0,0,7,69,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,        if (type instanceof ParameterizedType) {,0,0,0,1,3,0,0,0,0,4,40,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);",0,0,0,2,4,1,0,0,0,7,78,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {",0,0,0,2,5,0,0,0,0,7,34,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,        if (cls.isPrimitive()) {,0,0,0,2,5,0,4,0,0,4,24,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",0,0,0,1,2,0,0,0,0,3,112,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,2,2,0,3,7,0,10,0,0,14,64,4,1.33333,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,11,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",6,1,0,1,2,0,6,2,0,15,78,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,0,2,0,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,2,0,0,0,0,3,0,2,0,7,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",0,0,0,1,2,0,0,0,0,3,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,1,0,1,2,6,4,4,0,22,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,4,0,14,76,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,108,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,16,2,0,24,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",0,0,0,1,2,0,0,0,0,3,66,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",4,0,0,1,2,3,2,2,0,12,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,4,0,0,1,2,3,8,2,0,18,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,8,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",6,0,0,1,2,3,2,4,0,16,78,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,0,0,1,2,3,2,0,0,10,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,3,2,0,0,8,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,4,0,0,5,72,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,12,1,0,0,0,3,0,0,0,16,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",0,0,0,1,2,0,0,0,0,3,110,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",0,0,0,1,2,0,0,0,0,3,96,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,1,2,1,6,0,0,6,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",2,0,0,1,2,1,10,0,0,12,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,            return System.getProperty(property);,0,0,0,1,2,1,6,0,0,6,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,6,0,0,6,67,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,2,0,1,2,4,1,0,4,0,8,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },6,1,0,0,1,0,0,0,0,7,1,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,4,0,0,8,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",4,0,0,1,2,0,0,0,0,6,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,8,2,0,0,0,1,0,0,0,10,43,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",6,0,0,2,5,0,4,0,0,12,24,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {",2,0,0,2,6,0,8,0,0,12,31,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,            return JAVA_1_7;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,0,0,0,0,0,0,0,0,0,0,56,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,0,0,0,0,0,0,0,0,0,0,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,    public static final CharSequenceTranslator ESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,8,0,0,0,0,6,0,4,0,18,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,0,0,0,0,0,0,0,0,0,0,58,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,6,0,0,0,0,3,0,2,0,11,59,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,57,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,0,0,0,1,2,0,0,0,0,3,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,        return ESCAPE_HTML4.translate(input);,0,0,0,1,2,1,0,0,0,4,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,        if (input == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,8,6,0,2,4,0,4,4,0,22,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);",0,0,0,1,2,0,12,0,0,12,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,            return writer.toString();,0,0,0,1,2,1,8,0,0,8,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,        if (input == null) {,4,1,0,1,3,0,0,2,0,8,20,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,        int len = input.length();,2,0,0,1,2,0,4,0,0,6,25,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,        while (pos < len) {,4,1,0,1,3,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);",0,0,0,1,2,0,0,0,0,3,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,            if (consumed == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));",0,0,0,3,6,0,0,0,0,9,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,88,                out.write(c);,0,0,0,1,2,0,6,0,0,6,13,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,                pos+= c.length;,6,0,0,0,0,0,0,0,0,7,15,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,                continue;,2,0,0,0,0,0,4,0,0,6,9,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,            for (int pt = 0; pt < consumed; pt++) {,8,1,0,1,3,0,0,0,0,10,39,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",0,0,0,2,4,0,0,0,0,6,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,        },4,0,0,0,1,0,0,2,0,8,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,    },4,1,0,0,1,3,2,0,0,12,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,        return new AggregateTranslator(newArray);,0,0,0,1,2,1,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,0,0,0,1,3,0,0,0,0,4,67,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,        this.translators = ArrayUtils.clone(translators);,8,0,0,1,2,0,10,0,0,19,49,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,    },2,0,0,0,1,0,4,0,0,6,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);",14,3,0,1,2,0,10,0,0,28,55,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,                return consumed;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,4,2,0,9,58,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,63,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,94,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",0,0,0,1,2,0,0,0,0,3,101,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",0,0,0,1,2,0,0,0,0,3,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,72,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",0,0,0,1,2,0,0,0,0,3,57,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,74,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",4,0,0,1,2,0,4,2,0,10,53,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,75,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,77,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,78,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,84,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,0,0,0,0,2,101,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,0,0,2,5,0,4,2,0,8,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,87,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,0,0,0,1,2,0,0,0,0,3,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,6,2,0,11,43,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,91,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,89,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,2,0,0,4,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,120,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,0,0,0,3,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");",6,0,0,1,2,0,0,0,0,6,29,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");",2,0,0,1,2,0,2,0,0,6,31,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,126,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,0,0,0,3,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,112,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,    },4,1,0,0,1,0,0,0,0,5,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));",4,0,0,2,4,1,10,0,0,14,90,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,        if (toClass == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,        if (autoboxing) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,4,1,0,3,7,0,8,4,0,18,50,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,630,                cls = primitiveToWrapper(cls);,0,0,0,1,2,0,0,0,0,3,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,                if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,3,7,0,8,0,0,10,50,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,        if (cls.equals(toClass)) {,6,1,0,2,5,0,14,0,0,22,26,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,        if (cls.isPrimitive()) {,0,0,0,2,5,0,4,0,0,4,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,6,0,0,6,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,        if (cls != null && cls.isPrimitive()) {,2,2,0,2,5,0,4,0,0,8,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,            convertedClass = primitiveWrapperMap.get(cls);,0,0,0,1,2,0,0,0,0,3,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,        return convertedClass;,0,0,0,0,0,1,0,0,0,1,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,    public static final int[] EMPTY_INT_ARRAY = new int[0];,8,1,0,2,4,3,0,0,0,12,55,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,1,0,2,4,3,0,4,0,12,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,81,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,85,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,2,0,0,2,71,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,4,0,0,2,4,0,0,0,0,5,61,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,6,1,0,2,4,4,0,0,0,11,67,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,117,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,121,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,        return array.clone();,4,1,0,1,2,1,12,0,0,17,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);",0,0,0,1,2,1,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,        if (toType == null || toType instanceof Class<?>) {,0,0,0,1,3,0,0,0,0,4,51,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);",2,0,0,2,4,1,4,2,0,8,45,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);",2,2,0,2,4,1,4,0,0,9,69,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,        if (type == null) {,0,0,0,1,3,0,0,0,0,4,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,            return toClass == null || !toClass.isPrimitive();,4,2,0,1,2,1,4,0,0,11,49,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,        if (toClass == null) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,121,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,125,        if (toClass.equals(type)) {,0,0,0,2,5,0,6,0,0,6,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,            return true;,0,0,0,0,0,1,12,0,0,12,12,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,        if (type instanceof Class<?>) {,2,0,0,1,3,0,0,2,0,4,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);",2,0,0,2,4,1,6,2,0,10,57,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,        if (type instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,40,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);",2,0,0,3,6,1,6,2,0,10,67,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,        if (type instanceof TypeVariable<?>) {,2,0,0,1,3,0,0,2,0,4,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,        if (type instanceof GenericArrayType) {,0,0,0,1,3,0,0,0,0,4,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,            return toClass.equals(Object.class),0,0,0,1,2,1,0,0,0,4,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,            return true;,6,4,0,0,0,1,4,0,0,14,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,        if (type == null) {,2,1,0,1,3,0,4,0,0,7,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,        if (toGenericArrayType == null) {,4,1,0,1,3,0,12,0,0,18,33,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,        if (toGenericArrayType.equals(type)) {,2,0,0,2,5,0,6,0,0,8,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,            return true;,6,0,0,0,0,1,0,0,0,7,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,        Type toComponentType = toGenericArrayType.getGenericComponentType();,2,0,0,1,2,0,4,2,0,8,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,        if (type instanceof Class<?>) {,0,0,0,1,3,0,6,0,0,7,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,            Class<?> cls = (Class<?>) type;,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,            return cls.isArray(),0,0,0,1,2,1,4,0,0,5,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,        if (type instanceof GenericArrayType) {,2,0,0,1,3,0,0,2,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),",0,0,0,3,7,1,0,0,0,11,72,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,            WildcardType wildcardType = (WildcardType) type;,8,0,0,1,2,0,6,4,0,18,48,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,            Type[] upperBounds = getImplicitUpperBounds(wildcardType);,2,0,0,2,4,0,4,2,0,8,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);,2,0,0,2,4,0,4,2,0,8,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,            for (Type toBound : toUpperBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",2,2,0,1,2,0,4,0,0,9,59,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,                for (Type bound : upperBounds) {,10,0,0,1,3,0,0,4,0,15,32,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {",0,0,0,2,5,0,8,0,0,9,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,371,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,            for (Type toBound : toLowerBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",4,0,0,1,2,0,12,2,0,19,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,                for (Type bound : lowerBounds) {,4,0,0,1,3,0,0,2,0,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,385,"                    if (!isAssignable(toBound, bound, typeVarAssigns)) {",0,0,0,2,5,0,8,0,0,9,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,386,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,391,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,408,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,        Class<?> cls = getRawType(parameterizedType);,14,2,0,1,2,0,10,4,0,30,45,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {",0,0,0,2,5,0,6,0,0,7,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,        Type ownerType = parameterizedType.getOwnerType();,10,4,0,1,2,0,10,2,0,26,50,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,        if (ownerType instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,617,"            typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",0,0,0,1,2,0,0,0,0,3,81,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,        Type[] typeArgs = parameterizedType.getActualTypeArguments();,6,3,0,2,4,0,4,4,0,19,61,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,        TypeVariable<?>[] typeParams = cls.getTypeParameters();,2,0,0,2,4,0,4,2,0,8,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,        for (int i = 0; i < typeParams.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,            Type typeArg = typeArgs[i];,2,0,1,1,2,0,0,2,0,8,27,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns",0,0,1,2,5,0,12,0,0,16,86,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,633,        if (toClass.equals(cls)) {,0,0,0,2,5,0,6,0,0,6,26,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,            return typeVarAssigns;,0,0,0,0,0,1,0,0,0,1,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,660,            if (toClass.isPrimitive()) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,            cls = ClassUtils.primitiveToWrapper(cls);,8,1,0,1,2,0,0,0,0,10,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,        if (superClass.isInterface()) {,2,0,0,2,5,0,4,0,0,6,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,            Type[] interfaceTypes = cls.getGenericInterfaces();,2,0,0,2,4,0,4,2,0,8,51,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,            Type genericInterface = null;,4,0,0,0,0,0,4,2,0,11,29,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,            for (Type midType : interfaceTypes) {,4,0,0,1,3,0,0,2,0,6,37,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,                Class<?> midClass = null;,2,0,0,0,0,0,0,2,0,4,25,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,                if (midType instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,                    midClass = getRawType((ParameterizedType) midType);,4,0,0,2,4,0,2,2,0,9,51,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,820,"                if (isAssignable(midClass, superClass)",0,0,0,1,3,0,0,0,0,4,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,                    genericInterface = midType;,8,3,0,0,0,0,0,0,0,12,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,            if (genericInterface != null) {,2,1,0,1,3,0,0,0,0,3,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,                return genericInterface;,2,0,0,0,0,1,0,0,0,2,24,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,986,        Type rawType = parameterizedType.getRawType();,0,0,0,1,2,0,0,0,0,3,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,        if (!(rawType instanceof Class<?>)) {,2,0,0,2,5,0,0,2,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,        return (Class<?>) rawType;,2,0,0,1,2,1,8,2,0,12,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,    public LookupTranslator(CharSequence[]... lookup) {,4,0,0,2,5,1,0,2,0,7,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,        int _shortest = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,        int _longest = 0;,8,1,0,0,0,0,8,0,0,19,17,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,        if (lookup != null) {,6,4,0,1,3,0,8,0,0,18,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,            for (CharSequence[] seq : lookup) {,4,0,0,2,5,0,0,2,0,6,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,47,                int sz = seq[0].length();,0,0,0,2,4,0,0,0,0,6,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,                    _shortest = sz;,4,0,0,0,0,0,0,0,0,5,15,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,        shortest = _shortest;,0,0,0,0,0,0,0,0,0,0,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,        longest = _longest;,0,0,0,0,0,0,0,0,0,0,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,    },2,0,1,0,1,0,0,0,0,4,1,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,        for (int i = max; i >= shortest; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,0,6,2,0,15,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,            CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,0,6,2,0,10,44,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,                out.write(result.toString());,2,0,0,2,4,0,8,0,0,11,29,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,78,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,public abstract class CodePointTranslator extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,    public NumericEntityUnescaper(OPTION... options) {,6,1,0,1,3,1,0,2,0,10,50,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,        if(options.length > 0) {,4,1,0,1,3,0,0,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));,8,0,0,4,8,0,14,4,0,27,88,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,    },0,0,0,0,1,0,0,0,0,1,1,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {",0,0,0,1,3,0,0,0,0,4,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,        this.below = below;,12,0,0,0,0,0,0,4,0,17,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,        this.above = above;,2,0,0,0,0,0,0,0,0,2,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,        this.between = between;,4,0,0,0,0,0,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,55,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",4,0,0,1,2,1,0,2,0,7,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,public class OctalUnescaper extends CharSequenceTranslator {,6,0,0,0,1,1,0,2,0,9,60,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,    private static int OCTAL_MAX = 377;,0,0,0,0,0,0,0,0,0,0,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,0,0,0,3,6,0,0,0,0,9,78,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,    private static final String[][] BASIC_ESCAPE = {,4,0,0,2,5,3,0,2,0,9,48,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,0,0,0,3,6,0,0,0,0,9,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,0,0,0,2,5,0,0,0,0,7,58,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,76,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,        String[][] newarray = new String[array.length][2];,6,0,0,4,8,0,0,4,0,10,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,        for(int i = 0; i<array.length; i++) {,12,1,0,1,3,0,8,0,0,23,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,0,0,0,9,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,422,        return newarray;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,30,public class UnicodeUnescaper extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,87,        if (toType instanceof GenericArrayType) {,2,0,0,1,3,0,0,2,0,4,41,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,91,        if (toType instanceof WildcardType) {,4,0,0,1,3,0,0,2,0,6,37,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,92,"            return isAssignable(type, (WildcardType) toType, typeVarAssigns);",2,0,0,2,4,1,6,2,0,10,65,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,230,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,338,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,344,        if (toWildcardType == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,349,        if (toWildcardType.equals(type)) {,0,0,0,2,5,0,6,0,0,6,34,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,353,        Type[] toUpperBounds = getImplicitUpperBounds(toWildcardType);,0,0,0,2,4,0,0,0,0,6,62,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,354,        Type[] toLowerBounds = getImplicitLowerBounds(toWildcardType);,2,0,0,2,4,0,8,2,0,12,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,356,        if (type instanceof WildcardType) {,0,0,0,1,3,0,0,0,0,4,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,394,        for (Type toBound : toUpperBounds) {,4,0,0,1,3,0,0,2,0,6,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,397,"            if (!isAssignable(type, substituteTypeVariables(toBound, typeVarAssigns),",0,0,0,1,4,0,10,0,0,11,73,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,403,        for (Type toBound : toLowerBounds) {,4,0,0,1,3,0,0,2,0,6,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,406,"            if (!isAssignable(substituteTypeVariables(toBound, typeVarAssigns), type,",0,0,0,1,4,0,0,0,0,5,73,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,412,        return true;,2,0,0,0,0,1,0,0,0,5,12,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,472,        if (type instanceof TypeVariable<?> && typeVarAssigns != null) {,4,2,0,1,3,0,0,2,0,8,64,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,483,        return type;,2,0,0,0,0,1,0,0,0,2,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,534,"        return getTypeArguments(type, toClass, null);",0,0,0,1,2,1,6,0,0,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,639,"        return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);",2,0,0,2,4,1,12,0,0,14,85,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,834,        return cls.getGenericSuperclass();,0,0,0,1,2,1,0,0,0,4,34,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,877,        if (bounds.length < 2) {,4,1,0,1,3,0,0,0,0,5,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,878,            return bounds;,0,0,0,0,0,1,0,0,0,1,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,927,        Type[] bounds = wildcardType.getUpperBounds();,6,0,0,2,4,0,8,2,0,17,46,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,929,        return bounds.length == 0 ? new Type[] { Object.class } : normalizeUpperBounds(bounds);,0,0,0,3,6,1,0,0,0,10,87,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,942,        Type[] bounds = wildcardType.getLowerBounds();,0,0,0,2,4,0,0,0,0,6,46,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,944,        return bounds.length == 0 ? new Type[] { null } : bounds;,8,1,0,2,4,1,6,2,0,19,57,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,83,        if (toType instanceof ParameterizedType) {,4,0,0,1,3,0,0,2,0,6,42,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,84,"            return isAssignable(type, (ParameterizedType) toType, typeVarAssigns);",2,0,0,2,4,1,6,2,0,10,70,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,181,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,187,        if (toParameterizedType == null) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,192,        if (toParameterizedType.equals(type)) {,0,0,0,2,5,0,0,0,0,7,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,197,        Class<?> toClass = getRawType(toParameterizedType);,2,0,0,1,2,0,4,2,0,8,51,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,200,"        Map<TypeVariable<?>, Type> fromTypeVarAssigns = getTypeArguments(type, toClass, null);",0,0,0,1,2,0,0,0,0,3,86,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,203,        if (fromTypeVarAssigns == null) {,2,1,0,1,3,0,0,0,0,3,33,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,210,        if (fromTypeVarAssigns.isEmpty()) {,0,0,0,2,5,0,4,0,0,4,35,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,215,"        Map<TypeVariable<?>, Type> toTypeVarAssigns = getTypeArguments(toParameterizedType,",2,0,0,0,1,0,4,6,0,12,83,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,2,0,0,1,2,0,4,2,0,8,34,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,0,0,0,2,4,0,0,0,0,6,58,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,226,            if (fromTypeArg != null,4,2,0,0,1,0,10,0,0,16,23,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,232,        },4,1,0,0,1,0,0,0,0,5,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,234,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,            return createInteger(str);,2,0,0,1,2,1,8,2,0,12,26,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,                dec = str.substring(decPos + 1);,0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,                if (expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);",4,0,0,1,2,3,6,4,0,18,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,0,12,2,0,23,65,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,0,0,0,3,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,                            return d;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,            if (dec == null && exp == null) {,6,3,0,1,3,0,0,0,0,10,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,                } catch (NumberFormatException nfe) { // NOPMD,4,1,0,1,4,0,0,2,0,7,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,                    Float f = createFloat(str);,4,0,0,1,2,0,4,2,0,10,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,                        return f;,6,0,0,0,0,7,0,4,0,16,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,        if (str == null) {,2,0,0,1,3,3,0,4,0,9,18,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,        char lastChar = str.charAt(str.length() - 1);,4,1,0,2,4,2,8,4,0,19,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,            dec = null;,4,0,0,0,0,0,4,0,0,9,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,491,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,                exp = null;,2,1,0,0,0,0,4,0,0,8,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,497,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,3,10,0,0,19,55,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,            switch (lastChar) {,12,1,0,1,3,3,2,2,0,22,19,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,                    if (dec == null,4,2,1,0,1,0,4,0,0,12,15,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,605,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,        for (int i = str.length() - 1; i >= 0; i--) {,14,2,0,2,5,0,4,2,0,24,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,610,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,627,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,630,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,643,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,646,        return Double.valueOf(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,660,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,664,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,680,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1287,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1290,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1291,            if (!Character.isDigit(str.charAt(i))) {,4,0,0,3,7,0,10,0,0,16,40,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1295,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,        return cs == null || cs.length() == 0;,4,6,0,1,2,1,12,0,0,24,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,223,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,226,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,227,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,54,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,704,    private static boolean sunAvailable = false;,2,0,0,0,0,2,0,2,0,8,44,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,705,    private static Method  sunDecomposeMethod = null;,0,0,0,0,0,0,0,0,0,0,49,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,708,    private static boolean java6Available = false;,4,0,0,0,0,2,0,6,0,14,46,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,709,    private static Method  java6NormalizeMethod = null;,6,1,0,0,0,2,4,4,0,17,51,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,710,    private static Object  java6NormalizerFormNFD = null;,0,0,0,0,0,0,0,0,0,0,53,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,711,    private static final Pattern java6Pattern = sunPattern;,0,0,0,0,0,0,4,0,0,5,55,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,717,            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,84,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,10,2,0,15,73,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",",4,1,0,0,1,0,4,0,0,11,61,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,724,            java6Available = true;,2,0,0,0,0,0,0,0,0,4,22,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",",4,0,0,0,1,0,4,0,0,10,59,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,744,        } catch (NoSuchMethodException e) {,0,0,0,1,4,0,0,0,0,5,35,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,745,            sunAvailable = false;,2,0,0,0,0,0,0,0,0,4,21,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,750,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,6,1,0,1,2,3,10,2,0,23,54,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,35,    public static final Long LONG_ONE = Long.valueOf(1L);,2,0,0,1,2,3,4,2,0,11,53,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,37,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,2,0,0,1,2,3,4,2,0,12,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,41,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,4,0,0,1,2,3,8,4,0,19,61,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,43,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,0,0,0,1,2,0,0,0,0,3,68,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,45,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,47,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,2,0,0,2,4,3,4,2,0,11,63,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,4,2,0,12,70,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,10,2,0,17,60,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,53,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,4,1,0,1,2,3,10,4,0,23,62,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,2,0,0,1,2,3,4,2,0,11,61,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,0,0,0,1,2,0,0,0,0,3,68,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,0,0,0,1,2,0,0,0,0,3,59,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,2,0,0,1,2,3,4,2,0,11,58,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,67,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,2,0,0,1,2,3,4,2,0,12,65,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,        return ESCAPE_XML.translate(input);,0,0,0,1,2,1,14,0,0,14,35,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,        return 0;,2,0,0,0,0,4,0,4,0,9,9,2,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,        if (index + longest > input.length()) {,4,2,0,2,5,0,14,0,0,21,39,3,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,        for (int i = max; i >= shortest; i--) {,14,1,0,1,3,0,0,0,0,16,39,1,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);",0,0,0,1,2,0,0,0,0,3,58,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,            CharSequence result = lookupMap.get(subSeq);,0,0,0,1,2,0,0,0,0,3,44,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,            if (result != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,46,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,50,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,54,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,58,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,62,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,66,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,70,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,74,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,78,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,82,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,6,0,0,2,4,7,2,6,0,22,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,86,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,90,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,4,1,0,2,4,3,0,0,0,8,64,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,94,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,98,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,102,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,106,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,4,2,0,17,67,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,110,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,4,0,0,2,4,6,4,6,0,20,74,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,114,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,118,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,317,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,320,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,268,    static class CsvUnescaper extends CharSequenceTranslator {,4,1,0,0,1,1,0,2,0,8,58,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,0,0,1,2,6,8,2,0,21,70,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,273,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,114,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,0,0,0,2,4,0,0,0,0,6,87,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,115,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,116,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,117,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,5,41,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,55,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,0,0,0,1,2,0,0,0,0,3,73,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,4,0,0,0,0,6,2,2,0,14,59,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,0,0,0,1,2,0,0,0,0,3,77,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,4,0,0,1,3,1,0,2,0,7,67,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,150,        private static final char[] CSV_SEARCH_CHARS = ,4,0,0,1,2,3,6,0,0,13,46,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,4,0,0,3,6,6,6,2,0,19,70,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,378,    private static final String[][] APOS_ESCAPE = {,6,0,0,2,5,3,6,2,0,17,47,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },4,0,0,5,10,3,8,2,0,16,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,84,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },2,0,0,5,10,1,0,4,0,6,96,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },10,0,0,5,10,3,6,2,0,20,76,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },4,0,0,5,10,6,12,4,0,26,70,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,74,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,92,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,417,        String[][] newarray = new String[array.length][2];,0,0,0,4,8,0,0,0,0,12,50,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,418,        for(int i = 0; i<array.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,0,0,0,9,29,6,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",0,0,0,1,2,0,0,0,0,3,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,8,0,0,1,2,0,6,2,0,18,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);",0,0,0,1,2,0,0,0,0,3,51,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",8,3,0,1,2,0,12,2,0,25,61,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,            if (prior != null) {,2,1,0,1,3,0,0,0,0,3,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,        return value;,2,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,4,2,0,1,3,0,0,0,0,6,20,3,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",10,0,0,1,2,0,0,2,0,13,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",4,1,0,2,4,0,8,0,0,13,52,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1241,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1248,            buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1249,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,4,0,0,0,0,0,0,0,0,5,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,            if (daylight) {,2,0,0,1,3,0,16,0,0,18,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,4,0,0,0,0,0,6,0,0,12,20,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,            mStyle = style;,6,1,0,0,0,0,0,0,0,8,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1490,            mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1491,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,0,0,0,3,6,1,0,0,0,10,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,            mTimeZone = timeZone;,4,0,1,0,0,0,4,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",4,1,0,1,2,0,8,0,0,15,63,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",2,0,0,1,2,0,8,0,0,12,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1392,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,12,0,0,12,56,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,498,                    rule = TwoDigitYearField.INSTANCE;,0,0,0,0,0,0,0,0,0,0,34,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,500,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,503,"                    rule = new TextField(Calendar.MONTH, months);",8,0,0,1,2,0,0,2,0,11,45,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",10,0,0,1,2,3,2,2,0,19,50,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,547,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1024,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1062,            } else if (value < 100) {,0,0,0,1,4,0,0,0,0,5,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1063,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1064,                buffer.append((char)(value % 10 + '0'));,8,2,0,3,6,0,18,0,0,30,40,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1226,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1227,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1220,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,4,1,0,1,2,2,0,4,0,11,66,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1233,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1153,                for (int i = mSize; --i >= 2; ) {,6,1,0,1,3,0,0,0,0,8,33,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1154,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1156,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1157,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1053,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1054,        },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1060,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1068,        },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1096,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",6,2,0,2,4,0,8,0,0,16,51,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1097,        },2,0,0,0,1,0,6,4,0,12,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1103,            if (value < 10) {,4,1,0,1,3,3,0,4,0,12,17,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1104,                buffer.append((char)(value + '0'));,2,1,0,3,6,0,4,0,0,8,35,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1109,        },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,509,                    rule = UnpaddedMonthField.INSTANCE;,0,0,0,0,0,0,0,0,0,0,35,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,511,                break;,2,0,0,0,0,0,6,4,0,12,6,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1082,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1083,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1075,        static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();,0,0,0,1,2,0,0,0,0,3,68,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1089,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,534,"                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);",6,0,0,1,2,0,8,0,0,15,56,3,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,535,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,                isHex = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,38,        int seqEnd = input.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.44444,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,6,7,0,3,7,0,10,0,0,25,88,4,0.44444,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,89,"                out.write(Character.toChars(Character.codePointAt(input, i)));",4,0,0,3,6,0,16,4,0,24,62,3,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,14,2,0,22,12,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,8,0,0,1,2,0,8,0,0,16,40,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,4,1,0,1,3,0,0,0,0,5,21,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,            return EMPTY;,2,1,0,0,0,1,0,0,0,4,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,116,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,        for (int i = startIndex; i < endIndex; i++) {,2,2,0,1,3,0,6,0,0,12,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,0,6,0,0,8,22,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,2,1,1,2,5,1,0,2,0,16,23,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,            return EMPTY;,4,0,0,0,0,4,0,0,0,7,13,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,        if (array == null) {,4,1,0,1,3,3,0,4,0,12,20,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3372,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,        int noOfItems = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,40,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3379,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,0,0,0,7,14,0,0,0,0,21,133,4,0.25,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3385,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3386,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3389,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3393,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",0,0,0,1,2,0,0,0,0,3,72,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,704,    private static boolean sunAvailable = false;,2,0,0,0,0,2,0,0,0,5,44,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,705,    private static Method  sunDecomposeMethod = null;,2,0,0,0,0,2,0,2,0,6,49,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,708,    private static boolean java6Available = false;,4,2,0,0,0,0,10,0,0,16,46,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,709,    private static Method  java6NormalizeMethod = null;,2,0,0,0,0,2,0,2,0,6,51,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,710,    private static Object  java6NormalizerFormNFD = null;,0,0,0,0,0,0,0,0,0,0,53,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,711,    private static final Pattern java6Pattern = sunPattern;,0,0,0,0,0,0,0,0,0,0,55,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,717,            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",8,1,0,2,4,0,6,4,0,21,84,1,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",",2,0,0,0,1,0,4,0,0,8,61,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,724,            java6Available = true;,0,0,0,0,0,0,0,0,0,0,22,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",",2,0,0,0,1,0,4,0,0,8,59,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,744,        } catch (NoSuchMethodException e) {,2,0,0,1,4,0,0,2,0,4,35,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,745,            sunAvailable = false;,0,0,0,0,0,0,0,0,0,0,21,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,747,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",0,0,0,1,2,0,0,0,0,3,73,4,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,            if (spot.equals(endFinal)) {,2,0,0,2,5,0,12,2,0,16,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,    static class DateIterator implements Iterator<Calendar> {,2,0,0,0,1,1,0,4,0,7,57,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,158,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,    },2,1,0,0,1,0,0,0,0,3,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,1,0,1,3,0,0,0,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,177,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,        cal1.setTime(date1);,2,0,0,1,2,3,6,4,0,15,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,4,0,0,1,2,3,4,6,0,17,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,182,        cal2.setTime(date2);,2,0,0,1,2,0,12,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,183,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,201,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,203,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,8,3,0,2,5,1,8,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,221,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,222,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,224,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,239,        if (cal1 == null || cal2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,240,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,242,        return cal1.getTime().getTime() == cal2.getTime().getTime();,2,1,0,4,8,4,14,2,0,23,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,        if (cal1 == null || cal2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,260,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,0,0,0,2,5,1,0,0,0,8,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,288,"        return parseDateWithLeniency(str, parsePatterns, true);",0,0,0,1,2,1,6,0,0,7,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,308,"        return parseDateWithLeniency(str, parsePatterns, false);",0,0,0,1,2,1,6,0,0,7,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,328,        if (str == null || parsePatterns == null) {,4,3,0,1,3,0,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,329,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",2,0,0,1,2,3,0,4,0,9,73,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,332,        SimpleDateFormat parser = new SimpleDateFormat();,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,333,        parser.setLenient(lenient);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,334,        ParsePosition pos = new ParsePosition(0);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,335,        for (int i = 0; i < parsePatterns.length; i++) {,10,1,0,1,3,0,0,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,337,            String pattern = parsePatterns[i];,2,0,1,1,2,0,0,2,0,8,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,340,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,3,7,0,2,0,0,7,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,341,"                pattern = pattern.substring(0, pattern.length() - 1);",2,1,0,2,4,0,8,0,0,12,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,344,            parser.applyPattern(pattern);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,345,            pos.setIndex(0);,0,0,0,1,2,0,4,0,0,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,347,            String str2 = str;,10,1,0,0,0,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,349,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,3,7,0,10,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,350,"                str2 = str.replaceAll(""([-+][0-9][0-9]):([0-9][0-9])$"", ""$1$2""); ",2,0,0,8,16,0,4,0,0,9,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,353,"            Date date = parser.parse(str2, pos);",2,0,0,1,2,0,20,2,0,24,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,354,            if (date != null && pos.getIndex() == str2.length()) {,2,3,0,3,7,0,8,0,0,13,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,355,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,358,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,372,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,14,0,0,18,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,386,"        return add(date, Calendar.MONTH, amount);",4,0,0,1,2,1,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,400,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",6,1,0,1,2,1,16,0,0,23,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,414,"        return add(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,428,"        return add(date, Calendar.HOUR_OF_DAY, amount);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,442,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,456,"        return add(date, Calendar.SECOND, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,470,"        return add(date, Calendar.MILLISECOND, amount);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,485,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,486,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,488,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,10,2,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,489,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,490,"        c.add(calendarField, amount);",0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,491,        return c.getTime();,0,0,0,1,2,1,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,506,"        return set(date, Calendar.YEAR, amount);",6,1,0,1,2,1,6,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,521,"        return set(date, Calendar.MONTH, amount);",4,0,0,1,2,1,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,536,"        return set(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,552,"        return set(date, Calendar.HOUR_OF_DAY, amount);",6,0,0,1,2,1,6,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,567,"        return set(date, Calendar.MINUTE, amount);",6,1,0,1,2,1,6,0,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,582,"        return set(date, Calendar.SECOND, amount);",6,0,0,1,2,1,6,0,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,597,"        return set(date, Calendar.MILLISECOND, amount);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,614,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,615,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,618,        Calendar c = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,619,        c.setLenient(false);,0,0,0,1,2,0,4,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,620,        c.setTime(date);,0,0,1,1,2,0,6,2,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,621,"        c.set(calendarField, amount);",18,0,0,1,2,0,18,0,0,36,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,622,        return c.getTime();,0,0,0,1,2,1,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,635,        Calendar c = Calendar.getInstance();,6,0,0,1,2,1,0,0,0,9,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,636,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,637,        return c;,4,0,0,0,0,1,2,4,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,670,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,671,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,673,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,4,2,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,674,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,675,"        modify(gval, field, MODIFY_ROUND);",0,0,0,1,2,0,8,0,0,8,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,676,        return gval.getTime();,6,0,0,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,708,        if (date == null) {,2,2,0,1,3,0,4,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,709,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,0,0,2,0,9,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,711,        Calendar rounded = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,712,"        modify(rounded, field, MODIFY_ROUND);",0,0,0,1,2,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,713,        return rounded;,4,0,0,0,0,1,4,2,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,747,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,748,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,750,        if (date instanceof Date) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,751,"            return round((Date) date, field);",4,0,0,2,4,4,8,4,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,752,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,753,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,755,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,777,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,778,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,780,        Calendar gval = Calendar.getInstance();,8,1,0,1,2,0,8,2,0,21,39,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,781,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,782,"        modify(gval, field, MODIFY_TRUNCATE);",0,0,0,1,2,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,783,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,803,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,804,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,806,        Calendar truncated = (Calendar) date.clone();,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,807,"        modify(truncated, field, MODIFY_TRUNCATE);",0,0,0,1,2,0,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,808,        return truncated;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,832,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,833,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,835,        if (date instanceof Date) {,4,0,0,1,3,1,4,2,0,12,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,836,"            return truncate((Date) date, field);",2,0,0,2,4,1,4,2,0,8,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,837,        } else if (date instanceof Calendar) {,0,0,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,838,"            return truncate((Calendar) date, field).getTime();",4,0,0,3,6,4,6,6,0,19,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,840,"            throw new ClassCastException(""Could not truncate "" + date);",2,1,0,1,2,0,0,2,0,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,863,        if (date == null) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,864,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,866,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,4,2,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,867,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,868,"        modify(gval, field, MODIFY_CEILING);",0,0,0,1,2,0,8,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,869,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,890,        if (date == null) {,2,1,0,1,3,0,0,2,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,891,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,893,        Calendar ceiled = (Calendar) date.clone();,2,1,0,2,4,0,0,0,0,3,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,894,"        modify(ceiled, field, MODIFY_CEILING);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,895,        return ceiled;,2,1,0,0,0,1,4,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,920,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,921,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,923,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,924,"            return ceiling((Date) date, field);",0,0,0,2,4,1,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,925,        } else if (date instanceof Calendar) {,2,1,0,1,4,0,6,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,926,"            return ceiling((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,928,"            throw new ClassCastException(""Could not find ceiling of for type: "" + date.getClass());",0,1,0,2,4,0,4,2,0,8,87,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,942,        if (val.get(Calendar.YEAR) > 280000000) {,16,1,0,2,5,0,4,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,943,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",0,0,0,1,2,0,0,2,0,3,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,946,        if (field == Calendar.MILLISECOND) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,947,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,956,        Date date = val.getTime();,4,0,0,1,2,0,4,2,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,957,        long time = date.getTime();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,958,        boolean done = false;,6,1,0,0,0,0,0,0,0,8,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,961,        int millisecs = val.get(Calendar.MILLISECOND);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,962,        if (MODIFY_TRUNCATE == modType || millisecs < 500) {,6,3,0,1,3,0,0,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,963,            time = time - millisecs;,8,1,0,0,0,0,0,0,0,10,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,965,        if (field == Calendar.SECOND) {,6,1,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,966,            done = true;,2,0,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,970,        int seconds = val.get(Calendar.SECOND);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,971,        if (!done && (MODIFY_TRUNCATE == modType || seconds < 30)) {,0,0,0,2,5,0,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,972,            time = time - (seconds * 1000L);,8,4,0,1,2,0,4,0,0,18,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,974,        if (field == Calendar.MINUTE) {,6,1,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,975,            done = true;,2,0,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,979,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,980,        if (!done && (MODIFY_TRUNCATE == modType || minutes < 30)) {,8,4,0,2,5,0,0,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,981,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,985,        if (date.getTime() != time) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,986,            date.setTime(time);,0,0,0,1,2,0,6,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,987,            val.setTime(date);,2,0,0,1,2,3,12,2,0,19,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,991,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,992,        for (int i = 0; i < fields.length; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,993,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,994,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,996,                    if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {,12,4,0,2,5,3,0,12,0,31,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,997,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1001,                            if (val.get(Calendar.DATE) == 1) {,2,0,0,2,5,0,4,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1002,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1004,"                                val.add(Calendar.DATE, -15);",4,0,0,1,2,0,4,0,0,9,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1005,"                                val.add(Calendar.MONTH, 1);",4,0,0,1,2,0,8,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1008,                        } else if (field == Calendar.AM_PM) {,6,1,0,1,4,0,4,0,0,12,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1012,                            if (val.get(Calendar.HOUR_OF_DAY) == 0) {,0,0,0,2,5,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1013,"                                val.add(Calendar.HOUR_OF_DAY, 12);",6,0,0,1,2,0,4,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1015,"                                val.add(Calendar.HOUR_OF_DAY, -12);",4,0,0,1,2,0,4,0,0,9,35,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1016,"                                val.add(Calendar.DATE, 1);",8,0,0,1,2,0,4,0,0,13,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1022,"                            val.add(fields[i][0], 1);",0,0,1,3,6,0,4,0,0,8,25,16,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1025,                    return;,0,0,1,0,0,1,0,0,0,4,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1029,            int offset = 0;,2,0,0,0,0,0,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1030,            boolean offsetSet = false;,2,0,0,0,0,0,6,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1032,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1034,                    if (fields[i][0] == Calendar.DATE) {,4,1,1,3,7,0,8,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1038,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,12,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1041,                        if (offset >= 15) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1042,                            offset -= 15;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1045,                        roundUp = offset > 7;,8,4,0,0,0,0,0,0,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1046,                        offsetSet = true;,2,0,0,0,0,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1050,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1053,                        offset = val.get(Calendar.HOUR_OF_DAY);,6,0,0,1,2,0,4,0,0,11,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1054,                        if (offset >= 12) {,4,2,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1055,                            offset -= 12;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1057,                        roundUp = offset >= 6;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1058,                        offsetSet = true;,4,1,0,0,0,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1062,            if (!offsetSet) {,2,0,0,1,3,0,0,2,0,6,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1063,                int min = val.getActualMinimum(fields[i][0]);,0,0,0,3,6,0,0,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1064,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1066,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1068,                roundUp = offset > ((max - min) / 2);,10,3,0,2,4,0,0,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1071,            if (offset != 0) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1072,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,20,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1075,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1105,        if (focus == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1106,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1108,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1109,        gval.setTime(focus);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1110,"        return iterator(gval, rangeStyle);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1138,        if (focus == null) {,6,4,0,1,3,0,0,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1139,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1141,        Calendar start = null;,2,0,0,0,0,0,0,2,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1142,        Calendar end = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1143,        int startCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1144,        int endCutoff = Calendar.SATURDAY;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1145,        switch (rangeStyle) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1149,"                start = truncate(focus, Calendar.MONTH);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1151,                end = (Calendar) start.clone();,0,0,0,2,4,0,0,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1152,"                end.add(Calendar.MONTH, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1153,"                end.add(Calendar.DATE, -1);",6,0,0,1,2,0,4,0,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1155,                if (rangeStyle == RANGE_MONTH_MONDAY) {,4,1,0,1,3,0,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1156,                    startCutoff = Calendar.MONDAY;,8,0,0,0,0,0,0,0,0,9,30,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1157,                    endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1165,"                start = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1166,"                end = truncate(focus, Calendar.DATE);",8,0,0,1,2,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1167,                switch (rangeStyle) {,2,0,0,1,3,0,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1170,                        break;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1172,                        startCutoff = Calendar.MONDAY;,12,3,0,0,0,0,0,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1173,                        endCutoff = Calendar.SUNDAY;,2,0,0,0,0,1,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1174,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1176,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,6,0,0,13,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1177,                        endCutoff = startCutoff - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1178,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1180,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,6,1,0,1,2,0,4,0,0,12,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1181,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,6,1,0,1,2,0,4,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1184,                break;,4,3,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1186,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",0,0,0,1,2,0,0,0,0,3,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1188,        if (startCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1189,            startCutoff += 7;,2,0,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1191,        if (startCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1192,            startCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1194,        if (endCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1195,            endCutoff += 7;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1197,        if (endCutoff > Calendar.SATURDAY) {,2,0,0,1,3,1,0,2,0,6,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1198,            endCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1200,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,6,1,0,2,5,0,4,0,0,11,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1201,"            start.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1203,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,11,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1204,"            end.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1206,"        return new DateIterator(start, end);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1229,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1230,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1232,        if (focus instanceof Date) {,2,0,0,1,3,0,0,2,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1233,"            return iterator((Date) focus, rangeStyle);",6,0,0,2,4,1,4,2,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1234,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1235,"            return iterator((Calendar) focus, rangeStyle);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1237,"            throw new ClassCastException(""Could not iterate based on "" + focus);",4,4,0,1,2,0,4,2,0,15,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1275,"        return getFragment(date, fragment, Calendar.MILLISECOND);    ",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1315,"        return getFragment(date, fragment, Calendar.SECOND);",4,0,0,1,2,1,6,0,0,10,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1355,"        return getFragment(date, fragment, Calendar.MINUTE);",4,0,0,1,2,1,6,0,0,10,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1395,"        return getFragment(date, fragment, Calendar.HOUR_OF_DAY);",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1435,"        return getFragment(date, fragment, Calendar.DAY_OF_YEAR);",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1475,"    return getFragment(calendar, fragment, Calendar.MILLISECOND);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1514,"        return getFragment(calendar, fragment, Calendar.SECOND);",6,0,0,1,2,1,6,0,0,12,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1554,"        return getFragment(calendar, fragment, Calendar.MINUTE);",4,0,0,1,2,1,6,0,0,10,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1594,"        return getFragment(calendar, fragment, Calendar.HOUR_OF_DAY);",2,0,0,1,2,1,0,0,0,2,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1636,"        return getFragment(calendar, fragment, Calendar.DAY_OF_YEAR);",4,0,0,1,2,1,6,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1651,        if(date == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1652,"            throw  new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1654,        Calendar calendar = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1655,        calendar.setTime(date);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1656,"        return getFragment(calendar, fragment, unit);",2,1,0,1,2,1,8,0,0,11,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1671,        if(calendar == null) {,2,1,0,1,3,0,8,0,0,11,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1672,"            throw  new IllegalArgumentException(""The date must not be null""); ",8,1,0,1,2,0,8,4,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1674,        long millisPerUnit = getMillisPerUnit(unit);,2,0,0,1,2,0,4,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1675,        long result = 0;,4,2,0,0,0,0,4,0,0,10,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1678,        switch (fragment) {,4,1,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1680,                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1681,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1683,                result += (calendar.get(Calendar.DAY_OF_MONTH) * MILLIS_PER_DAY) / millisPerUnit;,0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1687,        switch (fragment) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1695,                result += (calendar.get(Calendar.HOUR_OF_DAY) * MILLIS_PER_HOUR) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1698,                result += (calendar.get(Calendar.MINUTE) * MILLIS_PER_MINUTE) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1701,                result += (calendar.get(Calendar.SECOND) * MILLIS_PER_SECOND) / millisPerUnit;,12,2,0,2,4,0,10,0,0,26,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1704,                result += (calendar.get(Calendar.MILLISECOND) * 1) / millisPerUnit;,8,2,0,2,4,0,4,0,0,15,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1705,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1706,            case Calendar.MILLISECOND: break;//never useful,6,0,0,0,0,0,4,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1707,"                default: throw new IllegalArgumentException(""The fragment "" + fragment + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,94,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1709,        return result;,2,0,0,0,0,1,8,4,0,14,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1726,"        return truncatedCompareTo(cal1, cal2, field) == 0;",0,0,0,1,2,1,0,0,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1743,"        return truncatedCompareTo(date1, date2, field) == 0;",0,1,0,1,2,1,8,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1761,"        Calendar truncatedCal1 = truncate(cal1, field);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1762,"        Calendar truncatedCal2 = truncate(cal2, field);",2,0,0,1,2,0,6,2,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1763,        return truncatedCal1.compareTo(truncatedCal2);,0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1781,"        Date truncatedDate1 = truncate(date1, field);",2,0,0,1,2,0,6,2,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1782,"        Date truncatedDate2 = truncate(date2, field);",0,0,0,1,2,0,6,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1783,        return truncatedDate1.compareTo(truncatedDate2);,0,0,0,1,2,1,6,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1795,        long result = Long.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1796,        switch (unit) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1799,                result = MILLIS_PER_DAY;,4,0,0,0,0,0,8,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1800,                break;,2,0,1,0,0,0,0,0,0,7,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1802,                result = MILLIS_PER_HOUR;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1803,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1805,                result = MILLIS_PER_MINUTE;,4,0,0,0,0,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1806,                break;,2,1,0,0,0,0,6,2,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1808,                result = MILLIS_PER_SECOND;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1809,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1811,                result = 1;,2,0,0,0,0,0,0,0,0,3,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1812,                break;,10,3,0,0,0,0,6,0,0,20,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1813,"            default: throw new IllegalArgumentException(""The unit "" + unit + "" cannot be represented is milleseconds"");",2,1,0,1,2,0,0,2,0,7,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1815,        return result;,2,1,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",4,0,0,1,2,0,12,6,0,24,66,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,0,0,0,0,0,0,0,0,0,0,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,0,0,0,0,3,56,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,0,0,0,0,0,0,0,0,0,0,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,6,0,1,0,0,0,0,0,0,10,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,0,0,0,1,2,1,0,0,0,4,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",4,0,0,2,4,3,16,2,0,25,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,        if (gcd == 1) {,2,1,0,1,3,0,0,0,0,3,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",8,2,0,1,2,1,4,0,0,14,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,594,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,598,        if (k==31) {,2,0,0,1,3,0,0,0,0,2,12,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,4,0,0,8,39,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,613,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,614,                u = -t;,6,0,0,0,0,2,0,0,0,10,7,1,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,616,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,619,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,622,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,623,        return -u*(1<<k); // gcd is u*2^k,0,0,0,1,2,1,0,0,0,4,33,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,585,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,219,            return ZERO; // normalize zero.,0,0,0,0,0,1,0,0,0,1,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,844,        if (obj == this) {,0,0,0,1,3,0,0,0,0,4,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,847,        if (obj instanceof Fraction == false) {,0,0,0,1,3,0,0,0,0,4,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,850,        Fraction other = (Fraction) obj;,4,0,0,1,2,0,0,4,0,8,32,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,851,        return (getNumerator() == other.getNumerator() &&,0,2,0,2,5,1,6,0,0,8,49,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,151,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,155,            numerator = -numerator;,4,0,0,0,0,0,16,0,0,22,23,3,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,156,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,373,        return numerator;,0,0,0,0,0,1,0,0,0,1,17,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,382,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,596,            u/=2; v/=2; k++; // cast out twos.,6,0,0,0,0,0,0,0,0,9,34,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",4,0,0,1,2,3,10,4,0,23,69,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,6,1,0,1,2,3,6,6,0,24,68,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,0,0,1,2,3,0,6,0,16,69,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",4,1,0,1,2,0,0,0,0,5,76,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,        return SPLIT_MATCHER;,4,0,0,0,0,1,4,2,0,10,21,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",4,0,0,1,2,1,6,0,0,10,46,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,418,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,            super();,2,0,0,1,2,0,6,2,0,10,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,            super();,0,0,0,1,2,0,4,0,0,5,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,4,0,0,0,0,0,0,0,0,5,13,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,320,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,2,0,0,1,2,0,4,0,0,7,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,            Arrays.sort(this.chars);,2,0,0,1,2,0,4,0,0,6,24,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,6,0,0,1,2,1,0,10,0,17,57,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,62,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,2,0,0,2,4,0,4,4,0,10,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,0,1,1,2,4,0,0,0,0,5,33,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,8,1,0,0,0,0,4,0,0,14,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,            switch (c[pos.getIndex()]) {,2,0,1,3,7,3,4,0,0,11,28,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,                fmtCount++;,16,0,0,0,0,3,2,2,0,25,11,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,165,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,                int start = pos.getIndex();,2,0,0,1,2,0,6,0,0,10,27,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,167,"                int index = readArgumentIndex(pattern, next(pos));",2,0,0,2,4,0,8,0,0,10,50,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,10,0,0,10,43,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,169,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,                Format format = null;,2,0,0,0,0,0,0,2,0,4,21,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,171,                String formatDescription = null;,4,0,0,0,0,3,2,4,0,14,32,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,172,                if (c[pos.getIndex()] == START_FMT) {,0,0,0,3,7,0,0,0,0,10,37,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,173,"                    formatDescription = parseFormatDescription(pattern,",2,0,0,0,1,0,4,0,0,7,51,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,175,                    format = getFormat(formatDescription);,0,0,0,1,2,0,0,0,0,3,38,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,176,                    if (format == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,180,                foundFormats.add(format);,0,0,0,1,2,0,6,0,0,6,25,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,                foundDescriptions.add(format == null ? null : formatDescription);,4,1,0,1,2,0,4,0,0,9,65,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,                Validate.isTrue(foundFormats.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,49,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,183,                Validate.isTrue(foundDescriptions.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,54,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,184,                if (c[pos.getIndex()] != END_FE) {,2,1,1,3,7,0,4,0,0,9,34,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,190,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,194,        super.applyPattern(stripCustom.toString());,2,0,0,2,4,0,4,0,0,6,43,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,195,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",0,0,0,2,4,0,0,0,0,6,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,        if (containsElements(foundFormats)) {,6,4,0,2,5,0,4,0,0,14,37,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,197,            Format[] origFormats = getFormats();,0,0,0,2,4,0,0,0,0,6,36,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,200,            int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,18,4,0,28,72,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,                Format f = it.next();,2,0,0,1,2,0,4,2,0,8,21,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,                if (f != null) {,2,1,0,1,3,0,8,0,0,11,16,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,204,                    origFormats[i] = f;,2,0,1,1,2,0,0,0,0,7,19,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,            super.setFormats(origFormats);,4,0,0,1,2,0,0,0,0,4,30,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,209,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,6,3,0,1,3,0,10,0,0,19,23,4,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,279,            String args = null;,2,0,0,0,0,0,0,2,0,4,19,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,280,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,281,            if (i > 0) {,4,4,0,1,3,0,8,0,0,16,12,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,            FormatFactory factory = registry.get(name);,2,0,0,1,2,0,6,2,0,10,43,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,286,            if (factory != null) {,2,1,0,1,3,0,6,0,0,10,22,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());",0,0,0,2,4,1,10,0,0,10,50,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,301,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,302,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,303,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,        boolean error = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,305,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,2,2,0,4,9,0,12,0,0,17,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,307,            if (Character.isWhitespace(c)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,8,5,0,3,7,0,4,0,0,17,61,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,317,                    return Integer.parseInt(result.toString());,0,0,0,2,4,1,0,0,0,7,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,323,            error = !Character.isDigit(c);,0,0,0,1,2,0,0,0,0,3,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,324,            result.append(c);,0,0,0,1,2,0,6,0,0,6,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,343,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,344,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,345,        int text = pos.getIndex();,0,0,0,1,2,0,0,0,0,3,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,346,        int depth = 1;,8,0,0,0,0,3,0,4,0,15,14,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,347,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,4,9,0,12,0,0,13,54,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,12,0,0,12,41,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,353,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,354,                if (depth == 0) {,2,1,0,1,3,0,0,0,0,3,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,355,"                    return pattern.substring(text, pos.getIndex());",0,0,0,2,4,1,10,0,0,10,47,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,375,        if (!containsElements(customPatterns)) {,0,0,0,2,5,0,4,0,0,5,40,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,        StringBuilder sb = new StringBuilder(pattern.length() * 2);,2,1,0,2,4,0,4,4,0,11,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,379,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,380,        int fe = -1;,2,0,0,0,0,0,0,0,0,3,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,381,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,382,        while (pos.getIndex() < pattern.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,383,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,            switch (c) {,2,0,0,1,3,0,0,0,0,2,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,389,                depth++;,4,0,0,0,0,0,4,2,0,13,8,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,390,                if (depth == 1) {,6,1,0,1,3,0,0,0,0,8,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,                    sb.append(START_FE).append(,0,0,0,1,3,0,8,0,0,8,27,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,394,                    String customPattern = customPatterns.get(fe);,2,0,0,1,2,0,12,2,0,16,46,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,395,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,                        sb.append(START_FMT).append(customPattern);,10,0,0,2,4,0,14,0,0,25,43,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,398,                },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,401,                depth--;,0,0,0,0,0,0,0,0,0,0,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,404,                sb.append(c);,0,0,0,1,2,0,0,0,0,3,13,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,405,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,407,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,408,        return sb.toString();,0,0,0,1,2,1,4,0,0,4,21,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,419,        char[] buffer = pattern.toCharArray();,8,3,0,2,4,0,4,0,0,15,38,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",2,0,0,3,6,0,12,0,0,15,64,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,8,0,0,11,35,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,        } while (len > 0 && pos.getIndex() < pattern.length());,4,3,0,3,7,3,8,0,0,18,55,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,424,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,        return pos;,8,0,0,0,0,1,0,2,0,10,11,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,            if (iter.next() != null) {,0,1,0,2,5,0,4,0,0,5,26,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,500,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,179,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,125,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,126,        setLocale(locale);,0,0,0,1,2,0,4,0,0,5,18,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,127,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,128,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,129,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,146,        if (registry == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,147,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,148,            toPattern = super.toPattern();,4,1,0,1,2,0,0,0,0,5,30,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,149,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,351,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,352,            chars = str.toCharArray();,2,0,0,1,2,0,4,0,0,7,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,353,        },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,366,            int len = chars.length;,8,1,0,0,0,0,0,0,0,9,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,367,            if (pos + len > bufferEnd) {,6,2,0,1,3,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,368,                return 0;,2,0,0,0,0,1,8,0,0,11,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,370,"            for (int i = 0; i < chars.length; i++, pos++) {",12,1,0,1,3,0,0,0,0,15,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,371,                if (chars[i] != buffer[pos]) {,0,1,1,3,7,0,0,0,0,9,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,372,                    return 0;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,375,            return len;,4,0,0,0,0,1,0,0,0,4,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,135,        return DOUBLE_QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,144,        return QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,163,        return new CharMatcher(ch);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,173,        if (chars == null || chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,177,            return new CharMatcher(chars[0]);,10,1,1,2,4,1,0,2,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,179,        return new CharSetMatcher(chars);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,189,        if (chars == null || chars.length() == 0) {,4,3,0,2,5,2,4,4,0,17,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,190,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,4,2,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,205,        if (str == null || str.length() == 0) {,4,4,0,2,5,0,8,4,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,206,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,208,        return new StringMatcher(str);,8,1,0,1,2,1,4,2,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,431,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,403,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,333,            return ch == buffer[pos] ? 1 : 0;,2,1,1,1,2,1,0,0,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,92,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,102,"        this(pattern, locale, null);",0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,103,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,113,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,114,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,136,        return toPattern;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,161,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,1,2,0,8,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,162,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,177,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,185,                    throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,220,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,232,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,243,        throw new UnsupportedOperationException();,2,0,0,1,2,0,0,4,0,6,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,254,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,282,"                name = desc.substring(0, i).trim();",2,0,0,2,4,0,8,0,0,11,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,283,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,290,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,308,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,309,                c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,310,                if (c != START_FMT && c != END_FE) {,8,3,0,1,3,0,0,0,0,11,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,311,                    error = true;,2,0,0,0,0,0,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,312,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,318,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,326,        if (error) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,327,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,331,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,350,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,351,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,359,"                getQuotedString(pattern, pos, false);",2,0,0,1,2,0,14,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,363,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,376,            return pattern;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,386,"                appendQuotedString(pattern, pos, sb, false);",0,0,1,1,2,0,10,0,0,20,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,387,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,449,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,450,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,451,        if (escapingOn && c[start] == QUOTE) {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,452,            next(pos);,0,0,0,1,2,0,4,0,0,4,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,453,            return appendTo == null ? null : appendTo.append(QUOTE);,6,2,0,1,2,1,10,0,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,455,        int lastHold = start;,4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,456,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,0,0,0,3,7,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,457,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,458,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",2,1,0,2,5,0,14,0,0,17,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,460,                pos.setIndex(i + ESCAPED_QUOTE.length());,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,461,                lastHold = pos.getIndex();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,462,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,464,            switch (c[pos.getIndex()]) {,0,0,0,3,7,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,466,                next(pos);,2,0,0,1,2,0,8,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,467,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,1,0,0,1,1,8,0,0,11,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,470,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,473,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,486,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,487,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,496,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,503,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,76,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,77,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,103,"            throw new IllegalArgumentException(String.format(message, Long.valueOf(value)));",0,0,0,3,6,0,12,2,0,14,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,127,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,128,"            throw new IllegalArgumentException(String.format(message, new Double(value)));",2,0,0,3,6,0,6,4,0,12,78,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,130,    },4,1,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,151,        if (expression == false) {,6,2,0,1,3,0,0,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,152,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,0,0,0,6,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,154,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,177,            throw new IllegalArgumentException(DEFAULT_IS_TRUE_EX_MESSAGE);,6,1,0,1,2,0,8,2,0,17,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,200,"        return notNull(object, DEFAULT_IS_NULL_EX_MESSAGE);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,218,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,219,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,221,        return object;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,243,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,244,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,246,        if (array.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,247,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,0,0,0,6,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,249,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,269,"        return notEmpty(array, DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE);",0,0,0,1,2,1,0,0,0,4,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,291,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,292,"            throw new NullPointerException(String.format(message, values));",2,0,0,2,4,0,8,2,0,12,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,294,        if (collection.size() == 0) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,295,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,297,        return collection;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,317,"        return notEmpty(collection, DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE);",4,0,0,1,2,1,0,0,0,4,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,339,        if (map == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,340,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,342,        if (map.size() == 0) {,2,1,0,2,5,0,4,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,343,"            throw new IllegalArgumentException(String.format(message, values));",4,0,0,2,4,0,8,2,0,14,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,345,        return map;,4,0,0,0,0,1,0,2,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,365,"        return notEmpty(map, DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE);",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,387,        if (chars == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,388,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,390,        if (chars.length() == 0) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,391,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,393,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,414,"        return notEmpty(chars, DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE);",0,0,0,1,2,1,6,0,0,6,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,437,        if (chars == null) {,4,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,438,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,440,        if (StringUtils.isBlank(chars)) {,0,0,0,2,5,0,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,441,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,443,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,464,"        return notBlank(chars, DEFAULT_NOT_BLANK_EX_MESSAGE);",0,0,0,1,2,1,0,0,0,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,492,        Validate.notNull(array);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,493,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,494,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,495,"                Object[] values2 = ArrayUtils.add(values, Integer.valueOf(i));",2,0,0,3,6,0,12,2,0,16,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,496,"                throw new IllegalArgumentException(String.format(message, values2));",0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,499,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,524,"        return noNullElements(array, DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE);",0,0,0,1,2,1,12,0,0,12,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,552,        Validate.notNull(iterable);,0,0,0,1,2,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,553,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,554,        for (Iterator<?> it = iterable.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,555,            if (it.next() == null) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,556,"                Object[] values2 = ArrayUtils.addAll(values, Integer.valueOf(i));",4,0,0,3,6,0,16,4,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,557,"                throw new IllegalArgumentException(String.format(message, values2));",4,1,0,2,4,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,560,        return iterable;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,585,"        return noNullElements(iterable, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE);",0,0,0,1,2,1,6,0,0,6,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,610,        Validate.notNull(array);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,611,        if (index < 0 || index >= array.length) {,8,0,0,1,3,0,0,0,0,9,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,612,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,614,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,639,"        return validIndex(array, index, DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE, Integer.valueOf(index));",0,0,0,2,4,1,14,0,0,14,94,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,664,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,665,        if (index < 0 || index >= collection.size()) {,4,3,0,2,5,0,4,0,0,11,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,666,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,668,        return collection;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,690,"        return validIndex(collection, index, DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE, Integer.valueOf(index));",0,0,0,2,4,1,0,0,0,7,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,716,        Validate.notNull(chars);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,717,        if (index < 0 || index >= chars.length()) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,718,"            throw new IndexOutOfBoundsException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,720,        return chars;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,746,"        return validIndex(chars, index, DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE, Integer.valueOf(index));",0,0,0,2,4,1,14,0,0,14,102,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,767,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,768,            throw new IllegalStateException(DEFAULT_VALID_STATE_EX_MESSAGE);,2,0,0,1,2,0,0,2,0,4,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,770,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,787,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,788,"            throw new IllegalStateException(String.format(message, values));",4,3,0,2,4,0,0,0,0,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,790,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,807,"        if (Pattern.matches(pattern, input) == false)",0,1,0,2,4,0,8,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,809,"            throw new IllegalArgumentException(String.format(DEFAULT_MATCHES_PATTERN_EX, input, pattern));",0,0,0,2,4,0,16,2,0,19,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,811,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,830,"        if (Pattern.matches(pattern, input) == false)",0,1,0,2,4,0,8,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,832,"            throw new IllegalArgumentException(String.format(message, values));",2,0,1,2,4,0,8,2,0,17,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,834,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,850,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),2,3,0,3,6,0,12,0,0,17,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,852,"            throw new IllegalArgumentException(String.format(DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,2,4,0,12,2,0,14,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,854,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,873,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),2,3,0,3,6,0,12,0,0,18,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,875,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,3,0,0,3,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,877,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,893,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,0,0,3,6,0,0,0,0,9,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,895,"            throw new IllegalArgumentException(String.format(DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,2,4,0,12,2,0,14,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,897,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,916,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,3,6,0,12,0,0,15,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,918,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,920,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,939,        if (type.isInstance(o) == false),0,1,0,2,4,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,941,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));",0,0,0,3,6,0,10,2,0,12,101,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,943,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,961,        if (type.isInstance(o) == false),0,1,0,2,4,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,963,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,965,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,984,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,0,6,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,986,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, superType.getName()));",0,0,0,3,6,0,10,2,0,12,105,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,988,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1009,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,0,6,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1011,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1013,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,40,        super(message);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,41,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,50,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,51,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,61,"        super(message, cause);",4,0,0,1,2,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,62,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,74,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,75,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,63,    public static final Null NULL = new Null();,2,0,0,1,2,3,0,4,0,9,43,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,96,        return object != null ? object : defaultValue;,6,1,0,0,0,1,0,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,120,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,121,            for (T val : values) {,4,0,0,1,3,0,0,2,0,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,122,                if (val != null) {,2,1,0,1,3,0,10,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,123,                    return val;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,127,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,152,        if (object1 == object2) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,153,            return true;,8,1,0,0,0,1,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,155,        if ((object1 == null) || (object2 == null)) {,4,3,0,3,7,0,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,156,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,158,        return object1.equals(object2);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,181,"        return ObjectUtils.equals(object1, object2) == false;",0,1,0,1,2,1,8,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,198,        return (obj == null) ? 0 : obj.hashCode();,2,1,0,2,4,1,4,0,0,7,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,220,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,221,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,223,        StringBuffer buffer = new StringBuffer();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,224,"        identityToString(buffer, object);",0,0,0,1,2,0,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,225,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,244,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,245,"            throw new NullPointerException(""Cannot get the toString of a null identity"");",0,0,0,1,2,0,0,2,0,4,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,247,        buffer.append(object.getClass().getName()),2,1,0,3,6,0,14,0,0,17,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,250,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,272,"        return obj == null ? """" : obj.toString();",2,1,0,1,2,1,12,0,0,16,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,295,        return obj == null ? nullStr : obj.toString();,4,1,0,1,2,1,4,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,313,        T result = null;,4,0,0,0,0,0,0,2,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,314,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,315,            for (T value : values) {,4,0,0,1,3,0,0,2,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,316,"                if (compare(value, result, true) < 0) {",0,1,0,2,5,0,6,0,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,317,                    result = value;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,321,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,337,        T result = null;,2,0,0,0,0,0,0,2,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,338,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,339,            for (T value : values) {,4,0,0,1,3,0,0,2,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,340,"                if (compare(value, result, false) > 0) {",0,1,0,2,5,0,6,0,0,8,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,341,                    result = value;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,345,        return result;,2,0,0,0,0,1,12,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,358,"        return compare(c1, c2, false);",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,374,        if (c1 == c2) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,375,            return 0;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,376,        } else if (c1 == null) {,2,1,0,1,4,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,377,            return (nullGreater ? 1 : -1);,2,0,0,1,2,1,0,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,378,        } else if (c2 == null) {,0,0,0,1,4,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,379,            return (nullGreater ? -1 : 1);,2,0,0,1,2,1,0,0,0,3,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,381,        return c1.compareTo(c2);,0,0,0,1,2,1,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,394,        if (o instanceof Cloneable) {,4,0,0,1,3,0,0,2,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,396,            if (o.getClass().isArray()) {,0,0,0,3,7,0,0,0,0,10,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,397,                final Class<?> componentType = o.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,63,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,398,                if (!componentType.isPrimitive()) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,399,                    result = ((Object[])o).clone();,4,0,0,4,8,0,2,2,0,9,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,401,                    int length = Array.getLength(o);,2,0,0,1,2,0,6,0,0,8,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,402,"                    result = Array.newInstance(componentType, length);",2,0,0,1,2,0,8,0,0,11,50,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,403,                    while (length-- > 0) {,0,0,0,1,3,0,12,0,0,12,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,404,"                        Array.set(result, length, Array.get(o, length));",0,0,0,2,4,0,16,0,0,16,48,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,407,            } else {,0,0,0,0,2,0,4,0,0,5,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,409,"                    final Method clone = o.getClass().getMethod(""clone"");",2,0,0,2,4,1,6,2,0,12,53,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,410,                    result = clone.invoke(o);,2,0,0,1,2,0,6,0,0,9,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,421,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,411,                } catch (final NoSuchMethodException e) {,2,0,0,1,4,1,0,2,0,5,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,412,"                    throw new CloneFailedException(""Cloneable type """,0,0,0,0,1,0,0,0,0,1,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,415,                } catch (final IllegalAccessException e) {,0,0,0,1,4,0,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,416,"                    throw new CloneFailedException(""Cannot clone Cloneable type """,0,0,0,0,1,0,0,2,0,3,61,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,418,                } catch (final InvocationTargetException e) {,2,0,0,1,4,1,0,2,0,5,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,419,"                    throw new CloneFailedException(""Exception cloning Cloneable type """,0,0,0,0,1,0,0,2,0,3,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,424,            final T checked = (T)result;,4,0,0,1,2,1,0,4,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,425,            return checked;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,428,        return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,446,        final T clone = clone(o);,2,0,0,1,2,1,4,2,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,447,        return clone == null ? o : clone;,6,1,0,0,0,1,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,478,            super();,4,1,0,1,2,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,479,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,487,            return ObjectUtils.NULL;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",6,2,0,1,2,0,6,0,0,15,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,4,0,0,0,0,4,0,4,0,11,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,2,0,0,1,2,4,4,4,0,13,33,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,1,0,1,2,0,4,2,0,13,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,0,4,2,0,13,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,453,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,469,        char lastChar = str.charAt(str.length() - 1);,4,2,0,2,4,0,8,2,0,17,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,4,1,0,1,3,3,0,4,0,14,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,498,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,10,4,0,2,5,0,4,0,0,19,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,502,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,505,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,506,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,0,8,0,0,13,55,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,0,0,0,1,3,0,4,0,0,5,19,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,0,0,0,0,1,0,0,0,0,1,15,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,514,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,613,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,616,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,1,0,2,5,0,6,2,0,12,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,618,                return false;,2,0,0,0,0,1,0,2,0,4,13,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,638,        return Float.valueOf(str);,2,0,0,1,2,1,6,0,0,8,26,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,654,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,672,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,704,        return new BigInteger(str);,4,1,0,1,2,1,0,2,0,7,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,721,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,688,        return Long.valueOf(str);,2,0,0,1,2,1,6,0,0,10,25,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1303,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,199,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,239,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,243,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,163,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,43,    public static final Long LONG_ONE = new Long(1L);,0,0,0,1,2,0,0,0,0,3,49,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,47,    public static final Integer INTEGER_ZERO = new Integer(0);,6,0,0,1,2,3,0,4,0,13,58,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,55,    public static final Short SHORT_ONE = new Short((short) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,8,2,0,2,4,0,0,0,0,10,60,9,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,2,0,0,2,4,3,4,2,0,12,66,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,0,4,0,9,58,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,1,0,1,2,3,14,6,0,27,57,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,0,0,0,1,2,0,0,0,0,3,55,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,0,4,0,9,54,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },4,0,0,5,10,4,10,4,0,21,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,131,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,6,1,0,3,6,3,10,4,0,25,78,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,135,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,0,0,0,2,5,0,0,0,0,7,58,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,333,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,336,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,344,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,11,70,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,347,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,352,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,355,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,0,0,0,2,5,0,0,0,0,7,58,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,364,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,0,0,0,3,6,0,0,0,0,9,90,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,372,        String[][] newarray = new String[array.length][2];,16,1,0,4,8,0,0,4,0,22,50,3,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,373,        for(int i = 0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,374,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,375,            newarray[i][1] = array[i][0];,4,0,1,4,8,0,4,2,0,19,29,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,377,        return newarray;,4,2,0,0,0,1,4,0,0,11,16,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,28,public class EntityArrays {,2,0,0,0,1,1,4,0,0,9,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,130,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,134,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },4,0,0,5,10,4,8,4,0,19,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,332,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },6,0,0,5,10,3,4,2,0,15,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,335,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,343,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,346,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,351,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },4,0,0,5,10,4,10,4,0,21,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,354,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,363,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,0,3,6,0,0,0,0,9,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,6,0,0,1,2,0,0,6,0,12,46,3,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,4,1,0,1,2,0,0,0,0,5,16,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",0,0,0,3,6,1,0,0,0,10,70,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,4,0,0,1,3,0,0,2,0,6,29,3,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,4,0,0,0,0,0,4,0,0,10,15,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,2,0,0,1,2,4,0,4,0,9,23,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },2,0,0,0,1,0,0,0,0,2,1,11,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1357,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,196,"        return getInstance(pattern, null, locale);",0,0,0,1,2,1,6,0,0,7,42,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",12,1,0,1,2,0,0,2,0,16,84,7,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,689,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,4,0,0,0,0,0,0,0,0,6,23,12,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1148,"        TextField(int field, String[] values) {",8,0,0,2,5,3,0,2,0,13,39,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1149,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1150,            mValues = values;,4,0,0,0,0,0,6,0,0,11,17,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1151,        },4,1,0,0,1,0,0,0,0,7,1,8,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1157,            int max = 0;,2,0,0,0,0,0,0,0,0,2,12,6,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1158,            for (int i=mValues.length; --i >= 0; ) {,0,0,0,1,3,0,10,0,0,11,40,6,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1159,                int len = mValues[i].length();,4,0,1,2,4,0,2,2,0,17,30,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1160,                if (len > max) {,8,4,0,1,3,0,4,0,0,17,16,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1161,                    max = len;,4,0,0,0,0,0,0,0,0,5,10,9,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1163,            },2,0,1,0,1,0,0,0,0,7,1,12,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1164,            return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,888,        Rule[] rules = mRules;,4,0,0,1,2,0,0,2,0,6,22,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,889,        int len = mRules.length;,0,0,0,0,0,0,6,0,0,6,24,8,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,890,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,891,"            rules[i].appendTo(buf, calendar);",0,0,1,2,4,0,6,0,0,10,33,7,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,893,        return buf;,0,0,0,0,0,1,0,0,0,1,11,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,1,0,0,1,10,0,0,12,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,4,1,0,1,3,0,6,0,0,11,22,1,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,8,1,0,1,2,0,4,0,0,14,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,1,0,0,0,1,10,0,0,13,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,0,0,0,3,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,6,0,5,11,0,16,0,0,30,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,                        return createBigDecimal(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",0,0,0,2,4,0,0,0,0,6,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,2,0,0,1,2,4,6,2,0,14,26,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,3,2,4,0,14,37,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,2,0,0,1,2,4,4,0,0,9,23,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,0,0,0,4,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,0,0,3,7,0,0,0,0,10,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,2,0,2,4,0,20,0,0,28,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,8,0,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,2,0,0,1,2,4,4,4,0,13,27,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,3,4,2,0,11,45,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,4,1,0,1,3,3,2,0,0,11,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,4,0,0,1,2,4,0,6,0,13,27,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,8,0,0,17,48,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,6,2,4,0,17,49,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,2,0,0,1,2,3,8,4,0,17,58,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,4,0,0,2,4,0,6,0,0,10,60,5,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,0,4,0,9,58,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,6,1,0,1,2,3,4,4,0,19,55,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,4,2,0,1,2,0,4,0,0,10,61,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,    },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,2,0,1,2,3,8,2,0,22,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",2,0,0,1,2,3,2,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",4,1,0,1,2,3,2,2,0,14,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",4,0,1,1,2,3,2,6,0,18,102,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,0,0,0,0,3,104,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",2,0,0,1,2,3,2,2,0,10,121,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,2,0,12,76,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",8,0,0,1,2,3,6,2,0,21,76,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,108,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",4,0,0,1,2,4,8,4,0,21,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",2,1,0,2,4,3,4,2,0,16,118,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",4,0,0,1,2,3,2,2,0,13,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",10,1,0,1,2,3,2,0,0,18,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",6,1,0,1,2,3,2,0,0,13,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,3,2,0,0,8,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,0,0,0,0,2,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,1,0,0,0,3,0,0,0,18,128,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",6,1,0,1,2,3,2,0,0,14,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1324,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1340,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,1,6,2,0,8,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",8,0,0,2,4,1,12,4,0,24,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,0,0,0,7,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,1,2,1,6,0,0,6,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1410,        if (JAVA_VERSION != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1413,                if (ch >= '0' && ch <= '9') {,6,3,0,1,3,0,0,0,0,12,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1414,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,1,10,0,0,13,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1418,        return null;,0,0,0,0,0,1,6,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1462,            return System.getProperty(property);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1463,        } catch (SecurityException ex) {,2,0,0,1,4,0,0,2,0,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property",6,1,0,0,1,0,2,0,0,10,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1467,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1484,        return new File(System.getProperty(USER_DIR_KEY));,0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1500,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1513,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,6,1,0,2,4,1,6,0,0,14,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1534,        return JAVA_VERSION_FLOAT >= requiredVersion;,0,0,0,0,0,1,0,0,0,1,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1556,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1575,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1577,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1598,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,0,0,2,4,1,0,0,0,7,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1616,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1617,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1619,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,8,0,0,8,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1673,"        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,8,0,0,8,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1696,"        return toJavaVersionIntArray(version, Integer.MAX_VALUE);",10,3,0,1,2,1,4,0,0,17,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1716,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",4,0,0,4,8,0,8,2,0,17,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",6,0,0,3,6,0,6,0,0,12,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1721,        int j = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,14,3,0,1,3,0,0,0,0,18,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1723,            String s = strings[i];,2,0,1,1,2,0,4,2,0,16,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1724,            if (s.length() > 0) {,2,1,0,2,5,0,10,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1725,                ints[j++] = Integer.parseInt(s);,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1728,        return ints;,6,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1752,        if (javaVersions == null || javaVersions.length == 0) {,6,3,0,1,3,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1753,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1755,        if (javaVersions.length == 1) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1756,            return javaVersions[0];,0,0,0,1,2,1,2,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1758,        StringBuilder builder = new StringBuilder();,4,0,0,1,2,0,12,0,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1760,        builder.append('.');,0,0,0,1,2,0,4,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1761,        for (int i = 1; i < javaVersions.length; i++) {,10,1,0,1,3,0,0,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1765,            return Float.parseFloat(builder.toString());,0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1766,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1767,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1793,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1795,        int intVersion = 0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1796,        int len = javaVersions.length;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1797,        if (len >= 1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1798,            intVersion = javaVersions[0] * 100;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1800,        if (len >= 2) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1801,            intVersion += javaVersions[1] * 10;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1803,        if (len >= 3) {,8,1,0,1,3,0,0,0,0,10,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1804,            intVersion += javaVersions[2];,2,0,1,1,2,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,107,"        return toInt(str, 0);",2,0,0,1,2,2,4,0,0,8,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,128,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,129,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,132,            return Integer.parseInt(str);,4,0,0,1,2,1,6,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,133,        } catch (NumberFormatException nfe) {,6,1,0,1,4,0,0,2,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,134,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,156,"        return toLong(str, 0L);",0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,177,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,178,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,181,            return Long.parseLong(str);,2,1,0,1,2,1,6,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,182,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,183,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,206,"        return toFloat(str, 0.0f);",0,0,0,1,2,1,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,229,      if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,230,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,233,          return Float.parseFloat(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,234,      } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,235,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,258,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,281,      if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,282,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,285,          return Double.parseDouble(str);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,286,      } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,287,          return defaultValue;,4,1,0,0,0,1,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,310,"        return toByte(str, (byte) 0);",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,331,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,332,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,335,            return Byte.parseByte(str);,0,0,0,1,2,1,6,0,0,6,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,336,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,337,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,359,"        return toShort(str, (short) 0);",2,0,0,2,4,2,6,4,0,13,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,380,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,381,            return defaultValue;,6,0,0,0,0,1,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,384,            return Short.parseShort(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,385,        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,386,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,464,            return null;,0,0,0,0,0,1,6,0,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,512,                        } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,0,0,4,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,515,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,518,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,531,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,529,                    } catch (NumberFormatException nfe) {,4,1,0,1,4,0,0,2,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,542,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,540,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,8,2,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,545,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,550,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,585,                },2,0,0,0,1,0,0,0,0,2,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,583,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,588,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,589,                        return d;,2,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,593,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,591,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,595,                return createBigDecimal(str);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,611,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,618,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,633,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,649,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,666,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,683,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,699,            return null;,6,2,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,715,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,719,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,736,        if (array == null) {,2,2,0,1,3,0,4,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,737,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,738,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,739,"            throw new IllegalArgumentException(""Array cannot be empty."");",4,0,0,1,2,0,0,2,0,8,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,743,        long min = array[0];,4,0,1,1,2,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,744,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,745,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,746,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,750,        return min;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,763,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,764,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,765,        } else if (array.length == 0) {,10,1,0,1,4,0,4,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,766,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,770,        int min = array[0];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,771,        for (int j = 1; j < array.length; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,772,            if (array[j] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,773,                min = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,777,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,790,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,791,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,792,        } else if (array.length == 0) {,6,1,0,1,4,0,4,2,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,793,"            throw new IllegalArgumentException(""Array cannot be empty."");",4,3,0,1,2,0,0,2,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,797,        short min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,798,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,799,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,800,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,804,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,817,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,818,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,3,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,819,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,820,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,0,0,0,3,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,824,        byte min = array[0];,2,0,1,1,2,0,0,0,0,7,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,825,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,826,            if (array[i] < min) {,8,1,1,2,5,0,4,0,0,18,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,827,                min = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,831,        return min;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,845,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,846,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,847,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,848,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,852,        double min = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,853,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,854,            if (Double.isNaN(array[i])) {,0,0,1,3,7,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,855,                return Double.NaN;,0,0,0,0,0,1,10,0,0,10,18,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,857,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,858,                min = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,862,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,876,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,877,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,6,2,0,10,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,878,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,879,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,883,        float min = array[0];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,884,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,885,            if (Float.isNaN(array[i])) {,4,1,1,3,7,0,4,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,886,                return Float.NaN;,4,0,0,0,0,1,0,0,0,4,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,888,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,889,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,893,        return min;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,908,        if (array == null) {,14,0,0,1,3,2,0,0,0,16,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,909,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,910,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,911,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,1,0,1,2,0,0,2,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,915,        long max = array[0];,12,1,0,1,2,0,0,0,0,14,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,916,        for (int j = 1; j < array.length; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,917,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,918,                max = array[j];,6,0,1,1,2,0,0,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,922,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,935,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,936,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,937,        } else if (array.length == 0) {,10,2,0,1,4,0,0,0,0,12,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,938,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,942,        int max = array[0];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,943,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,944,            if (array[j] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,945,                max = array[j];,8,1,1,1,2,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,949,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,962,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,963,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,0,1,2,0,0,2,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,964,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,965,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,8,4,0,15,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,969,        short max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,970,        for (int i = 1; i < array.length; i++) {,12,2,0,1,3,0,8,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,971,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,972,                max = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,976,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,989,        if (array == null) {,2,1,0,1,3,0,2,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,990,"            throw new IllegalArgumentException(""The Array must not be null"");",4,3,0,1,2,0,2,2,0,13,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,991,        } else if (array.length == 0) {,6,1,1,1,4,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,992,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,996,        byte max = array[0];,2,0,1,1,2,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,997,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,998,            if (array[i] > max) {,2,0,0,2,5,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,999,                max = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1003,        return max;,4,1,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1017,        if (array== null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1018,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,6,2,0,10,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1019,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1020,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,8,6,0,15,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1024,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1025,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,2,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1026,            if (Double.isNaN(array[j])) {,0,0,1,3,7,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1027,                return Double.NaN;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1029,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1030,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1034,        return max;,8,0,0,0,0,1,4,0,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1048,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1049,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1050,        } else if (array.length == 0) {,10,5,0,1,4,0,8,0,0,25,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1051,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,12,2,0,15,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1055,        float max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1056,        for (int j = 1; j < array.length; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1057,            if (Float.isNaN(array[j])) {,0,0,1,3,7,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1058,                return Float.NaN;,4,0,0,0,0,1,0,0,0,4,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1060,            if (array[j] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1061,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1065,        return max;,8,0,0,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1079,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1080,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1082,        if (c < a) {,4,1,0,1,3,0,8,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1083,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1085,        return a;,2,1,0,0,0,1,4,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1097,        if (b < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1098,            a = b;,4,3,0,0,0,0,4,0,0,12,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1100,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1101,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1103,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1115,        if (b < a) {,10,2,0,1,3,0,0,2,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1116,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1118,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1119,            a = c;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1121,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1133,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1134,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1136,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1137,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1139,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1155,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1171,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1185,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1186,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1188,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1189,            a = c;,4,0,0,0,0,0,8,2,0,15,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1191,        return a;,2,0,0,0,0,1,4,2,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1203,        if (b > a) {,6,1,0,1,3,0,6,2,0,15,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1204,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1206,        if (c > a) {,6,1,0,1,3,0,2,2,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1207,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1209,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1221,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1222,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1224,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1225,            a = c;,10,0,0,0,0,0,0,0,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1227,        return a;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1239,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1240,            a = b;,6,1,0,0,0,0,0,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1242,        if (c > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1243,            a = c;,2,1,0,0,0,0,0,0,0,4,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1245,        return a;,4,0,0,0,0,1,4,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1261,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1277,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1293,            return false;,0,0,0,0,0,1,2,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1317,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1318,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1320,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1321,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1322,        boolean hasExp = false;,8,2,0,0,0,0,0,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1323,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1324,        boolean allowSigns = false;,6,0,1,0,0,0,0,0,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1325,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1327,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,0,0,8,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1328,        if (sz > start + 1) {,6,3,0,1,3,0,0,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1329,            if (chars[start] == '0' && chars[start + 1] == 'x') {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1330,                int i = start + 2;,0,0,0,0,0,0,4,0,0,4,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1331,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1332,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1335,                for (; i < chars.length; i++) {,12,1,0,1,3,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1336,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1339,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1342,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1345,"        sz--; // don't want to loop to the last char, check it afterwords",6,0,0,0,0,0,0,4,0,12,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1347,        int i = start;,6,0,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1350,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1351,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1352,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1353,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1355,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1356,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1358,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1360,                hasDecPoint = true;,4,0,0,0,0,0,8,0,0,14,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1361,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1363,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1365,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1367,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1368,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1370,                hasExp = true;,2,0,0,0,0,0,6,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1371,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1372,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,13,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1373,                if (!allowSigns) {,2,0,0,1,3,0,0,0,0,3,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1374,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1376,                allowSigns = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1377,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1379,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1381,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1383,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1384,            if (chars[i] >= '0' && chars[i] <= '9') {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1386,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1388,            if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1390,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1392,            if (chars[i] == '.') {,0,1,1,2,5,0,0,0,0,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1393,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1395,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1398,                return foundDigit;,4,0,0,0,0,1,0,0,0,4,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1400,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1405,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1407,            if (chars[i] == 'l',6,5,1,1,3,0,0,0,0,16,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1410,                return foundDigit && !hasExp;,0,0,0,0,0,1,0,0,0,1,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1413,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1417,        return !allowSigns && foundDigit;,8,2,0,0,0,1,0,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,14,0,0,16,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,234,            return true;,6,5,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,241,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,262,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,291,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,317,        String ts = trim(str);,2,1,0,1,2,0,0,0,0,3,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,318,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,343,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,371,"        return strip(str, null);",0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,399,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,401,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,402,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,428,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,1,4,0,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,458,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,459,            return str;,4,0,0,0,0,2,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,461,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,462,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,491,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,3,50,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,492,            return str;,4,1,0,0,0,1,6,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,494,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,495,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,496,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,4,2,0,4,9,0,10,0,0,16,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,497,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,499,        } else if (stripChars.length() == 0) {,2,0,1,2,6,0,0,0,0,7,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,500,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,502,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,6,3,0,5,11,0,10,0,0,19,89,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,503,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,506,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,535,        if (str == null || (end = str.length()) == 0) {,8,3,0,3,7,0,10,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,536,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,539,        if (stripChars == null) {,6,2,0,1,3,1,14,0,0,23,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,540,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,541,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,543,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,544,            return str;,0,0,0,0,0,1,4,0,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,546,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,12,4,0,5,11,0,8,0,0,25,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,547,                end--;,4,0,0,0,0,0,0,0,0,6,6,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,550,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,575,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,605,        if (strs == null || (strsLen = strs.length) == 0) {,10,3,0,2,5,0,0,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,606,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,608,        String[] newArr = new String[strsLen];,6,0,1,2,4,0,10,4,0,30,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,609,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,610,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,3,6,0,4,0,0,19,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,612,        return newArr;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,632,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,633,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,635,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,642,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",0,0,0,1,2,0,0,0,0,3,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,645,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",4,0,0,1,2,0,8,4,0,18,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,648,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0,0,1,1,2,0,2,0,0,6,115,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,651,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,654,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,1,3,6,0,0,0,0,9,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,657,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0,0,0,2,4,0,0,0,0,6,109,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,658,"                return accentPattern.matcher(decomposed).replaceAll("""");",4,1,1,2,4,1,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,659,            } catch(ClassNotFoundException cnfe) {,2,0,0,1,4,0,0,2,0,4,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,660,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",4,0,0,1,2,0,0,2,0,7,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,661,            } catch(NoSuchMethodException nsme) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,662,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",6,1,0,1,2,0,18,4,0,31,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,663,            } catch(NoSuchFieldException nsfe) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,664,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",2,0,0,1,2,0,10,2,0,15,93,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,665,            } catch(IllegalAccessException iae) {,2,0,0,1,4,0,0,2,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,666,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,1,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,667,            } catch(IllegalArgumentException iae) {,6,3,0,1,4,0,4,2,0,16,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,668,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",4,0,0,1,2,0,0,2,0,7,96,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,669,            } catch(java.lang.reflect.InvocationTargetException ite) {,12,0,0,1,4,0,0,0,0,12,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,670,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",4,0,0,1,2,0,0,2,0,8,97,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,671,            } catch(SecurityException se) {,2,0,0,1,4,0,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,672,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",4,0,0,1,2,0,0,2,0,9,88,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,675,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,2,0,3,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,703,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,4,2,0,1,2,1,6,0,0,12,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,728,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,4,2,0,1,2,1,6,0,0,12,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,753,        if (isEmpty(str)) {,2,0,0,2,5,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,754,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,756,        return str.indexOf(searchChar);,0,0,0,1,2,1,12,0,0,12,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,785,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,786,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,788,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,6,0,0,7,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,815,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,816,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,818,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,854,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,855,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,857,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,894,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,912,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,913,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,4,23,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,915,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,916,            return lastIndex ? str.length() : 0;,2,0,0,1,2,1,4,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,918,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,919,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,10,3,0,1,2,0,10,0,0,23,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,921,            if(lastIndex) {,2,0,0,1,3,0,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,922,"                index = str.lastIndexOf(searchStr, index - 1);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,924,"                index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,6,0,0,14,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,926,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,927,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,929,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,930,        } while (found < ordinal);,8,1,0,1,3,0,4,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,931,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,959,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,6,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,994,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,995,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,997,        if (startPos < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,998,            startPos = 0;,8,0,0,0,0,0,10,0,0,19,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1000,        int endLimit = (str.length() - searchStr.length()) + 1;,4,1,0,3,6,0,0,0,0,5,55,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1001,        if (startPos > endLimit) {,8,3,1,1,3,0,0,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1002,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1004,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1005,            return startPos;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1007,        for (int i = startPos; i < endLimit; i++) {,14,2,0,1,3,0,0,0,0,17,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1008,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,12,0,0,13,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1009,                return i;,0,0,1,0,0,1,0,0,0,9,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1012,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1037,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1038,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1040,        return str.lastIndexOf(searchChar);,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1071,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1072,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1074,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1100,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1101,            return INDEX_NOT_FOUND;,10,1,1,0,0,1,4,0,0,21,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1103,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1140,"        return ordinalIndexOf(str, searchStr, ordinal, true);",4,0,0,1,2,1,0,0,0,5,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1172,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1173,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1175,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1201,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1202,            return INDEX_NOT_FOUND;,2,0,1,0,0,1,4,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1204,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,2,4,1,0,0,0,7,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1236,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1237,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1239,        if (startPos > (str.length() - searchStr.length())) {,4,1,0,4,9,0,0,0,0,5,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1240,            startPos = str.length() - searchStr.length();,16,2,0,2,4,0,8,0,0,29,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1242,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,1,19,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1243,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1245,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1246,            return startPos;,6,0,0,0,0,1,4,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1249,        for (int i = startPos; i >= 0; i--) {,10,1,0,1,3,0,8,0,0,20,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1250,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,0,0,0,10,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1251,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1254,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1279,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1280,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1282,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1307,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1308,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1310,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1337,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1338,            return false;,4,1,0,0,0,1,2,0,0,7,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1340,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1341,        int max = str.length() - len;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1342,        for (int i = 0; i <= max; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1343,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1344,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1347,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1360,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1361,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1363,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1364,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1365,            if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1366,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1369,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1398,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,2,2,0,3,7,0,10,0,0,14,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1399,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1401,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1402,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1403,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1404,        int searchLast = searchLen - 1;,6,1,0,0,0,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1405,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1406,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1407,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1408,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1409,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,0,0,0,2,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1411,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,4,3,1,3,7,0,4,0,0,13,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1412,                            return i;,10,2,0,0,0,1,16,0,0,30,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1415,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1420,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1447,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1448,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1450,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1479,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1480,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1482,        int csLength = cs.length();,6,3,0,1,2,0,4,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1483,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1484,        int csLast = csLength - 1;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1485,        int searchLast = searchLength - 1;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1486,        for (int i = 0; i < csLength; i++) {,10,2,0,1,3,0,0,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1487,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1488,            for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1489,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1490,                    if (Character.isHighSurrogate(ch)) {,12,2,0,2,5,0,6,0,0,20,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1491,                        if (j == searchLast) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1493,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1495,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,8,5,1,3,7,0,4,0,0,19,59,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1496,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1500,                        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1505,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1536,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1537,            return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1539,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1568,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,2,0,1,3,7,0,0,0,0,7,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1569,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1571,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1572,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1573,        int searchLen = searchChars.length;,8,0,0,0,0,0,6,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1574,        int searchLast = searchLen - 1;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1576,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1577,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1578,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1579,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1580,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1581,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1582,                            continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1589,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1591,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1617,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1618,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1620,        int strLen = str.length();,4,0,0,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1621,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1622,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1623,            boolean chFound = searchChars.indexOf(ch) >= 0;,2,1,0,1,2,0,6,0,0,9,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1624,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1625,                char ch2 = str.charAt(i + 1);,8,2,0,1,2,0,14,0,0,24,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1626,                if (chFound && searchChars.indexOf(ch2) < 0) {,2,2,0,2,5,0,6,0,0,10,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1627,                    return i;,16,2,0,0,0,1,0,0,0,19,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1629,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1630,                if (!chFound) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1631,                    return i;,4,0,0,0,0,2,0,0,0,6,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1635,        return INDEX_NOT_FOUND;,8,1,0,0,0,2,0,12,0,22,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1664,        if (valid == null || cs == null) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1665,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1667,        if (cs.length() == 0) {,0,1,0,2,5,0,4,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1668,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1670,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1671,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1673,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1700,        if (cs == null || validChars == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1701,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1703,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1732,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,8,0,0,8,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1733,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1735,        int csLen = cs.length();,8,4,0,1,2,0,12,0,0,24,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1736,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1737,        int searchLen = searchChars.length;,8,1,0,0,0,0,6,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1738,        int searchLast = searchLen - 1;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1739,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1740,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1741,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1742,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1743,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,6,0,0,6,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1744,                        if (j == searchLast) {,4,1,0,1,3,0,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1746,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1748,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,16,6,1,3,7,0,10,0,0,34,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1749,                            return false;,0,0,0,0,0,1,0,0,0,1,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1753,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1758,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1785,        if (cs == null || invalidChars == null) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1786,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1788,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1820,        if (str == null || searchStrs == null) {,8,4,0,1,3,0,0,2,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1821,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1823,        int sz = searchStrs.length;,6,1,0,0,0,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1826,        int ret = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1828,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1829,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1830,            String search = searchStrs[i];,2,0,1,1,2,0,12,2,0,20,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1831,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1832,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1834,            tmp = str.indexOf(search);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1835,            if (tmp == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1836,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1839,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1840,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1844,        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;,0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1873,        if (str == null || searchStrs == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1874,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1876,        int sz = searchStrs.length;,22,5,0,0,0,0,8,0,0,36,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1877,        int ret = INDEX_NOT_FOUND;,4,0,0,0,0,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1878,        int tmp = 0;,2,1,0,0,0,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1879,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,6,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1880,            String search = searchStrs[i];,4,0,1,1,2,0,0,2,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1881,            if (search == null) {,6,2,0,1,3,0,18,0,0,26,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1882,                continue;,6,0,0,0,0,0,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1884,            tmp = str.lastIndexOf(search);,2,0,0,1,2,0,6,0,0,9,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1885,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1886,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1889,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1919,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1920,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1924,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1925,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1928,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1929,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1931,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1932,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1935,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1974,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1975,            return null;,0,0,0,0,0,1,8,2,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1979,        if (end < 0) {,2,1,0,1,3,0,4,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1980,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1982,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1983,            start = str.length() + start; // remember start is negative,6,2,0,1,2,0,4,0,0,13,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1987,        if (end > str.length()) {,2,1,0,2,5,0,10,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1988,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1992,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1993,            return EMPTY;,2,0,0,0,0,2,4,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1996,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1997,            start = 0;,6,0,0,0,0,0,0,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1999,        if (end < 0) {,4,1,0,1,3,0,4,0,0,9,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2000,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2003,"        return str.substring(start, end);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2029,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2030,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2032,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2033,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2035,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2036,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2038,"        return str.substring(0, len);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2062,        if (str == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2063,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2065,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2066,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2068,        if (str.length() <= len) {,0,0,0,2,5,0,10,0,0,10,26,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2069,            return str;,4,0,0,0,0,1,0,0,0,4,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2071,        return str.substring(str.length() - len);,4,1,0,2,4,1,8,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2099,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2100,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2102,        if (len < 0 || pos > str.length()) {,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2103,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2105,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2106,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2108,        if (str.length() <= (pos + len)) {,2,1,0,3,7,0,10,0,0,14,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2109,            return str.substring(pos);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2111,"        return str.substring(pos, pos + len);",12,2,0,1,2,1,6,0,0,21,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2144,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2145,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2147,        if (separator.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2148,            return EMPTY;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2150,        int pos = str.indexOf(separator);,4,0,0,1,2,0,6,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2151,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2152,            return str;,2,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2154,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2186,        if (isEmpty(str)) {,6,0,0,2,5,0,0,0,0,6,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2187,            return str;,6,1,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2189,        if (separator == null) {,2,0,0,1,3,1,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2190,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2192,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2193,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2194,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2196,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2227,        if (isEmpty(str) || isEmpty(separator)) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2228,            return str;,6,0,0,0,0,1,14,0,0,20,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2230,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2231,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2232,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2234,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2267,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2268,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2270,        if (isEmpty(separator)) {,2,0,0,2,5,0,4,2,0,8,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2271,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2273,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2274,        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {,0,0,0,4,9,0,0,0,0,13,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2275,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2277,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2304,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2335,        if (str == null || open == null || close == null) {,0,0,0,1,3,0,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2336,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2338,        int start = str.indexOf(open);,4,0,0,1,2,0,6,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2339,        if (start != INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2340,"            int end = str.indexOf(close, start + open.length());",16,2,0,2,4,0,10,0,0,29,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2341,            if (end != INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2342,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2345,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2371,        if (str == null || isEmpty(open) || isEmpty(close)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2372,            return null;,2,0,0,0,0,1,0,0,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2374,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2375,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2376,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,1,0,0,0,1,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2378,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2379,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2380,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2381,        int pos = 0;,4,0,0,0,0,0,0,2,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2382,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2383,"            int start = str.indexOf(open, pos);",2,0,0,1,2,0,8,0,0,10,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2384,            if (start < 0) {,6,0,0,1,3,1,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2385,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2387,            start += openLen;,2,0,0,0,0,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2388,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2389,            if (end < 0) {,12,2,0,1,3,0,0,0,0,15,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2390,                break;,4,1,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2392,"            list.add(str.substring(start, end));",2,0,0,2,4,0,0,0,0,3,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2393,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2394,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2395,        if (list.isEmpty()) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2396,            return null;,2,0,0,0,0,1,4,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2398,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,0,0,0,10,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2429,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2457,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,6,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2486,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2520,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2547,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",14,4,0,1,2,1,6,0,0,28,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2578,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2607,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2640,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2660,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2661,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2664,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2666,        if (len == 0) {,4,1,0,1,3,0,0,0,0,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2667,            return ArrayUtils.EMPTY_STRING_ARRAY;,10,2,0,0,0,1,20,2,0,34,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2670,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2672,"            return splitWorker(str, null, max, preserveAllTokens);",4,2,0,1,2,1,0,0,0,6,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2675,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2677,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,12,8,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2678,        int numberOfSubstrings = 0;,4,0,0,0,0,0,0,0,0,4,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2679,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2680,        int end = 0;,2,0,0,0,0,0,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2681,        while (end < len) {,12,3,1,1,3,0,0,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2682,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2684,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2685,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2686,                    numberOfSubstrings += 1;,8,0,0,0,0,0,0,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2688,                    if (numberOfSubstrings == max) {,2,1,0,1,3,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2689,                        end = len;,6,1,0,0,0,0,12,0,0,19,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2690,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2694,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2699,                        beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2703,                    if (preserveAllTokens) {,4,0,0,1,3,0,6,0,0,10,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2704,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2705,                        if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2706,                            end = len;,4,0,0,0,0,0,8,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2707,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2709,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2712,                    beg = end + separatorLength;,10,2,0,0,0,0,0,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2716,                substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2717,                end = len;,8,4,0,0,0,0,8,0,0,22,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2721,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,12,0,0,12,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2750,"        return splitWorker(str, null, -1, true);",2,0,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2786,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2804,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2805,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2807,        int len = str.length();,4,0,0,1,2,0,4,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2808,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2809,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2811,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2812,"        int i = 0, start = 0;",12,1,0,0,0,0,0,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2813,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2814,        boolean lastMatch = false;,2,0,0,0,0,1,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2815,        while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2816,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2817,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2818,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2819,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2820,                    lastMatch = true;,0,3,0,0,0,0,16,0,0,21,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2822,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2823,                continue;,2,0,0,0,0,0,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2825,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2826,            match = true;,2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2827,            i++;,8,0,0,0,0,1,0,4,0,14,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2829,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2830,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2832,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2869,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2909,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,8,0,0,9,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2931,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2932,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2934,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2935,        if (len == 0) {,4,2,0,1,3,0,0,0,0,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2936,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2938,        List<String> list = new ArrayList<String>();,6,0,0,1,2,0,4,8,0,19,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2939,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2940,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2941,        boolean match = false;,4,0,0,0,0,0,6,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2942,        boolean lastMatch = false;,2,1,0,0,0,0,10,0,0,15,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2943,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,1,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2945,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2946,                if (Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,12,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2947,                    if (match || preserveAllTokens) {,10,2,0,1,3,0,10,0,0,23,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2948,                        lastMatch = true;,8,1,0,0,0,1,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2949,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2950,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2951,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2953,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2954,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2956,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2957,                    continue;,2,0,0,0,0,0,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2959,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2960,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2961,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2963,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,0,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2965,            char sep = separatorChars.charAt(0);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2966,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2967,                if (str.charAt(i) == sep) {,4,1,0,2,5,0,10,2,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2968,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2969,                        lastMatch = true;,6,1,0,0,0,0,0,0,0,9,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2970,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2971,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2972,                            lastMatch = false;,4,1,0,0,0,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2974,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2975,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2977,                    start = ++i;,14,4,0,0,0,0,6,0,0,27,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2978,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2980,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2981,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2982,                i++;,2,0,0,0,0,0,0,0,0,4,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2984,        } else {,0,0,0,0,2,0,4,0,0,4,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2986,            while (i < len) {,4,1,0,1,3,0,4,2,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2987,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,3,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2988,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2989,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2990,                        if (sizePlus1++ == max) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2991,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2992,                            lastMatch = false;,4,3,0,0,0,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2994,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2995,                        match = false;,8,1,0,0,0,0,0,0,0,10,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2997,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2998,                    continue;,0,0,0,0,0,0,4,0,0,4,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3000,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3001,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3002,                i++;,6,1,0,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3005,        if (match || (preserveAllTokens && lastMatch)) {,10,2,0,2,5,0,8,0,0,20,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3006,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3008,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3031,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3059,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3077,        if (str == null) {,0,0,0,1,3,0,12,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3078,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3080,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3081,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3083,        char[] c = str.toCharArray();,0,0,0,2,4,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3084,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3085,        int tokenStart = 0;,8,1,0,0,0,0,10,0,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3086,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3087,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,2,0,0,1,3,0,10,0,0,14,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3088,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3089,            if (type == currentType) {,8,2,0,1,3,0,0,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3090,                continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3092,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,14,4,0,1,3,0,0,0,0,18,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3093,                int newTokenStart = pos - 1;,8,1,0,0,0,0,0,2,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3094,                if (newTokenStart != tokenStart) {,6,1,0,1,3,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3095,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",8,1,0,2,4,0,4,2,0,15,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3096,                    tokenStart = newTokenStart;,2,1,0,0,0,0,0,0,0,4,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3098,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3099,"                list.add(new String(c, tokenStart, pos - tokenStart));",10,1,0,2,4,0,4,2,0,17,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3100,                tokenStart = pos;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3102,            currentType = type;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3104,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3105,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3127,"        return join(elements, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3149,"        return join(elements, separator);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3173,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3199,        if (array == null) {,4,2,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3200,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3203,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3233,        if (array == null) {,4,1,1,1,3,0,4,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3234,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3236,        int bufSize = (endIndex - startIndex);,2,0,0,1,2,0,6,2,0,10,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3237,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3238,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3241,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,6,3,1,6,12,0,4,2,0,26,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3242,        StringBuilder buf = new StringBuilder(bufSize);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3244,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,10,0,0,22,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3245,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3246,                buf.append(separator);,0,0,0,1,2,0,14,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3248,            if (array[i] != null) {,2,0,0,2,5,0,0,0,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3249,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3252,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3280,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3281,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3283,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3314,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3315,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3317,        if (separator == null) {,8,0,0,1,3,0,8,0,0,16,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3318,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3323,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3324,        if (bufSize <= 0) {,6,0,0,1,3,0,4,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3325,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3328,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3331,        StringBuilder buf = new StringBuilder(bufSize);,8,1,0,1,2,0,0,4,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3333,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,1,10,4,0,29,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3334,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3335,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3337,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3338,                buf.append(array[i]);,2,0,1,2,4,1,8,2,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3341,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3361,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3362,            return null;,2,0,0,0,0,1,0,0,0,4,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3364,        if (!iterator.hasNext()) {,0,1,0,2,5,0,4,2,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3365,            return EMPTY;,0,1,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3367,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3368,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3369,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3373,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3374,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3375,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3378,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3379,            buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3380,            Object obj = iterator.next();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3381,            if (obj != null) {,4,1,0,1,3,0,4,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3382,                buf.append(obj);,2,1,0,1,2,0,10,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3384,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3386,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3405,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3406,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3408,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3409,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3411,        Object first = iterator.next();,4,3,0,1,2,0,0,0,0,7,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3412,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3413,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3417,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3418,        if (first != null) {,2,2,0,1,3,0,4,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3419,            buf.append(first);,2,0,0,1,2,0,0,0,0,2,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3422,        while (iterator.hasNext()) {,2,0,1,2,5,0,4,2,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3423,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3424,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3426,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3427,            if (obj != null) {,8,2,1,1,3,0,0,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3428,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3430,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3431,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3449,        if (iterable == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3450,            return null;,0,0,0,0,0,1,6,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3452,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3470,        if (iterable == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3471,            return null;,2,0,0,0,0,1,0,0,0,3,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3473,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3493,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3494,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3496,        int sz = str.length();,4,0,0,1,2,1,8,0,0,13,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3497,        char[] chs = new char[sz];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3498,        int count = 0;,4,0,0,0,0,0,6,0,0,10,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3499,        for (int i = 0; i < sz; i++) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3500,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3501,                chs[count++] = str.charAt(i);,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3504,        if (count == sz) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3505,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3507,"        return new String(chs, 0, count);",4,0,0,1,2,1,4,2,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3537,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3538,            return str;,2,1,0,0,0,1,0,0,0,3,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3540,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,1,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3541,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3543,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3572,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3573,            return str;,4,0,0,0,0,1,12,0,0,16,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3575,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3576,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3578,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3606,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3607,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3609,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3610,"            return str.substring(0, str.length() - remove.length());",2,1,0,3,6,1,12,2,0,17,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3612,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3642,        if (isEmpty(str) || isEmpty(remove)) {,6,4,0,3,7,0,8,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3643,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3645,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3646,"            return str.substring(0, str.length() - remove.length());",2,1,0,3,6,1,12,0,0,15,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3648,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3675,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3676,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3678,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3701,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,2,2,0,3,7,0,10,0,0,14,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3702,            return str;,0,0,0,0,0,1,0,0,0,1,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3704,        char[] chars = str.toCharArray();,10,0,0,2,4,0,16,0,0,27,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3705,        int pos = 0;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3706,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3707,            if (chars[i] != remove) {,2,1,1,2,5,0,0,0,0,7,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3708,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3711,"        return new String(chars, 0, pos);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3740,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3767,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3799,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3800,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3802,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3803,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,16,0,0,19,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3804,        if (end == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3805,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3807,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3808,        int increase = replacement.length() - replLength;,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3809,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3810,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3811,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,0,0,0,0,3,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3812,        while (end != INDEX_NOT_FOUND) {,14,4,0,1,3,0,4,0,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3813,"            buf.append(text.substring(start, end)).append(replacement);",4,1,1,3,6,0,16,0,0,27,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3814,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3815,            if (--max == 0) {,2,1,1,1,3,0,8,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3816,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3818,"            end = text.indexOf(searchString, start);",10,0,0,1,2,0,16,0,0,27,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3820,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3821,        return buf.toString();,2,0,0,1,2,1,8,2,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3864,"        return replaceEach(text, searchList, replacementList, false, 0);",4,0,0,1,2,1,12,0,0,18,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3915,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3916,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3974,        if (text == null || text.length() == 0 || searchList == null ||,6,8,0,1,3,0,12,0,0,27,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3977,            return text;,6,0,0,0,0,1,0,2,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3981,        if (timeToLive < 0) {,12,1,0,1,3,0,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3982,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3985,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3986,        int replacementLength = replacementList.length;,16,1,0,0,0,0,0,0,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3989,        if (searchLength != replacementLength) {,4,1,0,1,3,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3990,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,0,0,1,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3997,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4000,        int textIndex = -1;,2,0,0,0,0,0,4,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4001,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4002,        int tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4006,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4007,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,0,0,2,5,0,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4010,                continue;,2,0,0,0,0,0,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4012,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4015,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4016,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4018,                if (textIndex == -1 || tempIndex < textIndex) {,10,3,0,1,3,0,0,4,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4019,                    textIndex = tempIndex;,0,0,0,0,0,0,10,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4020,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4027,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4028,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4031,        int start = 0;,14,1,0,0,0,0,4,0,0,19,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4034,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4037,        for (int i = 0; i < searchList.length; i++) {,2,0,0,1,3,0,0,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4038,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,3,7,0,0,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4039,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4041,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4042,            if (greater > 0) {,4,1,0,1,3,0,8,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4043,                increase += 3 * greater; // assume 3 matches,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4047,"        increase = Math.min(increase, text.length() / 5);",0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4049,        StringBuilder buf = new StringBuilder(text.length() + increase);,14,4,1,2,4,0,4,4,0,30,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4051,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4053,            for (int i = start; i < textIndex; i++) {,2,0,1,1,3,0,4,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4054,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4056,            buf.append(replacementList[replaceIndex]);,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4058,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4060,            textIndex = -1;,0,0,0,0,0,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4061,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4062,            tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4065,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4066,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,10,4,1,2,5,0,8,0,0,32,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4069,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4071,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4074,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4075,                    noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4077,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4078,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4079,                        replaceIndex = i;,12,1,0,0,0,0,0,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4086,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4087,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4088,            buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4090,        String result = buf.toString();,4,0,0,1,2,0,4,2,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4091,        if (!repeat) {,10,1,0,1,3,0,0,0,0,12,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4092,            return result;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4095,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4121,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4122,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4124,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4164,        if (isEmpty(str) || isEmpty(searchChars)) {,2,2,0,3,7,0,18,0,0,22,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4165,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4167,        if (replaceChars == null) {,8,2,0,1,3,0,0,0,0,11,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4168,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4170,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4171,        int replaceCharsLength = replaceChars.length();,4,1,0,1,2,0,4,0,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4172,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4173,        StringBuilder buf = new StringBuilder(strLength);,6,1,0,1,2,0,6,4,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4174,        for (int i = 0; i < strLength; i++) {,12,2,0,1,3,0,14,4,0,33,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4175,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4176,            int index = searchChars.indexOf(ch);,4,0,0,1,2,1,10,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4177,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4178,                modified = true;,2,0,0,0,0,0,0,0,0,4,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4179,                if (index < replaceCharsLength) {,6,1,0,1,3,0,0,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4180,                    buf.append(replaceChars.charAt(index));,2,1,0,2,4,0,10,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4183,                buf.append(ch);,0,0,0,1,2,0,6,0,0,6,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4186,        if (modified) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4187,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4189,        return str;,0,0,0,0,0,1,10,0,0,10,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4224,        if (str == null) {,2,1,0,1,3,0,10,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4227,        if (overlay == null) {,2,1,0,1,3,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4228,            overlay = EMPTY;,2,1,0,0,0,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4230,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4231,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4232,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4234,        if (start > len) {,6,1,0,1,3,0,4,2,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4235,            start = len;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4237,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4238,            end = 0;,6,1,1,0,0,0,0,2,0,13,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4240,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4241,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4243,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4244,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4245,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4246,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4248,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4283,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4284,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4287,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4288,            char ch = str.charAt(0);,4,0,0,1,2,0,4,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4289,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,12,3,0,1,3,0,0,0,0,15,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4290,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4292,            return str;,6,1,0,0,0,1,0,0,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4295,        int lastIdx = str.length() - 1;,2,0,0,1,2,0,6,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4296,        char last = str.charAt(lastIdx);,4,0,1,1,2,0,14,0,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4298,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4299,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4300,                lastIdx--;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4302,        } else if (last != CharUtils.CR) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4303,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4305,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,12,0,0,12,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4335,        if (isEmpty(str) || separator == null) {,6,3,0,2,5,0,4,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4336,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4338,        if (str.endsWith(separator)) {,0,0,0,2,5,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4339,"            return str.substring(0, str.length() - separator.length());",10,2,0,3,6,1,18,0,0,31,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4341,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4370,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4371,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4373,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4374,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4375,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4377,        int lastIdx = strLen - 1;,4,1,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4378,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4379,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4380,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4381,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,8,2,0,2,5,0,4,0,0,14,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4382,"                return ret.substring(0, lastIdx - 1);",4,0,0,1,2,1,4,0,0,8,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4385,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4414,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4415,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4417,        if (repeat <= 0) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4418,            return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4420,        int inputLength = str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4421,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4422,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4424,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,8,3,0,1,3,0,4,0,0,16,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4425,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4428,        int outputLength = inputLength * repeat;,10,1,0,0,0,0,4,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4429,        switch (inputLength) {,2,0,0,1,3,0,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4431,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4432,                char[] output1 = new char[outputLength];,8,1,1,2,4,1,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4433,                for (int i = repeat - 1; i >= 0; i--) {,10,3,0,1,3,0,8,0,0,22,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4434,                    output1[i] = ch;,2,0,1,1,2,0,0,0,0,7,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4436,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4438,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4439,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4440,                char[] output2 = new char[outputLength];,6,2,1,2,4,0,10,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4441,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",4,0,0,1,3,1,0,2,0,7,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4442,                    output2[i] = ch0;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4443,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4445,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4447,                StringBuilder buf = new StringBuilder(outputLength);,10,1,0,1,2,0,0,4,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4448,                for (int i = 0; i < repeat; i++) {,18,2,1,1,3,0,4,0,0,31,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4449,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4451,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4476,        if(str == null || separator == null) {,6,3,0,1,3,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4477,"            return repeat(str, repeat);",6,1,0,1,2,2,16,2,0,26,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4480,"            String result = repeat(str + separator, repeat);",0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4481,"            return removeEnd(result, separator);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4509,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4510,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4512,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4513,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4514,            buf[i] = padChar;,6,0,1,1,2,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4516,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4539,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4564,        if (str == null) {,12,2,0,1,3,2,4,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4565,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4567,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4568,        if (pads <= 0) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4569,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4571,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4572,"            return rightPad(str, size, String.valueOf(padChar));",6,1,0,2,4,1,12,0,0,20,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4574,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4601,        if (str == null) {,10,2,0,1,3,0,0,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4602,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4604,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4605,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4607,        int padLen = padStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4608,        int strLen = str.length();,2,1,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4609,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4610,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4611,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4613,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,10,0,0,19,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4614,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4617,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4618,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4619,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4620,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4622,            char[] padding = new char[pads];,2,1,1,2,4,0,10,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4623,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4624,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4625,                padding[i] = padChars[i % padLen];,2,1,0,2,4,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4627,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4651,"        return leftPad(str, size, ' ');",6,5,0,1,2,1,22,0,0,36,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4676,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4677,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4679,        int pads = size - str.length();,6,2,0,1,2,0,4,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4680,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4681,            return str; // returns original String when possible,14,1,0,0,0,1,0,0,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4683,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4684,"            return leftPad(str, size, String.valueOf(padChar));",8,2,0,2,4,1,12,0,0,23,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4686,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4713,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4714,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4716,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4717,"            padStr = "" "";",12,4,0,0,0,0,4,0,0,20,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4719,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4720,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4721,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4722,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4723,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4725,        if (padLen == 1 && pads <= PAD_LIMIT) {,8,3,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4726,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4729,        if (pads == padLen) {,0,0,0,1,3,0,6,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4730,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4731,        } else if (pads < padLen) {,10,2,0,1,4,0,0,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4732,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4734,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4735,            char[] padChars = padStr.toCharArray();,4,0,0,2,4,0,16,2,0,23,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4736,            for (int i = 0; i < pads; i++) {,10,1,0,1,3,0,4,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4737,                padding[i] = padChars[i % padLen];,6,2,1,2,4,0,0,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4739,            return new String(padding).concat(str);,2,0,0,2,4,1,4,2,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4757,        return CharSequenceUtils.length(cs);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4786,"        return center(str, size, ' ');",0,1,0,1,2,1,8,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4814,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4815,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4817,        int strLen = str.length();,10,0,0,1,2,0,8,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4818,        int pads = size - strLen;,12,2,0,0,0,0,0,0,0,14,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4819,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4820,            return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4822,"        str = leftPad(str, strLen + pads / 2, padChar);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4823,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4824,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4854,        if (str == null || size <= 0) {,0,0,0,1,3,0,10,0,0,10,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4855,            return str;,0,0,0,0,0,1,0,0,0,1,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4857,        if (isEmpty(padStr)) {,0,0,1,2,5,0,8,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4858,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4860,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4861,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4862,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4863,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4865,"        str = leftPad(str, strLen + pads / 2, padStr);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4866,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4867,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4892,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4893,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4895,        return str.toUpperCase();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4915,        if (str == null) {,8,3,0,1,3,0,8,0,0,21,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4916,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4918,        return str.toUpperCase(locale);,2,0,0,1,2,1,6,0,0,8,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4941,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4942,            return null;,4,0,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4944,        return str.toLowerCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4964,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4965,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4967,        return str.toLowerCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4992,        if (cs == null ) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4993,            return null;,2,1,0,0,0,1,4,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4996,        if ((strLen = cs.length()) == 0) {,4,3,0,3,7,0,8,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4997,            return cs.toString();,2,0,0,1,2,1,4,0,0,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4999,        return new StringBuilder(strLen),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5027,        if (cs == null ) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5028,            return null;,2,0,1,0,0,1,4,2,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5031,        if ((strLen = cs.length()) == 0) {,2,1,0,3,7,0,4,0,0,8,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5032,            return cs.toString();,6,1,0,1,2,1,4,0,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5034,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,5,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5069,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5070,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5072,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5074,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5075,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5076,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5077,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5078,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5079,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5080,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5081,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5082,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5084,            buffer.append(ch);,4,0,0,1,2,0,6,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5086,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5111,        if (isEmpty(str) || isEmpty(sub)) {,6,4,0,3,7,0,8,0,0,19,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5112,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5114,        int count = 0;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5115,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5116,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {",4,1,0,3,7,0,8,0,0,14,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5117,            count++;,8,0,0,0,0,1,0,4,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5118,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5120,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5145,        if (cs == null) {,4,4,0,1,3,0,4,0,0,12,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5146,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5148,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5149,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5150,            if (Character.isLetter(cs.charAt(i)) == false) {,4,1,0,3,7,0,10,0,0,17,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5151,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5154,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5180,        if (cs == null) {,4,2,0,1,3,0,0,0,0,6,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5181,            return false;,0,0,0,0,0,1,6,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5183,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5184,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5185,            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5186,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5214,        if (cs == null) {,4,1,0,1,3,0,4,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5215,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5217,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5218,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5219,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5220,                return false;,2,0,0,0,0,1,0,0,0,4,13,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5223,        return true;,12,2,0,0,0,1,0,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5249,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5250,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5252,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5253,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5254,            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5255,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5258,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5288,        if (cs == null) {,0,0,0,1,3,0,6,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5289,            return false;,2,3,0,0,0,1,8,0,0,16,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5291,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5292,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,1,0,2,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5293,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,4,2,0,3,7,0,10,0,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5294,                return false;,2,0,1,0,0,1,4,0,0,9,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5297,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5323,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5324,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5326,        int sz = cs.length();,10,0,0,1,2,0,12,0,0,22,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5327,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5328,            if (Character.isDigit(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5329,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5332,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5360,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5361,            return false;,4,0,0,0,0,1,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5363,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5364,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5365,            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5366,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5369,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5393,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5394,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5396,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5397,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5398,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,1,4,9,0,18,0,0,26,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5399,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5402,        return true;,6,1,0,0,0,1,4,0,0,11,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5425,        if (cs == null || isEmpty(cs)) {,2,3,0,2,5,0,10,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5426,            return false;,0,1,0,0,0,1,6,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5428,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5429,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,1,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5430,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5431,                return false;,0,0,0,0,0,1,0,1,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5434,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5457,        if (cs == null || isEmpty(cs)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5458,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5460,        int sz = cs.length();,4,0,0,1,2,0,8,0,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5461,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5462,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5463,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5466,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5488,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5509,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5530,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5550,        if (str == null) {,10,1,0,1,3,0,8,0,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5551,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5553,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5576,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5577,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5581,"        String[] strs = split(str, separatorChar);",10,2,0,2,4,1,6,14,0,33,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5582,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5583,"        return join(strs, separatorChar);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5621,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5660,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5661,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5663,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5664,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",6,2,0,1,2,0,0,2,0,11,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5666,        if (str.length() <= maxWidth) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5667,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5669,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5670,            offset = str.length();,4,0,0,1,2,0,4,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5672,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5673,            offset = str.length() - (maxWidth - 3);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5675,"        final String abrevMarker = ""..."";",0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5676,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5677,"            return str.substring(0, maxWidth - 3) + abrevMarker;",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5679,        if (maxWidth < 7) {,2,2,1,1,3,0,0,0,0,8,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5680,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5682,        if ((offset + (maxWidth - 3)) < str.length()) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5683,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",4,2,0,2,4,1,8,0,0,14,69,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5685,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,4,3,0,3,6,1,8,0,0,15,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5718,        if (isEmpty(str) || isEmpty(middle)) {,4,1,1,3,7,0,12,2,0,23,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5719,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5722,        if (length >= str.length() || length < (middle.length()+2)) {,4,4,0,4,9,0,8,0,0,16,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5723,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5726,        int targetSting = length-middle.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5727,        int startOffset = targetSting/2+targetSting%2;,0,0,0,0,0,0,0,0,0,0,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5728,        int endOffset = str.length()-targetSting/2;,4,2,0,1,2,0,4,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5730,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5731,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5732,        builder.append(middle);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5733,        builder.append(str.substring(endOffset));,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5735,        return builder.toString();,0,0,0,1,2,1,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5766,        if (str1 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5767,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5769,        if (str2 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5770,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5772,"        int at = indexOfDifference(str1, str2);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5773,        if (at == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5774,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5776,        return str2.substring(at);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5804,        if (cs1 == cs2) {,6,2,1,1,3,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5805,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5807,        if (cs1 == null || cs2 == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5808,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5811,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,8,3,0,3,7,0,12,0,0,25,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5812,            if (cs1.charAt(i) != cs2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5813,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5816,        if (i < cs2.length() || i < cs1.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5817,            return i;,4,0,0,0,0,1,0,2,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5819,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5855,        if (css == null || css.length <= 1) {,12,4,0,1,3,0,4,0,0,20,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5856,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5858,        boolean anyStringNull = false;,2,0,1,0,0,0,8,0,0,15,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5859,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5860,        int arrayLen = css.length;,8,0,0,0,0,0,0,0,0,8,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5861,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5862,        int longestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5867,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5868,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5869,                anyStringNull = true;,6,1,0,0,0,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5870,                shortestStrLen = 0;,2,1,1,0,0,0,0,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5872,                allStringsNull = false;,14,1,0,0,0,0,0,0,0,18,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5873,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5874,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",0,0,0,3,6,0,0,0,0,9,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5879,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,0,0,0,10,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5880,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5884,        if (shortestStrLen == 0) {,2,0,0,1,3,0,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5885,            return 0;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5889,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5890,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,20,6,0,1,3,0,4,0,0,32,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5891,            char comparisonChar = css[0].charAt(stringPos);,10,2,1,2,4,0,12,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5892,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5893,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5894,                    firstDiff = stringPos;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5895,                    break;,0,0,0,0,0,0,6,0,0,6,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5898,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5899,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5903,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,2,0,13,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5907,            return shortestStrLen;,4,0,0,0,0,1,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5909,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5946,        if (strs == null || strs.length == 0) {,6,4,0,1,3,0,8,0,0,18,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5947,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5949,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5950,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,2,1,0,1,3,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5952,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5953,                return EMPTY;,10,1,0,0,0,1,14,0,0,25,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5955,            return strs[0];,0,0,0,1,2,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5956,        } else if (smallestIndexOfDiff == 0) {,0,0,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5958,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5961,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6003,        if (s == null || t == null) {,4,4,0,1,3,0,8,0,0,16,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6004,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6024,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6025,        int m = t.length(); // length of t,2,1,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6027,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6028,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6029,        } else if (m == 0) {,2,1,0,1,4,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6030,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6033,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6035,            CharSequence tmp = s;,4,0,0,0,0,0,0,2,0,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6036,            s = t;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6037,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6038,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6039,            m = t.length();,2,0,0,1,2,0,6,0,0,8,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6042,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6043,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6054,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6055,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6058,        for (j = 1; j<=m; j++) {,12,2,0,1,3,0,0,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6059,            t_j = t.charAt(j-1);,6,2,0,1,2,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6060,            d[0] = j;,4,0,1,1,2,0,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6062,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6063,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6065,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0,0,0,6,12,0,0,0,0,18,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6069,            _d = p;,6,0,1,0,0,0,0,0,0,12,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6070,            p = d;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6071,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6076,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6104,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6129,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6144,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6145,            return (str == null && prefix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6147,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6148,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6150,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,12,0,0,12,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6172,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,8,5,0,3,7,0,10,0,0,23,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6173,            return false;,8,1,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6175,        for (int i = 0; i < searchStrings.length; i++) {,10,1,0,1,3,0,10,0,0,22,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6176,            String searchString = searchStrings[i];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6177,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6178,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6181,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6210,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6236,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6251,        if (str == null || suffix == null) {,6,3,0,1,3,0,0,0,0,10,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6252,            return str == null && suffix == null;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6254,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6255,            return false;,2,1,0,0,0,1,6,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6257,        int strOffset = str.length() - suffix.length();,8,4,0,2,4,0,8,0,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6258,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,2,4,0,3,7,0,10,0,0,18,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,93,                for(int j=0; j<consumed; j++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,94,                    if(i < sz - 2) {,4,2,0,1,3,0,0,0,0,6,16,10,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,95,"                        i += Character.charCount( Character.codePointAt(input, i) );",2,0,0,2,4,0,12,0,0,15,60,12,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,98,                        i++;,2,0,0,0,0,0,0,0,0,3,4,12,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,102,                i--;,2,0,0,0,0,0,0,0,0,3,4,8,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,54,        if (input == null) {,2,3,0,1,3,0,4,0,0,9,20,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,58,            StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???,2,1,0,2,4,0,4,4,0,11,99,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,59,"            translate(input, writer);",6,0,0,1,2,0,12,0,0,18,25,3,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,60,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,0,0,0,0,4,64,5,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,6,0,12,64,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,6,1,0,2,4,3,4,4,0,18,65,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,12,1,0,2,4,3,0,6,0,23,68,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,8,4,0,17,68,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,1,0,2,4,0,0,0,0,3,74,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,2,0,16,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",4,1,1,1,2,3,10,2,0,29,86,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",2,0,0,1,2,3,2,2,0,10,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",4,0,0,1,2,6,2,2,0,15,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",2,0,0,1,2,3,2,2,0,10,121,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,1,0,1,2,0,2,0,0,7,76,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,1,1,2,0,4,0,0,8,82,10,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",4,1,0,1,2,3,2,4,0,17,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,0,0,0,6,118,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",6,4,0,1,2,3,10,2,0,27,78,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,4,0,0,1,2,3,2,4,0,13,74,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,0,0,0,1,2,0,0,0,0,3,65,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,1,0,1,2,0,4,0,0,7,71,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,6,0,0,12,68,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,0,0,1,2,3,2,0,0,10,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",0,0,0,1,2,0,0,0,0,3,65,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,1,0,0,0,3,0,0,0,18,128,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,2,0,14,96,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,1,0,1,2,0,0,0,0,3,91,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,0,4,0,9,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",4,0,0,1,2,3,4,0,0,12,90,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,95,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,1,2,1,6,0,0,6,63,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1410,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1413,                if (ch >= '0' && ch <= '9') {,0,0,0,1,3,0,0,0,0,4,29,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1414,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,0,0,0,4,33,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1462,            return System.getProperty(property);,8,0,0,1,2,3,0,0,0,10,36,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1577,        return version.startsWith(versionPrefix);,4,0,0,1,2,1,12,2,0,18,41,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1616,        if (osName == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1619,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,0,0,0,4,39,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1716,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",6,0,0,3,6,0,6,0,0,12,54,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1721,        int j = 0;,2,1,0,0,0,0,8,0,0,11,10,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1723,            String s = strings[i];,0,0,0,1,2,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1724,            if (s.length() > 0) {,0,1,0,2,5,0,4,0,0,5,21,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,2,0,1,2,4,0,6,0,0,12,32,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1728,        return ints;,2,0,0,0,0,1,0,0,0,2,12,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,12,4,0,1,3,0,0,0,0,17,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1755,        if (javaVersions.length == 1) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1758,        StringBuilder builder = new StringBuilder();,0,0,0,1,2,0,0,0,0,3,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1760,        builder.append('.');,0,0,0,1,2,0,4,0,0,5,20,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1761,        for (int i = 1; i < javaVersions.length; i++) {,0,0,0,1,3,0,0,0,0,4,47,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1765,            return Float.parseFloat(builder.toString());,0,0,0,2,4,1,0,0,0,7,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,12,2,0,1,3,0,0,0,0,15,27,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1795,        int intVersion = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,6,0,0,0,0,0,0,0,0,6,30,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,0,0,0,1,3,0,4,0,0,5,15,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,2,1,1,1,2,0,0,0,0,6,35,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1801,            intVersion += javaVersions[1] * 10;,0,0,0,1,2,0,0,0,0,3,35,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1803,        if (len >= 3) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1804,            intVersion += javaVersions[2];,2,0,1,1,2,0,0,0,0,5,30,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,8,1,0,0,0,1,0,0,0,9,18,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,145,      super();,0,0,0,1,2,0,8,0,0,8,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,146,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,162,"        return toString(array, ""{}"");",6,1,0,2,4,1,8,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,178,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,179,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",8,0,0,3,6,1,6,2,0,17,87,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,226,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,227,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,230,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,2,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,231,            Object object = array[i];,2,0,1,1,2,0,6,2,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,232,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,234,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,235,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,236,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,237,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,242,"                map.put(entry[0], entry[1]);",0,0,1,3,6,0,10,0,0,14,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,243,            } else {,2,0,0,0,2,0,0,0,0,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,294,        return items;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,312,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,313,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,315,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,328,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,329,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,331,        return array.clone();,4,3,0,1,2,1,4,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,345,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,347,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,360,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,361,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,363,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,376,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,377,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,379,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,392,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,393,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,395,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,408,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,409,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,411,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,424,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,425,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,427,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,440,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,441,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,443,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,462,        if (array == null || array.length == 0) {,8,3,0,1,3,3,6,2,0,22,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,463,            return EMPTY_OBJECT_ARRAY;,6,0,0,0,0,4,6,2,0,17,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,465,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,482,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,483,            return EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,485,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,502,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,503,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,505,        return array;,6,1,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,522,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,523,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,525,        return array;,12,1,0,0,0,1,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,542,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,543,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,545,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,562,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,11,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,563,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,565,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,582,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,583,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,585,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,602,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,603,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,605,        return array;,0,0,0,0,0,1,2,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,622,        if (array == null || array.length == 0) {,8,3,0,1,3,0,8,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,623,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,625,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,642,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,643,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,645,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,662,        if (array == null || array.length == 0) {,14,4,0,1,3,1,0,4,0,23,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,663,            return EMPTY_LONG_OBJECT_ARRAY;,4,0,0,0,0,1,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,665,        return array;,10,1,0,0,0,1,4,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,682,        if (array == null || array.length == 0) {,6,4,0,1,3,0,6,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,685,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,702,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,703,            return EMPTY_SHORT_OBJECT_ARRAY;,4,0,0,0,0,1,0,2,0,7,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,705,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,722,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,725,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,742,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,743,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,745,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,762,        if (array == null || array.length == 0) {,8,4,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,765,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,782,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,785,        return array;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,802,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,805,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,839,            return null;,2,1,1,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,841,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,842,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,844,        if (endIndexExclusive > array.length) {,4,0,0,1,3,0,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,845,            endIndexExclusive = array.length;,2,0,1,0,0,0,0,0,0,7,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,847,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,848,        Class<?> type = array.getClass().getComponentType();,4,0,0,2,4,0,6,2,0,12,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,849,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,851,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",2,0,0,4,8,1,6,4,0,13,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,852,            return emptyArray;,4,0,0,0,0,1,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,855,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,856,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,857,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,880,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,883,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,884,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,886,        if (endIndexExclusive > array.length) {,10,1,0,1,3,0,0,0,0,12,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,887,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,889,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,890,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,891,            return EMPTY_LONG_ARRAY;,4,0,1,0,0,1,0,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,894,        long[] subarray = new long[newSize];,2,1,0,2,4,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,895,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,896,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,919,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,920,            return null;,4,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,922,        if (startIndexInclusive < 0) {,6,1,0,1,3,0,0,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,923,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,925,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,926,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,928,        int newSize = endIndexExclusive - startIndexInclusive;,12,3,0,0,0,0,0,0,0,16,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,929,        if (newSize <= 0) {,4,2,0,1,3,0,10,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,930,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,933,        int[] subarray = new int[newSize];,2,0,1,2,4,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,934,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,2,0,1,2,0,16,0,0,21,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,935,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,958,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,959,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,961,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,962,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,964,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,965,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,967,        int newSize = endIndexExclusive - startIndexInclusive;,2,1,0,0,0,0,0,2,0,6,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,968,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,969,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,972,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,973,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,974,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,997,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,998,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1000,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,6,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1001,            startIndexInclusive = 0;,4,1,0,0,0,0,10,0,0,15,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1003,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1004,            endIndexExclusive = array.length;,8,0,0,0,0,0,0,0,0,9,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1006,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1007,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1008,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1011,        char[] subarray = new char[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1012,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1013,        return subarray;,4,0,0,0,0,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1036,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1037,            return null;,8,6,0,0,0,1,0,0,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1039,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1040,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1042,        if (endIndexExclusive > array.length) {,12,1,0,1,3,0,0,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1043,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1045,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1046,        if (newSize <= 0) {,6,4,0,1,3,0,0,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1047,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1050,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1051,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1052,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1075,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1076,            return null;,2,0,0,0,0,1,8,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1078,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,8,2,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1079,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1081,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1082,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1084,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1085,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1086,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1089,        double[] subarray = new double[newSize];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1090,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",10,0,0,1,2,0,12,2,0,25,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1091,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1114,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1115,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1117,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1118,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1120,        if (endIndexExclusive > array.length) {,12,1,0,1,3,0,0,2,0,16,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1121,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1123,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1124,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1125,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1128,        float[] subarray = new float[newSize];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1129,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1130,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1153,        if (array == null) {,0,0,0,1,3,0,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1154,            return null;,8,0,0,0,0,1,0,2,0,11,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1156,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1157,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1159,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1160,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1162,        int newSize = endIndexExclusive - startIndexInclusive;,2,0,1,0,0,0,0,0,0,4,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1163,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1164,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1167,        boolean[] subarray = new boolean[newSize];,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1168,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,2,0,3,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1169,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1186,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,4,0,0,18,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1189,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1191,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1207,                return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1209,        return true;,2,0,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1225,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1243,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1245,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1261,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1263,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1279,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1281,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,7,0,1,3,0,6,0,0,23,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1299,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1315,                return false;,6,0,0,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1317,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1333,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1335,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1360,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1361,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1363,        return Array.getLength(array);,2,0,0,1,2,1,8,2,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1376,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1377,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1379,        return array1.getClass().getName().equals(array2.getClass().getName());,2,1,0,5,10,1,14,0,0,17,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1394,        if (array == null) {,10,1,0,1,3,0,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1395,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1397,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1398,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1400,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1401,            tmp = array[j];,8,0,1,1,2,0,0,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1402,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1403,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1404,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1405,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1407,    },2,0,0,0,1,0,14,0,0,16,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1417,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1418,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1420,        int i = 0;,8,1,0,0,0,0,0,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1421,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1423,        while (j > i) {,6,2,0,1,3,0,0,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1424,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1425,            array[j] = array[i];,2,1,1,2,4,0,4,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1426,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1427,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1428,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1430,    },4,1,0,0,1,0,4,4,0,13,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1440,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1441,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1443,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1444,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1446,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1447,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1448,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1449,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1450,            j--;,6,2,0,0,0,0,4,0,0,13,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1451,            i++;,6,1,0,0,0,1,10,0,0,19,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1453,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1463,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1464,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1466,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1467,        int j = array.length - 1;,10,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1469,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1470,            tmp = array[j];,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1471,            array[j] = array[i];,6,2,1,2,4,0,4,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1472,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1473,            j--;,2,0,0,0,0,0,0,0,0,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1474,            i++;,2,0,0,0,0,0,0,0,0,2,4,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1476,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1486,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1487,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1489,        int i = 0;,2,0,0,0,0,0,10,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1490,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1492,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1493,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1494,            array[j] = array[i];,2,0,1,2,4,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1495,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1496,            j--;,4,0,0,0,0,0,0,0,0,5,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1497,            i++;,8,1,0,0,0,0,6,0,0,16,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1499,    },2,0,0,0,1,0,6,0,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1509,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1510,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1512,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1513,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1515,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1516,            tmp = array[j];,4,2,1,1,2,0,4,0,0,16,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1517,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1518,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1519,            j--;,2,0,0,0,0,0,6,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1520,            i++;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1522,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1532,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1533,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1535,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1536,        int j = array.length - 1;,22,2,0,0,0,0,6,0,0,31,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1538,        while (j > i) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1539,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1540,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1541,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1542,            j--;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1543,            i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1545,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1555,        if (array == null) {,0,0,0,1,3,0,8,0,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1556,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1558,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1559,        int j = array.length - 1;,8,2,0,0,0,0,0,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1561,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1562,            tmp = array[j];,2,0,1,1,2,0,0,0,0,16,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1563,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1564,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1565,            j--;,2,0,0,0,0,0,0,0,0,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1566,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1568,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1578,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1579,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1581,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1582,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1584,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1585,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1586,            array[j] = array[i];,2,1,1,2,4,0,4,0,0,16,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1587,            array[i] = tmp;,6,0,0,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1588,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1589,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1591,    },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1609,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,12,0,0,13,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1627,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1628,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,8,0,0,11,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1630,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1631,            startIndex = 0;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1633,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1634,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1635,                if (array[i] == null) {,10,3,1,2,5,0,0,0,0,17,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1636,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1639,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1640,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,4,0,0,5,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1641,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1642,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1646,        return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1660,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1678,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1679,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1681,        if (startIndex < 0) {,12,3,0,1,3,0,2,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1682,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1683,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1684,            startIndex = array.length - 1;,12,2,0,0,0,0,0,0,0,16,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1686,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1687,            for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1688,                if (array[i] == null) {,2,1,1,2,5,0,0,0,0,12,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1689,                    return i;,2,0,0,0,0,1,0,0,0,3,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1692,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1693,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,8,4,0,12,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1694,                if (objectToFind.equals(array[i])) {,0,0,1,3,7,0,4,0,0,8,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1695,                    return i;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1699,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1712,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1728,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,4,4,0,13,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1746,        if (array == null) {,14,1,0,1,3,0,0,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1747,            return INDEX_NOT_FOUND;,4,2,0,0,0,1,8,0,0,14,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1749,        if (startIndex < 0) {,2,1,0,1,3,0,4,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1750,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1752,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1753,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1754,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1757,        return INDEX_NOT_FOUND;,8,0,0,0,0,1,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1771,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1789,        if (array == null) {,10,2,0,1,3,0,0,4,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1790,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1792,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1793,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1794,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1795,            startIndex = array.length - 1;,8,2,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1797,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1798,            if (valueToFind == array[i]) {,4,0,0,2,5,0,0,0,0,4,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1799,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1802,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1815,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1831,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1849,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1850,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1852,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1853,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1855,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,6,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1856,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1857,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1860,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1874,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1892,        if (array == null) {,8,1,0,1,3,0,0,2,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1893,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1895,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1896,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1897,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1898,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1900,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1901,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1902,                return i;,6,3,0,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1905,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1918,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",6,2,0,1,2,1,14,0,0,23,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1934,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1952,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1953,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1955,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1956,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1958,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1959,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,1,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1960,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1963,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1977,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,14,0,0,18,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1995,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1996,            return INDEX_NOT_FOUND;,2,1,1,0,0,1,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1998,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1999,            return INDEX_NOT_FOUND;,0,1,0,0,0,1,8,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2000,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2001,            startIndex = array.length - 1;,8,6,0,0,0,0,0,0,0,14,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2003,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2004,            if (valueToFind == array[i]) {,2,0,0,2,5,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2005,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2008,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2021,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",10,1,0,1,2,2,6,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2038,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2057,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2058,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2060,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2061,            startIndex = 0;,4,3,0,0,0,0,0,0,0,7,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2063,        for (int i = startIndex; i < array.length; i++) {,4,0,0,1,3,0,0,0,0,6,49,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2064,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2065,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2068,        return INDEX_NOT_FOUND;,8,1,0,0,0,1,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2083,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2102,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2103,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2105,        if (startIndex < 0) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2106,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2107,        } else if (startIndex >= array.length) {,4,0,0,1,4,0,0,0,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2108,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2110,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2111,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2112,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2115,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2129,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2145,"        return indexOf(array, valueToFind, 0);",8,1,0,1,2,1,10,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2163,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2164,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2166,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2167,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2169,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,0,4,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2170,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2171,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2174,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2188,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2206,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2207,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2209,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2210,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2211,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2212,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2214,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2215,            if (valueToFind == array[i]) {,4,2,1,2,5,0,6,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2216,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2219,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,8,2,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2232,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2248,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2265,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2283,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2284,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2286,        if (startIndex < 0) {,2,1,1,1,3,0,0,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2287,            startIndex = 0;,10,2,0,0,0,0,10,0,0,23,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2289,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2290,            if (valueToFind == array[i]) {,4,3,1,2,5,0,8,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2291,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2294,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2315,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2316,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2318,        if (startIndex < 0) {,0,1,1,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2319,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2321,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,1,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2322,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2323,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2324,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,0,0,0,15,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2325,                return i;,2,1,0,0,0,1,14,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2328,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2342,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2359,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",18,4,0,1,2,1,8,0,0,31,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2377,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2378,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2380,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2381,            return INDEX_NOT_FOUND;,4,0,1,0,0,1,6,2,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2382,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2383,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2385,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2386,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2387,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2390,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2411,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2412,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2414,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2415,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2416,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2417,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2419,        double min = valueToFind - tolerance;,2,1,0,0,0,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2420,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2421,        for (int i = startIndex; i >= 0; i--) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2422,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2423,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2426,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2439,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2456,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",2,1,0,1,2,1,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2472,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2490,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,8,0,0,9,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2491,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2493,        if (startIndex < 0) {,4,1,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2494,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2496,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2497,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2498,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2501,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2515,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2533,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2534,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2536,        if (startIndex < 0) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2537,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2538,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2539,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2541,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2542,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2543,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2546,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2559,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2575,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2594,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2595,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2597,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2598,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2600,        for (int i = startIndex; i < array.length; i++) {,18,3,0,1,3,0,0,0,0,22,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2601,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2602,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2605,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2620,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2638,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2639,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2641,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2642,            return INDEX_NOT_FOUND;,0,0,1,0,0,1,2,0,0,11,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2643,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2644,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2646,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2647,            if (valueToFind == array[i]) {,7,1,1,2,5,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2648,                return i;,6,0,1,0,0,1,4,0,0,15,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2651,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2664,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2682,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2683,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2684,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2685,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2687,        final char[] result = new char[array.length];,8,1,0,2,4,1,0,0,0,11,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2688,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2689,            result[i] = array[i].charValue();,6,1,1,3,6,0,6,0,0,23,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2691,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2704,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2705,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2706,        } else if (array.length == 0) {,4,1,1,1,4,0,4,0,0,14,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2707,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2709,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2710,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2711,            Character b = array[i];,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2712,            result[i] = (b == null ? valueForNull : b.charValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2714,        return result;,4,1,0,0,0,1,0,0,0,5,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2726,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2727,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2728,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2729,            return EMPTY_CHARACTER_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2731,        final Character[] result = new Character[array.length];,4,0,0,2,4,0,0,0,0,5,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2732,        for (int i = 0; i < array.length; i++) {,28,3,0,1,3,0,4,2,0,39,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2733,            result[i] = Character.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2735,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2750,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2751,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2752,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2753,            return EMPTY_LONG_ARRAY;,4,0,0,0,0,1,0,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2755,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2756,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,10,0,0,11,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2757,            result[i] = array[i].longValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2759,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2772,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2773,            return null;,2,1,0,0,0,1,8,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2774,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2775,            return EMPTY_LONG_ARRAY;,4,0,0,0,0,1,4,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2777,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2778,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2779,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2780,            result[i] = (b == null ? valueForNull : b.longValue());,2,0,0,3,6,0,0,0,0,4,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2782,        return result;,12,3,0,0,0,1,0,0,0,16,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2794,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2795,            return null;,4,1,0,0,0,1,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2796,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2797,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2799,        final Long[] result = new Long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2800,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2801,            result[i] = Long.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2803,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2818,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2819,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2820,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2821,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2823,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2824,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2825,            result[i] = array[i].intValue();,0,0,1,3,6,0,2,0,0,11,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2827,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2840,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2841,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2842,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2843,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2845,        final int[] result = new int[array.length];,8,0,0,2,4,1,12,0,0,22,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2846,        for (int i = 0; i < array.length; i++) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2847,            Integer b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2848,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2850,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2862,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2863,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2864,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2865,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,6,0,0,6,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2867,        final Integer[] result = new Integer[array.length];,8,0,0,2,4,1,0,4,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2868,        for (int i = 0; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2869,            result[i] = Integer.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2871,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2886,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2887,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2888,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2889,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2891,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2892,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2893,            result[i] = array[i].shortValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2895,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2908,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2909,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2910,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2911,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,3,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2913,        final short[] result = new short[array.length];,6,0,0,2,4,1,4,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2914,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2915,            Short b = array[i];,4,1,1,1,2,0,0,2,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2916,            result[i] = (b == null ? valueForNull : b.shortValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2918,        return result;,0,0,0,0,0,1,4,0,0,4,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2930,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2931,            return null;,6,0,0,0,0,2,0,4,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2932,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2933,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2935,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2936,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2937,            result[i] = Short.valueOf(array[i]);,6,1,1,3,6,0,4,0,0,27,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2939,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2954,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2956,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2957,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2959,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2960,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2961,            result[i] = array[i].byteValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2963,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2976,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2977,            return null;,0,0,1,0,0,1,4,0,0,13,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2978,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2979,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2981,        final byte[] result = new byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2982,        for (int i = 0; i < array.length; i++) {,4,1,0,1,3,0,0,0,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2983,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2984,            result[i] = (b == null ? valueForNull : b.byteValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2986,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2998,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2999,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3000,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3001,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3003,        final Byte[] result = new Byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3004,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3005,            result[i] = Byte.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3007,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3022,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3023,            return null;,6,1,0,0,0,1,0,0,0,7,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3024,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3025,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3027,        final double[] result = new double[array.length];,14,1,0,2,4,1,0,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3028,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3029,            result[i] = array[i].doubleValue();,0,0,1,3,6,0,2,0,0,11,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3031,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3044,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3045,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3046,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3047,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3049,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3050,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3051,            Double b = array[i];,12,3,1,1,2,0,0,2,0,22,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3052,            result[i] = (b == null ? valueForNull : b.doubleValue());,4,1,1,3,6,0,4,0,0,14,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3054,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3066,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3068,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3069,            return EMPTY_DOUBLE_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3071,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,0,4,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3072,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3073,            result[i] = Double.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3075,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3090,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3091,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3092,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3093,            return EMPTY_FLOAT_ARRAY;,4,0,0,0,0,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3095,        final float[] result = new float[array.length];,10,3,0,2,4,1,0,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3096,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,2,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3097,            result[i] = array[i].floatValue();,0,0,0,3,6,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3099,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3112,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3113,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3114,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3115,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3117,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3118,        for (int i = 0; i < array.length; i++) {,10,2,0,1,3,0,4,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3119,            Float b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3120,            result[i] = (b == null ? valueForNull : b.floatValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3122,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3134,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3135,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3136,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3137,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,12,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3139,        final Float[] result = new Float[array.length];,6,0,0,2,4,1,0,4,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3140,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3141,            result[i] = Float.valueOf(array[i]);,4,3,0,3,6,0,4,0,0,12,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3143,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3158,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3159,            return null;,4,3,0,0,0,1,4,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3160,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3161,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3163,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3164,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3165,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3167,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3180,        if (array == null) {,10,2,0,1,3,0,16,0,0,30,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3181,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3182,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3183,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3185,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3186,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3187,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3188,            result[i] = (b == null ? valueForNull : b.booleanValue());,0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3190,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3202,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3203,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3204,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3205,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3207,        final Boolean[] result = new Boolean[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3208,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3209,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,12,1,1,3,6,0,0,0,0,22,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3211,        return result;,2,1,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3223,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3224,            return true;,4,0,0,0,0,1,0,2,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3226,        return false;,2,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3237,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3238,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3240,        return false;,0,0,0,0,0,1,4,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3251,        if (array == null || array.length == 0) {,10,3,0,1,3,0,4,2,0,19,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3252,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3254,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3265,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3266,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3268,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3280,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3282,        return false;,0,0,0,0,0,1,6,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3293,        if (array == null || array.length == 0) {,4,0,0,1,3,0,8,0,0,12,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3294,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3296,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3307,        if (array == null || array.length == 0) {,8,3,0,1,3,0,4,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3308,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3310,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3321,        if (array == null || array.length == 0) {,6,3,0,1,3,0,4,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3322,            return true;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3324,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3335,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3336,            return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3338,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3350,         return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3361,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3372,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3383,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3394,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3405,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3416,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3427,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3438,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3465,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3466,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3467,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3468,            return clone(array1);,2,0,0,1,2,1,8,2,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3470,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3472,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",0,0,0,4,8,0,0,0,0,12,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3473,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3475,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3488,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3476,        } catch (ArrayStoreException ase) {,8,1,1,1,4,0,0,2,0,14,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3483,            final Class<?> type2 = array2.getClass().getComponentType();,10,0,0,2,4,1,16,2,0,31,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3484,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,0,6,0,0,7,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3485,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",0,0,0,3,6,0,0,0,0,9,108,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3487,"            throw ase; // No, so rethrow original",2,2,0,0,0,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3489,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3510,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3511,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3512,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3513,            return clone(array1);,2,1,0,1,2,1,12,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3515,        boolean[] joinedArray = new boolean[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3516,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3517,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3518,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3539,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3540,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3541,        } else if (array2 == null) {,6,2,0,1,4,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3542,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3544,        char[] joinedArray = new char[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3545,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3546,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,0,1,2,0,8,0,0,18,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3547,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3568,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3569,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3570,        } else if (array2 == null) {,6,4,0,1,4,0,4,0,0,15,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3571,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3573,        byte[] joinedArray = new byte[array1.length + array2.length];,18,3,1,2,4,0,6,0,0,33,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3574,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,0,1,2,0,8,0,0,14,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3575,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3576,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3597,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3598,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3599,        } else if (array2 == null) {,4,2,1,1,4,0,18,0,0,28,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3600,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3602,        short[] joinedArray = new short[array1.length + array2.length];,14,4,0,2,4,0,0,0,0,18,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3603,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,4,0,0,7,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3604,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3605,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3626,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3627,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3628,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3629,            return clone(array1);,6,1,0,1,2,1,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3631,        int[] joinedArray = new int[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3632,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3633,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",16,3,0,1,2,0,16,0,0,37,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3634,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3655,        if (array1 == null) {,2,0,1,1,3,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3656,            return clone(array2);,2,0,0,1,2,1,10,2,0,14,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3657,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3658,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3660,        long[] joinedArray = new long[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3661,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",16,1,0,1,2,0,8,2,0,28,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3662,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3663,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3684,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3685,            return clone(array2);,2,0,1,1,2,1,8,0,0,15,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3686,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3687,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3689,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3690,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3691,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3692,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3713,        if (array1 == null) {,14,7,1,1,3,0,0,0,0,30,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3714,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3715,        } else if (array2 == null) {,2,2,0,1,4,0,10,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3716,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3718,        double[] joinedArray = new double[array1.length + array2.length];,2,0,0,2,4,0,0,0,0,2,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3719,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",8,1,0,1,2,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3720,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3721,        return joinedArray;,4,0,0,0,0,1,0,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3754,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3755,            type = array.getClass();,2,0,0,1,2,0,4,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3756,        } else if (element != null) {,2,1,0,1,4,0,0,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3757,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3759,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",4,0,0,1,2,0,0,2,0,9,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3762,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3763,        newArray[newArray.length - 1] = element;,14,2,1,1,2,1,0,4,0,25,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3764,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3789,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",0,0,0,4,8,0,0,0,0,12,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3790,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3791,        return newArray;,8,3,0,0,0,1,0,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3816,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",10,1,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3817,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3818,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3843,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",6,0,0,4,8,0,4,0,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3844,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3845,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3870,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",14,1,0,4,8,0,4,0,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3871,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3872,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3897,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",10,1,0,4,8,0,4,0,0,15,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3898,        newArray[newArray.length - 1] = element;,8,1,1,1,2,0,4,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3899,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3924,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,4,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3925,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3926,        return newArray;,6,0,1,0,0,1,4,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3951,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3952,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3953,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3978,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3979,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3980,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3993,        if (array != null) {,2,1,0,1,3,0,10,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3994,            int arrayLength = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3995,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3996,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,10,0,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3997,            return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3999,"        return Array.newInstance(newArrayComponentType, 1);",0,0,1,1,2,1,10,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4032,        Class<?> clss = null;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4033,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4034,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4035,        } else if (element != null) {,6,1,0,1,4,0,0,2,0,9,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4036,            clss = element.getClass();,4,1,0,1,2,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4038,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4041,"        final T[] newArray = (T[]) add(array, index, element, clss);",0,0,0,4,8,0,0,0,0,12,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4042,        return newArray;,4,1,0,0,0,1,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4073,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",4,0,0,4,8,1,12,0,0,16,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4105,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",4,0,0,4,8,1,12,0,0,16,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4136,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",22,4,0,4,8,1,16,0,0,42,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4167,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4198,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,1,0,4,8,1,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4229,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",0,0,0,4,8,1,0,0,0,13,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4260,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4291,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,0,0,16,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4306,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4307,            if (index != 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4308,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4310,"            Object joinedArray = Array.newInstance(clss, 1);",0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4311,"            Array.set(joinedArray, 0, element);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4312,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4314,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4315,        if (index > length || index < 0) {,6,3,0,1,3,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4316,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4318,"        Object result = Array.newInstance(clss, length + 1);",4,1,0,1,2,0,6,2,0,13,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4319,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4320,"        Array.set(result, index, element);",0,0,0,1,2,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4321,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4322,"            System.arraycopy(array, index, result, index + 1, length - index);",16,3,0,1,2,0,10,0,0,30,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4324,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4357,"        return (T[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4386,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4387,        if (index == INDEX_NOT_FOUND) {,10,1,0,1,3,0,4,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4388,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4390,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4422,"        return (boolean[]) remove((Object) array, index);",12,0,0,4,8,1,12,4,0,28,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4451,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4452,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4453,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4455,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4487,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4516,"        int index = indexOf(array, element);",6,0,0,1,2,0,6,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4517,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4518,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4520,"        return remove(array, index);",2,1,0,1,2,1,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4552,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4581,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4582,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4583,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4585,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4617,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4646,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4647,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4648,            return clone(array);,12,1,0,1,2,1,4,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4650,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4682,"        return (float[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4711,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4712,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4713,            return clone(array);,12,2,0,1,2,1,14,0,0,29,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4715,"        return remove(array, index);",0,0,0,1,2,1,12,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4747,"        return (int[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4776,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4777,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4778,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4780,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4812,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4841,"        int index = indexOf(array, element);",10,1,0,1,2,0,6,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4842,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4843,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4845,"        return remove(array, index);",4,0,0,1,2,1,18,0,0,22,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4877,"        return (short[]) remove((Object) array, index);",4,0,0,4,8,1,4,2,0,10,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4906,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4907,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4908,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4910,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4935,        int length = getLength(array);,2,0,0,1,2,0,4,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4936,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4937,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4940,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4941,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4942,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4943,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4946,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1821,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1822,    },2,1,1,0,1,0,0,0,0,7,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1324,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1340,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,1,6,2,0,8,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1418,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1463,        } catch (SecurityException ex) {,2,0,0,1,4,0,0,2,0,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property",6,1,0,0,1,0,2,0,0,10,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1467,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1484,        return new File(System.getProperty(USER_DIR_KEY));,0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1500,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1513,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,6,1,0,2,4,1,6,0,0,14,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1534,        return JAVA_VERSION_FLOAT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1556,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1575,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1598,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1617,            return false;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",2,0,0,2,4,1,8,0,0,10,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1673,"        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",2,0,1,2,4,1,8,0,0,15,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1696,"        return toJavaVersionIntArray(version, Integer.MAX_VALUE);",4,0,0,1,2,1,4,0,0,8,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1753,            return 0f;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1756,            return javaVersions[0];,0,0,1,1,2,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1766,        } catch (Exception ex) {,0,0,0,1,4,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1767,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1793,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,4,0,0,14,37,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,3,0,0,0,1,4,0,0,13,13,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,22,0,0,22,52,1,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,14,6,1,2,5,0,0,0,0,25,27,3,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,6,0,0,0,0,0,0,0,0,6,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,2,0,0,1,3,3,0,12,0,17,26,2,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,4,3,0,1,2,1,4,0,0,12,38,3,0.04396,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,14,0,0,2,4,3,6,6,0,30,64,1,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,0,4,0,14,61,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,3,0,2,4,0,4,0,0,9,67,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,4,0,0,2,4,3,8,2,0,17,58,1,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,4,0,0,4,22,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,0,0,0,3,6,1,0,0,0,10,48,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,2,0,0,2,4,0,4,2,0,8,43,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,0,0,0,1,3,0,0,0,0,4,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,0,0,0,7,56,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,2,0,0,1,2,0,6,2,0,10,38,12,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,2,0,0,1,2,3,8,2,0,16,27,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,8,3,0,1,2,0,12,0,0,24,19,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,4,0,0,6,1,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,2,0,0,1,2,0,4,2,0,8,35,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",4,0,0,1,2,0,20,0,0,26,72,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,6,3,0,2,5,3,4,4,0,20,68,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,2,0,0,1,2,0,4,0,0,7,30,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",2,0,0,1,2,0,12,0,0,15,72,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,4,2,0,13,36,1,0.14286,1,1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,0,0,0,1,3,2,2,0,10,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,0,0,0,1,3,0,0,0,0,4,29,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,2,0,0,1,2,0,6,0,0,9,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,0,0,0,0,0,0,0,0,0,0,15,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,2,0,0,2,5,0,0,2,0,5,32,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,8,1,0,1,3,3,2,0,0,15,21,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,1,0,2,4,3,0,6,0,15,65,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,3,0,4,0,11,68,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,0,0,0,0,2,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",2,3,0,1,2,1,14,0,0,21,39,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",8,1,0,1,2,0,0,4,0,13,99,3,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,2,1,0,3,7,0,6,0,0,9,33,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,886,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,10,64,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,4,1,0,2,4,0,4,0,0,10,64,8,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,6,1,0,2,4,3,0,0,0,11,58,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,1,0,2,4,3,8,4,0,22,74,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,16,3,0,2,4,3,2,0,0,26,61,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,0,0,0,0,2,68,6,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,1,2,4,3,4,4,0,26,58,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,94,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,1,0,1,2,0,0,0,0,3,53,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",6,0,0,1,2,2,4,4,0,16,49,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",0,0,0,1,2,0,0,0,0,3,101,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,0,0,2,5,0,4,2,0,8,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",2,0,0,1,2,3,12,2,0,20,54,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,2,0,0,4,28,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",2,0,0,1,2,1,2,4,0,11,32,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,0,0,0,3,31,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",2,1,0,1,2,3,6,2,0,20,29,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,8,0,0,8,52,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,0,0,0,2,4,1,6,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,8,3,0,0,0,1,8,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,2,3,0,2,6,0,8,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,4,0,0,5,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,4,9,0,12,0,0,18,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",2,1,0,2,4,0,8,0,0,12,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,12,0,0,12,52,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,0,0,1,2,0,6,0,0,14,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,0,0,0,1,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,4,1,0,1,2,0,4,2,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,6,0,0,0,0,2,0,2,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,6,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,2,3,0,2,5,0,10,0,0,15,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,12,2,0,0,0,1,0,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,2,2,0,2,6,0,4,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,4,9,0,12,0,0,18,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",2,0,0,1,2,1,6,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,2,0,0,1,2,0,8,8,0,18,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,2,0,0,1,2,0,4,2,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,2,1,0,1,3,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,2,0,0,1,2,0,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,10,6,0,0,0,1,0,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,1,0,0,0,1,10,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,4,1,0,1,2,0,6,8,0,21,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,1,2,0,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,2,0,0,1,2,1,0,4,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,2,0,0,2,4,0,4,2,0,9,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,4,0,0,1,3,0,0,2,0,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,2,0,0,2,5,3,8,2,0,16,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,336,"                    getAllInterfaces(i, interfacesFound);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,2,0,0,1,2,0,4,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,1,0,0,1,0,8,0,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,342,     },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,362,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,363,        for (String className : classNames) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,8,2,0,2,4,0,10,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,368,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,6,1,0,1,4,0,0,4,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,0,0,0,1,2,0,4,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,1,0,0,1,0,4,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,4,0,0,0,0,1,0,0,0,4,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,387,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,2,1,0,2,4,0,20,8,0,35,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,4,0,0,1,3,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,4,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,4,3,0,2,4,0,8,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,396,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,439,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,2,4,1,16,0,0,16,86,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",2,0,0,2,5,0,0,0,0,2,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,476,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,0,0,0,0,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,482,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",8,6,1,4,9,0,4,0,0,27,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,2,0,0,0,0,1,0,2,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,524,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,2,4,1,10,0,0,10,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,556,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,4,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,2,0,0,1,3,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,3,7,0,8,0,0,10,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,2,0,0,1,2,0,4,0,0,7,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,567,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,570,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,571,                cls = wrapperToPrimitive(cls);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,8,0,0,0,0,1,10,0,0,21,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,577,        if (cls.equals(toClass)) {,0,0,0,2,5,0,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,578,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,580,        if (cls.isPrimitive()) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,0,4,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,4,1,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,584,            if (Integer.TYPE.equals(cls)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,12,3,0,2,5,0,4,0,0,20,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,594,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,4,0,0,0,0,1,4,2,0,11,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,4,0,0,1,2,1,4,0,0,8,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),6,0,0,1,2,1,4,2,0,12,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,609,                return Integer.TYPE.equals(toClass),0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,33,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,622,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,624,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,6,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,8,3,0,2,5,0,14,0,0,25,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,642,            convertedClass = primitiveWrapperMap.get(cls);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,658,        if (classes == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,659,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,662,        if (classes.length == 0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,0,0,1,3,6,0,2,0,0,11,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,690,        return wrapperPrimitiveMap.get(cls);,0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,2,1,0,1,3,0,2,0,0,7,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,709,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,0,0,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,718,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,0,3,6,0,0,0,0,9,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,734,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,736,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,0,0,0,2,4,1,0,0,0,7,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,4,2,0,2,5,0,18,0,0,25,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",2,1,0,1,3,0,6,2,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,0,0,2,0,4,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,761,        return clazz;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,776,"        return getClass(classLoader, className, true);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,790,"        return getClass(className, true);",0,0,0,1,2,1,4,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,805,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,6,1,0,1,2,0,2,4,0,13,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,807,"        return getClass(loader, className, initialize );",0,0,0,1,2,1,8,0,0,8,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,836,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",0,0,0,1,2,0,4,0,0,4,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,8,6,0,4,9,0,10,0,0,24,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,2,0,0,1,2,0,0,8,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,2,0,0,2,4,0,8,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,4,0,0,1,3,0,0,2,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,0,8,0,0,9,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,847,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,851,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,854,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,853,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,856,                return candidateMethod;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,860,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,0,0,0,1,0,0,0,0,1,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,874,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,0,0,2,0,4,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,3,8,0,4,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,8,1,0,1,2,1,0,6,0,17,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",4,1,0,3,7,0,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,878,"                className = className.substring(0, className.length() - 2);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,4,0,0,5,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,2,0,0,1,2,0,6,2,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,2,1,0,1,3,0,0,0,0,3,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,6,0,0,6,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,885,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,2,0,0,1,2,0,4,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,4,0,0,0,0,1,0,0,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,6,0,0,2,4,0,0,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,2,1,1,3,6,0,2,0,0,14,33,3,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,2,1,0,1,3,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,2,1,0,3,6,1,8,0,0,11,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,2,0,0,1,3,0,2,4,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,943,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,6,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,956,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,8,0,0,8,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,10,1,0,0,0,1,0,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,2,1,0,3,6,1,0,0,0,3,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,6,0,0,0,0,1,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,987,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,6,0,0,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1001,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,4,1,0,1,2,0,6,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,2,0,0,0,0,0,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,1,0,2,6,0,20,0,0,22,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1027,                dim++;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1030,            if (dim < 1) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,2,0,1,0,0,1,4,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,0,4,0,0,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,6,1,1,0,1,0,4,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1040,                    if (className.length() > 0) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",2,0,0,2,4,0,8,0,0,11,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,6,0,0,1,2,0,0,4,0,11,70,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,2,4,0,4,0,0,5,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1048,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,4,0,0,4,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,144,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",4,1,0,2,4,1,0,0,0,5,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,178,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,225,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,4,0,1,1,2,0,0,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",8,0,0,1,3,0,0,0,0,8,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,2,0,0,2,6,0,0,2,0,4,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,235,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,236,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,241,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,242,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,4,0,1,0,0,1,6,2,0,17,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,293,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,312,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,4,0,0,1,2,1,0,0,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,330,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,12,0,0,12,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,0,0,0,1,3,0,12,0,0,12,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,6,0,0,1,2,1,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,375,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,378,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,391,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,2,3,0,1,2,1,4,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,10,1,0,1,3,2,0,2,0,17,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,410,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,6,1,0,1,3,0,2,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,6,0,0,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,8,0,0,1,2,2,4,0,0,13,21,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,440,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,442,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,2,1,0,0,0,1,4,2,0,11,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,462,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,463,            return EMPTY_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,465,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,4,1,0,0,0,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,5,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,486,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,502,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,503,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,12,0,0,0,0,1,10,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,524,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,2,0,1,0,0,1,6,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,526,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,4,1,1,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,546,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,548,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,10,1,0,1,3,0,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,567,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,4,3,0,1,4,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,569,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,10,1,1,0,0,1,0,8,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,587,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,588,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,589,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,10,2,0,0,0,1,0,2,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,2,0,0,0,0,1,10,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,609,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,8,3,0,1,4,0,10,0,0,21,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,8,1,0,0,0,1,0,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,2,1,0,1,3,0,12,0,0,15,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,4,1,0,1,4,0,10,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,632,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,651,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,10,2,0,1,4,0,8,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,653,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,655,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,4,0,0,1,3,0,4,0,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,3,0,4,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,2,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,692,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,714,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,715,        }else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,6,2,0,0,0,1,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,718,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,734,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,1,0,0,1,0,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,6,0,0,0,0,1,0,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,755,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,756,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,6,1,0,1,4,0,6,2,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,758,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,776,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,778,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,781,        return array;,0,0,0,0,0,1,4,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,8,2,0,12,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,2,1,0,1,4,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,802,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,820,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,4,0,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,860,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,4,2,0,15,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,8,0,0,0,0,0,6,0,0,16,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,2,0,0,2,4,0,6,2,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,10,1,0,1,3,0,0,0,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",6,2,0,4,8,1,16,4,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",4,0,0,4,8,0,12,4,0,21,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,16,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,875,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,901,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,902,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,11,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,908,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,909,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,4,0,1,2,4,0,0,0,0,6,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,914,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,937,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,0,0,0,0,0,1,6,0,0,6,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,4,2,0,0,0,0,12,0,0,21,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,943,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,944,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,946,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,948,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,951,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,979,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,980,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,983,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,985,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,986,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,2,0,17,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,4,0,0,0,0,1,0,0,0,4,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1018,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1019,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,22,2,0,1,3,0,6,0,0,32,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,8,0,0,0,0,0,6,0,0,17,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,4,1,0,0,0,1,8,0,0,13,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1055,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1058,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1060,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1061,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1063,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1064,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,4,0,1,2,4,0,4,0,0,10,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1070,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1093,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,2,1,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,6,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1100,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,10,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,2,0,1,2,4,0,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1132,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,16,4,0,0,0,0,0,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1138,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,2,0,0,0,0,0,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1141,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,4,2,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1146,        float[] subarray = new float[newSize];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1148,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,2,2,0,1,3,0,10,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1175,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1178,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,10,1,0,0,0,0,0,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,8,1,0,0,0,1,0,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1187,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,0,4,0,0,0,1,12,0,0,16,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1209,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,1,0,1,3,0,0,0,0,5,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1225,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1243,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1245,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,2,0,0,1,3,0,4,0,0,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,6,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1279,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1281,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,1,0,0,0,1,10,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1315,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1333,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1335,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,2,0,0,1,3,0,0,0,0,2,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1351,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1381,        return Array.getLength(array);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1394,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",2,1,0,1,2,0,0,2,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,2,1,0,5,10,1,30,0,0,34,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1413,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,8,4,0,0,0,0,8,0,0,20,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,8,1,0,0,0,0,4,0,0,13,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1418,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,4,0,1,1,2,0,0,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,10,2,0,2,4,0,4,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1421,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,4,3,0,0,0,0,8,2,0,17,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },4,1,0,0,1,0,0,0,0,5,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,10,2,0,1,3,0,4,2,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,2,0,0,0,0,1,0,0,0,3,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,8,0,0,0,0,1,0,4,0,13,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1439,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,8,2,0,1,3,0,10,0,0,20,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1442,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1443,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,4,0,0,0,0,0,10,0,0,15,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1448,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1459,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,8,1,0,0,0,0,0,2,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1464,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1465,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1466,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1467,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1468,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,4,1,1,0,0,0,6,0,0,16,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },4,1,0,0,1,0,0,0,0,5,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,2,1,1,1,3,0,2,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1482,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,8,2,0,0,0,0,6,0,0,16,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1485,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1488,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1489,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1494,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1505,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1507,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,4,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1512,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,2,0,0,0,0,0,6,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,12,1,0,0,0,0,8,0,0,23,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,4,1,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1528,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,2,1,1,0,0,0,0,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,10,1,1,1,2,0,0,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1536,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },2,0,0,0,1,0,6,0,0,9,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1550,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,2,0,0,0,0,1,0,0,0,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1553,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,6,1,0,0,0,0,10,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,8,1,0,1,3,0,12,2,0,23,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,4,0,1,1,2,0,0,0,0,10,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1558,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1559,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1560,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1561,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1573,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1574,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1580,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1581,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1583,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,1,0,1,0,4,0,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1597,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1599,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1600,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1603,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1604,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1605,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1606,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1609,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,8,2,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,4,0,1,0,0,0,0,0,0,7,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1651,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1652,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1658,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,4,2,1,3,7,0,8,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1660,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1697,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1699,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1702,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1704,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,12,3,0,1,3,0,4,0,0,20,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,10,2,1,2,5,0,0,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,14,0,0,16,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,2,0,0,1,3,0,0,0,0,2,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1712,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1713,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1717,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,3,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1764,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1768,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1770,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1771,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1807,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1808,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1810,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1811,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,6,2,1,2,5,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,2,0,0,0,0,1,4,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,4,1,0,1,3,0,6,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1871,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1873,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,4,1,0,0,0,1,4,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1911,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1913,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1914,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,8,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1918,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",10,2,0,1,2,1,6,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1970,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1973,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1974,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,18,1,0,1,3,1,0,4,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1977,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,2,0,0,1,3,0,12,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2016,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,2,0,1,0,0,1,4,0,0,10,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2018,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,4,0,0,0,0,1,4,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2026,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2056,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2076,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2078,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,0,0,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2083,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",8,0,1,1,2,1,6,0,0,22,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,8,1,1,1,3,0,4,4,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,12,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2128,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,2,1,1,2,5,0,8,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2130,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2133,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,1,0,1,2,1,6,0,0,11,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,4,1,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2192,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2229,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,4,1,0,0,0,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2233,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,4,0,1,0,0,1,4,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2283,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2301,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2304,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2305,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,16,1,0,1,3,0,0,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2309,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2312,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2340,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,17,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,1,0,1,2,1,12,0,0,17,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2395,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2396,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2398,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2400,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2401,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2403,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,2,1,1,2,5,0,4,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2405,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2408,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,6,0,0,2,5,0,10,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,14,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2437,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,8,1,0,0,0,0,0,0,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2440,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,2,3,0,0,0,1,8,0,0,14,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",8,2,0,1,2,1,14,2,0,26,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,2,0,0,0,0,0,4,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2514,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2519,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",10,1,0,1,2,1,0,0,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,8,1,1,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2555,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2556,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2560,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2564,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,2,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,8,2,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2616,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2618,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2620,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2623,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,6,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2662,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2664,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,12,4,0,0,0,1,0,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,4,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2700,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,12,7,1,0,0,1,0,0,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,12,1,0,2,4,1,2,0,0,17,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,4,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2707,            result[i] = array[i].charValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2709,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2727,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2728,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2729,            Character b = array[i];,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,10,6,0,0,0,1,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2750,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,3,6,0,20,0,0,38,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2769,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,4,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,16,1,0,2,4,1,0,2,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2775,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,2,0,0,0,0,1,4,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2793,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,14,1,0,1,3,0,0,2,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,4,1,0,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2798,            result[i] = (b == null ? valueForNull : b.longValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,0,1,0,0,0,1,10,0,0,12,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,4,4,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2821,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,2,0,0,0,0,1,6,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2841,        final int[] result = new int[array.length];,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2842,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2843,            result[i] = array[i].intValue();,0,0,0,3,6,0,0,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2845,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2858,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2860,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,8,1,0,2,4,1,10,0,0,20,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2865,            Integer b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,6,2,0,0,0,1,4,0,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2880,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,12,1,0,1,4,0,8,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2904,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2906,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2909,        final short[] result = new short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2910,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2911,            result[i] = array[i].shortValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,2,0,0,0,0,1,6,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2926,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2927,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,0,0,0,3,6,0,0,0,0,9,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2936,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2948,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2950,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,8,0,0,2,4,1,0,4,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,10,1,1,1,3,0,4,0,0,20,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2955,            result[i] = Short.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2957,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2972,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,8,1,0,0,0,1,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,6,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2978,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2979,            result[i] = array[i].byteValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,4,0,1,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2994,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2995,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2997,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,8,0,1,2,4,1,0,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3000,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,8,3,1,1,2,0,0,2,0,18,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3021,        final Byte[] result = new Byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3023,            result[i] = Byte.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3025,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,6,1,0,1,3,0,0,2,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,10,4,0,0,0,1,4,0,0,18,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3045,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3046,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,2,0,1,3,6,0,2,0,0,14,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,4,0,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,2,2,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,8,2,0,0,0,1,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3064,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3065,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,4,0,0,2,4,0,0,0,0,5,49,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,8,4,1,3,6,0,4,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3085,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,1,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,8,2,0,0,0,2,0,4,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,8,4,0,19,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,4,1,0,1,3,0,0,0,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3093,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3109,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,4,40,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3115,            result[i] = array[i].floatValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3117,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3131,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3132,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,2,4,1,0,0,1,0,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,12,1,0,2,4,1,12,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,14,4,0,1,3,0,16,0,0,40,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3137,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,6,1,1,3,6,0,4,0,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3152,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,12,2,0,0,0,1,0,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,6,0,0,2,4,0,4,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,4,3,0,1,3,0,0,0,0,7,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,3,6,0,16,0,0,25,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3161,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,14,2,0,1,4,0,0,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,8,1,0,0,0,1,10,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,2,0,0,2,4,0,4,2,0,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3182,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3183,            result[i] = array[i].booleanValue();,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,4,0,0,0,0,1,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,2,1,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3200,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,8,0,0,2,4,1,4,2,0,15,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3204,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3205,            Boolean b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,4,1,0,3,6,0,4,0,0,9,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,8,4,0,1,3,0,8,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,6,0,0,0,0,1,0,0,0,7,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3225,        final Boolean[] result = new Boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3226,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,16,3,1,3,6,0,8,0,0,38,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3241,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3244,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3255,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3256,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3258,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3269,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3270,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3272,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3284,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3286,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3298,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3300,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3312,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3314,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3325,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,4,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3328,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3339,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3340,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3342,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,10,4,0,1,3,1,4,0,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,6,4,0,0,0,1,4,2,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,1,0,0,1,2,1,0,0,0,1,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3379,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,10,3,0,1,2,1,0,4,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3434,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3445,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3483,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,14,2,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",0,0,0,4,8,0,0,0,0,12,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,1,0,1,2,0,0,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3506,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3494,        } catch (ArrayStoreException ase) {,0,0,0,1,4,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,10,7,0,2,4,1,22,2,0,44,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,0,6,0,0,7,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,8,2,0,15,108,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3505,"            throw ase; // No, so rethrow original",0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3529,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,4,1,0,1,4,0,10,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3531,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,14,1,0,2,4,0,2,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,4,0,0,0,0,1,0,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3558,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,2,0,0,1,2,1,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,14,1,1,2,4,0,0,0,0,18,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",12,1,0,1,2,0,8,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,4,0,0,0,0,1,12,2,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3586,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3587,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3589,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,12,2,0,2,4,0,0,0,0,14,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,6,2,0,1,3,0,16,0,0,25,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,6,4,0,1,4,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3618,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3620,        short[] joinedArray = new short[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,1,1,2,0,8,0,0,24,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,6,3,0,0,0,1,8,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,12,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,4,0,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,4,2,0,1,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,0,1,2,0,8,0,0,14,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,2,1,0,1,3,0,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,4,0,0,1,4,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,8,0,0,1,2,0,4,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,6,2,0,1,4,0,4,0,0,12,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",4,0,0,1,2,0,0,4,0,10,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,4,0,1,0,0,1,0,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,0,0,4,8,0,10,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",0,0,0,4,8,0,0,0,0,12,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,4,1,0,0,0,1,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,16,3,1,1,2,0,6,0,0,30,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,4,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,0,4,8,0,6,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,16,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",4,1,0,3,6,0,10,2,0,17,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",8,1,0,1,2,0,6,0,0,15,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,2,0,0,0,0,0,0,2,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,8,3,0,1,3,0,6,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,2,0,0,1,2,0,8,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",2,1,0,1,2,0,0,2,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",4,1,0,4,8,1,10,4,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,4,1,0,0,0,1,6,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0,0,0,4,8,1,0,0,0,13,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",8,1,0,4,8,1,6,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",4,0,0,4,8,1,12,0,0,16,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,0,0,16,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",8,5,0,1,2,0,4,4,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",8,1,0,1,2,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",10,1,0,1,2,0,0,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,6,3,0,1,3,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",16,6,0,1,2,0,4,2,0,31,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",10,4,0,1,2,0,6,2,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,1,2,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",8,3,0,1,2,0,14,0,0,25,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",6,0,0,4,8,1,4,4,0,14,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",4,1,0,4,8,1,4,2,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,6,3,0,1,2,1,4,0,0,14,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",2,1,0,1,2,1,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,10,4,0,1,3,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",4,0,0,4,8,1,4,2,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,1,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,4,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",6,0,0,1,2,0,10,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,12,2,0,1,3,0,0,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",4,0,0,1,2,1,0,4,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",4,1,0,1,2,1,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,2,0,0,1,2,0,8,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",2,1,0,1,2,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,0,0,0,1,2,1,6,0,0,6,50,5,135.2,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,1,2,1,4,0,0,7,50,4,112.66667,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,0,4,0,0,4,36,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,0,4,0,0,4,43,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,0,4,0,0,4,37,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,1,0,1,2,1,0,2,0,16,108,3,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,4,0,0,0,0,0,0,0,0,5,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,4,0,0,0,0,0,0,0,0,5,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,        buffer.append(arrayStart);,0,0,0,1,2,0,6,0,0,6,26,5,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,        int length = Array.getLength(array);,2,1,0,1,2,0,0,0,0,3,36,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,        for (int i = 0; i < length; i++) {,10,1,1,1,3,0,0,0,0,15,34,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);",2,0,0,1,2,0,8,2,0,12,34,6,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,            if (item == null) {,4,1,0,1,3,3,2,2,0,13,19,1,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);",2,0,0,1,2,0,10,0,0,13,60,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,        buffer.append(arrayEnd);,2,0,0,1,2,0,12,2,0,16,24,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,    },0,0,0,0,1,0,0,0,0,1,1,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,            this.reflectionAppendArray(this.getObject());,0,0,0,2,4,0,4,0,0,4,45,7,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,            return;,0,0,0,0,0,1,0,0,0,1,7,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);",0,0,0,3,6,0,8,0,0,8,81,5,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,        this.upToClass = clazz;,4,0,0,0,0,0,0,0,0,5,23,4,67.6,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,    },2,3,0,0,1,0,8,0,0,15,1,10,67.6,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,8,3,0,1,3,0,0,0,0,11,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,6,3,0,0,0,1,4,0,0,13,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,0,0,1,2,1,10,0,0,12,51,3,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,4,0,0,2,4,3,6,2,0,15,55,1,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,0,0,0,0,2,71,6,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,177,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",6,0,0,3,6,1,6,2,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,228,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,229,            Object object = array[i];,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,234,                Object[] entry = (Object[]) object;,6,0,0,3,6,0,12,4,0,23,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,240,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,247,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,292,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,310,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,311,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,313,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,326,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,327,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,329,        return array.clone();,0,0,0,1,2,1,8,0,0,8,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,342,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,343,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,345,        return array.clone();,0,0,1,1,2,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,358,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,359,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,361,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,374,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,375,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,377,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,390,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,391,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,393,        return array.clone();,2,1,0,1,2,1,14,0,0,18,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,406,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,407,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,409,        return array.clone();,0,1,0,1,2,1,12,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,422,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,423,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,425,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,438,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,439,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,441,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,474,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,475,            return null;,2,1,1,0,0,1,2,0,0,9,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,477,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,478,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,480,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,481,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,483,        int newSize = endIndexExclusive - startIndexInclusive;,4,0,0,0,0,3,0,4,0,12,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,484,        Class<?> type = array.getClass().getComponentType();,4,0,0,2,4,3,10,4,0,21,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,485,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,487,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",2,0,0,4,8,0,0,0,0,2,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,488,            return emptyArray;,6,0,0,0,0,1,0,2,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,491,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,492,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,493,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,516,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,517,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,519,        if (startIndexInclusive < 0) {,6,3,0,1,3,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,520,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,522,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,523,            endIndexExclusive = array.length;,10,3,0,0,0,0,0,0,0,14,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,525,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,1,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,526,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,527,            return EMPTY_LONG_ARRAY;,4,2,0,0,0,1,6,0,0,12,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,530,        long[] subarray = new long[newSize];,2,0,1,2,4,0,0,0,0,5,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,531,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,532,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,555,        if (array == null) {,4,1,1,1,3,0,0,2,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,556,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,558,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,559,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,561,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,562,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,564,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,565,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,566,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,569,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,570,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,2,4,2,0,11,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,571,        return subarray;,4,0,0,0,0,3,0,2,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,594,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,595,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,597,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,598,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,600,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,601,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,603,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,604,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,605,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,608,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,609,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,14,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,610,        return subarray;,2,1,0,0,0,1,4,0,0,7,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,633,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,634,            return null;,2,0,0,0,0,4,2,2,0,10,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,636,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,637,            startIndexInclusive = 0;,4,0,0,0,0,0,4,8,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,639,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,640,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,642,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,643,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,644,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,647,        char[] subarray = new char[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,648,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,649,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,672,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,673,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,675,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,676,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,678,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,679,            endIndexExclusive = array.length;,6,0,0,0,0,0,8,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,681,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,682,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,683,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,686,        byte[] subarray = new byte[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,687,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,688,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,711,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,712,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,714,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,715,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,717,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,718,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,720,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,721,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,722,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,10,0,0,10,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,725,        double[] subarray = new double[newSize];,6,3,1,2,4,0,0,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,726,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,18,0,0,20,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,727,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,750,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,751,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,753,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,754,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,756,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,757,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,759,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,760,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,761,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,764,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,765,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,766,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,789,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,790,            return null;,4,0,0,0,0,1,4,0,0,8,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,792,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,793,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,795,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,796,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,798,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,10,0,0,10,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,799,        if (newSize <= 0) {,8,2,0,1,3,0,0,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,800,            return EMPTY_BOOLEAN_ARRAY;,4,0,0,0,0,1,4,2,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,803,        boolean[] subarray = new boolean[newSize];,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,804,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,14,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,805,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,822,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,825,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,827,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,840,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,7,1,1,3,0,0,0,0,21,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,843,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,845,        return true;,2,0,0,0,0,1,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,858,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,0,1,3,0,0,0,0,16,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,861,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,863,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,876,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,879,                return false;,0,1,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,881,        return true;,2,3,0,0,0,1,8,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,894,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,1,1,3,0,4,0,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,897,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,899,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,912,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,915,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,917,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,930,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,933,                return false;,8,0,0,0,0,1,0,2,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,935,        return true;,0,0,0,0,0,1,0,0,0,2,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,948,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,951,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,953,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,966,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,969,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,971,        return true;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,996,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,997,            return 0;,2,0,0,0,0,1,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,999,        return Array.getLength(array);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1012,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1013,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,2,2,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1015,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1030,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1031,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1033,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1034,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1036,        while (j > i) {,0,0,0,1,3,0,0,0,0,1,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1037,            tmp = array[j];,4,1,1,1,2,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1038,            array[j] = array[i];,2,0,0,2,4,0,8,0,0,11,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1039,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1040,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1041,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1043,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1053,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1054,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1056,        int i = 0;,8,3,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1057,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1059,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1060,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1061,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1062,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1063,            j--;,4,0,0,0,0,0,6,0,0,11,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1064,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1066,    },0,0,0,0,1,0,0,2,0,3,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1076,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1077,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1079,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1080,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1082,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1083,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1084,            array[j] = array[i];,6,1,0,2,4,0,8,0,0,16,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1085,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1086,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1087,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1089,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1099,        if (array == null) {,4,1,0,1,3,0,0,2,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1100,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1102,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1103,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1105,        while (j > i) {,12,6,1,1,3,0,4,0,0,24,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1106,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1107,            array[j] = array[i];,2,0,0,2,4,0,4,2,0,8,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1108,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1109,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1110,            i++;,6,1,1,0,0,0,6,0,0,18,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1122,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1123,            return;,0,0,0,0,0,1,0,0,0,1,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1125,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1126,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1128,        while (j > i) {,14,2,0,1,3,0,0,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1129,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1130,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1131,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1132,            j--;,2,0,0,0,0,0,0,0,0,4,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1133,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1135,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1145,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1148,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1149,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1151,        while (j > i) {,6,1,0,1,3,0,4,2,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1152,            tmp = array[j];,2,0,1,1,2,0,0,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1153,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1154,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1155,            j--;,4,0,0,0,0,0,8,0,0,13,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1156,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1158,    },0,0,0,0,1,0,10,0,0,10,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1168,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1169,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1171,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1172,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1174,        while (j > i) {,10,4,1,1,3,0,0,0,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1175,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1176,            array[j] = array[i];,2,2,1,2,4,0,8,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1177,            array[i] = tmp;,6,1,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1178,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1179,            i++;,6,0,0,0,0,0,8,0,0,16,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1181,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1191,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1192,            return;,2,0,0,0,0,1,0,0,0,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1194,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1195,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1197,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1198,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1199,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1200,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1201,            j--;,6,3,0,0,0,0,2,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1202,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1204,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1214,        if (array == null) {,4,3,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1215,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1217,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1218,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1220,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1221,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1222,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1223,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1224,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1225,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1227,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1245,"        return indexOf(array, objectToFind, 0);",2,1,0,1,2,1,6,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1263,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1264,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1266,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1267,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1269,        if (objectToFind == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1270,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,12,0,0,12,49,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1271,                if (array[i] == null) {,8,1,1,2,5,0,0,2,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1272,                    return i;,4,1,0,0,0,1,4,0,0,10,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1275,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,0,0,0,3,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1276,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1277,                if (objectToFind.equals(array[i])) {,4,0,0,3,7,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1278,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1282,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1296,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1314,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1315,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1317,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1318,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1319,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1320,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1322,        if (objectToFind == null) {,4,1,0,1,3,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1323,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1324,                if (array[i] == null) {,0,0,0,2,5,0,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1325,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1328,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1329,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1330,                if (objectToFind.equals(array[i])) {,2,0,1,3,7,0,16,0,0,32,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1331,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1335,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1348,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1364,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1382,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1383,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1385,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1386,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1388,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1389,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,0,0,3,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1390,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1393,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1407,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1425,        if (array == null) {,6,1,1,1,3,2,4,4,0,21,20,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1426,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1428,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1429,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1430,        } else if (startIndex >= array.length) {,2,0,0,1,4,0,0,0,0,2,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1431,            startIndex = array.length - 1;,8,2,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1433,        for (int i = startIndex; i >= 0; i--) {,2,0,0,1,3,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1434,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,0,0,2,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1435,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1438,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1451,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,2,54,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1467,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,6,4,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1485,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1486,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1488,        if (startIndex < 0) {,2,1,0,1,3,0,2,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1489,            startIndex = 0;,8,1,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1491,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1492,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1493,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1496,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1510,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1528,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1529,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1531,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1532,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1533,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1534,            startIndex = array.length - 1;,10,1,0,0,0,0,0,2,0,14,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1536,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1537,            if (valueToFind == array[i]) {,4,1,1,2,5,0,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1538,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1541,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1554,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1570,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,4,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1588,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1589,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1591,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1592,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1594,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1595,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1596,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1599,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,12,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1613,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,1,0,1,2,1,0,0,0,3,58,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1631,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1632,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1634,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1635,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1636,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1637,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1639,        for (int i = startIndex; i >= 0; i--) {,16,4,0,1,3,0,6,0,0,28,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1640,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1641,                return i;,8,4,0,0,0,1,4,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1644,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1657,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1674,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1693,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1694,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1696,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1697,            startIndex = 0;,8,2,0,0,0,0,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1699,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1700,            if (valueToFind == array[i]) {,2,1,1,2,5,0,4,0,0,12,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1704,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1719,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1738,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1739,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1741,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1742,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1743,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1744,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1746,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1747,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1748,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1751,        return INDEX_NOT_FOUND;,8,0,0,0,0,1,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1765,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1781,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1799,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1800,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1802,        if (startIndex < 0) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1803,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1805,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1806,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1807,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1810,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1824,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,1,0,1,2,1,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1842,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1843,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1845,        if (startIndex < 0) {,6,2,0,1,3,0,10,0,0,18,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1846,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1847,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1848,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1850,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1851,            if (valueToFind == array[i]) {,4,2,1,2,5,0,0,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1852,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1855,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1868,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,0,0,1,2,1,0,0,0,4,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1884,"        return indexOf(array, valueToFind, 0);",12,1,0,1,2,1,6,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1901,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1919,        if (ArrayUtils.isEmpty(array)) {,2,1,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1920,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1922,        if (startIndex < 0) {,6,2,0,1,3,0,4,0,0,13,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1923,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1925,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,12,0,0,28,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1926,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1927,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1930,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1951,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1952,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1954,        if (startIndex < 0) {,0,0,0,1,3,0,12,0,0,12,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1955,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1957,        double min = valueToFind - tolerance;,2,1,0,0,0,0,0,0,0,3,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1958,        double max = valueToFind + tolerance;,8,2,0,0,0,0,10,2,0,22,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1959,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1960,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,0,0,0,15,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1961,                return i;,4,1,0,0,0,1,4,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1964,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1978,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",8,0,0,1,2,1,8,0,0,17,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2013,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2016,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,4,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2017,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2018,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,20,2,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2019,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2021,        for (int i = startIndex; i >= 0; i--) {,14,1,0,1,3,0,4,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2022,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2023,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2026,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2047,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2048,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2050,        if (startIndex < 0) {,2,1,0,1,3,0,6,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2051,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2052,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2053,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2055,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2056,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2057,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2058,            if (array[i] >= min && array[i] <= max) {,10,3,1,3,7,0,4,0,0,26,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2059,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2062,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,8,0,0,14,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2075,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2092,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2108,"        return indexOf(array, valueToFind, 0);",0,3,0,1,2,1,12,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2126,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2127,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2129,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2130,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2132,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2133,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2134,                return i;,10,1,0,0,0,1,0,0,0,12,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2137,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2151,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2169,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2170,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2172,        if (startIndex < 0) {,4,0,0,1,3,0,0,0,0,5,21,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2173,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2174,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2175,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2177,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2178,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2179,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2182,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2195,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2211,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2230,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2231,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2233,        if (startIndex < 0) {,2,1,0,1,3,0,8,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2234,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2236,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2237,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2238,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2241,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2256,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,1,2,1,6,0,0,8,58,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2274,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2275,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2277,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2278,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2279,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2280,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2282,        for (int i = startIndex; i >= 0; i--) {,12,2,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2283,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2284,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2287,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2300,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2318,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2319,            return null;,10,2,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2320,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2321,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2323,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2324,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2325,            result[i] = array[i].charValue();,2,2,1,3,6,0,12,0,0,25,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2327,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2340,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2341,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2342,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2343,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2345,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2346,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2347,            Character b = array[i];,4,0,0,1,2,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2348,            result[i] = (b == null ? valueForNull : b.charValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2350,        return result;,2,0,0,0,0,1,6,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2362,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2363,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2364,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2365,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2367,        final Character[] result = new Character[array.length];,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2368,        for (int i = 0; i < array.length; i++) {,0,1,1,1,3,0,0,0,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2369,            result[i] = Character.valueOf(array[i]);,2,1,0,3,6,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2371,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2386,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2387,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2388,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2389,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2391,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2392,        for (int i = 0; i < array.length; i++) {,8,1,0,1,3,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2393,            result[i] = array[i].longValue();,0,0,1,3,6,0,8,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2395,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2408,        if (array == null) {,14,1,0,1,3,0,0,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2410,        } else if (array.length == 0) {,0,0,0,1,4,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2411,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2413,        final long[] result = new long[array.length];,8,0,0,2,4,1,0,0,0,9,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2414,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,6,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2415,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2416,            result[i] = (b == null ? valueForNull : b.longValue());,12,2,1,3,6,0,4,0,0,24,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2418,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2430,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2432,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2433,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2435,        final Long[] result = new Long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2436,        for (int i = 0; i < array.length; i++) {,8,1,0,1,3,0,0,2,0,11,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2437,            result[i] = Long.valueOf(array[i]);,6,1,1,3,6,0,12,0,0,29,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2439,        return result;,2,0,1,0,0,1,4,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2454,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2455,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2456,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2457,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2459,        final int[] result = new int[array.length];,4,1,0,2,4,0,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2460,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2461,            result[i] = array[i].intValue();,2,1,1,3,6,0,14,0,0,31,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2463,        return result;,6,1,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2476,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2477,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2478,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2479,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2481,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2482,        for (int i = 0; i < array.length; i++) {,14,4,0,1,3,0,0,0,0,19,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2483,            Integer b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2484,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2486,        return result;,12,1,0,0,0,1,0,0,0,15,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2498,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2499,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2500,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2501,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2503,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2504,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2505,            result[i] = Integer.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2507,        return result;,16,4,0,0,0,1,0,0,0,20,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2522,        if (array == null) {,2,1,0,1,3,0,8,2,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2523,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2524,        } else if (array.length == 0) {,10,4,0,1,4,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2525,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2527,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2528,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2529,            result[i] = array[i].shortValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2531,        return result;,4,1,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2544,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2545,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2546,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2547,            return EMPTY_SHORT_ARRAY;,4,1,0,0,0,1,6,0,0,11,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2549,        final short[] result = new short[array.length];,8,0,0,2,4,1,12,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2550,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,10,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2551,            Short b = array[i];,4,0,1,1,2,0,4,2,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2552,            result[i] = (b == null ? valueForNull : b.shortValue());,0,0,0,3,6,0,0,0,0,9,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2554,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2566,        if (array == null) {,8,1,0,1,3,0,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2567,            return null;,2,0,0,0,0,1,0,0,0,4,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2568,        } else if (array.length == 0) {,2,0,1,1,4,0,0,0,0,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2569,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2571,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2572,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2573,            result[i] = Short.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2575,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2590,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2591,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2592,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2593,            return EMPTY_BYTE_ARRAY;,12,2,0,0,0,1,0,0,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2595,        final byte[] result = new byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2596,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2597,            result[i] = array[i].byteValue();,2,0,1,3,6,0,8,2,0,21,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2599,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2612,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2614,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2615,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2617,        final byte[] result = new byte[array.length];,12,1,0,2,4,1,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2618,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2619,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2620,            result[i] = (b == null ? valueForNull : b.byteValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2622,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2634,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2635,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2636,        } else if (array.length == 0) {,6,2,0,1,4,0,10,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2637,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2639,        final Byte[] result = new Byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2640,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2641,            result[i] = Byte.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2643,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2658,        if (array == null) {,6,2,0,1,3,0,4,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2659,            return null;,4,0,0,0,0,1,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2660,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2661,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2663,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2664,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2665,            result[i] = array[i].doubleValue();,0,0,1,3,6,0,2,0,0,11,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2667,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2680,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2681,            return null;,8,1,0,0,0,1,4,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2682,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2683,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2685,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2686,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2687,            Double b = array[i];,6,0,1,1,2,0,0,2,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2688,            result[i] = (b == null ? valueForNull : b.doubleValue());,4,1,1,3,6,0,4,0,0,14,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2690,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2702,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2703,            return null;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2704,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2705,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,6,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2707,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,0,4,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2708,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2709,            result[i] = Double.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2711,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2726,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2727,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2728,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2729,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2731,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2732,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2733,            result[i] = array[i].floatValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2735,        return result;,6,0,0,0,0,1,6,2,0,14,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2748,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2749,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2750,        } else if (array.length == 0) {,2,2,0,1,4,0,4,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2751,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2753,        final float[] result = new float[array.length];,8,0,1,2,4,1,0,2,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2754,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2755,            Float b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2756,            result[i] = (b == null ? valueForNull : b.floatValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2758,        return result;,2,1,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2770,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2771,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2772,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2773,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2775,        final Float[] result = new Float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2776,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2777,            result[i] = Float.valueOf(array[i]);,8,2,1,3,6,0,4,0,0,24,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2779,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2794,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2795,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2796,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2797,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2799,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2800,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2801,            result[i] = array[i].booleanValue();,6,1,1,3,6,1,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2803,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2816,        if (array == null) {,4,2,0,1,3,0,8,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2817,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2818,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2819,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2821,        final boolean[] result = new boolean[array.length];,2,1,0,2,4,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2822,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2823,            Boolean b = array[i];,6,1,1,1,2,0,4,2,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2824,            result[i] = (b == null ? valueForNull : b.booleanValue());,8,1,1,3,6,0,10,0,0,24,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2826,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2839,            return null;,8,0,0,0,0,1,4,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2840,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2841,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2843,        final Boolean[] result = new Boolean[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2844,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2845,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,18,4,1,3,6,1,8,0,0,42,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2847,        return result;,6,0,0,0,0,1,0,0,0,6,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2859,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2860,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2862,        return false;,2,1,0,0,0,1,6,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2873,        if (array == null || array.length == 0) {,6,3,0,1,3,0,6,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2874,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2876,        return false;,2,0,0,0,0,2,0,4,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2887,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2888,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2890,        return false;,4,2,0,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2901,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2902,            return true;,4,0,0,0,0,1,0,4,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2904,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2915,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2916,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2918,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2929,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2930,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2932,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2943,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2944,            return true;,2,0,0,0,0,1,0,2,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2946,        return false;,4,1,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2957,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2958,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2960,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2971,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2972,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2974,        return false;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3001,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3002,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3003,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3004,            return clone(array1);,4,1,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3006,        final Class<?> type1 = array1.getClass().getComponentType();,4,0,0,2,4,1,6,2,0,13,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3008,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",6,3,0,4,8,0,0,0,0,9,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3009,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",14,1,0,1,2,0,8,0,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3011,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",12,0,0,1,2,0,8,0,0,21,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3024,        },0,0,0,0,1,0,0,0,0,1,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3012,        } catch (ArrayStoreException ase) {,4,0,0,1,4,0,0,2,0,7,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3019,            final Class<?> type2 = array2.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3020,            if (!type1.isAssignableFrom(type2)){,4,0,0,2,5,0,6,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3021,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,8,2,0,15,108,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3023,"            throw ase; // No, so rethrow original",8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3025,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3046,        if (array1 == null) {,8,2,0,1,3,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3047,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3048,        } else if (array2 == null) {,0,0,0,1,4,0,6,0,0,7,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3049,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3051,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3052,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3053,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3054,        return joinedArray;,2,0,0,0,0,1,2,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3075,        if (array1 == null) {,12,2,0,1,3,0,0,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3076,            return clone(array2);,8,2,0,1,2,1,4,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3077,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3078,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3080,        char[] joinedArray = new char[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3081,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,8,0,0,16,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3082,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3083,        return joinedArray;,6,1,0,0,0,1,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3104,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3105,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3106,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3107,            return clone(array1);,4,1,0,1,2,1,4,0,0,9,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3109,        byte[] joinedArray = new byte[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3110,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3111,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3112,        return joinedArray;,4,1,0,0,0,1,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3133,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3134,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3135,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3136,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3138,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3139,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,24,0,0,28,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3140,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3141,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3162,        if (array1 == null) {,2,4,0,1,3,0,18,0,0,26,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3163,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3164,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3165,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3167,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3168,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3169,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3170,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3191,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3192,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3193,        } else if (array2 == null) {,2,1,0,1,4,0,8,0,0,11,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3194,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3196,        long[] joinedArray = new long[array1.length + array2.length];,2,0,1,2,4,0,0,2,0,8,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3197,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",14,1,0,1,2,0,8,0,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3198,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3199,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3220,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3221,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3222,        } else if (array2 == null) {,8,2,0,1,4,0,4,0,0,14,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3223,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3225,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3226,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3227,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3228,        return joinedArray;,4,0,1,0,0,1,8,2,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3249,        if (array1 == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3250,            return clone(array2);,0,1,0,1,2,1,12,0,0,13,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3251,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3252,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3254,        double[] joinedArray = new double[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3255,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",8,1,0,1,2,0,4,0,0,13,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3256,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,1,2,0,0,0,0,5,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3257,        return joinedArray;,2,0,0,0,0,1,4,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3291,            type = array.getClass();,2,0,0,1,2,0,4,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,2,1,0,1,4,0,0,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3293,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3325,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3326,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3327,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3352,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3353,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3354,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3379,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3380,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3381,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3406,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",2,1,0,4,8,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3407,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,4,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3408,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3433,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3434,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3435,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3460,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,16,0,0,22,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3461,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3462,        return newArray;,4,0,0,0,0,1,12,0,0,17,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3487,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3488,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3489,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3514,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3515,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3516,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3530,            int arrayLength = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3531,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3532,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,14,0,0,14,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3533,            return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3568,        Class<?> clss = null;,2,0,0,0,0,0,0,2,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3569,        if (array != null) {,18,4,0,1,3,0,4,0,0,28,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3570,            clss = array.getClass().getComponentType();,2,0,0,2,4,0,6,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3571,        } else if (element != null) {,4,1,0,1,4,0,4,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3572,            clss = element.getClass();,6,0,0,1,2,1,0,4,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,8,0,0,4,8,1,8,4,0,20,35,3,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3577,"        final T[] newArray = (T[]) add(array, index, element, clss);",2,0,0,4,8,1,10,4,0,17,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3578,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3609,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",4,0,0,4,8,1,12,0,0,16,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3641,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3672,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",10,1,0,4,8,1,12,0,0,23,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3703,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",14,2,0,4,8,1,12,0,0,28,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3734,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0,0,0,4,8,1,0,0,0,13,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3765,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3796,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3827,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,2,0,19,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3842,        if (array == null) {,12,2,0,1,3,0,6,0,0,22,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3843,            if (index != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3844,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3846,"            Object joinedArray = Array.newInstance(clss, 1);",2,3,0,1,2,0,26,2,0,36,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3847,"            Array.set(joinedArray, 0, element);",0,0,0,1,2,0,8,0,0,8,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3848,            return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3850,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3851,        if (index > length || index < 0) {,8,3,0,1,3,0,0,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3852,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3854,"        Object result = Array.newInstance(clss, length + 1);",4,1,0,1,2,0,6,2,0,13,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3855,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3856,"        Array.set(result, index, element);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3857,        if (index < length) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3858,"            System.arraycopy(array, index, result, index + 1, length - index);",8,3,0,1,2,0,10,0,0,21,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3860,        return result;,6,2,0,0,0,1,0,0,0,9,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3893,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,4,4,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3922,"        int index = indexOf(array, element);",6,0,1,1,2,0,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3923,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,10,0,0,15,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3924,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3926,"        return remove(array, index);",2,1,0,1,2,1,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3958,"        return (boolean[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3987,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3988,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3989,            return clone(array);,18,4,0,1,2,1,12,0,0,37,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3991,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4023,"        return (byte[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4052,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4053,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4054,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4056,"        return remove(array, index);",2,0,0,1,2,1,6,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4088,"        return (char[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4117,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4118,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,4,0,0,11,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4119,            return clone(array);,6,3,0,1,2,1,4,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4121,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4153,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4182,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4183,        if (index == INDEX_NOT_FOUND) {,10,2,0,1,3,0,0,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4184,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4186,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4218,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4247,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4248,        if (index == INDEX_NOT_FOUND) {,14,3,0,1,3,0,0,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4249,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4251,"        return remove(array, index);",4,2,1,1,2,1,10,0,0,20,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4283,"        return (int[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4312,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4313,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4314,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4316,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4348,"        return (long[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4377,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4378,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4379,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4381,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4413,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,10,2,0,14,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4442,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4443,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4444,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4446,"        return remove(array, index);",6,0,0,1,2,1,18,0,0,24,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4471,        int length = getLength(array);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4472,        if (index < 0 || index >= length) {,8,3,0,1,3,0,0,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4473,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4476,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4477,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4478,        if (index < length - 1) {,0,0,0,1,3,0,0,0,0,1,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4479,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4482,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,6,0,0,10,18,3,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,0,0,3,7,0,0,0,0,10,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,0,2,0,4,30,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,14,1,0,0,0,3,0,4,0,24,11,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,0,0,0,0,0,0,0,0,0,0,11,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",4,2,0,2,4,0,8,2,0,16,52,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,0,0,0,0,1,0,0,0,0,1,15,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,8,2,0,2,5,3,8,4,0,26,45,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,2,1,0,0,0,1,0,0,0,4,13,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,4,4,0,1,3,0,4,0,0,12,18,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,1,4,4,0,12,27,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,0,2,0,4,31,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,0,1,12,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,2,0,5,13,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",2,0,0,1,2,3,4,4,0,14,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",4,0,0,1,2,3,6,0,0,14,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,0,0,0,1,4,0,0,0,0,5,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,8,3,0,5,11,0,8,2,0,24,66,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,4,1,0,0,0,1,4,0,0,9,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,0,0,0,0,0,0,0,0,0,0,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,0,0,0,0,0,0,0,0,0,0,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,8,4,1,3,7,0,0,4,0,25,53,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",0,0,0,0,0,0,0,0,0,0,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,0,0,2,6,0,0,0,0,8,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,4,0,0,0,0,1,0,2,0,9,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,4,1,0,1,3,0,0,0,0,5,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,2,0,4,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,8,2,0,0,0,0,6,0,0,18,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,0,1,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,0,0,2,0,7,4,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,4,3,1,3,7,0,0,0,0,17,41,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,2,1,0,0,1,0,0,0,0,3,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',0,0,0,1,3,0,0,0,0,4,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,43,    public static final Long LONG_ONE = new Long(1L);,2,0,0,1,2,3,0,4,0,9,49,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,0,0,0,1,2,0,0,0,0,3,64,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,0,4,0,9,58,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,0,0,0,1,2,0,0,0,0,3,55,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,6,1,0,1,3,0,0,0,0,7,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,4,0,0,2,4,6,0,4,0,15,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,1,58,8,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,4,3,1,1,2,0,8,4,0,28,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,6,1,0,1,3,0,4,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",6,0,0,3,6,1,6,2,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,6,0,0,2,6,0,0,2,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",4,0,1,3,6,0,4,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,2,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,2,0,0,0,0,4,2,0,0,8,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,4,3,0,1,2,1,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,2,1,0,1,3,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,8,0,0,0,0,0,0,4,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,2,0,0,2,4,0,12,2,0,16,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,3,6,1,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",2,0,0,4,8,0,8,4,0,14,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,470,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,4,2,0,1,3,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,473,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,476,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,479,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,4,0,0,0,0,4,0,4,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,2,0,1,2,4,0,8,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,484,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,508,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,512,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,515,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,0,0,0,1,3,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,519,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,8,5,1,2,4,0,4,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,523,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,4,0,0,0,0,4,0,4,0,11,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,0,1,0,0,0,1,10,0,0,12,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,8,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,556,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,2,1,0,1,3,0,6,0,0,9,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,5,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,562,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,10,0,0,0,0,1,4,4,0,20,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,592,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,596,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,2,1,0,2,4,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,601,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,10,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,14,4,0,1,3,0,0,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,8,1,1,0,0,0,2,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,634,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,635,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,636,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,639,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,18,0,0,18,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,641,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,665,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,2,0,0,1,3,0,4,0,0,6,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,668,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,671,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,673,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,675,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,4,0,1,2,4,0,0,0,0,6,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,679,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,704,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,8,1,0,1,3,1,6,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,8,2,0,1,3,0,0,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,12,4,1,0,0,0,0,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,2,1,1,2,4,0,10,0,0,16,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,718,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,6,3,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,743,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,745,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,746,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,752,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,753,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,757,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,10,6,0,0,0,1,0,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,775,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,778,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,796,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,798,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,814,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,0,1,3,0,0,4,0,20,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,832,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,834,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,2,1,0,0,0,1,4,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,852,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,865,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,2,0,3,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,4,1,0,0,0,2,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,904,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,2,0,0,0,0,1,8,2,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,919,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,2,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,924,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,2,2,0,1,3,0,4,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,0,1,0,0,0,1,10,0,0,11,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,2,0,0,1,2,1,6,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,966,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,983,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,2,0,0,0,0,4,0,0,0,5,7,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,10,1,0,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,989,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,990,            tmp = array[j];,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,991,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,992,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,993,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,996,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1007,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1009,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,8,1,1,0,0,0,0,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1013,            tmp = array[j];,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1014,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,10,1,0,1,2,0,0,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,6,3,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1019,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1029,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1030,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1033,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,10,5,0,1,3,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,4,0,1,2,4,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,6,0,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1040,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1042,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1052,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1053,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,0,1,0,0,0,0,3,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1058,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1059,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1060,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1061,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1062,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1065,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1075,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1076,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1078,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1079,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1081,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1082,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,2,0,1,2,4,0,4,0,0,16,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1084,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,4,1,0,0,0,0,0,0,0,5,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,4,0,1,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1088,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1098,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1099,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,2,0,0,0,0,0,0,8,0,10,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1106,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1107,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1109,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,0,0,0,1,3,0,0,0,0,1,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1122,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1124,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,4,1,1,1,2,0,18,0,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,2,4,0,8,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,2,0,1,1,2,0,4,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1131,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1132,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1134,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1144,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,8,3,0,0,0,1,0,0,0,11,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1148,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1150,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1152,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1153,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,4,0,1,0,0,0,0,0,0,7,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,8,0,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,8,0,0,9,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,6,0,0,0,0,1,0,0,0,7,7,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,6,1,0,0,0,0,4,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,4,1,1,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,2,4,1,2,4,0,12,0,0,27,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1177,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1180,    },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1198,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1216,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1217,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,4,0,1,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1223,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1224,                if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,6,4,0,12,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,2,1,1,1,3,0,0,0,0,7,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,8,0,1,3,7,0,14,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1231,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1235,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1268,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1270,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1271,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,4,2,0,18,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,14,2,0,0,0,0,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,2,0,0,1,3,0,8,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,4,0,0,0,0,1,0,4,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1281,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,16,3,0,1,3,0,0,0,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,1,3,7,0,14,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1301,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1317,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,6,1,0,0,0,0,4,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1341,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1342,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1383,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,10,1,0,0,0,0,4,0,0,19,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1386,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,10,2,1,2,5,0,0,0,0,17,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1404,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1420,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1438,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1439,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1441,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,2,0,0,0,0,0,0,2,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,2,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,8,2,1,2,5,0,2,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1463,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1481,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1484,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1485,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1486,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,2,0,4,0,19,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1491,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1494,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",6,2,0,1,2,1,6,0,0,14,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1541,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1544,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1547,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1548,            if (valueToFind == array[i]) {,0,0,0,2,5,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1549,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1552,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1566,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1584,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1587,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1588,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,4,0,0,12,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1594,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1597,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1610,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1627,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,6,3,0,0,0,1,0,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,10,3,1,2,5,0,0,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1654,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1691,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,4,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1697,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1699,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1700,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1704,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1718,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1734,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1755,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,22,2,0,1,3,0,0,0,0,26,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,2,1,0,1,3,0,8,2,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1800,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1804,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1805,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,10,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1837,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1854,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1872,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1880,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1904,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,8,0,0,0,0,1,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1907,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,10,2,0,0,0,0,10,0,0,23,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1911,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1913,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1914,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,16,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1948,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",0,0,0,1,2,1,0,0,0,4,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1966,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,8,1,0,0,0,1,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1969,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,2,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,0,1,0,1,4,0,14,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1972,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1975,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2000,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,4,0,0,11,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2003,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2009,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,2,1,0,1,3,0,8,0,0,11,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,6,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2012,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,2,0,1,2,1,6,2,0,13,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2045,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,1,0,1,2,1,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,12,0,0,12,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2082,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,8,8,0,32,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2086,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2090,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2123,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2125,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2126,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2131,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2148,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2164,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,2,0,0,1,3,0,0,0,0,3,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,6,0,0,30,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,8,1,1,2,5,1,0,4,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2194,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2209,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2227,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2231,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,8,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2235,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,8,0,0,2,5,0,0,4,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,14,0,0,17,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2272,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,6,1,0,3,6,0,0,0,0,7,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2294,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2295,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2298,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2299,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,4,0,1,1,2,0,0,2,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,6,1,1,3,6,0,10,0,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2303,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2317,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2318,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2321,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,4,1,0,1,3,0,4,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2340,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,4,0,0,1,4,0,0,0,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2345,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2346,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2363,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2366,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,10,2,0,1,3,0,12,0,0,25,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2369,            result[i] = (b == null ? valueForNull : b.longValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,8,1,0,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,4,1,1,0,0,1,0,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,8,2,0,1,4,0,4,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2386,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2390,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2392,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2407,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2408,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,8,1,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2410,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,8,0,0,2,4,1,0,0,0,9,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,6,0,1,3,6,0,14,0,0,30,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,2,1,0,0,0,1,0,2,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2431,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2432,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,2,0,1,1,2,0,4,2,0,21,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,2,0,1,0,0,1,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2476,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2481,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,0,0,1,3,6,0,28,0,0,39,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2484,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2497,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2498,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2499,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2500,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,6,1,1,1,2,0,12,2,0,25,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2505,            result[i] = (b == null ? valueForNull : b.shortValue());,6,2,1,3,6,0,14,0,0,27,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2507,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2519,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2520,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2521,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2522,            return EMPTY_SHORT_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2524,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2525,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2526,            result[i] = Short.valueOf(array[i]);,4,0,1,3,6,0,4,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2528,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2543,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2544,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2545,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2546,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2548,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2549,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,4,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2550,            result[i] = array[i].byteValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2552,        return result;,4,1,0,0,0,1,4,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2565,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2566,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2567,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2568,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2570,        final byte[] result = new byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2571,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2572,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2573,            result[i] = (b == null ? valueForNull : b.byteValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2575,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2587,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2588,            return null;,8,4,0,0,0,1,6,0,0,18,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2589,        } else if (array.length == 0) {,4,1,0,1,4,0,14,0,0,19,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2590,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2592,        final Byte[] result = new Byte[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2593,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2594,            result[i] = Byte.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2596,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2611,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2612,            return null;,14,3,0,0,0,1,0,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2613,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2614,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2616,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2617,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2618,            result[i] = array[i].doubleValue();,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2620,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2633,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2634,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2635,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2636,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2638,        final double[] result = new double[array.length];,6,0,0,2,4,1,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2639,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2640,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2641,            result[i] = (b == null ? valueForNull : b.doubleValue());,0,0,0,3,6,0,0,0,0,9,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2643,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2655,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2656,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2657,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,4,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2658,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2660,        final Double[] result = new Double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2661,        for (int i = 0; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2662,            result[i] = Double.valueOf(array[i]);,4,1,1,3,6,0,8,0,0,22,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2664,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2679,        if (array == null) {,2,1,1,1,3,0,0,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2680,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2681,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2682,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2684,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2685,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2686,            result[i] = array[i].floatValue();,2,1,1,3,6,0,2,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2688,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2701,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2702,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2703,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2704,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2706,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2707,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2708,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2709,            result[i] = (b == null ? valueForNull : b.floatValue());,16,2,1,3,6,1,14,0,0,38,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2711,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2723,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2724,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2725,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2726,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2728,        final Float[] result = new Float[array.length];,4,1,0,2,4,0,0,0,0,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2729,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2730,            result[i] = Float.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2732,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2747,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2748,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2749,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2750,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2752,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2753,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2754,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2756,        return result;,2,1,0,0,0,1,8,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2769,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2770,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2771,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2772,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2774,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2775,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2776,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2777,            result[i] = (b == null ? valueForNull : b.booleanValue());,6,1,1,3,6,0,8,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2779,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2791,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2792,            return null;,2,0,0,0,0,1,14,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2793,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2794,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2796,        final Boolean[] result = new Boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2797,        for (int i = 0; i < array.length; i++) {,24,5,0,1,3,0,0,0,0,31,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2798,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,8,0,1,3,6,0,0,0,0,17,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2800,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2812,        if (array == null || array.length == 0) {,14,5,0,1,3,0,0,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2813,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2815,        return false;,2,1,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2826,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2827,            return true;,0,0,0,0,0,1,10,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2829,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2840,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2841,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2843,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2854,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2855,            return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2857,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2868,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2869,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2871,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2882,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2883,            return true;,4,1,1,0,0,1,4,0,0,14,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2885,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2896,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2897,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2899,        return false;,0,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2910,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2911,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2913,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2924,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2925,            return true;,2,1,0,0,0,1,8,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2927,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2955,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2957,            return clone(array1);,0,0,1,1,2,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2985,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2986,            return clone(array2);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2987,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2988,            return clone(array1);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2990,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2991,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2992,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2993,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3014,        if (array1 == null) {,0,1,0,1,3,0,12,0,0,13,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3015,            return clone(array2);,0,0,0,1,2,1,0,0,0,1,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3016,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3017,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3019,        char[] joinedArray = new char[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3020,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,1,1,2,0,2,0,0,11,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3021,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3022,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3043,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3044,            return clone(array2);,2,0,1,1,2,1,4,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3045,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3046,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3048,        byte[] joinedArray = new byte[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3049,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3050,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3051,        return joinedArray;,4,0,0,0,0,1,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3072,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3073,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3074,        } else if (array2 == null) {,10,2,0,1,4,0,10,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3075,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3077,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3078,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3079,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3080,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3101,        if (array1 == null) {,2,1,0,1,3,0,10,0,0,14,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3102,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3103,        } else if (array2 == null) {,4,1,0,1,4,0,8,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3104,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3106,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3107,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",10,0,0,1,2,0,8,0,0,19,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3108,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,0,1,2,0,8,0,0,19,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3109,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3130,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3131,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3132,        } else if (array2 == null) {,4,1,0,1,4,0,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3133,            return clone(array1);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3135,        long[] joinedArray = new long[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3136,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3137,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3138,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3159,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3160,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3161,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3162,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3164,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3165,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3166,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3167,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3188,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3189,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3190,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3191,            return clone(array1);,12,0,0,1,2,1,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3193,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3194,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3195,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3196,        return joinedArray;,4,1,0,0,0,1,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3225,        Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);,0,0,0,3,6,0,0,0,0,9,105,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3226,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3227,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3228,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3253,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3254,        newArray[newArray.length - 1] = element;,8,1,1,1,2,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3255,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3280,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3281,        newArray[newArray.length - 1] = element;,12,2,1,1,2,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3282,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3307,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,2,0,4,8,0,8,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3308,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3309,        return newArray;,2,0,0,0,0,1,8,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3334,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",14,1,0,4,8,0,4,0,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3335,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,4,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3336,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3361,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3362,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3363,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3388,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",8,0,0,4,8,0,4,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3389,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3390,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3415,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,1,4,8,0,0,0,0,7,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3416,        newArray[newArray.length - 1] = element;,10,2,1,1,2,0,2,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3417,        return newArray;,4,0,1,0,0,1,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3442,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3443,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3444,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3457,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3458,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,6,8,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3459,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3460,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,10,0,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3461,            return newArray;,8,2,0,0,0,1,4,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3463,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3496,        Class<?> clss = null;,10,1,0,0,0,0,0,2,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3497,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3498,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3499,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3500,            clss = element.getClass();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3502,            return (T[]) new Object[] { null };,8,6,0,4,8,1,0,4,0,18,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3504,"        return (T[]) add(array, index, element, clss);",0,1,0,3,6,1,10,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3535,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",8,0,0,4,8,1,12,0,0,21,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3567,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",4,0,0,4,8,1,12,0,0,16,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3598,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3629,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3660,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0,0,0,4,8,1,0,0,0,13,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3691,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3722,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3753,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",0,0,0,4,8,1,0,0,0,13,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3768,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3769,            if (index != 0) {,6,1,0,1,3,0,0,0,0,8,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3770,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3772,"            Object joinedArray = Array.newInstance(clss, 1);",0,0,0,1,2,0,6,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3773,"            Array.set(joinedArray, 0, element);",2,0,0,1,2,0,12,2,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3774,            return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3776,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3777,        if (index > length || index < 0) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3778,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3780,"        Object result = Array.newInstance(clss, length + 1);",0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3781,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3782,"        Array.set(result, index, element);",0,1,0,1,2,0,20,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3783,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3784,"            System.arraycopy(array, index, result, index + 1, length - index);",6,2,0,1,2,0,10,0,0,18,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3786,        return result;,4,0,0,0,0,1,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3819,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,4,4,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3848,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3849,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3850,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3852,"        return remove(array, index);",2,0,0,1,2,1,10,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3884,"        return (boolean[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3913,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3914,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3915,            return clone(array);,4,0,0,1,2,1,4,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3917,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3949,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3978,"        int index = indexOf(array, element);",6,1,1,1,2,0,10,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3979,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3980,            return clone(array);,0,0,0,1,2,1,8,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3982,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4014,"        return (char[]) remove((Object) array, index);",0,0,0,4,8,1,10,0,0,10,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4043,"        int index = indexOf(array, element);",4,3,1,1,2,0,20,0,0,33,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4044,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4045,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4047,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4079,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4108,"        int index = indexOf(array, element);",4,1,0,1,2,0,14,2,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4109,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4110,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4112,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4144,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4173,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4174,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4175,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4177,"        return remove(array, index);",4,1,0,1,2,1,6,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4209,"        return (int[]) remove((Object) array, index);",6,0,0,4,8,1,16,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4238,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4239,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4240,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4242,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4274,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4303,"        int index = indexOf(array, element);",4,2,0,1,2,0,12,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4304,        if (index == INDEX_NOT_FOUND) {,6,2,0,1,3,0,0,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4305,            return clone(array);,2,0,0,1,2,1,8,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4307,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4339,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4368,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4369,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4370,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4372,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4397,        int length = getLength(array);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4398,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4399,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4402,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",4,1,0,3,6,0,10,2,0,17,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4403,"        System.arraycopy(array, 0, result, 0, index);",4,1,0,1,2,0,10,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4404,        if (index < length - 1) {,8,4,0,1,3,0,2,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4405,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",10,3,0,1,2,0,10,0,0,23,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4408,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,1,0,1,2,1,4,0,0,5,44,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,6,5,0,3,6,0,4,0,0,16,40,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",2,1,0,1,2,0,6,0,0,11,77,10,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,2,0,0,2,4,0,8,0,0,11,42,9,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/Validate,38,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1348,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1360,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",6,0,0,1,2,0,4,0,0,11,56,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,634,                break;,2,0,0,0,0,3,2,2,0,10,6,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,8,2,0,12,6,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,0,0,0,0,0,0,0,0,0,0,23,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",10,1,0,3,6,1,6,2,0,20,73,3,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,2,0,0,1,3,0,0,0,0,2,22,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,6,0,0,6,33,5,0.0303,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1293,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,8,1,0,1,3,0,6,0,0,16,38,1,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1318,        },2,0,0,0,1,2,0,0,0,5,1,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,6,9,0,1,3,0,4,0,0,19,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,2,0,0,0,0,1,4,0,0,7,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,6,0,0,0,0,0,0,0,0,6,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,6,1,0,1,3,3,0,2,0,12,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,0,0,0,2,4,0,0,0,0,6,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,13,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,8,0,0,12,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,8,3,0,1,3,0,6,2,0,20,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,0,0,0,4,8,0,0,0,0,12,67,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,4,1,0,1,3,0,0,0,0,5,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",2,1,0,2,4,0,10,0,0,14,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,14,2,0,2,4,0,4,4,0,24,64,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,0,0,0,2,4,0,0,0,0,6,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,0,0,0,2,4,0,0,0,0,6,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",4,0,1,2,4,0,10,0,0,20,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,8,1,1,1,2,0,0,0,0,16,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,3,0,0,1,3,0,12,0,0,15,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,2,1,0,2,4,0,10,0,0,13,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,4,0,0,1,3,3,2,2,0,13,14,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,2,1,0,0,0,1,0,2,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",6,6,0,1,2,1,8,0,0,21,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,6,1,0,0,0,1,10,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,10,2,0,4,9,0,10,2,0,24,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,8,3,0,3,7,0,4,4,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,4,1,0,1,3,0,4,2,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,2,2,0,2,6,0,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,541,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,8,3,0,0,0,0,14,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",2,0,0,1,2,1,6,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,1,2,1,8,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,8,3,0,0,0,1,4,2,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,603,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,605,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,3,6,0,4,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,4,0,0,0,0,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,627,        if(input == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,628,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,630,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,637,"                Class normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",0,0,0,1,2,0,0,0,0,3,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,640,"                Class normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",2,0,0,1,2,0,0,2,0,4,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,643,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0,0,0,1,2,0,0,0,0,3,115,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,646,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,649,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",2,0,0,3,6,0,10,4,0,16,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,652,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0,0,0,2,4,0,0,0,0,6,109,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,653,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,654,            } catch(ClassNotFoundException cnfe) {,0,0,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,655,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",2,0,0,1,2,0,0,2,0,5,95,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,656,            } catch(NoSuchMethodException nsme) {,4,0,0,1,4,2,0,4,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,657,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",2,0,0,1,2,0,0,2,0,5,94,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,658,            } catch(NoSuchFieldException nsfe) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,659,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",2,0,0,1,2,0,0,2,0,5,93,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,660,            } catch(IllegalAccessException iae) {,2,0,0,1,4,0,0,2,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,661,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",4,0,0,1,2,0,0,2,0,7,94,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,662,            } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,663,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",10,1,0,1,2,0,0,4,0,18,96,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,664,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,0,0,1,4,3,10,4,0,21,58,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,665,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",2,0,0,1,2,0,0,2,0,5,97,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,666,            } catch(SecurityException se) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,667,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",4,1,0,1,2,0,0,2,0,8,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,670,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,2,0,3,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,697,        return str1 == null ? str2 == null : str1.equals(str2);,2,0,0,1,2,2,0,2,0,5,55,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,722,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,747,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,748,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,750,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,779,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,780,            return -1;,2,0,0,0,0,4,0,4,0,9,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,782,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,808,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,809,            return -1;,0,0,0,0,0,1,12,0,0,12,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,811,        return str.indexOf(searchStr);,2,0,1,1,2,1,6,2,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,842,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,843,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,845,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,846,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,848,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,849,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,851,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,3,2,2,0,11,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,852,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,853,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,855,            found++;,2,0,0,0,0,0,0,4,0,6,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,856,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,857,        return index;,6,0,0,0,0,1,0,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,892,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,893,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,896,        if (searchStr.length() == 0 && startPos >= str.length()) {,8,3,0,3,7,0,14,0,0,26,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,897,            return str.length();,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,899,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,924,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,925,            return -1;,0,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,927,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,958,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,959,            return -1;,6,0,0,0,0,1,0,0,0,7,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,961,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,987,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,988,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,990,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1022,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1023,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1025,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1050,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1051,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1053,        return str.indexOf(searchChar) >= 0;,4,2,0,1,2,1,10,2,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1078,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1079,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1081,        return str.indexOf(searchStr) >= 0;,8,7,0,1,2,1,0,0,0,19,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1108,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1109,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1111,        int len = searchStr.length();,8,3,0,1,2,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1112,        int max = str.length() - len;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1113,        for (int i = 0; i <= max; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1114,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",10,1,0,2,5,0,10,0,0,23,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1115,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1118,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1146,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1147,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1149,        for (int i = 0; i < str.length(); i++) {,2,3,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1150,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1151,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1152,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1153,                    return i;,2,0,0,0,0,1,0,0,0,3,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1157,        return -1;,2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1183,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,12,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1184,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1186,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1215,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1216,            return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1218,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1219,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1220,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1221,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1222,                    return true;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1226,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1257,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1258,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1260,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1288,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1289,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1291,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1292,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1293,            for (int j = 0; j < searchChars.length; j++) {,2,1,0,1,3,0,0,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1294,                if (searchChars[j] == ch) {,12,2,1,2,5,0,0,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1295,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1298,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1300,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1326,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1327,            return -1;,4,0,0,0,0,1,0,0,0,5,10,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1329,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1330,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1331,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1334,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1362,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1363,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1365,        if (str.length() == 0) {,2,0,0,2,5,0,6,0,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1366,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1368,        if (valid.length == 0) {,0,1,0,1,3,0,8,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1369,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1371,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1397,        if (str == null || validChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1398,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1400,"        return containsOnly(str, validChars.toCharArray());",0,0,1,2,4,1,0,0,0,4,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1428,        if (str == null || invalidChars == null) {,2,0,0,1,3,1,0,2,0,7,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1429,            return true;,2,0,0,0,0,1,4,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1431,        int strSize = str.length();,2,0,0,1,2,1,0,0,0,4,27,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1432,        int validSize = invalidChars.length;,2,1,0,0,0,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1433,        for (int i = 0; i < strSize; i++) {,2,0,0,1,3,0,0,0,0,3,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1434,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1435,            for (int j = 0; j < validSize; j++) {,10,1,0,1,3,0,12,0,0,24,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1436,                if (invalidChars[j] == ch) {,10,2,1,2,5,0,6,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1437,                    return false;,2,1,1,0,0,1,0,0,0,7,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1441,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1467,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1468,            return true;,0,0,0,0,0,1,12,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1470,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1502,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1503,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1505,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1508,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1510,        int tmp = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1511,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1512,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1513,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1514,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1516,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1517,            if (tmp == -1) {,4,1,0,1,3,0,0,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1518,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1521,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1522,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1526,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,8,1,0,1,2,1,0,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1555,        if ((str == null) || (searchStrs == null)) {,2,0,0,3,7,0,0,0,0,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1556,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1558,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1559,        int ret = -1;,10,1,0,0,0,0,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1560,        int tmp = 0;,2,0,0,0,0,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1561,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1562,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1563,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1564,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1566,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1567,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1568,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1571,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1601,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1602,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1606,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1607,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1610,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1611,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1613,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1614,            return EMPTY;,12,1,0,0,0,1,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1617,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1656,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1657,            return null;,0,0,0,0,0,1,12,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1661,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1662,            end = str.length() + end; // remember end is negative,0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1664,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1665,            start = str.length() + start; // remember start is negative,14,2,0,1,2,0,4,2,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1669,        if (end > str.length()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1670,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1674,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1675,            return EMPTY;,2,0,0,0,0,1,6,0,0,9,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1678,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1679,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1681,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1682,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1685,"        return str.substring(start, end);",2,1,0,1,2,1,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1711,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1712,            return null;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1714,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1715,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1717,        if (str.length() <= len) {,6,2,0,2,5,0,8,0,0,17,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1718,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1720,"        return str.substring(0, len);",2,0,0,1,2,1,0,0,0,2,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1744,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1747,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1748,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1750,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1751,            return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1753,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1781,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1782,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1784,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,2,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1785,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1787,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1788,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1790,        if (str.length() <= (pos + len)) {,6,2,0,3,7,0,4,2,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1791,            return str.substring(pos);,2,0,0,1,2,1,10,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1793,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1826,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1827,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1829,        if (separator.length() == 0) {,0,2,0,2,5,0,8,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1830,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1832,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1833,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1834,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1836,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1868,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1869,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1871,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1872,            return EMPTY;,2,0,0,0,0,1,8,0,0,11,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1874,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1875,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1876,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1878,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1909,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1910,            return str;,0,0,0,0,0,1,6,0,0,6,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1912,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1913,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1914,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1916,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1949,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1950,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1952,        if (isEmpty(separator)) {,0,0,0,2,5,0,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1953,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1955,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1956,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,0,0,4,9,0,0,0,0,3,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1957,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1959,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1986,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2017,        if (str == null || open == null || close == null) {,8,6,0,1,3,0,0,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2018,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2020,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2021,        if (start != -1) {,6,1,0,1,3,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2022,"            int end = str.indexOf(close, start + open.length());",8,1,0,2,4,0,10,0,0,19,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2023,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2024,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2027,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2053,        if (str == null || isEmpty(open) || isEmpty(close)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2054,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2056,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2057,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2058,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,1,0,0,1,0,0,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2060,        int closeLen = close.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2061,        int openLen = open.length();,2,1,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2062,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2063,        int pos = 0;,0,0,0,0,0,0,0,2,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2064,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2065,"            int start = str.indexOf(open, pos);",6,0,0,1,2,0,8,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2066,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2067,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2069,            start += openLen;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2070,"            int end = str.indexOf(close, start);",6,0,1,1,2,0,0,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2071,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2072,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2074,"            list.add(str.substring(start, end));",2,0,0,2,4,0,14,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2075,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2076,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2077,        if (list.isEmpty()) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2078,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2080,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,8,2,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2111,"        return split(str, null, -1);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2139,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2168,"        return splitWorker(str, separatorChars, -1, false);",4,1,0,1,2,1,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2202,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2229,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2260,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2289,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2322,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2342,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2343,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2346,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2348,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2349,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,6,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2352,        if ((separator == null) || (EMPTY.equals(separator))) {,2,2,0,4,9,0,6,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2354,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,8,0,0,9,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2357,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2359,        ArrayList<String> substrings = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2360,        int numberOfSubstrings = 0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2361,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2362,        int end = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2363,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2364,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2366,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2367,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2368,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2370,                    if (numberOfSubstrings == max) {,6,1,0,1,3,0,0,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2371,                        end = len;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2372,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2376,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2381,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2385,                    if (preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2386,                        numberOfSubstrings += 1;,4,1,0,0,0,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2387,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2388,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2389,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2391,                            substrings.add(EMPTY);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2394,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2398,                substrings.add(str.substring(beg));,4,0,0,2,4,0,10,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2399,                end = len;,6,0,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2403,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2432,"        return splitWorker(str, null, -1, true);",8,1,0,1,2,1,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2468,"        return splitWorker(str, separatorChar, true);",2,0,1,1,2,1,6,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2486,        if (str == null) {,4,1,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2489,        int len = str.length();,6,1,0,1,2,0,0,0,0,7,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2490,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2491,            return ArrayUtils.EMPTY_STRING_ARRAY;,10,1,0,0,0,1,8,0,0,19,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2493,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2494,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2495,        boolean match = false;,0,0,0,0,0,0,8,0,0,8,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2496,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2497,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2498,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2499,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2500,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2501,                    match = false;,2,0,0,0,0,0,8,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2502,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2504,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2505,                continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2507,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2508,            match = true;,16,4,0,0,0,0,10,0,0,32,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2509,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2511,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2512,"            list.add(str.substring(start, i));",0,0,0,2,4,0,22,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2514,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2551,"        return splitWorker(str, separatorChars, -1, true);",16,1,1,1,2,1,14,2,0,40,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2591,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,8,0,0,9,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2613,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2616,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2617,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2618,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2620,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2621,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2622,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2623,        boolean match = false;,2,0,0,0,0,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2624,        boolean lastMatch = false;,4,3,0,0,0,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2625,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2627,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2628,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2629,                    if (match || preserveAllTokens) {,4,1,1,1,3,0,8,0,0,22,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2630,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2631,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2632,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2633,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2635,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2636,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2638,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2639,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2641,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2642,                match = true;,2,0,0,0,0,0,2,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2643,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2645,        } else if (separatorChars.length() == 1) {,4,3,0,2,6,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2647,            char sep = separatorChars.charAt(0);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2648,            while (i < len) {,6,1,0,1,3,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2649,                if (str.charAt(i) == sep) {,2,1,0,2,5,0,6,0,0,9,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2650,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,14,0,0,20,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2651,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2652,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2653,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2654,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2656,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2657,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2659,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2660,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2662,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2663,                match = true;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2664,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2666,        } else {,0,0,1,0,2,0,4,0,0,8,8,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2668,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2669,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2670,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2671,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2672,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2673,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2674,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2676,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2677,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2679,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2680,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2682,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2683,                match = true;,2,0,0,0,0,0,6,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2684,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2687,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2688,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2690,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2713,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2741,"        return splitByCharacterType(str, true);",2,1,0,1,2,1,14,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2759,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2760,            return null;,2,3,0,0,0,1,4,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2762,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2763,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2765,        char[] c = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2766,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2767,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2768,        int currentType = Character.getType(c[tokenStart]);,6,0,1,2,4,0,12,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2769,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,12,2,0,1,3,0,0,0,0,15,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2770,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2771,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2772,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2774,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2775,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2776,                if (newTokenStart != tokenStart) {,16,4,0,1,3,0,0,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2777,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",10,1,0,2,4,0,4,2,0,17,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2778,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2780,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2781,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,4,2,0,15,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2782,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2784,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2786,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2787,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,0,0,0,4,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2813,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2839,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2840,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2843,"        return join(array, separator, 0, array.length);",2,0,0,1,2,1,0,0,0,3,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2873,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2874,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2876,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2877,        if (bufSize <= 0) {,10,1,0,1,3,0,0,0,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2878,            return EMPTY;,10,1,0,0,0,1,14,0,0,28,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2881,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2882,        StringBuilder buf = new StringBuilder(bufSize);,6,1,0,1,2,0,0,6,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2884,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2885,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2886,                buf.append(separator);,4,3,1,1,2,0,10,0,0,19,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2888,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2889,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2892,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2920,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2921,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2923,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2954,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2957,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2958,            separator = EMPTY;,6,0,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2963,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2964,        if (bufSize <= 0) {,12,2,0,1,3,0,0,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2965,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2968,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2971,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,4,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2973,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,6,0,0,18,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2974,            if (i > startIndex) {,18,2,0,1,3,0,0,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2975,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2977,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2978,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2981,        return buf.toString();,2,1,0,1,2,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3001,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3002,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3004,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3005,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3007,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3008,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3009,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3013,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,1,0,1,2,0,0,4,0,9,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3014,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3015,            buf.append(first);,2,0,0,1,2,0,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3018,        while (iterator.hasNext()) {,0,0,0,2,5,0,14,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3019,            buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3020,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3021,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3022,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3024,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3026,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3045,        if (iterator == null) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3046,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3048,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3049,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3051,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3052,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3053,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3057,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3058,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3059,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3062,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3063,            if (separator != null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3064,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3066,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3067,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3068,                buf.append(obj);,2,1,0,1,2,0,6,0,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3070,        },2,0,0,0,1,0,0,0,0,4,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3071,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3089,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3092,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,8,0,0,10,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3110,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3113,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3133,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3134,            return str;,4,2,0,0,0,1,8,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3136,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3137,        char[] chs = new char[sz];,4,1,1,2,4,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3138,        int count = 0;,6,1,0,0,0,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3139,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3140,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3141,                chs[count++] = str.charAt(i);,6,1,1,2,4,0,6,0,0,17,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3144,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3145,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3147,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3177,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,8,0,0,11,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3178,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3180,        if (str.startsWith(remove)){,0,0,0,2,5,0,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3181,            return str.substring(remove.length());,2,0,0,2,4,1,16,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3183,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3212,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3213,            return str;,6,1,0,0,0,1,0,0,0,7,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3215,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3216,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3218,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3246,        if (isEmpty(str) || isEmpty(remove)) {,4,1,1,3,7,0,26,0,0,37,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3247,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3249,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3250,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3252,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3280,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3281,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3283,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3284,"            return str.substring(0, str.length() - remove.length());",0,2,0,3,6,1,24,0,0,26,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3286,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3313,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3314,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3316,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,8,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3339,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,3,7,0,10,0,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3340,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3342,        char[] chars = str.toCharArray();,0,0,0,2,4,0,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3343,        int pos = 0;,4,0,0,0,0,0,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3344,        for (int i = 0; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3345,            if (chars[i] != remove) {,2,0,0,2,5,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3346,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3349,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3378,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3405,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3437,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3438,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3440,        int start = 0;,6,3,0,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3441,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3442,        if (end == -1) {,4,1,0,1,3,0,0,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3443,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3445,        int replLength = searchString.length();,2,0,0,1,2,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3446,        int increase = replacement.length() - replLength;,4,2,0,1,2,0,8,0,0,16,49,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3447,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3448,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3449,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3450,        while (end != -1) {,2,0,0,1,3,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3451,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3452,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3453,            if (--max == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3454,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3456,"            end = text.indexOf(searchString, start);",2,1,0,1,2,0,16,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3458,        buf.append(text.substring(start));,0,0,0,2,4,0,20,0,0,20,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3459,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3502,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3553,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3554,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3620,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",4,0,0,1,2,0,0,0,0,5,92,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3628,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,2,1,0,0,1,0,8,2,0,14,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3648,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3678,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,10,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3704,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3727,            return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3730,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3756,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3757,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3759,"        return str.replace(searchChar, replaceChar);",2,1,0,1,2,1,8,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3799,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3800,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3802,        if (replaceChars == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3803,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3805,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3806,        int replaceCharsLength = replaceChars.length();,4,0,0,1,2,0,4,0,0,10,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3807,        int strLength = str.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3808,        StringBuilder buf = new StringBuilder(strLength);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3809,        for (int i = 0; i < strLength; i++) {,10,2,0,1,3,0,0,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3810,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3811,            int index = searchChars.indexOf(ch);,4,0,0,1,2,0,12,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3812,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3813,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3814,                if (index < replaceCharsLength) {,8,0,0,1,3,0,0,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3815,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3818,                buf.append(ch);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3821,        if (modified) {,6,0,0,1,3,0,4,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3822,            return buf.toString();,4,2,0,1,2,1,18,0,0,24,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3824,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3859,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3860,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3862,        if (overlay == null) {,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3863,            overlay = EMPTY;,8,1,0,0,0,0,4,0,0,14,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3865,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3866,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3867,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3869,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3870,            start = len;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3872,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3873,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3875,        if (end > len) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3876,            end = len;,6,0,0,0,0,0,0,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3878,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3879,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3880,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3881,            end = temp;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3883,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3918,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3919,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3922,        if (str.length() == 1) {,2,2,0,2,5,0,4,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3923,            char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3924,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3925,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3927,            return str;,14,2,1,0,0,1,4,0,0,26,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3930,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3931,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3933,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3934,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3935,                lastIdx--;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3937,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3938,            lastIdx++;,6,0,0,0,0,0,6,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3940,"        return str.substring(0, lastIdx);",4,1,0,1,2,1,6,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3970,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3971,            return str;,8,1,0,0,0,1,0,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3973,        if (str.endsWith(separator)) {,8,4,0,2,5,0,12,0,0,24,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3974,"            return str.substring(0, str.length() - separator.length());",4,2,0,3,6,1,22,0,0,28,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3976,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4005,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4006,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4008,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4009,        if (strLen < 2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4010,            return EMPTY;,12,1,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4012,        int lastIdx = strLen - 1;,14,3,1,0,0,0,12,0,0,34,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4013,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4014,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4015,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4016,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4017,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4020,        return ret;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4049,        if (str == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4050,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4052,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4053,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4055,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4056,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4057,            return str;,4,3,0,0,0,1,8,0,0,17,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4059,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4060,"            return padding(repeat, str.charAt(0));",4,0,0,2,4,2,16,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4063,        int outputLength = inputLength * repeat;,8,1,0,0,0,1,4,0,0,14,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4064,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4066,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4067,                char[] output1 = new char[outputLength];,4,1,0,2,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4068,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4069,                    output1[i] = ch;,4,1,1,1,2,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4071,                return new String(output1);,4,1,0,1,2,1,0,0,0,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4073,                char ch0 = str.charAt(0);,2,0,0,1,2,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4074,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4075,                char[] output2 = new char[outputLength];,2,0,0,2,4,0,8,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4076,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4077,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4078,                    output2[i + 1] = ch1;,6,1,1,1,2,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4080,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4082,                StringBuilder buf = new StringBuilder(outputLength);,6,1,0,1,2,0,6,4,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4083,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4084,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4086,                return buf.toString();,6,0,0,1,2,1,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4110,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4111,"            return repeat(str, repeat);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4114,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4115,"            return removeEnd(result, separator);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4143,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4144,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4146,        final char[] buf = new char[repeat];,10,1,1,2,4,1,0,2,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4147,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4148,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4150,        return new String(buf);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4173,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4198,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4199,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4201,        int pads = size - str.length();,6,2,0,1,2,0,4,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4202,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4203,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4205,        if (pads > PAD_LIMIT) {,6,1,0,1,3,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4206,"            return rightPad(str, size, String.valueOf(padChar));",4,0,0,2,4,1,12,0,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4208,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4235,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4236,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4238,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4239,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4241,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4242,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4243,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4244,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4245,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4247,        if (padLen == 1 && pads <= PAD_LIMIT) {,8,3,0,1,3,0,4,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4248,"            return rightPad(str, size, padStr.charAt(0));",0,3,0,2,4,1,16,0,0,21,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4251,        if (pads == padLen) {,4,1,0,1,3,0,4,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4252,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",4,1,1,2,4,1,4,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4256,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4257,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4258,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,1,0,1,2,1,18,0,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4311,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4314,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4315,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,2,1,0,1,3,0,16,0,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",4,1,0,2,4,1,12,0,0,17,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4320,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,0,0,0,1,3,0,10,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4348,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,8,1,1,1,2,0,4,0,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4356,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4359,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4360,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,1,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4364,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,4,1,0,2,4,0,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4371,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",2,0,0,1,2,1,0,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4447,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4449,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",2,0,0,1,2,0,8,0,0,11,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4484,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4486,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",10,1,0,0,0,0,4,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,4,26,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4490,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4491,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",8,1,1,1,2,0,8,0,0,21,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,0,1,0,1,3,0,4,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4522,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,2,1,0,1,2,1,4,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4544,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4545,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4570,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4571,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4573,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4594,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,2,0,0,1,2,1,12,4,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,4,1,0,0,0,1,10,0,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4624,        return new StringBuilder(strLen),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),2,0,0,1,2,1,0,0,0,2,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4690,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,8,1,0,0,0,1,0,4,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,2,0,1,1,3,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,8,1,0,1,2,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,8,0,0,2,5,1,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4699,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4700,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,12,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4702,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4703,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4705,            buffer.append(ch);,0,0,0,1,2,0,4,0,0,4,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,4,2,0,3,7,0,12,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4733,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4735,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",8,3,0,3,7,0,20,0,0,34,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,4,1,0,0,0,0,0,0,0,6,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,4,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4766,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4769,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4770,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4771,                return false;,0,0,0,0,0,1,10,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4774,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4800,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,2,1,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4803,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4808,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,8,6,0,1,3,0,0,0,0,14,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4833,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,4,2,0,1,2,0,14,0,0,21,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4836,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4841,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4867,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,1,84,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4875,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4904,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4907,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4909,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4939,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4941,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4942,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,2,0,1,0,0,1,0,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4947,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4974,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4975,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4977,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,2,4,0,6,13,0,16,0,0,24,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4980,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4983,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5006,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5010,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5011,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5012,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5015,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5036,        if (str == null || isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5037,            return false;,0,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,6,1,0,1,2,0,0,0,0,7,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5040,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5041,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5042,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5045,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5066,        if (str == null || isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5067,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5069,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,14,1,0,1,3,1,0,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5072,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5075,        return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5097,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5118,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,10,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5159,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,6,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5186,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,2,0,0,1,2,0,10,2,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5192,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5230,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,12,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5269,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5270,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5272,        if (maxWidth < 4) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5273,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5275,        if (str.length() <= maxWidth) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,8,2,0,2,4,0,12,0,0,23,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,6,2,0,1,3,0,12,2,0,22,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5288,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5324,        if (str1 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5328,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",4,1,0,1,2,0,6,0,0,11,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5331,        if (at == -1) {,0,0,0,1,3,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5334,        return str2.substring(at);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,2,0,0,0,0,1,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,6,0,0,1,3,0,0,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5365,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5368,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5369,            if (str1.charAt(i) != str2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5370,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,6,0,0,0,0,1,0,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5412,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,8,0,0,0,0,0,4,0,0,13,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5416,        int arrayLen = strs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5418,        int longestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5423,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,2,2,1,2,5,0,6,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,0,0,0,0,0,0,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5430,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5435,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,0,0,0,2,5,0,0,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5436,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,4,1,0,1,3,0,4,4,0,13,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,2,0,0,2,4,0,4,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,12,1,0,1,3,0,0,0,0,14,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,14,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,4,0,0,0,0,0,12,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,2,1,1,0,0,0,0,0,0,7,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5455,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,4,0,1,3,0,8,0,0,19,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5463,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,6,1,1,0,0,1,0,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5502,        if (strs == null || strs.length == 0) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,4,0,1,0,0,1,4,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,4,0,0,1,2,0,8,0,0,12,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5506,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5509,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5511,            return strs[0];,0,0,0,1,2,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5514,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5517,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5558,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5559,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,4,0,1,1,2,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5580,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5582,        if (n == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,12,2,0,1,4,0,0,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5585,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,4,1,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5592,            t = tmp;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5598,"        int d[] = new int[n+1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,10,2,0,1,3,0,8,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5610,            p[i] = i;,0,0,0,1,2,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5613,        for (j = 1; j<=m; j++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5614,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,4,0,1,1,2,0,0,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5618,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,6,1,0,0,0,0,0,0,0,9,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5626,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5631,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5680,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5705,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,6,2,0,1,3,0,6,0,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,10,3,0,1,2,2,0,4,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,4,1,0,3,7,0,12,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5724,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5726,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5748,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5749,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5751,        for (int i = 0; i < searchStrings.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5753,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,6,0,0,0,0,2,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5757,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5812,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5831,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5833,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5834,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,0,3,6,1,6,2,0,14,60,1,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",6,0,0,1,2,0,4,0,0,13,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,4,1,0,2,5,0,16,0,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,4,1,0,1,3,3,0,4,0,12,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,2,0,0,0,0,0,6,0,0,9,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,4,0,5,11,0,10,0,0,21,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,6,3,0,4,9,3,8,4,0,24,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,4,1,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,4,2,0,1,2,1,6,0,0,12,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",4,1,0,1,2,0,6,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,1,0,0,0,0,4,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,8,7,0,1,3,0,8,0,0,24,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,2,0,0,0,0,1,8,4,0,15,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,3,0,3,7,0,8,0,0,13,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,0,0,1,2,1,8,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",2,1,0,1,2,1,8,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,4,3,0,0,0,1,4,0,0,12,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,864,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,895,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,896,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,898,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,924,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,925,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,927,        return str.lastIndexOf(searchStr);,2,1,0,1,2,1,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,959,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,960,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,962,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,987,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,988,            return false;,0,0,0,0,0,1,4,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,990,        return str.indexOf(searchChar) >= 0;,6,1,0,1,2,1,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1016,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1046,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1076,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1077,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1079,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1080,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1081,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1082,                if (searchChars[j] == ch) {,4,1,1,2,5,2,0,4,0,15,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1083,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1087,        return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1113,        if (isEmpty(str) || isEmpty(searchChars)) {,2,1,0,3,7,0,8,0,0,11,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1114,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1116,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1145,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1146,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1148,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1149,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1150,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1151,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1152,                    return true;,4,0,0,0,0,1,0,2,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1156,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1187,        if (searchChars == null) {,6,1,0,1,3,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1188,            return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1190,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1218,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1219,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1221,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1222,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1223,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1224,                if (searchChars[j] == ch) {,4,3,1,2,5,0,4,0,0,16,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1225,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1228,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1230,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1256,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,2,0,4,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1257,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1259,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1260,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1261,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1264,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1292,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1293,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1295,        if (str.length() == 0) {,2,2,0,2,5,0,4,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1296,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1298,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1299,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1301,"        return indexOfAnyBut(str, valid) == -1;",4,1,0,1,2,1,0,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1327,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1328,            return false;,2,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1330,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1358,        if (str == null || invalidChars == null) {,12,4,0,1,3,0,4,0,0,20,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1359,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1361,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1362,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1363,        for (int i = 0; i < strSize; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1364,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1365,            for (int j = 0; j < validSize; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1366,                if (invalidChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1367,                    return false;,0,0,0,0,0,1,0,0,0,1,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1371,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1397,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1398,            return true;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1400,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1432,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,4,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1433,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1435,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1438,        int ret = Integer.MAX_VALUE;,10,1,0,0,0,0,0,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1440,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1441,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1442,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1443,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1444,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1446,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1447,            if (tmp == -1) {,10,5,0,1,3,3,2,0,0,23,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1448,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1451,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1452,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1456,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,12,1,0,1,2,1,4,0,0,19,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1485,        if ((str == null) || (searchStrs == null)) {,6,3,0,3,7,0,6,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1486,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1488,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1489,        int ret = -1;,2,0,0,0,0,0,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1490,        int tmp = 0;,8,3,0,0,0,0,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1491,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1492,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1493,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1494,                continue;,4,0,0,0,0,3,0,8,0,15,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1496,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1497,            if (tmp > ret) {,0,0,0,1,3,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1498,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1501,        return ret;,8,3,0,0,0,1,0,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1531,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1532,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1536,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1537,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1540,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1541,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1543,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1544,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1547,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1586,        if (str == null) {,12,8,0,1,3,0,0,0,0,20,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1591,        if (end < 0) {,2,1,0,1,3,0,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1592,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1594,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1595,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1599,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1600,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1604,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1605,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1608,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1609,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1611,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1612,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1615,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1641,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1642,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1644,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1645,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1647,        if (str.length() <= len) {,12,2,0,2,5,0,4,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1648,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1650,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1674,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1675,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1677,        if (len < 0) {,0,1,0,1,3,0,4,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1678,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1680,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1681,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1683,        return str.substring(str.length() - len);,2,1,0,2,4,1,4,0,0,7,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1711,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1712,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1714,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1715,            return EMPTY;,2,0,0,0,0,1,16,0,0,18,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1717,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1718,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1720,        if (str.length() <= (pos + len)) {,4,2,0,3,7,0,4,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1721,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1723,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1756,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1757,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1759,        if (separator.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1760,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1762,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1763,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1764,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1766,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1798,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1799,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1801,        if (separator == null) {,4,1,0,1,3,0,8,2,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1802,            return EMPTY;,4,0,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1804,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1805,        if (pos == -1) {,0,0,0,1,3,0,2,0,0,2,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1806,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1808,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1839,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1840,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1842,        int pos = str.lastIndexOf(separator);,2,1,0,1,2,0,10,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1843,        if (pos == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1844,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1846,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1879,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1880,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1882,        if (isEmpty(separator)) {,2,1,0,2,5,0,4,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1883,            return EMPTY;,12,2,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1885,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1886,        if (pos == -1 || pos == (str.length() - separator.length())) {,10,5,0,4,9,0,8,0,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1887,            return EMPTY;,4,1,0,0,0,1,4,0,0,9,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1889,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1916,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1947,        if (str == null || open == null || close == null) {,2,1,0,1,3,0,0,0,0,3,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1948,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1950,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1951,        if (start != -1) {,2,0,0,1,3,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1952,"            int end = str.indexOf(close, start + open.length());",0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1953,            if (end != -1) {,2,0,0,1,3,0,4,0,0,7,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1954,"                return str.substring(start + open.length(), end);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1957,        return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1983,        if (str == null || isEmpty(open) || isEmpty(close)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1984,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1986,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1987,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1988,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1990,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1991,        int openLen = open.length();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1992,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1993,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1994,        while (pos < (strLen - closeLen)) {,6,2,0,2,5,0,0,0,0,8,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1995,"            int start = str.indexOf(open, pos);",2,0,1,1,2,0,8,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1996,            if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1997,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1999,            start += openLen;,6,0,1,0,0,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2000,"            int end = str.indexOf(close, start);",2,0,0,1,2,0,8,0,0,10,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2001,            if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2002,                break;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2004,"            list.add(str.substring(start, end));",2,0,0,2,4,0,18,2,0,22,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2005,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2006,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2007,        if (list.isEmpty()) {,2,0,0,2,5,0,4,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2008,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2010,        return list.toArray(new String [list.size()]);,2,0,0,3,6,1,0,0,0,2,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2041,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2069,"        return splitWorker(str, separatorChar, false);",4,3,0,1,2,1,8,0,0,16,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2098,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2132,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2159,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2190,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2219,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2252,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2272,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2273,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2276,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2278,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2279,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,8,0,0,15,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2282,        if ((separator == null) || (EMPTY.equals(separator))) {,2,2,0,4,9,0,6,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2284,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,8,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2287,        int separatorLength = separator.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2289,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2290,        int numberOfSubstrings = 0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2291,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2292,        int end = 0;,2,0,0,0,0,0,8,4,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2293,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2294,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,8,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2296,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2297,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2298,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2300,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2301,                        end = len;,2,0,0,0,0,0,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2302,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2306,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,18,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2311,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2315,                    if (preserveAllTokens) {,2,0,0,1,3,0,0,0,0,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2316,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2317,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2318,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2319,                            substrings.add(str.substring(beg));,4,3,0,2,4,0,12,0,0,19,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2321,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2324,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2328,                substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2329,                end = len;,12,6,0,0,0,0,8,4,0,31,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2333,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,8,2,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2362,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2398,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2416,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2417,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2419,        int len = str.length();,4,0,1,1,2,0,4,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2420,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2421,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2423,        List<String> list = new ArrayList<String>();,2,0,0,1,2,3,4,2,0,11,44,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2424,"        int i = 0, start = 0;",8,1,0,0,0,0,0,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2425,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2426,        boolean lastMatch = false;,4,0,0,0,0,0,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2427,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2428,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2429,                if (match || preserveAllTokens) {,6,0,0,1,3,0,0,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2430,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2431,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2432,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2434,                start = ++i;,6,0,1,0,0,0,0,0,0,13,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2435,                continue;,4,3,0,0,0,0,0,0,0,7,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2437,            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2438,            match = true;,2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2439,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2441,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2442,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2444,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,14,2,0,17,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2481,"        return splitWorker(str, separatorChars, -1, true);",0,0,1,1,2,1,14,0,0,25,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2521,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,8,0,0,9,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2543,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2544,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2546,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2547,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2548,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2550,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2551,        int sizePlus1 = 1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2552,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2553,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2554,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2555,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2557,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2558,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,14,0,0,15,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2559,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2560,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2561,                        if (sizePlus1++ == max) {,4,0,0,1,3,0,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2562,                            i = len;,8,1,0,0,0,0,4,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2563,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2565,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2566,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2568,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2569,                    continue;,4,0,0,0,0,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2571,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2572,                match = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2573,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2575,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2577,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,0,0,0,3,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2578,            while (i < len) {,8,2,0,1,3,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2579,                if (str.charAt(i) == sep) {,4,0,0,2,5,0,0,0,0,5,27,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2580,                    if (match || preserveAllTokens) {,8,2,0,1,3,0,0,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2581,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2582,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2583,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2584,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2586,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2587,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2589,                    start = ++i;,6,0,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2590,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2592,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2593,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2594,                i++;,2,1,0,0,0,0,4,0,0,8,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2596,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2598,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2599,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2600,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2601,                        lastMatch = true;,4,0,0,0,0,1,4,0,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2602,                        if (sizePlus1++ == max) {,12,2,0,1,3,0,0,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2603,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2604,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2606,"                        list.add(str.substring(start, i));",10,1,0,2,4,0,12,0,0,24,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2607,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2609,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2610,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2612,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2613,                match = true;,2,0,0,0,0,0,8,4,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2614,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2617,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2618,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2620,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2643,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2671,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2689,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2690,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2692,        if (str.length() == 0) {,2,0,1,2,5,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2693,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,4,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2695,        char[] c = str.toCharArray();,2,0,0,2,4,0,14,0,0,16,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2696,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2697,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2698,        int currentType = Character.getType(c[tokenStart]);,6,0,1,2,4,0,4,2,0,16,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2699,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,18,2,0,1,3,1,0,12,0,34,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2700,            int type = Character.getType(c[pos]);,0,0,0,2,4,0,0,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2701,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2704,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2705,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2706,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2707,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",6,2,0,2,4,0,16,0,0,26,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2708,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2710,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2711,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2712,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2714,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2716,"        list.add(new String(c, tokenStart, c.length - tokenStart));",12,2,0,2,4,0,10,2,0,26,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2717,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2743,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2769,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2770,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2773,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2803,        if (array == null) {,10,1,0,1,3,0,10,0,0,22,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2804,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2806,        int bufSize = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2807,        if (bufSize <= 0) {,4,1,1,1,3,0,0,0,0,10,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2808,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2811,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,0,0,6,12,0,0,0,0,2,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2812,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2814,        for (int i = startIndex; i < endIndex; i++) {,4,0,0,1,3,0,0,0,0,6,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2815,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2816,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2818,            if (array[i] != null) {,10,3,1,2,5,0,6,0,0,24,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2819,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2822,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2850,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2851,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2853,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2884,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2885,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2887,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2888,            separator = EMPTY;,6,1,0,0,0,0,4,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2893,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2894,        if (bufSize <= 0) {,4,3,0,1,3,0,8,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2895,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2898,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),8,0,0,5,11,0,0,2,0,11,84,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2901,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2903,        for (int i = startIndex; i < endIndex; i++) {,28,8,0,1,3,0,0,0,0,38,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2904,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2905,                buf.append(separator);,0,0,0,1,2,0,18,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2907,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2908,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2911,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2931,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2932,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2934,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2935,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2937,        Object first = iterator.next();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2938,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2939,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2943,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2944,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2945,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2948,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2949,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2950,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2951,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2952,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2954,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2956,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2975,        if (iterator == null) {,2,0,0,1,3,0,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2978,        if (!iterator.hasNext()) {,6,1,0,2,5,0,10,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2979,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2981,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2982,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2983,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2987,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2988,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2989,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2992,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2993,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2994,                buf.append(separator);,2,1,0,1,2,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2996,            Object obj = iterator.next();,0,1,0,1,2,0,4,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2997,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2998,                buf.append(obj);,2,0,0,1,2,0,12,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3000,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3001,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3019,        if (collection == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3020,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3022,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3040,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3043,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3063,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3064,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3066,        int sz = str.length();,8,0,0,1,2,0,4,2,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3067,        char[] chs = new char[sz];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3068,        int count = 0;,4,0,1,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3069,        for (int i = 0; i < sz; i++) {,6,0,0,1,3,0,0,4,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3070,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,0,0,0,2,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3071,                chs[count++] = str.charAt(i);,2,1,1,2,4,0,14,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3074,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3075,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3077,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3107,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3108,            return str;,4,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3110,        if (str.startsWith(remove)){,0,0,0,2,5,0,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3111,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3113,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3142,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3143,            return str;,6,0,0,0,0,1,1,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3145,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3146,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3148,        return str;,8,2,0,0,0,1,6,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3176,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3177,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3179,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3180,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3182,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3210,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3211,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3213,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3214,"            return str.substring(0, str.length() - remove.length());",2,2,0,3,6,1,12,0,0,17,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3216,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3243,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3244,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3246,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,8,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3269,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3270,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3272,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3273,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3274,        for (int i = 0; i < chars.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3275,            if (chars[i] != remove) {,4,1,1,2,5,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3276,                chars[pos++] = chars[i];,10,1,1,2,4,0,0,0,0,20,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3279,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3308,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3335,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3367,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3368,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3370,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3371,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3372,        if (end == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3373,            return text;,4,0,0,0,0,1,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3375,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3376,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3377,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3378,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3379,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3380,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3381,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,12,0,0,12,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3382,            start = end + replLength;,6,1,0,0,0,0,6,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3383,            if (--max == 0) {,2,1,0,1,3,0,0,0,0,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3384,                break;,2,1,0,0,0,0,4,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3386,"            end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3388,        buf.append(text.substring(start));,8,1,0,2,4,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3389,        return buf.toString();,2,0,0,1,2,1,4,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3432,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3483,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3484,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3542,        if (text == null || text.length() == 0 || searchList == null || ,0,0,0,1,3,0,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3545,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3549,        if (timeToLive < 0) {,2,1,0,1,3,0,10,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3550,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",8,1,0,1,2,0,6,2,0,19,92,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3553,        int searchLength = searchList.length;,8,1,0,0,0,0,0,0,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3554,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3557,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3558,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,4,2,0,7,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3565,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,6,1,1,2,4,0,0,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3568,        int textIndex = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3569,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3570,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3574,        for (int i = 0; i < searchLength; i++) {,12,1,0,1,3,0,6,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3575,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3578,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3580,            tempIndex = text.indexOf(searchList[i]);,6,1,1,2,4,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3583,            if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3584,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3586,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3587,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3588,                    replaceIndex = i;,4,1,1,0,0,0,4,0,0,14,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3595,        if (textIndex == -1) {,8,2,0,1,3,0,10,0,0,22,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3596,            return text;,8,1,0,0,0,1,4,0,0,14,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3599,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3602,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3605,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3606,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3607,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3608,                increase += 3 * greater; // assume 3 matches,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3612,"        increase = Math.min(increase, text.length() / 5);",2,1,0,2,4,0,10,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3614,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,0,0,2,4,0,0,0,0,2,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3616,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3618,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3619,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3621,            buf.append(replacementList[replaceIndex]);,0,0,1,2,4,0,4,0,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3623,            start = textIndex + searchList[replaceIndex].length();,16,1,0,2,4,0,4,0,0,22,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3625,            textIndex = -1;,8,0,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3626,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3627,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3630,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3631,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3634,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3636,"                tempIndex = text.indexOf(searchList[i], start);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3639,                if (tempIndex == -1) {,8,1,0,1,3,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3640,                    noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3642,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3643,                        textIndex = tempIndex;,6,0,1,0,0,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3644,                        replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3651,        int textLength = text.length();,8,1,0,1,2,0,10,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3652,        for (int i = start; i < textLength; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3653,            buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3655,        String result = buf.toString();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3656,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3657,            return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3660,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3686,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3687,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3689,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3729,        if (isEmpty(str) || isEmpty(searchChars)) {,6,1,0,3,7,0,20,0,0,28,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3730,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3732,        if (replaceChars == null) {,4,1,0,1,3,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3733,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3735,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3736,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3737,        int strLength = str.length();,4,0,0,1,2,0,4,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3738,        StringBuilder buf = new StringBuilder(strLength);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3739,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3740,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3741,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3742,            if (index >= 0) {,8,1,0,1,3,1,0,4,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3743,                modified = true;,2,0,0,0,0,0,0,0,0,4,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3744,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3745,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3748,                buf.append(ch);,8,2,0,1,2,0,6,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3751,        if (modified) {,8,2,0,1,3,1,0,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3752,            return buf.toString();,4,0,0,1,2,1,0,4,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3754,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3789,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3790,            return null;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3792,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3793,            overlay = EMPTY;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3795,        int len = str.length();,2,0,0,1,2,0,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3796,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3797,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3799,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3800,            start = len;,6,1,0,0,0,0,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3802,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3803,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3805,        if (end > len) {,6,2,0,1,3,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3806,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3808,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3809,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3810,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3811,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3813,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3848,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3849,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3852,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3853,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3854,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3855,                return EMPTY;,8,1,0,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3857,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3860,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3861,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3863,        if (last == CharUtils.LF) {,0,1,0,1,3,0,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3864,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3865,                lastIdx--;,2,0,0,0,0,0,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3867,        } else if (last != CharUtils.CR) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3868,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3870,"        return str.substring(0, lastIdx);",6,1,0,1,2,1,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3900,        if (isEmpty(str) || separator == null) {,6,3,0,2,5,0,4,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3901,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3903,        if (str.endsWith(separator)) {,8,1,0,2,5,1,6,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3904,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3906,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3935,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3936,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3938,        int strLen = str.length();,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3939,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3940,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3942,        int lastIdx = strLen - 1;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3943,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3944,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3945,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3946,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3947,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3950,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3979,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3980,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3982,        if (repeat <= 0) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3983,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3985,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3986,        if (repeat == 1 || inputLength == 0) {,8,1,0,1,3,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3987,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3989,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3990,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3993,        int outputLength = inputLength * repeat;,6,1,0,0,0,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3994,        switch (inputLength) {,10,4,0,1,3,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3996,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3997,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3998,                for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3999,                    output1[i] = ch;,2,0,1,1,2,0,0,0,0,7,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4001,                return new String(output1);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4003,                char ch0 = str.charAt(0);,2,0,0,1,2,0,0,0,0,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4004,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4005,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4006,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",10,3,0,1,3,0,0,0,0,15,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4007,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4008,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4010,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4012,                StringBuilder buf = new StringBuilder(outputLength);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4013,                for (int i = 0; i < repeat; i++) {,8,1,0,1,3,0,0,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4014,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4016,                return buf.toString();,6,3,0,1,2,1,8,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4040,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4041,"            return repeat(str, repeat);",2,0,0,1,2,1,2,2,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4044,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4045,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4073,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4074,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4076,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4077,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4078,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4080,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4103,"        return rightPad(str, size, ' ');",2,0,0,1,2,1,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4128,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4129,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4131,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4132,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4133,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4135,        if (pads > PAD_LIMIT) {,2,0,0,1,3,0,8,0,0,11,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4136,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4138,"        return str.concat(padding(pads, padChar));",6,1,0,2,4,1,10,0,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4165,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4166,            return null;,8,3,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4168,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4169,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4171,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4172,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4173,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4174,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4175,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4177,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4178,"            return rightPad(str, size, padStr.charAt(0));",2,1,0,2,4,1,10,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4181,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4182,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4183,        } else if (pads < padLen) {,6,1,0,1,4,0,0,0,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4184,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4186,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4187,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,10,0,0,10,39,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4188,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4189,                padding[i] = padChars[i % padLen];,2,1,0,2,4,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4191,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4215,"        return leftPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4240,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4241,            return null;,4,2,0,0,0,1,8,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4243,        int pads = size - str.length();,8,2,0,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4244,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4245,            return str; // returns original String when possible,2,0,0,0,0,1,6,0,0,8,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4247,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4248,"            return leftPad(str, size, String.valueOf(padChar));",4,3,0,2,4,1,12,0,0,19,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4250,"        return padding(pads, padChar).concat(str);",2,0,0,2,4,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4277,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4278,            return null;,10,0,0,0,0,1,8,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4280,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4281,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4283,        int padLen = padStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4284,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4285,        int pads = size - strLen;,12,3,0,0,0,0,0,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4286,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4287,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4289,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,0,0,1,3,0,0,0,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4290,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4293,        if (pads == padLen) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4294,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4295,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4296,"            return padStr.substring(0, pads).concat(str);",2,1,0,2,4,1,10,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4298,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,1,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4299,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4300,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4301,                padding[i] = padChars[i % padLen];,10,1,1,2,4,0,0,0,0,19,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4303,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4316,        return str == null ? 0 : str.length();,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4345,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4373,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4374,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4376,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4377,        int pads = size - strLen;,6,0,0,0,0,1,0,4,0,11,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4378,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4379,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4381,"        str = leftPad(str, strLen + pads / 2, padChar);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4382,"        str = rightPad(str, size, padChar);",4,0,1,1,2,0,8,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4383,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4413,        if (str == null || size <= 0) {,16,4,0,1,3,0,0,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4414,            return str;,2,0,0,0,0,1,12,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4416,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4417,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4419,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4420,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4421,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4422,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4424,"        str = leftPad(str, strLen + pads / 2, padStr);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4425,"        str = rightPad(str, size, padStr);",6,1,0,1,2,0,8,4,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4426,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4454,        return str.toUpperCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4474,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4475,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4477,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,2,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4500,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4501,            return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4503,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4523,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4524,            return null;,2,0,1,0,0,1,0,0,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4526,        return str.toLowerCase(locale);,2,1,0,1,2,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4551,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4552,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4554,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4582,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4583,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4585,        return new StringBuilder(strLen),4,1,0,1,2,1,0,0,0,5,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4620,        if (str == null || (strLen = str.length()) == 0) {,4,3,1,3,7,0,6,0,0,23,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4621,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4623,        StringBuilder buffer = new StringBuilder(strLen);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4625,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4626,        for (int i = 0; i < strLen; i++) {,20,2,0,1,3,0,0,0,0,24,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4627,            ch = str.charAt(i);,4,0,0,1,2,0,10,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4628,            if (Character.isUpperCase(ch)) {,2,1,0,2,5,0,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4629,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4630,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4631,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4632,            } else if (Character.isLowerCase(ch)) {,2,1,0,2,6,0,6,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4633,                ch = Character.toUpperCase(ch);,4,1,0,1,2,0,14,2,0,24,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4635,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4637,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4662,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,3,7,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4663,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4665,        int count = 0;,12,1,0,0,0,0,6,0,0,20,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4666,        int idx = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4667,"        while ((idx = str.indexOf(sub, idx)) != -1) {",4,2,1,3,7,0,8,0,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4668,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4669,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4671,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4695,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4696,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4698,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4699,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4700,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4701,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4704,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4729,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4730,            return false;,10,1,0,0,0,1,0,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4732,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4733,        for (int i = 0; i < sz; i++) {,12,3,1,1,3,0,6,0,0,24,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4734,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,1,0,6,13,0,0,0,0,5,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4735,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4738,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4762,        if (str == null) {,16,4,0,1,3,0,0,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4763,            return false;,6,3,0,0,0,1,0,0,0,9,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4765,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4766,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4767,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,10,0,0,10,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4768,                return false;,0,0,0,0,0,1,8,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4771,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4796,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4797,            return false;,0,3,0,0,0,1,16,0,0,21,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4799,        int sz = str.length();,0,0,0,1,2,0,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4800,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4801,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4802,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4805,        return true;,10,1,0,0,0,1,6,4,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4834,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4835,            return false;,0,0,0,0,0,1,8,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4837,        int sz = str.length();,0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4838,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4839,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4840,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4843,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4868,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4869,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4871,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4872,        for (int i = 0; i < sz; i++) {,14,1,0,1,3,1,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4873,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4874,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4877,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4904,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4907,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4908,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4909,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4913,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4936,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4937,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4939,        int sz = str.length();,0,0,0,1,2,0,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4940,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4941,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,0,0,0,3,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4942,                return false;,0,0,0,0,0,1,6,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4945,        return true;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4966,        if (str == null || isEmpty(str)) {,12,3,0,2,5,0,4,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4967,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4969,        int sz = str.length();,4,1,1,1,2,0,0,0,0,12,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4970,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4971,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4972,                return false;,0,0,0,0,0,1,6,0,0,6,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4975,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4996,        if (str == null || isEmpty(str)) {,2,2,0,2,5,0,4,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4997,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4999,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5000,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,6,2,0,20,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5001,            if (Character.isUpperCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5002,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5005,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5027,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5048,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5069,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5089,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5092,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5115,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5116,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5120,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5121,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5122,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5160,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5199,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5200,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5202,        if (maxWidth < 4) {,0,0,0,1,3,0,8,0,0,8,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5203,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5205,        if (str.length() <= maxWidth) {,4,1,1,2,5,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5206,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5208,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5209,            offset = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5211,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5212,            offset = str.length() - (maxWidth - 3);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5214,        if (offset <= 4) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5215,"            return str.substring(0, maxWidth - 3) + ""..."";",4,2,0,1,2,1,4,0,0,11,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5217,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,4,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5218,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5220,        if ((offset + (maxWidth - 3)) < str.length()) {,16,6,0,4,9,0,4,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5221,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5223,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5254,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5255,            return str2;,0,0,0,0,0,1,0,2,0,3,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5257,        if (str2 == null) {,4,1,0,1,3,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5258,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5260,"        int at = indexOfDifference(str1, str2);",8,1,0,1,2,0,14,0,0,23,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5261,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5262,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5264,        return str2.substring(at);,0,1,0,1,2,1,10,0,0,11,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5291,        if (str1 == str2) {,6,1,0,1,3,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5292,            return -1;,4,0,0,0,0,1,22,0,0,27,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5294,        if (str1 == null || str2 == null) {,4,4,0,1,3,0,18,0,0,26,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5295,            return 0;,2,0,0,0,0,1,0,0,0,2,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5298,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5299,            if (str1.charAt(i) != str2.charAt(i)) {,4,1,0,3,7,0,12,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5300,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5303,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,14,0,0,21,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5304,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5306,        return -1;,2,3,1,0,0,1,4,0,0,19,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5341,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5342,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5344,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5345,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5346,        int arrayLen = strs.length;,16,3,0,0,0,0,0,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5347,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5348,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5353,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5354,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5355,                anyStringNull = true;,2,0,0,0,0,0,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5356,                shortestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5358,                allStringsNull = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5359,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5360,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,1,0,3,6,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5365,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,0,0,0,10,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5366,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5370,        if (shortestStrLen == 0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5371,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5375,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5376,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,1,1,3,0,4,0,0,18,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5377,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5378,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5379,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5380,                    firstDiff = stringPos;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5381,                    break;,10,0,0,0,0,0,6,0,0,16,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5384,            if (firstDiff != -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5385,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5389,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5393,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5395,        return firstDiff;,0,1,1,0,0,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5432,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5433,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5435,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5436,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5438,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5439,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5441,            return strs[0];,0,0,1,1,2,1,6,0,0,11,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5442,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5444,            return EMPTY;,10,1,0,0,0,1,0,0,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5447,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5488,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5489,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5509,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5510,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5512,        if (n == 0) {,4,1,1,1,3,0,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5513,            return m;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5514,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5515,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5518,        if (n > m) {,4,1,0,1,3,0,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5520,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5521,            s = t;,10,3,0,0,0,0,0,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5522,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5523,            n = m;,6,0,0,0,0,0,0,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5524,            m = t.length();,0,0,0,1,2,0,0,0,0,1,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5527,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5528,"        int d[] = new int[n+1]; // cost array, horizontally",20,3,1,2,4,0,0,0,0,27,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5539,        for (i = 0; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5540,            p[i] = i;,2,3,1,1,2,0,0,0,0,18,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5543,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5544,            t_j = t.charAt(j-1);,4,1,0,1,2,0,4,0,0,10,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5545,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5547,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5548,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5550,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5554,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5555,            p = d;,20,4,0,0,0,0,0,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5556,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5561,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5610,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5635,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5650,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5651,            return (str == null && prefix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5653,        if (prefix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5654,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5656,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",2,0,0,2,4,1,20,0,0,23,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5678,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5679,            return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5681,        for (int i = 0; i < searchStrings.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5682,            String searchString = searchStrings[i];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5683,"            if (StringUtils.startsWith(string, searchString)) {",2,1,0,2,5,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5684,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5687,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5716,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5742,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5757,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5758,            return (str == null && suffix == null);,6,5,1,1,2,1,8,0,0,33,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5760,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5761,            return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5763,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5764,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,2,1,0,0,0,1,0,0,0,3,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,0,0,0,0,0,1,4,0,0,4,25,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,2,0,0,2,4,4,6,4,0,15,37,1,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,0,12,2,0,18,54,3,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,0,0,0,4,33,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,86,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,94,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",0,0,0,1,2,0,0,0,0,3,101,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,0,0,0,2,5,0,0,0,0,7,62,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,4,3,0,2,5,0,20,0,0,30,43,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,96,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",6,3,0,1,2,3,6,12,0,30,89,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",0,0,0,1,2,0,0,0,0,3,96,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,2,0,0,4,28,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,0,0,0,3,30,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,129,"        addAbbreviation(""byte"", ""B"");",4,0,0,1,2,3,0,4,0,12,29,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,131,"        addAbbreviation(""char"", ""C"");",2,0,0,1,2,0,4,2,0,10,29,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,116,"        abbreviationMap.put(primitive, abbreviation);",4,1,0,1,2,0,8,0,0,13,45,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,8,0,0,8,52,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,0,0,0,7,40,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,1,0,4,8,0,4,4,0,16,67,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,2,0,0,1,2,4,6,2,0,14,25,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,6,4,0,1,3,0,0,0,0,12,22,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",0,0,0,2,4,0,20,0,0,20,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,2,0,0,1,2,0,4,0,0,7,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",0,0,0,2,4,0,0,0,0,6,63,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,6,1,0,1,2,3,8,2,0,20,23,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,12,1,0,1,3,0,0,0,0,15,31,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.2,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,6,1,0,1,2,3,4,2,0,16,39,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,2,1,0,1,3,0,0,0,0,3,27,12,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,6,0,0,1,3,0,0,0,0,6,18,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,26,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,4,1,0,1,3,0,0,0,0,5,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",6,1,0,2,4,0,4,0,0,11,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,4,0,0,0,0,3,0,0,0,7,17,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,2,0,1,3,6,0,12,0,0,16,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,2,0,0,1,2,1,8,2,0,13,10,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,2,1,0,2,4,0,14,4,0,21,33,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,2,0,0,1,2,0,0,0,0,2,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,2,1,0,1,2,0,4,2,0,10,18,3,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,4,0,0,0,0,0,0,0,0,5,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,4,0,0,1,2,0,0,0,0,5,30,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,0,0,1,2,0,4,4,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,0,0,0,0,0,4,0,0,13,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,6,2,0,1,3,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,367,"            for (int i = 0; i < chars.length; i++, pos++) {",16,1,0,1,3,0,0,0,0,20,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,368,                if (chars[i] != buffer[pos]) {,0,0,0,3,7,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,369,                    return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,372,            return len;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",4,1,0,2,4,3,2,4,0,15,94,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,2,0,0,1,2,3,0,4,0,9,63,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,2,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,126,        return SINGLE_QUOTE_MATCHER;,4,0,0,0,0,1,0,0,0,4,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,153,        return NONE_MATCHER;,4,1,0,0,0,1,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,163,        return new CharMatcher(ch);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,173,        if (chars == null || chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,179,        return new CharSetMatcher(chars);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,189,        if (chars == null || chars.length() == 0) {,2,3,0,2,5,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,190,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,4,2,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,205,        if (str == null || str.length() == 0) {,4,3,0,2,5,2,8,2,0,19,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,206,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,208,        return new StringMatcher(str);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,414,        },10,7,0,0,1,3,4,2,0,31,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,426,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,387,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,399,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,317,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,318,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,331,            return ch == buffer[pos] ? 1 : 0;,2,1,1,1,2,1,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,284,            super();,10,1,0,1,2,0,0,0,0,13,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,285,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,286,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,287,        },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,299,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",0,0,0,2,4,0,0,0,0,6,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,91,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,101,"        this(pattern, locale, null);",0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,113,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,134,        return toPattern;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,158,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,1,2,0,8,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,159,                break;,2,1,0,0,0,0,0,0,0,3,6,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,161,                fmtCount++;,16,3,0,0,0,0,0,0,0,21,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,162,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,163,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,164,"                int index = readArgumentIndex(pattern, next(pos));",4,1,0,2,4,0,8,0,0,13,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,165,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,10,0,0,10,43,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,166,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,167,                Format format = null;,2,0,0,0,0,0,0,2,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,168,                String formatDescription = null;,4,0,0,0,0,0,0,4,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,169,                if (c[pos.getIndex()] == START_FMT) {,2,1,1,3,7,0,4,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,170,"                    formatDescription = parseFormatDescription(pattern,",6,1,0,0,1,0,4,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,172,                    format = getFormat(formatDescription);,2,0,0,1,2,0,4,0,0,7,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,173,                    if (format == null) {,2,1,0,1,3,0,0,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,174,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,177,                foundFormats.add(format);,0,0,0,1,2,0,6,0,0,6,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,178,                foundDescriptions.add(format == null ? null : formatDescription);,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,179,                Validate.isTrue(foundFormats.size() == fmtCount);,4,4,0,2,4,0,12,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,180,                Validate.isTrue(foundDescriptions.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,181,                if (c[pos.getIndex()] != END_FE) {,4,2,1,3,7,0,4,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,182,                    throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,191,        super.applyPattern(stripCustom.toString());,4,0,1,2,4,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,192,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",4,0,0,2,4,0,4,0,0,9,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,193,        if (containsElements(foundFormats)) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,194,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,197,            int i = 0;,2,0,0,0,0,0,8,0,0,10,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,198,            for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) {,0,0,0,3,7,0,0,0,0,10,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,199,                Format f = (Format) it.next();,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,200,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,201,                    origFormats[i] = f;,4,0,1,1,2,0,0,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,204,            super.setFormats(origFormats);,8,1,0,1,2,0,0,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,206,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,213,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,1,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,221,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,229,        throw new UnsupportedOperationException();,2,0,0,1,2,0,0,2,0,4,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,237,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,247,        if (registry != null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,248,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,249,            String args = null;,2,0,0,0,0,0,0,2,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,250,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,251,            if (i > 0) {,2,1,0,1,3,0,6,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,252,"                name = desc.substring(0, i).trim();",0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,253,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,255,            FormatFactory factory = (FormatFactory) registry.get(name);,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,256,            if (factory != null) {,2,1,0,1,3,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,257,"                return factory.getFormat(name, args, getLocale());",6,1,0,2,4,1,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,260,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,271,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,272,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,273,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,274,        boolean error = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,275,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,2,2,0,4,9,0,12,0,0,17,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,276,            char c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,277,            if (Character.isWhitespace(c)) {,4,0,0,2,5,1,6,2,0,13,32,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,278,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,279,                c = pattern.charAt(pos.getIndex());,4,0,0,2,4,3,12,0,0,21,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,280,                if (c != START_FMT && c != END_FE) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,281,                    error = true;,2,0,0,0,0,0,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,282,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,285,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,8,5,0,3,7,0,4,0,0,17,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,287,                    return Integer.parseInt(result.toString());,2,0,0,2,4,1,8,0,0,10,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,288,                } catch (NumberFormatException e) {,0,0,0,1,4,0,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,293,            error = !Character.isDigit(c);,2,0,0,1,2,0,6,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,294,            result.append(c);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,296,        if (error) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,297,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,301,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,313,        int start = pos.getIndex();,8,2,0,1,2,3,6,0,0,20,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,314,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,315,        int text = pos.getIndex();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,316,        int depth = 1;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,317,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,4,9,0,12,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,318,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,320,                depth++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,321,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,323,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,324,                if (depth == 0) {,2,1,0,1,3,0,0,0,0,3,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,325,"                    return pattern.substring(text, pos.getIndex());",2,0,0,2,4,1,10,0,0,12,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,329,"                getQuotedString(pattern, pos, false);",0,0,0,1,2,0,6,0,0,7,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,333,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,345,        if (!containsElements(customPatterns)) {,0,0,0,2,5,0,4,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,346,            return pattern;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,348,        StringBuffer sb = new StringBuffer(pattern.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,349,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,350,        int fe = -1;,4,0,0,0,0,3,4,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,351,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,352,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,353,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,354,            switch (c) {,2,0,0,1,3,0,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,356,"                appendQuotedString(pattern, pos, sb, false);",2,1,0,1,2,0,8,0,0,12,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,357,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,359,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,360,                if (depth == 1) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,361,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,362,                    sb.append(START_FE).append(,0,0,0,1,3,0,8,0,0,8,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,364,                    String customPattern = (String) customPatterns.get(fe);,2,0,0,2,4,0,6,4,0,12,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,365,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,366,                        sb.append(START_FMT).append(customPattern);,0,0,0,2,4,0,10,0,0,10,43,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,368,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,371,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,374,                sb.append(c);,0,0,0,1,2,0,6,0,0,6,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,375,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,377,        },2,0,0,0,1,0,0,0,0,2,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,378,        return sb.toString();,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,388,        int len = 0;,10,1,0,0,0,0,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,389,        char[] buffer = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,391,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",0,0,0,3,6,0,0,0,0,9,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,392,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,8,0,0,11,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,393,        } while (len > 0 && pos.getIndex() < pattern.length());,2,3,0,3,7,0,8,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,394,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,419,        int start = pos.getIndex();,2,0,0,1,2,0,8,0,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,420,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,421,        if (escapingOn && c[start] == QUOTE) {,4,3,1,2,5,0,10,0,0,21,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,422,            return appendTo == null ? null : appendTo.append(QUOTE);,2,1,0,1,2,1,6,0,0,9,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,424,        int lastHold = start;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,425,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,426,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,16,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,427,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",4,1,1,2,5,0,14,2,0,25,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,429,                pos.setIndex(i + ESCAPED_QUOTE.length());,2,1,0,2,4,0,8,0,0,11,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,430,                lastHold = pos.getIndex();,2,0,0,1,2,0,4,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,431,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,433,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,435,                next(pos);,2,1,0,1,2,0,4,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,436,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,1,0,0,1,1,8,0,0,11,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,439,                next(pos);,4,1,0,1,2,0,4,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,442,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,455,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,8,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,456,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,464,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,465,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,467,        for (Iterator iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,468,            if (iter.next() != null) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,469,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,472,        return false;,8,1,0,0,0,1,6,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,48,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,76,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,77,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,103,            throw new IllegalArgumentException(message + value);,4,1,0,1,2,0,0,2,0,7,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,129,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,130,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,156,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,157,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,180,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,181,"            throw new IllegalArgumentException(""The validated expression is false"");",0,0,0,1,2,0,6,2,0,9,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,183,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,202,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,203,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,205,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,221,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,222,"            throw new IllegalArgumentException(""The validated object is null"");",0,0,0,1,2,0,0,2,0,4,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,224,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,242,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,243,            throw new IllegalArgumentException(message);,4,0,0,1,2,0,0,2,0,6,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,245,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,261,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,262,"            throw new IllegalArgumentException(""The validated array is empty"");",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,264,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,282,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,4,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,283,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,285,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,301,        if (collection == null || collection.size() == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,302,"            throw new IllegalArgumentException(""The validated collection is empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,304,    },2,1,0,0,1,0,8,0,0,11,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,322,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,323,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,325,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,341,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,342,"            throw new IllegalArgumentException(""The validated map is empty"");",0,0,0,1,2,0,0,2,0,3,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,344,    },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,362,        if (string == null || string.length() == 0) {,2,3,0,2,5,0,4,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,363,            throw new IllegalArgumentException(message);,4,0,1,1,2,0,0,2,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,365,    },2,0,0,0,1,0,0,0,0,3,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,381,        if (string == null || string.length() == 0) {,4,0,0,2,5,0,6,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,382,"            throw new IllegalArgumentException(""The validated string is empty"");",0,0,0,1,2,0,0,2,0,3,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,384,    },0,0,0,0,1,0,2,0,0,4,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,407,        Validate.notNull(array);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,408,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,409,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,410,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,413,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,434,        Validate.notNull(array);,8,6,0,1,2,0,14,0,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,436,            if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,437,"                throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,8,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,440,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,463,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,464,        for (Iterator it = collection.iterator(); it.hasNext();) {,2,0,0,3,7,0,8,2,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,465,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,466,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,469,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,489,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,490,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,491,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,16,2,0,23,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,492,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,493,"                throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,7,100,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,496,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,513,        Validate.notNull(collection);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,514,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,515,        for (Iterator it = collection.iterator(); it.hasNext(); ) {,2,0,0,3,7,0,8,2,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,516,            if (clazz.isInstance(it.next()) == false) {,0,1,0,3,7,0,8,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,517,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,520,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,543,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,544,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,545,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,546,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,547,            if (clazz.isInstance(it.next()) == false) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,548,"                throw new IllegalArgumentException(""The validated collection contains an element not of type """,0,0,0,0,1,0,0,2,0,3,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,552,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,3,4,4,0,14,24,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,12,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,14,0,0,18,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,10,2,0,2,4,0,8,0,0,23,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,4,1,0,1,3,3,0,0,0,9,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,4,1,0,0,0,0,0,0,0,6,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",4,3,0,1,2,1,12,2,0,22,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,0,0,2,0,3,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,4,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",4,0,0,1,2,0,16,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,10,0,0,13,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,2,0,0,1,2,4,4,0,0,9,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,0,0,0,0,0,1,0,2,0,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,6,3,0,1,3,3,0,12,0,24,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,4,0,0,4,26,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,4,1,0,1,4,0,0,2,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,2,0,0,1,2,4,4,12,0,21,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,2,0,0,0,0,1,6,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,2,1,0,1,4,0,4,2,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,1,0,1,2,1,16,0,0,17,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,8,2,0,1,2,1,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,6,0,0,0,0,0,0,0,0,8,6,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,6,1,0,1,3,0,0,0,0,8,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,0,0,0,0,1,6,2,0,10,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,4,2,0,1,2,0,6,0,0,12,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,2,0,0,0,0,1,4,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,0,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,0,0,0,0,0,1,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,6,1,0,1,3,0,0,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,2,3,0,4,9,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,12,0,0,0,0,3,0,4,0,19,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,4,0,0,0,0,0,0,0,0,7,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,6,1,1,2,4,0,0,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,13,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,4,0,1,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,6,0,0,3,7,0,4,0,0,10,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,2,3,1,3,7,0,0,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,2,0,0,0,0,1,0,2,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,2,0,0,0,0,4,0,4,0,9,13,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,1,4,0,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,4,2,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,2,1,0,0,0,0,0,0,0,3,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,4,2,0,4,9,0,10,0,0,16,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,4,3,0,5,11,0,10,0,0,18,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,2,0,0,1,2,4,0,4,0,10,28,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,4,0,0,0,0,2,0,0,0,7,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,6,0,0,0,0,0,0,0,0,8,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,4,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,4,3,0,1,2,1,16,0,0,23,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,6,0,0,2,5,0,8,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,3,0,1,3,0,4,2,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,4,6,0,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,8,1,0,0,0,4,8,2,0,23,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,4,0,0,0,0,0,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,4,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,6,1,0,0,0,0,4,0,0,13,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,3,0,3,7,0,8,0,0,13,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,10,0,0,10,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,4,1,0,1,2,4,14,4,0,29,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,2,1,0,1,2,1,6,0,0,9,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",4,0,0,3,6,1,10,2,0,17,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,6,3,0,0,0,1,4,0,0,13,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,14,3,0,2,5,0,4,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,2,1,0,3,7,3,8,4,0,19,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1138,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,8,7,0,2,5,0,4,0,0,19,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1168,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,4,4,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1171,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1172,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,2,1,1,2,5,0,8,0,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1174,                    return true;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1178,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1210,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",8,1,0,2,4,1,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1240,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,12,1,0,1,3,3,2,2,0,22,46,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1246,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,1,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1247,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,0,0,0,0,0,1,0,0,0,2,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1279,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1282,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,4,3,0,3,7,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1315,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,4,1,0,1,3,0,4,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,0,0,0,0,0,1,6,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,6,3,0,1,3,3,2,2,0,17,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,6,0,0,0,0,0,0,0,0,7,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",2,0,0,2,4,1,8,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,8,1,0,0,0,1,0,0,0,10,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,8,0,0,0,0,0,0,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,2,0,0,0,0,0,6,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,8,0,0,18,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,4,1,1,1,2,0,0,2,0,11,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,2,1,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,4,0,0,0,0,1,4,0,0,9,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,0,0,0,1,2,0,6,0,0,6,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,8,2,0,1,3,0,6,0,0,17,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,4,0,0,0,0,0,4,0,0,9,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",2,0,0,1,2,1,0,0,0,2,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,14,2,0,1,3,1,0,6,0,25,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,6,0,0,0,0,2,12,2,0,21,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,8,1,0,1,3,0,4,0,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,2,0,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,4,0,0,0,0,4,0,0,0,7,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,2,1,0,0,0,0,4,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,4,2,0,3,7,0,4,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",6,1,0,1,2,1,6,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,1,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,4,1,0,1,3,1,4,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,6,3,0,2,4,1,18,0,0,27,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,2,1,0,1,3,0,0,2,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,2,0,0,2,5,0,4,0,0,8,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,4,3,0,0,0,1,4,0,0,12,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,0,0,0,4,9,0,0,0,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,2,0,0,2,4,1,4,2,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,0,0,0,1,3,0,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,8,1,0,0,0,1,0,2,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,8,3,0,1,2,0,6,0,0,18,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",2,0,0,2,4,0,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,4,4,0,3,7,0,8,0,0,18,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,4,1,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,8,9,0,1,2,0,16,0,0,33,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,0,0,0,0,1,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,4,0,0,0,0,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,2,4,0,12,0,0,12,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,4,1,0,0,0,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,14,1,0,2,5,0,12,2,0,29,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,5,10,1,0,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,1,2,1,22,0,0,22,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",2,0,0,1,2,1,10,2,0,16,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",2,0,1,1,2,1,0,0,0,7,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",2,0,0,1,2,1,4,2,0,8,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,0,0,0,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",8,3,0,1,2,1,16,0,0,28,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,2,0,0,1,3,0,0,0,0,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,2,0,0,0,0,0,10,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,0,1,0,0,0,0,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,2,0,0,2,4,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,5,10,1,0,0,0,16,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,4,1,0,1,2,0,4,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,6,0,0,0,0,0,2,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,16,2,0,0,0,0,6,0,0,26,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,12,3,0,2,5,0,0,0,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,8,4,0,12,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",2,0,0,1,2,1,6,0,0,12,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,8,1,0,0,0,0,4,0,0,15,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,6,2,0,1,3,0,0,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,2,0,1,0,0,0,0,0,0,4,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,4,0,0,0,0,0,2,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,8,2,1,2,5,0,10,0,0,26,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,4,0,0,0,0,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,6,1,0,1,3,0,0,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,4,1,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,20,8,0,1,3,0,16,0,0,45,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,1,0,3,7,0,18,2,0,23,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,8,2,0,1,3,0,8,0,0,19,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,2,2,0,0,0,0,4,0,0,9,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,6,0,0,0,0,0,0,0,0,8,4,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,2,4,0,22,0,0,22,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,0,0,0,16,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,4,1,0,2,4,0,8,2,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,2,0,0,1,2,0,0,0,0,4,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,14,2,0,1,3,0,12,0,0,29,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,4,0,1,2,4,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,4,1,0,0,2,0,0,0,0,5,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",10,1,0,2,4,0,4,2,0,18,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,2,2,0,0,0,0,16,0,0,22,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,8,4,0,12,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,12,2,0,1,3,0,4,0,0,21,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,2,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",6,1,1,1,2,1,6,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,4,0,0,0,0,1,0,8,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,6,0,0,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,0,0,0,1,2,0,10,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,6,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,6,0,0,0,0,1,0,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),4,1,1,5,11,0,4,0,0,18,84,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,4,0,0,1,2,0,0,4,0,8,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,2,0,0,2,4,0,0,2,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",4,1,0,1,2,0,0,4,0,9,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,8,1,0,1,2,0,0,0,0,10,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,8,1,0,1,2,0,20,2,0,31,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,12,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,2,1,1,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,4,3,1,0,0,1,0,0,0,15,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,4,0,0,2,5,0,0,2,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,1,0,2,5,0,16,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,6,1,0,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",4,0,0,2,4,1,0,0,0,6,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,10,1,0,1,3,0,0,2,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",6,0,0,1,2,1,8,2,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,4,1,0,0,0,1,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,2,1,0,0,0,1,4,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",2,1,0,2,5,0,14,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,2,1,0,2,5,0,12,0,0,15,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,0,4,0,0,0,1,12,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,6,0,0,0,0,1,0,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,4,1,0,0,0,0,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,2,5,1,2,5,0,12,0,0,23,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",10,1,0,1,2,0,8,0,0,20,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,6,1,0,1,2,0,0,0,0,8,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,0,0,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,2,2,0,0,0,0,6,0,0,10,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,2,1,0,1,3,0,0,0,0,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,2,0,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,6,1,0,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,20,0,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,10,2,0,0,0,0,0,0,0,12,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",6,2,0,1,2,0,0,2,0,12,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,0,0,1,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,4,0,0,0,0,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,10,3,0,1,2,0,4,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,4,1,1,0,0,0,6,2,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,4,0,0,0,0,0,4,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,8,2,0,0,0,1,0,4,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,12,0,0,24,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,6,1,0,1,3,0,0,0,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,14,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,4,1,1,2,4,0,4,0,0,13,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,2,0,0,1,2,0,0,0,0,3,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,12,2,0,0,0,0,2,0,0,17,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,2,0,0,1,2,0,12,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,12,1,1,1,3,0,6,0,0,25,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,0,0,0,1,2,0,0,2,0,4,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,6,1,0,0,0,1,4,2,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",2,1,0,1,2,1,10,0,0,13,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,4,0,0,0,0,1,0,0,0,5,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,6,1,0,1,2,0,4,2,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,4,0,0,1,2,0,16,0,0,20,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,2,1,0,1,3,0,6,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,10,1,0,0,0,0,0,0,0,14,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,14,2,0,1,3,0,0,0,0,17,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,6,1,0,1,3,0,4,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,2,0,0,1,2,1,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),8,4,0,3,6,1,8,2,0,22,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,2,0,0,1,2,0,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,8,1,0,1,3,0,4,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,2,0,0,1,3,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,12,2,0,0,0,0,0,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,1,0,0,0,0,6,0,0,9,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),8,4,0,2,4,1,4,2,0,18,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,2,0,0,1,3,0,0,0,0,2,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,6,0,0,0,0,1,6,0,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,4,0,0,1,2,0,10,0,0,14,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,8,2,1,0,0,0,6,0,0,21,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,8,3,0,1,4,0,4,0,0,16,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,4,1,0,2,5,1,10,4,0,20,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,1,0,3,6,1,12,0,0,13,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,0,1,2,1,12,0,0,12,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,2,1,0,3,6,0,12,2,0,17,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,6,0,0,2,5,1,6,4,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",8,2,0,3,6,1,6,0,0,17,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,4,0,0,0,0,2,6,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,6,0,0,0,0,1,0,0,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,10,1,0,1,4,0,0,0,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,6,0,0,6,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,6,1,0,0,0,1,0,0,0,7,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,8,0,0,1,2,1,6,4,0,19,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,4,1,0,2,4,1,8,0,0,13,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,10,0,0,1,2,1,6,0,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,4,1,0,1,3,0,4,2,0,12,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",2,1,0,2,4,1,8,0,0,11,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,0,0,1,1,2,0,4,0,0,8,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,8,1,0,1,3,1,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,4,1,0,0,0,0,0,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,8,2,1,2,5,0,4,0,0,22,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,12,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,8,0,0,1,2,1,6,0,0,15,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,6,1,0,0,0,0,0,0,0,8,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",12,3,0,1,2,1,0,0,0,16,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,4,0,0,0,0,1,0,4,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,10,1,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,0,0,0,0,0,1,6,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,4,0,0,1,2,0,8,0,0,12,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,2,0,0,1,3,0,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,4,1,1,1,2,0,4,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,14,1,1,1,2,0,0,0,0,23,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,6,1,1,1,2,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,4,0,0,1,2,0,0,4,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,4,0,0,1,3,0,0,0,0,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",4,2,0,1,2,0,0,2,0,9,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,6,0,1,2,4,1,0,0,0,10,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,8,1,0,1,3,1,0,4,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,6,1,0,1,3,0,0,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,4,0,0,1,2,0,4,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,2,1,0,1,2,1,6,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",4,0,0,2,4,1,10,2,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,0,0,0,1,3,0,4,0,0,5,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,8,1,0,0,0,0,6,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,2,0,0,1,3,0,6,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",2,1,0,2,4,1,22,0,0,25,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,8,1,0,1,3,0,0,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,2,0,0,1,3,1,4,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,10,2,0,1,2,1,4,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,6,4,1,1,3,0,0,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,4,0,0,1,2,0,0,0,0,4,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,10,2,0,0,0,0,4,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,6,2,0,1,3,0,0,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",8,1,0,1,2,0,8,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,8,2,0,1,3,0,4,0,0,14,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,4,0,0,0,0,1,0,0,0,6,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,8,0,0,0,0,2,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,12,2,0,1,3,0,6,4,0,24,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,2,0,0,1,2,1,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,2,1,0,1,2,1,14,0,0,17,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,6,1,0,3,7,0,4,2,0,13,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,10,1,0,1,2,1,0,0,0,12,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,6,0,0,1,2,0,0,6,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,4,1,0,1,2,0,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,4,0,1,2,6,0,6,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,14,1,0,1,2,0,6,0,0,23,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,16,4,1,1,2,1,12,2,0,38,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,2,0,0,1,2,1,0,0,0,3,33,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,0,0,0,0,0,0,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,10,6,0,1,2,0,4,0,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,2,1,1,1,3,0,2,0,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,6,4,0,0,0,1,8,0,0,19,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,8,6,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,2,0,1,0,0,1,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,12,1,0,1,3,0,0,2,0,16,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,14,4,0,3,7,0,10,0,0,30,56,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,4,2,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,2,1,0,3,7,0,16,0,0,20,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,4,1,0,0,0,1,4,0,0,10,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,4,1,1,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,12,1,0,1,2,0,4,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,2,0,0,1,2,0,6,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,2,1,0,1,3,0,4,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",4,1,0,1,2,1,4,0,0,10,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,1,2,1,10,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,4,1,1,2,0,0,0,0,13,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,4,1,0,2,5,0,0,0,0,5,31,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,12,1,0,0,0,1,0,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,0,0,0,1,3,0,4,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",2,0,0,1,2,0,0,2,0,5,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,14,4,0,4,9,0,4,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,4,0,0,0,0,1,0,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,8,3,0,1,2,1,6,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,12,1,0,1,3,0,8,0,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,10,3,0,1,3,0,0,0,0,13,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,0,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,6,1,0,0,0,1,0,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,2,0,1,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,4,1,0,0,0,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,2,0,0,0,0,0,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,10,1,0,1,3,0,0,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",4,0,1,3,6,0,8,0,0,23,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,0,0,0,10,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,2,0,0,0,0,1,8,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0,0,0,1,3,0,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,10,2,0,2,4,0,0,0,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,12,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,4,1,0,0,0,0,10,0,0,17,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,8,1,0,0,0,1,0,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,8,4,0,1,3,0,6,2,0,21,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,4,1,0,1,2,0,4,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,6,1,0,0,0,1,4,4,0,15,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,8,1,0,1,3,0,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,6,0,0,0,0,0,6,2,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5814,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5831,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0,0,0,6,12,0,0,0,0,18,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5842,            p = d;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,0,1,2,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5897,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5922,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,4,3,1,1,3,0,2,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5943,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",2,0,0,1,2,1,4,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5997,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,4,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6016,            return false;,0,0,0,0,0,1,6,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,22,0,0,22,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,4,1,0,1,2,0,0,0,0,5,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,45,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,1,2,1,6,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,0,1,1,3,0,0,0,0,7,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,12,2,1,0,0,0,0,0,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,4,1,0,1,2,0,6,4,0,15,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,178,            if (str.charAt(offset) == ' ') {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,180,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,1,1,2,0,10,0,0,23,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,187,                wrappedLine.append(newLineStr);,0,0,0,1,2,0,6,0,0,6,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,0,0,1,2,0,4,2,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,4,0,0,0,0,0,0,0,0,5,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,2,0,0,1,2,0,0,0,0,2,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,0,0,0,1,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,6,0,0,0,0,0,0,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,210,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,215,        return wrappedLine.toString();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",4,1,0,1,2,1,4,0,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,4,0,0,0,0,1,0,2,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,10,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,8,1,0,1,2,0,0,6,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,286,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,287,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",2,0,1,1,2,1,4,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,8,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,6,4,0,1,2,0,12,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",2,0,1,1,2,1,6,0,0,13,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,377,"        return uncapitalize(str, null);",0,0,0,1,2,1,4,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,416,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,4,1,0,1,2,0,10,4,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,419,            } else if (uncapitalizeNext) {,0,0,0,1,4,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,420,                buffer.append(Character.toLowerCase(ch));,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,421,                uncapitalizeNext = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,0,0,0,1,2,0,12,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,426,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,465,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,467,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,469,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,2,0,0,1,2,0,6,0,0,9,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,2,0,0,1,2,0,6,0,0,9,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,478,            buffer.append(tmp);,0,0,0,1,2,0,6,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,10,0,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,508,"        return initials(str, null);",0,0,0,1,2,1,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,0,0,0,1,3,0,4,0,0,4,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,543,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,8,5,0,2,4,0,0,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,4,1,0,0,0,0,0,0,0,6,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,552,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,8,3,0,0,0,0,0,0,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,1,0,4,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,574,            return Character.isWhitespace(ch);,0,0,0,1,2,1,8,0,0,8,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",0,0,0,1,3,0,0,0,0,4,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,0,0,2,5,0,0,2,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,581,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,2,1,0,2,5,1,16,2,0,22,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,0,0,0,0,0,1,10,0,0,10,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,0,0,0,2,5,0,0,0,0,7,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,2,0,0,1,2,0,4,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,622,        if (upper < lower) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",8,3,0,1,2,0,8,0,0,21,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,629,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,2,1,0,2,5,0,4,0,0,7,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,10,0,0,10,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,20,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,636,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,10,0,0,10,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,638,"            result.append(str.substring(0, index));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,4,0,0,2,4,0,10,4,0,18,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,641,        return result.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,0,0,0,1,2,0,4,0,0,5,15,13,1.0,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",0,0,0,1,2,1,0,0,0,4,41,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,4,0,0,1,3,0,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,0,0,0,1,2,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,0,0,0,1,3,0,0,0,0,4,17,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,2,1,0,1,4,0,0,0,0,3,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,13,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",0,0,0,3,6,0,0,0,0,9,113,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,60,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,    protected NestableDelegate delegate = new NestableDelegate(this);,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,53,    private Throwable cause = null;,2,0,0,0,0,1,0,2,0,5,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,70,        super(msg);,2,0,0,1,2,0,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,71,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,81,        super();,2,0,0,1,2,0,0,2,0,5,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,82,        this.cause = cause;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,83,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,94,        super(msg);,2,0,0,1,2,0,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,95,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,96,    },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,102,        return cause;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,113,        if (super.getMessage() != null) {,2,1,0,2,5,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,114,            return super.getMessage();,4,0,0,1,2,4,0,4,0,11,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,115,        } else if (cause != null) {,2,1,0,1,4,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,116,            return cause.toString();,0,0,0,1,2,1,4,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,118,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,126,        if (index == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,129,        return delegate.getMessage(index);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,136,        return delegate.getMessages();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,143,        return delegate.getThrowable(index);,0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,150,        return delegate.getThrowableCount();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,157,        return delegate.getThrowables();,0,0,0,1,2,1,4,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,164,"        return delegate.indexOfThrowable(type, 0);",0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,171,"        return delegate.indexOfThrowable(type, fromIndex);",2,0,0,1,2,4,8,0,0,13,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,178,        delegate.printStackTrace();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,179,    },6,0,0,0,1,0,0,0,0,7,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,185,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,186,    },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,192,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,193,    },2,0,0,0,1,0,2,0,0,5,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,199,        super.printStackTrace(out);,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,200,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,59,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);",6,1,0,1,2,0,10,0,0,19,39,3,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,103,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);",0,0,0,1,2,0,6,0,0,7,38,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,144,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,156,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,162,        } catch (IOException ioe) {,2,0,0,1,4,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,164,            ioe.printStackTrace();,2,1,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,180,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,183,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,192,"                out.write(""\\u"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,194,"                out.write(""\\u0"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,196,"                out.write(""\\u00"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,198,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,200,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,201,                        out.write('b');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,202,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,204,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,205,                        out.write('n');,2,0,0,1,2,0,4,0,0,7,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,206,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,208,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,209,                        out.write('t');,4,3,0,1,2,0,4,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,210,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,212,                        out.write('\\');,2,0,0,1,2,0,6,0,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,213,                        out.write('f');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,214,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,216,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,217,                        out.write('r');,2,0,0,1,2,3,4,4,0,15,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,218,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,220,                        if (ch > 0xf) {,2,1,0,1,3,0,0,0,0,3,15,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,221,"                            out.write(""\\u00"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,29,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,223,"                            out.write(""\\u000"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,225,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,230,                        if (escapeSingleQuote) {,4,0,0,1,3,0,4,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,231,                            out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,233,                        out.write('\'');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,234,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,236,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,237,"                        out.write('""');",2,0,0,1,2,0,4,0,0,7,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,238,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,240,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,241,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,242,                        break;,2,0,0,0,0,0,4,0,0,7,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,263,        return Integer.toHexString(ch).toUpperCase();,0,0,0,2,4,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,276,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,277,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,280,            StringWriter writer = new StringWriter(str.length());,2,0,0,2,4,0,4,4,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,281,"            unescapeJava(writer, str);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,282,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,283,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,285,            ioe.printStackTrace();,2,0,0,1,2,0,8,2,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,286,            return null;,2,0,0,0,0,1,0,8,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,306,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,307,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,8,2,0,12,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,309,        if (str == null) {,2,1,1,1,3,0,4,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,310,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,312,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,313,        StringBuffer unicode = new StringBuffer(4);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,314,        boolean hadSlash = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,315,        boolean inUnicode = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,316,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,317,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,318,            if (inUnicode) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,321,                unicode.append(ch);,0,0,0,1,2,0,6,0,0,6,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,322,                if (unicode.length() == 4) {,0,1,0,2,5,0,4,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,326,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,327,                        out.write((char) value);,0,0,0,2,4,0,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,328,                        unicode.setLength(0);,0,0,0,1,2,0,4,0,0,4,21,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,329,                        inUnicode = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,330,                        hadSlash = false;,2,0,0,0,0,0,0,0,0,4,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,333,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,331,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,332,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",4,1,0,1,2,0,0,2,0,8,85,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,337,            if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,339,                hadSlash = false;,2,0,0,0,0,0,0,0,0,4,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,340,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,342,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,343,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,345,                        out.write('\'');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,346,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,348,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,349,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,351,                        out.write('\r');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,352,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,354,                        out.write('\f');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,355,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,357,                        out.write('\t');,4,3,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,358,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,360,                        out.write('\n');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,361,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,363,                        out.write('\b');,6,0,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,364,                        break;,4,2,0,0,0,0,10,0,0,16,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,368,                            inUnicode = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,369,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,372,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,373,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,376,            } else if (ch == '\\') {,4,1,0,1,4,0,0,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,377,                hadSlash = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,378,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,380,            out.write(ch);,8,1,0,1,2,0,6,0,0,16,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,382,        if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,385,            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,387,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,401,        return unescapeJava(str);,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,421,"        unescapeJava(out, str);",2,0,0,1,2,3,8,0,0,13,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,422,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,453,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,457,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,458,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,459,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,460,        } catch (IOException e) {,0,0,0,1,4,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,463,            e.printStackTrace();,2,1,0,1,2,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,464,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,498,        if (writer == null ) {,4,2,0,1,3,0,12,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,499,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,501,        if (string == null) {,2,1,0,1,3,0,8,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,502,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,11,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,505,    },2,0,0,0,1,0,6,0,0,9,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,525,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,526,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,4,0,4,8,0,4,4,0,18,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,532,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,535,            e.printStackTrace();,0,0,0,1,2,0,4,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,536,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,559,        if (writer == null ) {,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,560,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,562,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,563,            return;,2,1,0,0,0,1,4,4,0,11,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,565,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,566,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,589,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,590,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,592,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,593,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,595,"        Entities.XML.escape(writer, str);",0,0,0,1,2,0,0,0,0,1,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,596,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,616,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,617,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,619,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,641,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,642,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,645,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,647,"        Entities.XML.unescape(writer, str);",4,0,0,1,2,0,6,0,0,10,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,648,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,666,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,667,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,669,        return Entities.XML.unescape(str);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,692,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,693,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,695,"        return StringUtils.replace(str, ""'"", ""''"");",0,0,0,1,2,1,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,723,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,10,0,0,10,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,724,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,727,            StringWriter writer = new StringWriter();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,728,"            escapeCsv(writer, str);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,729,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,730,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,732,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,733,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,761,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,0,0,0,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,762,            if (str != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,763,                out.write(str);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,765,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,767,        out.write(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,768,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,769,            char c = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,770,            if (c == CSV_QUOTE) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,771,                out.write(CSV_QUOTE); // escape double quote,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,773,            out.write(c);,0,0,0,1,2,0,6,0,0,6,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,775,        out.write(CSV_QUOTE);,2,0,0,1,2,0,0,0,0,2,21,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,776,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,801,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,802,            return null;,0,0,1,0,0,1,0,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,805,            StringWriter writer = new StringWriter();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,806,"            unescapeCsv(writer, str);",0,0,0,1,2,0,6,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,807,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,808,        } catch (IOException ioe) {,12,4,0,1,4,1,0,2,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,810,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,839,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,840,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,842,        if (str.length() < 2) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,843,            out.write(str);,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,844,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,846,        if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {,0,0,0,4,9,0,0,0,0,13,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,847,            out.write(str);,6,1,0,1,2,0,6,0,0,13,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,848,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,852,"        String quoteless = str.substring(1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,854,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {",0,0,0,2,5,0,8,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,856,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);",0,0,0,1,2,0,0,0,0,3,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,859,        out.write(str);,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,860,    },6,0,0,0,1,0,0,4,0,11,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,6,1,0,1,2,0,6,0,0,13,29,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,0,0,0,1,2,0,0,0,0,3,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,6,1,0,3,6,3,6,6,0,23,60,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,0,0,0,1,2,0,0,0,0,3,15,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,0,0,0,1,2,0,0,0,0,3,35,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,0,0,0,1,2,0,0,0,0,3,27,4,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,0,0,0,1,3,0,0,0,0,4,17,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,0,0,0,1,2,0,0,0,0,3,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,5,21,3,0.01639,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,2,0,0,0,0,1,0,0,0,4,32,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01613,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,12,2,0,0,1,1,0,4,0,19,35,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,4,0,0,0,0,0,0,0,0,6,23,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,10,2,0,2,4,0,4,0,0,19,37,4,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,12,3,0,3,6,3,0,2,0,21,38,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,39,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,4,0,0,0,0,0,0,0,0,6,7,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,6,1,0,0,0,0,0,0,0,8,6,3,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,0,0,0,1,3,0,0,0,0,4,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,6,2,0,1,2,4,0,4,0,16,33,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,2,1,0,1,3,0,0,0,0,3,23,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,0,0,0,1,3,0,0,0,0,4,22,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",4,0,0,1,2,1,0,2,0,6,44,5,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,2,0,0,0,0,1,0,0,0,2,17,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",0,0,0,1,3,0,0,0,0,4,39,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,6,0,0,0,0,0,0,0,0,7,13,1,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },0,0,0,0,1,0,0,0,0,1,1,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,0,0,0,1,2,1,0,0,0,4,38,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,2,0,0,0,0,1,0,0,0,2,15,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,0,0,0,1,2,0,0,0,0,3,88,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,14,2,0,0,0,1,0,12,0,30,9,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",4,0,0,1,2,1,4,0,0,8,42,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",2,0,0,1,2,4,8,4,0,18,63,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",8,0,0,3,6,3,2,10,0,24,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,0,0,0,1,3,0,0,0,0,4,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,12,1,0,2,4,0,6,4,0,24,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,2,0,1,3,0,0,0,0,6,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,6,1,0,0,0,1,0,0,0,7,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,4,0,0,0,0,0,0,2,0,8,6,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,2,0,0,1,3,3,0,4,0,9,18,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,2,0,0,2,5,0,0,2,0,4,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,4,0,0,1,2,0,0,4,0,8,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,0,1,3,0,0,4,0,14,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,0,0,0,0,0,0,0,0,0,0,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,4,0,0,1,3,3,2,2,0,12,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,2,0,1,0,0,0,6,0,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,2,0,0,1,3,0,0,0,0,2,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,            } else if (mStyle == TimeZone.SHORT) {,0,0,0,1,4,0,0,0,0,5,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,2,0,0,0,0,1,0,0,0,4,9,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1447,        TwelveHourField(NumberRule rule) {,4,0,0,1,3,0,0,2,0,6,34,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1448,            mRule = rule;,4,0,0,0,0,0,6,0,0,11,13,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1449,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1455,            return mRule.estimateLength();,0,0,0,1,2,1,0,0,0,4,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,249,"        return getDateInstance(style, null, locale);",0,0,0,1,2,1,0,0,0,4,44,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,280,        Object key = new Integer(style);,4,0,0,1,2,0,0,4,0,8,32,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,281,        if (timeZone != null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,285,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,290,        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);,0,0,0,2,4,0,0,0,0,6,69,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,291,        if (format == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,292,            if (locale == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,296,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);",4,0,0,2,4,2,8,8,0,23,90,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,297,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,298,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,299,"                cDateInstanceCache.put(key, format);",0,0,0,1,2,0,8,0,0,8,36,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,303,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,305,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,633,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",2,0,0,2,4,0,0,2,0,5,70,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,663,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",8,0,0,1,2,0,0,2,0,11,50,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,664,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,648,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",12,1,0,1,2,0,0,2,0,16,84,7,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,649,                break;,0,0,0,0,0,0,4,0,0,4,6,5,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,690,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,692,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1112,        StringLiteral(String value) {,4,0,0,1,3,0,6,2,0,12,29,1,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1113,            mValue = value;,0,0,0,0,0,0,0,0,0,0,15,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1114,        },0,0,0,0,1,0,0,0,0,1,1,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1120,            return mValue.length();,0,0,0,1,2,1,4,0,0,4,23,6,0.44444,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,2,1,0,1,2,0,0,2,0,6,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },6,1,0,0,1,0,0,0,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,4,0,4,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,8,0,0,2,4,1,4,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,4,1,0,1,3,0,4,2,0,11,19,3,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,4,1,1,1,2,1,10,2,0,23,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,8,0,0,1,2,6,4,8,0,26,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,2,0,1,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,2,0,0,0,0,4,6,2,0,14,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,2,1,0,1,2,1,12,2,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,4,2,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,4,2,0,13,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,0,0,0,0,0,1,0,0,0,1,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,6,2,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,2,1,0,1,2,1,0,0,0,3,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,1,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,4,1,0,1,4,0,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,0,0,0,0,0,1,0,0,0,1,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,12,2,0,17,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,2,1,0,1,4,0,0,0,0,3,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,0,0,0,2,6,0,6,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,0,1,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,            return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",2,1,0,1,2,0,0,2,0,6,87,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,4,1,0,1,3,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,350,        } else if (value == falseValue) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,4,1,0,1,4,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,353,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,356,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,0,0,0,3,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,4,1,0,1,3,0,0,0,0,7,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,4,1,0,1,3,3,2,0,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,4,1,0,1,4,2,4,2,0,13,32,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,2,1,0,1,4,0,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,385,                return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,387,        } else if (value.equals(trueValue)) {,0,0,0,2,6,0,6,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,389,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,        } else if (value.equals(nullValue)) {,0,0,0,2,6,0,6,0,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,0,2,0,3,84,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,0,0,0,0,0,1,0,0,0,1,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,8,0,0,1,2,1,4,0,0,12,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,6,0,0,0,0,1,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,            return nullValue;,2,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,4,0,0,1,2,1,8,2,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,        return bool ? trueValue : falseValue;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,530,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,            return nullValue;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,4,0,0,1,2,1,4,0,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,563,"        if (""true"".equalsIgnoreCase(str)) {",0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,            return Boolean.FALSE;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,567,"        } else if (""on"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,            return Boolean.FALSE;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,8,0,0,10,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,            return Boolean.FALSE;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,6,0,0,0,0,4,4,2,0,16,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,            } else if (falseString == null) {,2,1,0,1,4,0,0,0,0,3,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,            } else if (nullString == null) {,2,1,0,1,4,0,0,0,0,3,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,609,                return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,        } else if (str.equals(trueString)) {,0,0,0,2,6,0,6,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,            return Boolean.TRUE;,4,0,0,0,0,1,4,0,0,8,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,613,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,        } else if (str.equals(nullString)) {,0,0,0,2,6,0,6,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,616,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");",0,0,0,1,2,0,0,2,0,3,83,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,2,0,0,0,0,1,0,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,0,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,6,0,0,1,2,0,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,                return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,673,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,678,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,                    return ,0,0,0,0,0,1,0,0,0,1,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,4,1,0,1,3,0,0,2,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,734,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,            } else if (falseString == null) {,2,1,0,1,4,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,                return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,10,1,0,2,6,0,6,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,739,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,740,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,741,            return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,744,"        throw new IllegalArgumentException(""The String did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,86,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",2,0,0,1,2,1,4,0,0,9,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",0,1,0,1,2,1,14,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",2,0,0,1,2,1,4,2,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,4,0,0,0,0,1,6,0,0,11,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,        return bool.booleanValue() ? trueString : falseString;,4,0,0,1,2,1,4,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,844,"        return toString(bool, ""true"", ""false"");",0,0,0,1,2,1,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",2,1,0,1,2,1,4,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");",0,0,0,1,2,1,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,        return bool ? trueString : falseString;,6,0,0,0,0,1,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,918,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,2,0,3,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,925,        int trueCount = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,12,2,0,14,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,0,2,5,0,0,0,0,7,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,                if (trueCount < 1) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,2,1,0,0,0,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,959,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,961,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,2,0,3,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,2,0,0,1,2,0,12,0,0,15,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");",10,4,0,1,2,0,12,2,0,31,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,8,0,0,1,2,1,4,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,5,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,2,0,0,1,3,0,0,0,0,2,24,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,4,1,0,1,2,0,4,0,0,10,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,6,1,0,1,3,0,0,2,0,9,18,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,0,0,0,1,3,0,0,0,0,4,17,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,            } else if (ch > 0x7f) {,0,0,0,1,4,0,0,0,0,5,23,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,            } else if (ch < 32) {,2,1,0,1,4,0,0,0,0,3,21,9,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,13,0.33333,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,242,    },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,60,        super();,0,0,0,1,2,0,0,0,0,1,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,47,    protected NestableDelegate delegate = new NestableDelegate(this);,2,0,0,1,2,1,0,4,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,53,    private Throwable cause = null;,2,0,0,0,0,1,0,2,0,5,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,70,        super(msg);,2,0,0,1,2,0,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,71,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,81,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,82,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,83,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,94,        super(msg);,4,0,0,1,2,3,4,2,0,13,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,95,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,96,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,102,        return cause;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,113,        if (super.getMessage() != null) {,2,1,0,2,5,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,114,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,115,        } else if (cause != null) {,2,1,0,1,4,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,116,            return cause.toString();,0,0,0,1,2,1,4,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,118,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,126,        if (index == 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,129,        return delegate.getMessage(index);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,136,        return delegate.getMessages();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,143,        return delegate.getThrowable(index);,0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,150,        return delegate.getThrowableCount();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,157,        return delegate.getThrowables();,0,0,0,1,2,1,4,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,164,"        return delegate.indexOfThrowable(type, 0);",0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,171,"        return delegate.indexOfThrowable(type, fromIndex);",0,0,0,1,2,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,178,        delegate.printStackTrace();,2,0,0,1,2,0,4,2,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,179,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,185,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,186,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,192,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,193,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,199,        super.printStackTrace(out);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,200,    },2,1,0,0,1,0,4,0,0,7,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,54,      super();,2,1,1,1,2,0,0,0,0,7,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,55,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,81,"        return escapeJavaStyleString(str, false);",0,0,0,1,2,1,4,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,97,"        escapeJavaStyleString(out, str, false);",0,0,0,1,2,0,6,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,98,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,122,"        return escapeJavaStyleString(str, true);",2,0,0,1,2,1,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,138,"        escapeJavaStyleString(out, str, true);",0,0,0,1,2,0,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,139,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,156,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,158,            ioe.printStackTrace();,4,2,0,1,2,0,4,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,159,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,176,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,185,"                out.write(""\\u"" + hex(ch));",6,2,0,2,4,0,8,0,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,187,"                out.write(""\\u0"" + hex(ch));",8,1,0,2,4,3,8,6,0,27,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,189,"                out.write(""\\u00"" + hex(ch));",2,1,0,2,4,0,8,0,0,13,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,191,                switch (ch) {,8,1,0,1,3,0,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,193,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,194,                        out.write('b');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,195,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,197,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,198,                        out.write('n');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,199,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,201,                        out.write('\\');,2,0,1,1,2,1,0,4,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,202,                        out.write('t');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,203,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,205,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,206,                        out.write('f');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,207,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,209,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,210,                        out.write('r');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,211,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,213,                        if (ch > 0xf) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,214,"                            out.write(""\\u00"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,29,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,216,"                            out.write(""\\u000"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,30,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,218,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,224,                          out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,233,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,234,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,235,                        break;,2,0,0,0,0,0,4,4,0,10,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,252,        return Integer.toHexString(ch).toUpperCase();,0,0,0,2,4,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,265,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,269,            StringWriter writer = new StringWriter(str.length());,2,0,0,2,4,0,4,4,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,270,"            unescapeJava(writer, str);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,271,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,272,        } catch (IOException ioe) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,274,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,275,            return null;,0,0,0,0,0,1,0,2,0,3,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,295,        if (out == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,296,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,298,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,299,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,301,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,302,        StringBuffer unicode = new StringBuffer(4);,2,0,0,1,2,0,4,4,0,10,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,303,        boolean hadSlash = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,304,        boolean inUnicode = false;,4,0,0,0,0,0,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,305,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,307,            if (inUnicode) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,310,                unicode.append(ch);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,311,                if (unicode.length() == 4) {,0,1,0,2,5,0,4,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,315,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,316,                        out.write((char) value);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,317,                        unicode.setLength(0);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,318,                        inUnicode = false;,2,0,0,0,0,0,0,0,0,4,18,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,319,                        hadSlash = false;,2,0,0,0,0,0,0,0,0,4,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,322,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,320,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,4,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,321,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",4,1,0,1,2,0,0,2,0,8,85,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,326,            if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,328,                hadSlash = false;,2,0,0,0,0,0,0,0,0,4,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,329,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,331,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,332,                        break;,0,1,0,0,0,0,8,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,334,                        out.write('\'');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,335,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,337,"                        out.write('""');",2,1,0,1,2,0,4,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,338,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,340,                        out.write('\r');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,341,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,343,                        out.write('\f');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,344,                        break;,4,1,0,0,0,0,0,0,0,5,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,346,                        out.write('\t');,2,1,0,1,2,0,4,2,0,12,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,347,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,349,                        out.write('\n');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,350,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,352,                        out.write('\b');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,353,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,357,                            inUnicode = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,358,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,361,                        out.write(ch);,6,0,0,1,2,0,6,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,362,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,365,            } else if (ch == '\\') {,2,1,0,1,4,0,0,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,366,                hadSlash = true;,2,0,0,0,0,0,0,0,0,4,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,367,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,369,            out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,371,        if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,374,            out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,376,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,390,        return unescapeJava(str);,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,410,"        unescapeJava(out, str);",0,0,0,1,2,0,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,411,    },2,0,0,0,1,0,0,2,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,442,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,443,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,446,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,447,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,448,            return writer.toString();,6,1,0,1,2,1,4,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,449,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,452,            e.printStackTrace();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,487,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,488,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,490,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,491,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,493,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,494,    },2,0,0,0,1,0,6,2,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,514,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,515,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,518,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,519,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,520,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,521,        } catch (IOException e) {,2,0,0,1,4,0,10,2,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,524,            e.printStackTrace();,0,0,0,1,2,0,4,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,525,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,548,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,549,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,551,        if (string == null) {,6,4,0,1,3,0,0,0,0,10,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,552,            return;,8,1,0,0,0,1,0,0,0,11,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,554,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,555,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,578,        if (writer == null ) {,8,1,0,1,3,0,4,2,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,579,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,581,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,582,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,584,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,585,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,605,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,606,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,608,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,630,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,631,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,633,        if (str == null) {,6,4,0,1,3,0,0,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,634,            return;,6,0,0,0,0,1,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,636,"        Entities.XML.unescape(writer, str);",4,0,0,1,2,0,6,0,0,10,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,637,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,655,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,656,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,658,        return Entities.XML.unescape(str);,8,1,0,1,2,1,16,0,0,25,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,681,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,682,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,684,"        return StringUtils.replace(str, ""'"", ""''"");",0,0,0,1,2,1,6,0,0,8,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",6,3,1,3,6,0,8,0,0,22,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,10,4,0,18,39,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",2,1,0,1,2,0,6,0,0,10,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,8,1,0,1,3,0,6,0,0,15,36,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,0,0,0,1,2,0,0,0,0,3,26,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,0,0,0,1,2,0,0,0,0,3,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,0,0,0,0,0,0,0,0,0,0,21,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,6,0,0,1,2,0,4,0,0,10,46,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,4,0,0,11,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,6,3,0,2,5,0,0,0,0,11,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,12,3,0,2,5,3,0,4,0,24,40,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,6,2,0,1,2,0,0,0,0,9,33,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,2,1,0,2,5,0,4,0,0,7,29,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,            date.setTime(time);,0,0,0,1,2,0,0,0,0,3,19,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,666,            val.setTime(date);,0,0,0,1,2,0,6,0,0,6,18,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,        boolean roundUp = false;,2,0,0,0,0,0,0,0,0,3,24,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,                    if (round && roundUp) {,2,1,0,1,3,0,0,0,0,3,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,                    return;,0,0,0,0,0,1,0,0,0,1,7,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,696,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,2,0,0,1,3,0,6,0,0,8,16,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,            if (!offsetSet) {,0,0,0,1,3,0,0,0,0,4,17,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,                offset = val.get(fields[i][0]) - min;,0,0,0,3,6,0,0,0,0,9,37,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,10,3,0,2,4,0,0,0,0,14,37,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,4,1,0,1,3,0,0,2,0,7,18,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,739,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",0,0,0,6,12,0,0,0,0,18,54,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,45,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",2,0,0,1,2,3,4,2,0,12,73,2,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,73,    private static final int[][] fields = {,2,0,0,2,5,3,0,0,0,5,39,2,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,124,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,125,    },2,0,0,0,1,0,0,2,0,4,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,142,        if (date1 == null || date2 == null) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,143,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,145,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,146,        cal1.setTime(date1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,147,        Calendar cal2 = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,148,        cal2.setTime(date2);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,149,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,166,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,167,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,169,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,8,3,0,2,5,1,8,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,187,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,188,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,190,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,205,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,206,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,208,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,0,0,4,8,1,0,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,225,        if (cal1 == null || cal2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,226,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,4,2,0,8,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,228,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,0,0,0,2,5,1,0,0,0,8,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,253,        if (str == null || parsePatterns == null) {,4,3,0,1,3,0,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,254,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",0,0,0,1,2,0,0,2,0,4,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,257,        SimpleDateFormat parser = null;,2,0,0,0,0,0,0,2,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,258,        ParsePosition pos = new ParsePosition(0);,6,0,0,1,2,0,0,4,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,259,        for (int i = 0; i < parsePatterns.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,260,            if (i == 0) {,2,1,0,1,3,0,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,261,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,1,2,4,0,0,2,0,7,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,263,                parser.applyPattern(parsePatterns[i]);,0,0,1,2,4,0,4,0,0,8,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,265,            pos.setIndex(0);,0,0,0,1,2,0,10,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,266,"            Date date = parser.parse(str, pos);",2,0,0,1,2,0,8,2,0,12,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,267,            if (date != null && pos.getIndex() == str.length()) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,268,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,271,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,285,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,6,0,0,10,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,299,"        return add(date, Calendar.MONTH, amount);",6,0,0,1,2,1,6,0,0,12,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,313,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,327,"        return add(date, Calendar.DAY_OF_MONTH, amount);",0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,341,"        return add(date, Calendar.HOUR_OF_DAY, amount);",4,0,0,1,2,1,10,0,0,14,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,355,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,369,"        return add(date, Calendar.SECOND, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,383,"        return add(date, Calendar.MILLISECOND, amount);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,398,        if (date == null) {,6,4,0,1,3,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,399,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,401,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,402,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,403,"        c.add(calendarField, amount);",0,0,0,1,2,0,8,0,0,8,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,404,        return c.getTime();,0,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,438,"            throw new IllegalArgumentException(""The date must not be null"");",0,1,0,1,2,0,4,2,0,9,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,475,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,476,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,478,        Calendar rounded = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,479,"        modify(rounded, field, true);",2,1,0,1,2,0,6,0,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,480,        return rounded;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,514,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,515,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,0,0,2,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,517,        if (date instanceof Date) {,4,0,0,1,3,0,0,2,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,518,"            return round((Date) date, field);",2,0,0,2,4,1,4,2,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,519,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,520,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,522,"            throw new ClassCastException(""Could not round "" + date);",0,0,0,1,2,0,0,0,0,3,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,544,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,545,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,3,4,4,0,16,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,547,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,548,        gval.setTime(date);,0,0,0,1,2,0,10,0,0,10,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,549,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,550,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,570,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,571,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,573,        Calendar truncated = (Calendar) date.clone();,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,574,"        modify(truncated, field, false);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,575,        return truncated;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,599,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,600,"            throw new IllegalArgumentException(""The date must not be null"");",8,3,0,1,2,0,0,2,0,15,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,602,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,603,"            return truncate((Date) date, field);",2,0,0,2,4,1,4,2,0,8,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,604,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,605,"            return truncate((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,607,"            throw new ClassCastException(""Could not truncate "" + date);",4,1,0,1,2,0,0,2,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,622,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",0,0,0,1,2,0,0,0,0,3,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,626,            return;,4,0,0,0,0,3,0,4,0,10,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,642,            time = time - millisecs;,6,1,0,0,0,0,0,0,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,643,        if (field == Calendar.SECOND) {,8,2,0,1,3,0,0,0,0,10,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,644,            done = true;,2,0,0,0,0,0,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,651,            time = time - (seconds * 1000L);,8,2,0,1,2,0,0,0,0,11,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,652,        if (field == Calendar.MINUTE) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,653,            done = true;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,680,                            if (val.get(Calendar.DATE) == 1) {,4,1,0,2,5,0,4,0,0,9,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,681,"                                val.add(Calendar.DATE, 15);",8,0,0,1,2,3,4,2,0,17,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,683,"                                val.add(Calendar.DATE, -15);",4,0,0,1,2,0,4,0,0,9,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,684,"                                val.add(Calendar.MONTH, 1);",8,2,0,1,2,0,10,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,701,                    if (fields[i][0] == Calendar.DATE) {,4,1,1,3,7,0,0,0,0,9,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,705,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,708,                        if (offset >= 15) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,709,                            offset -= 15;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,712,                        roundUp = offset > 7;,4,1,0,0,0,0,0,0,0,6,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,713,                        offsetSet = true;,8,0,0,0,0,0,6,0,0,18,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,717,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,720,                        offset = val.get(Calendar.HOUR_OF_DAY);,6,0,0,1,2,0,4,0,0,11,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,721,                        if (offset >= 12) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,722,                            offset -= 12;,6,0,0,0,0,0,0,4,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,724,                        roundUp = offset > 6;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,725,                        offsetSet = true;,2,0,0,0,0,0,0,0,0,4,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,742,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,772,        if (focus == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,773,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,775,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,776,        gval.setTime(focus);,2,0,0,1,2,0,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,777,"        return iterator(gval, rangeStyle);",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,805,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,806,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,808,        Calendar start = null;,2,0,0,0,0,0,0,2,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,809,        Calendar end = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,810,        int startCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,811,        int endCutoff = Calendar.SATURDAY;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,812,        switch (rangeStyle) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,816,"                start = truncate(focus, Calendar.MONTH);",6,0,0,1,2,0,4,0,0,11,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,818,                end = (Calendar) start.clone();,2,0,0,2,4,0,4,2,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,819,"                end.add(Calendar.MONTH, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,820,"                end.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,822,                if (rangeStyle == RANGE_MONTH_MONDAY) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,823,                    startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,824,                    endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,832,"                start = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,833,"                end = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,834,                switch (rangeStyle) {,2,0,0,1,3,0,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,837,                        break;,2,0,0,0,0,0,0,0,0,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,839,                        startCutoff = Calendar.MONDAY;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,840,                        endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,841,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,843,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,844,                        endCutoff = startCutoff - 1;,4,1,0,0,0,0,0,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,845,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,847,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,8,1,0,1,2,0,4,2,0,16,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,848,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,6,1,0,1,2,0,4,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,851,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,853,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",2,1,0,1,2,0,0,2,0,7,87,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,855,        if (startCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,856,            startCutoff += 7;,4,0,0,0,0,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,858,        if (startCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,859,            startCutoff -= 7;,2,1,0,0,0,0,8,0,0,12,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,861,        if (endCutoff < Calendar.SUNDAY) {,8,2,0,1,3,0,6,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,862,            endCutoff += 7;,4,0,0,0,0,0,12,2,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,864,        if (endCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,865,            endCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,867,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,8,7,0,2,5,0,4,0,0,19,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,868,"            start.add(Calendar.DATE, -1);",0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,870,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,11,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,871,"            end.add(Calendar.DATE, 1);",6,0,0,1,2,0,8,2,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,873,"        return new DateIterator(start, end);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,896,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,897,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,2,0,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,899,        if (focus instanceof Date) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,900,"            return iterator((Date) focus, rangeStyle);",2,0,0,2,4,1,14,2,0,18,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,901,        } else if (focus instanceof Calendar) {,0,0,0,1,4,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,902,"            return iterator((Calendar) focus, rangeStyle);",2,0,0,2,4,1,4,2,0,8,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,904,"            throw new ClassCastException(""Could not iterate based on "" + focus);",4,2,0,1,2,0,0,2,0,9,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,922,            super();,2,0,1,1,2,0,0,0,0,4,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,923,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,924,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,925,"            spot.add(Calendar.DATE, -1);",6,0,0,1,2,0,4,0,0,11,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,926,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,934,            return spot.before(endFinal);,2,0,0,1,2,1,6,0,0,8,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,943,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,6,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,944,                throw new NoSuchElementException();,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,946,"            spot.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,947,            return spot.clone();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,957,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,0,1,0,2,5,0,4,0,0,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,6,5,0,1,3,0,0,0,0,11,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,4,0,0,1,2,0,10,2,0,16,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,8,1,0,2,4,3,4,4,0,20,90,1,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,0,0,0,2,4,0,0,0,0,6,91,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,51,        List list = Arrays.asList(Locale.getAvailableLocales());,2,0,0,2,4,0,8,2,0,12,56,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,58,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,53,    },0,0,0,0,1,0,0,0,0,1,1,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,192,        return cAvailableLocaleList;,0,0,0,0,0,1,0,0,0,1,28,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,223,        return availableLocaleList().contains(locale);,0,0,0,2,4,1,6,0,0,6,46,5,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,63,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,96,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,4,4,0,14,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,108,"            return new Locale(str, """");",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,118,            if (len == 5) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,143,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,165,        List list = new ArrayList(4);,2,0,0,1,2,0,0,4,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,166,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,167,            list.add(locale);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,168,            if (locale.getVariant().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",6,0,0,4,8,0,20,2,0,29,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,171,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,0,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,175,                list.add(defaultLocale);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,178,        return Collections.unmodifiableList(list);,2,0,0,1,2,4,6,4,0,15,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,206,        Set set = cAvailableLocaleSet;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,207,        if (set == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,208,            set = new HashSet(availableLocaleList());,2,0,0,2,4,0,2,2,0,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,209,            set = Collections.unmodifiableSet(set);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,210,            cAvailableLocaleSet = set;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,212,        return set;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,2,0,0,2,4,0,6,4,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,238,        if (langs == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,239,            if (countryCode != null) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,240,                langs = new ArrayList();,2,0,0,1,2,0,8,2,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,241,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,242,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,243,                    Locale locale = (Locale) locales.get(i);,4,0,0,2,4,3,6,8,0,21,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,244,                    if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,0,8,0,0,9,46,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,246,                        langs.add(locale);,0,0,0,1,2,0,6,0,0,6,18,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,249,                langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,250,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,251,                langs = Collections.EMPTY_LIST;,8,1,0,0,0,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,255,        return langs;,2,0,0,0,0,1,4,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,0,0,0,2,4,0,0,0,0,6,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,270,        if (countries == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,271,            if (languageCode != null) {,2,1,0,1,3,0,0,0,0,3,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,272,                countries = new ArrayList();,2,0,0,1,2,0,4,2,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,273,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,274,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,275,                    Locale locale = (Locale) locales.get(i);,4,0,0,2,4,0,6,6,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,276,                    if (languageCode.equals(locale.getLanguage()) &&,6,5,0,2,5,0,8,0,0,19,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,279,                        countries.add(locale);,2,0,1,1,2,0,8,0,0,14,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,282,                countries = Collections.unmodifiableList(countries);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,283,            } else {,4,0,0,0,2,0,0,4,0,8,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,284,                countries = Collections.EMPTY_LIST;,8,0,0,0,0,0,4,0,0,13,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",4,2,0,1,2,0,8,0,0,14,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,0,0,0,0,0,0,0,0,0,0,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,6,2,0,0,0,1,0,0,0,9,38,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,115,        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,118,            stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,119,        this.runningState = STATE_STOPPED;,0,0,0,0,0,0,0,0,0,0,34,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,120,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,209,        if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,65,    private int runningState = STATE_UNSTARTED;,4,0,0,0,0,1,0,0,0,5,43,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,70,    private int splitState   = STATE_UNSPLIT;,4,0,0,0,0,1,0,0,0,5,41,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,75,    private long startTime = -1;,4,1,0,0,0,1,0,0,0,8,28,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,79,    private long stopTime = -1;,0,0,0,0,0,0,0,0,0,0,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,96,        if(this.runningState == STATE_STOPPED) {,4,1,0,1,3,0,0,0,0,5,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,99,        if(this.runningState != STATE_UNSTARTED) {,6,1,0,1,3,2,4,2,0,15,42,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,102,        stopTime = -1;,2,0,0,0,0,0,0,0,0,4,14,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,103,        startTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,104,        this.runningState = STATE_RUNNING;,4,0,0,0,0,0,0,0,0,5,34,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",0,0,0,1,2,0,6,0,0,6,57,5,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,4,0,0,5,6,5,0.07692,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",2,1,0,1,2,1,4,0,0,8,40,3,0.06667,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",6,0,0,1,2,0,4,0,0,11,49,9,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,6,0,0,0,0,0,0,0,0,7,35,11,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",0,0,0,1,2,1,0,0,0,4,45,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1261,"        PaddedNumberField(int field, int size) {",6,0,0,1,3,0,0,0,0,6,40,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1266,            mField = field;,12,1,0,0,0,0,0,0,0,15,15,1,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1267,            mSize = size;,14,1,0,0,0,3,2,2,0,25,13,1,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1268,        },2,1,0,0,1,0,8,0,0,11,1,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1274,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,6,3,0,1,2,0,0,0,0,9,8,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1399,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,2,0,0,1,2,2,0,4,0,8,68,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1405,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,539,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,545,        mTimeZoneForced = (timeZone != null);,4,1,0,1,2,0,0,0,0,6,37,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,546,        if (timeZone == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,2,0,0,1,2,0,4,0,0,7,33,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,549,        mTimeZone = timeZone;,4,0,0,0,0,0,0,0,0,5,21,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,551,        mLocaleForced = (locale != null);,4,1,0,1,2,0,0,0,0,6,33,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,555,        mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,556,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,51,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,2,0,0,1,2,2,0,4,0,8,55,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,113,    private static Map cTimeInstanceCache = new HashMap(7);,2,1,0,1,2,0,0,0,0,3,55,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,114,    private static Map cDateTimeInstanceCache = new HashMap(7);,4,0,0,1,2,2,0,4,0,12,59,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,4,0,0,1,2,3,0,0,0,7,58,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",8,0,0,1,2,0,0,4,0,12,75,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,214,        FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);,2,0,0,2,4,0,6,4,0,12,73,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,216,            format = emptyFormat;,4,0,0,0,0,0,0,0,0,5,21,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,0,0,0,1,2,0,4,0,0,4,55,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,218,"            cInstanceCache.put(format, format);  // this is OK!",0,0,0,1,2,0,16,2,0,19,51,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,220,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,562,        List rulesList = parsePattern();,2,0,0,1,2,0,2,2,0,6,32,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,563,        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);,2,0,0,5,10,0,8,4,0,15,64,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,565,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,566,        for (int i=mRules.length; --i >= 0; ) {,8,1,0,1,3,0,0,0,0,10,39,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,567,            len += mRules[i].estimateLength();,0,0,0,2,4,0,0,0,0,6,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,570,        mMaxLengthEstimate = len;,4,0,0,0,0,0,0,0,0,5,25,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,571,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,582,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,4,0,0,1,2,0,0,4,0,8,59,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,583,        List rules = new ArrayList();,2,0,0,1,2,0,0,4,0,6,29,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,585,        String[] ERAs = symbols.getEras();,2,0,0,2,4,0,4,2,0,8,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,586,        String[] months = symbols.getMonths();,2,0,0,2,4,0,4,2,0,8,38,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,587,        String[] shortMonths = symbols.getShortMonths();,2,0,0,2,4,0,4,2,0,8,48,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,588,        String[] weekdays = symbols.getWeekdays();,2,0,0,2,4,0,10,2,0,14,42,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,589,        String[] shortWeekdays = symbols.getShortWeekdays();,2,0,0,2,4,0,4,2,0,8,52,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,590,        String[] AmPmStrings = symbols.getAmPmStrings();,0,0,0,2,4,0,0,0,0,6,48,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,592,        int length = mPattern.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,593,        int[] indexRef = new int[1];,4,0,0,2,4,0,0,0,0,4,28,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,595,        for (int i = 0; i < length; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,596,            indexRef[0] = i;,2,0,1,1,2,0,0,0,0,5,16,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,597,"            String token = parseToken(mPattern, indexRef);",2,0,0,1,2,0,6,2,0,10,46,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,598,            i = indexRef[0];,2,0,1,1,2,0,0,0,0,5,16,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,600,            int tokenLen = token.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,601,            if (tokenLen == 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,606,            char c = token.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,608,            switch (c) {,0,0,0,1,3,0,0,0,0,4,12,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,613,                if (tokenLen >= 4) {,0,0,0,1,3,0,0,0,0,4,20,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,620,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,622,                } else if (tokenLen == 3) {,2,1,0,1,4,0,0,0,0,3,27,8,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,624,                } else if (tokenLen == 2) {,2,1,0,1,4,0,0,0,0,3,27,9,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,687,                String sub = token.substring(1);,2,0,0,1,2,0,4,2,0,8,32,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,688,                if (sub.length() == 1) {,2,2,0,2,5,0,4,0,0,8,24,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,689,                    rule = new CharacterLiteral(sub.charAt(0));,2,0,0,2,4,0,4,2,0,9,43,9,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,698,            rules.add(rule);,0,0,0,1,2,0,0,0,0,3,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,701,        return rules;,0,0,0,0,0,1,0,0,0,1,13,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,712,        StringBuffer buf = new StringBuffer();,0,0,0,1,2,0,0,0,0,3,38,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,714,        int i = indexRef[0];,4,0,1,1,2,3,4,0,0,14,20,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,715,        int length = pattern.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,717,        char c = pattern.charAt(i);,2,0,0,1,2,3,4,2,0,11,27,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,718,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,0,0,0,1,3,0,0,0,0,4,51,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,721,            buf.append(c);,0,0,0,1,2,0,0,0,0,3,14,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,723,            while (i + 1 < length) {,0,0,0,1,3,0,0,0,0,4,24,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,724,                char peek = pattern.charAt(i + 1);,10,2,0,1,2,0,4,0,0,16,34,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,725,                if (peek == c) {,0,0,0,1,3,0,0,0,0,4,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,726,                    buf.append(c);,0,0,0,1,2,0,6,0,0,6,14,11,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,727,                    i++;,2,0,0,0,0,0,0,0,0,3,4,10,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,731,            },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,734,            buf.append('\'');,0,0,0,1,2,0,0,0,0,3,17,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,736,            boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,738,            for (; i < length; i++) {,0,0,0,1,3,0,0,0,0,4,25,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,739,                c = pattern.charAt(i);,0,0,0,1,2,0,0,0,0,3,22,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,741,                if (c == '\'') {,0,0,0,1,3,0,0,0,0,4,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,749,                } else if (!inLiteral &&,0,0,0,0,2,0,0,0,0,2,24,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,751,                    i--;,2,0,0,0,0,0,0,0,0,3,4,11,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,752,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,754,                    buf.append(c);,0,0,0,1,2,0,6,0,0,6,14,12,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,759,        indexRef[0] = i;,0,0,0,1,2,0,0,0,0,3,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,760,        return buf.toString();,0,0,0,1,2,1,4,2,0,8,22,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,771,        switch (padding) {,2,0,0,1,3,0,0,0,0,2,18,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,775,            return new TwoDigitNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1002,        int total = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1003,        total += mPattern.hashCode();,2,0,0,1,2,0,4,0,0,7,29,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1004,        total += mTimeZone.hashCode();,2,0,0,1,2,0,4,0,0,7,30,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1005,        total += (mTimeZoneForced ? 1 : 0);,4,0,0,1,2,0,0,0,0,5,35,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1006,        total += mLocale.hashCode();,2,0,0,1,2,0,4,0,0,7,28,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1007,        total += (mLocaleForced ? 1 : 0);,0,0,0,1,2,0,0,0,0,3,33,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1008,        return total;,2,0,0,0,0,1,0,0,0,2,13,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1070,        CharacterLiteral(char value) {,4,0,0,1,3,0,0,0,0,4,30,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1071,            mValue = value;,0,0,0,0,0,0,0,0,0,0,15,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1072,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1078,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1321,        TwoDigitNumberField(int field) {,4,0,0,1,3,0,0,0,0,4,32,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1322,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1323,        },2,0,0,0,1,0,0,2,0,4,1,8,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1329,            return 2;,2,0,0,0,0,1,0,0,0,2,9,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,6,2,0,15,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,8,2,0,19,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,6,2,0,14,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,6,3,0,1,2,6,12,2,0,31,82,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,2,0,1,2,3,6,2,0,19,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,2,0,0,0,0,3,0,2,0,7,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",4,1,0,1,2,3,2,2,0,13,82,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",6,0,0,1,2,3,2,2,0,15,104,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,6,2,0,16,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,4,0,0,0,0,6,4,4,0,19,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,717,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,8,0,0,1,2,6,10,6,0,30,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,4,0,0,1,2,3,2,0,0,9,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",2,0,0,1,2,3,2,0,0,8,60,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",2,0,0,1,2,3,6,0,0,12,62,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",2,1,0,2,4,3,4,0,0,12,89,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",2,0,1,1,2,3,8,0,0,19,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");",2,0,0,1,2,3,2,0,0,8,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");",2,0,0,1,2,3,2,0,0,8,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",2,0,0,1,2,3,2,0,0,8,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,2,0,0,0,0,3,0,0,0,5,40,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",8,1,0,1,2,3,2,0,0,17,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,10,4,0,22,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",4,0,0,1,2,3,4,0,0,13,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,4,1,0,0,0,1,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",4,0,0,1,2,0,10,4,0,18,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,0,4,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,            return Float.parseFloat(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,4,1,0,2,5,0,4,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",6,1,0,1,2,0,10,2,0,20,49,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",4,1,0,0,0,0,4,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,2,0,0,1,4,0,4,2,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,4,3,0,1,3,0,0,0,0,9,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,6,0,0,6,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,        if (OS_NAME == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,        return OS_NAME.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,        if (OS_NAME == null || OS_VERSION == null) {,4,3,0,1,3,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);,0,0,0,2,4,1,0,0,0,7,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,            return System.getProperty(property);,0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,4,0,0,1,4,0,0,6,0,10,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,0,0,0,0,1,0,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,6,2,0,0,0,1,0,2,0,11,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,6,1,0,2,4,1,6,0,0,14,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,2,1,0,2,4,1,6,2,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,2,0,1,2,4,1,6,2,0,12,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,2,1,0,2,4,1,6,4,0,14,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,    },4,0,0,0,1,0,0,2,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,2,0,0,2,4,0,8,2,0,13,56,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,    },4,0,0,0,1,3,2,4,0,14,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,6,5,0,1,3,0,0,2,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,        char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,        char ch1 = str.charAt(1);,12,1,0,1,2,0,4,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",2,0,0,1,2,1,0,2,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,8,0,0,10,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,1,0,1,2,0,8,6,0,27,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,            if (len == 5) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,12,2,0,14,78,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,2,0,0,1,2,0,0,4,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,            list.add(locale);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",4,1,0,3,6,0,8,2,0,16,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,10,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,        return cAvailableLocaleList;,2,1,0,0,0,1,0,2,0,7,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,0,4,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,2,0,0,2,4,0,2,2,0,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,6,3,0,1,2,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,6,0,0,6,44,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,2,0,0,2,4,0,6,4,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,        if (langs == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,0,0,0,1,2,0,12,0,0,13,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,0,8,0,0,9,46,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,                        langs.add(locale);,0,0,0,1,2,0,6,0,0,6,18,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,6,0,0,0,0,0,0,0,0,7,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",0,0,0,1,2,0,8,0,0,8,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,2,0,0,2,4,0,6,4,0,12,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,        if (countries == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,            if (languageCode != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,4,0,0,1,2,0,4,2,0,12,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,14,2,0,2,5,0,4,0,0,22,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,                        countries.add(locale);,0,0,0,1,2,0,6,0,0,6,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,                countries = Collections.unmodifiableList(countries);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,            } else {,6,0,0,0,2,0,0,0,0,6,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,                countries = Collections.EMPTY_LIST;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",0,0,0,1,2,0,8,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,10,0,0,0,0,1,0,4,0,14,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,8,0,0,10,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,4,2,0,2,4,0,8,0,0,14,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,6,1,0,1,2,0,4,0,0,12,30,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,14,0,0,18,55,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,2,0,0,1,0,0,0,0,6,15,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,4,2,0,1,3,3,6,4,0,20,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,10,2,0,2,5,0,8,0,0,23,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,2,1,0,2,5,0,6,0,0,10,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,10,0,0,18,50,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,1,0,1,3,3,4,2,0,22,34,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,4,1,0,2,5,0,6,0,0,11,31,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,8,2,0,2,5,0,4,0,0,15,40,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,43,    public static final Long LONG_ONE = new Long(1L);,2,0,0,1,2,3,0,4,0,9,49,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,0,0,0,3,56,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,47,    public static final Integer INTEGER_ZERO = new Integer(0);,4,0,0,1,2,0,0,0,0,5,58,8,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,0,0,2,4,0,0,2,0,6,59,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,0,0,0,2,4,0,0,0,0,6,56,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,0,4,0,9,58,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,161,        super();,2,0,0,1,2,3,2,4,0,12,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,162,    },6,2,0,0,1,0,0,0,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,276,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,355,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,411,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,413,"        str = strip(str, null);",8,3,0,1,2,0,8,0,0,21,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",6,1,0,1,2,2,4,2,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,471,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,14,0,0,14,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,507,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,10,2,0,4,9,0,10,0,0,22,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,512,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,4,3,0,5,11,0,10,0,0,18,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,547,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,548,            return str;,10,1,0,0,0,1,4,2,0,17,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,8,4,1,4,9,0,8,2,0,26,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,555,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,556,            return str;,2,0,0,0,0,2,6,4,0,13,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,559,                end--;,4,1,0,0,0,0,0,0,0,6,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,562,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,587,"        return stripAll(strs, null);",8,2,0,1,2,1,4,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,617,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,618,            return strs;,4,0,0,0,0,1,4,0,0,8,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,620,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,621,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,622,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,3,6,0,4,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,624,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,650,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,700,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,701,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,703,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,732,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,733,            return -1;,2,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,735,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,761,        if (str == null || searchStr == null) {,8,3,0,1,3,0,0,0,0,12,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,762,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,764,        return str.indexOf(searchStr);,6,1,0,1,2,1,6,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,795,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,796,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,798,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,799,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,801,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,802,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,804,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,805,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,806,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,808,            found++;,4,0,0,0,0,0,0,2,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,809,        } while (found < ordinal);,10,1,0,1,3,0,0,2,0,14,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,810,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,845,        if (str == null || searchStr == null) {,10,4,0,1,3,0,2,0,0,17,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,846,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,849,        if (searchStr.length() == 0 && startPos >= str.length()) {,4,4,0,3,7,0,18,0,0,26,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,850,            return str.length();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,852,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,877,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,878,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,880,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,911,        if (isEmpty(str)) {,2,0,0,2,5,0,4,2,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,912,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,914,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,940,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,941,            return -1;,4,0,0,0,0,1,0,0,0,6,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,943,        return str.lastIndexOf(searchStr);,2,0,0,1,2,1,0,2,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,975,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,976,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,978,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1003,        if (isEmpty(str)) {,2,0,1,2,5,0,4,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1004,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1006,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1031,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1032,            return false;,6,0,0,0,0,1,6,2,0,14,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1034,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1061,        if (str == null || searchStr == null) {,6,3,1,1,3,0,0,0,0,11,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1062,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1064,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,10,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1092,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1093,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1095,        for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,3,6,0,0,20,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1096,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1097,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1098,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1099,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1103,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1129,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1130,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1132,"        return indexOfAny(str, searchChars.toCharArray());",2,0,0,2,4,1,8,0,0,11,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1160,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1161,            return -1;,2,0,0,0,0,1,0,0,0,3,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1163,        outer : for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,0,4,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1164,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1165,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1166,                if (searchChars[j] == ch) {,2,0,0,2,5,0,2,0,0,4,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1167,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1170,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1172,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1198,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1199,            return -1;,6,2,0,0,0,4,2,0,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1201,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1202,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,1,0,3,7,0,10,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1203,                return i;,4,0,1,0,0,1,0,4,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1206,        return -1;,12,2,0,0,0,1,0,0,0,16,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1234,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1235,            return false;,0,0,0,0,0,1,0,2,0,4,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1237,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1238,            return true;,6,0,0,0,0,1,10,2,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1240,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1241,            return false;,2,0,0,0,0,1,0,0,0,3,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1243,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,10,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1269,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1270,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1272,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1300,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1301,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1303,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1304,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1305,        for (int i = 0; i < strSize; i++) {,14,1,0,1,3,0,0,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1307,            for (int j = 0; j < validSize; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1308,                if (invalidChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1309,                    return false;,0,0,0,0,0,1,0,0,0,1,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1313,        return true;,2,0,0,0,0,1,0,2,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1339,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1340,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1342,"        return containsNone(str, invalidChars.toCharArray());",2,0,0,2,4,1,0,2,0,4,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1374,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1375,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1377,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1380,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1382,        int tmp = 0;,0,0,0,0,0,0,12,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1383,        for (int i = 0; i < sz; i++) {,2,1,0,1,3,0,8,0,0,12,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1384,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1385,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1386,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1388,            tmp = str.indexOf(search);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1389,            if (tmp == -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1390,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1393,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1394,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1398,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1427,        if ((str == null) || (searchStrs == null)) {,12,3,0,3,7,0,4,2,0,21,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1428,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1430,        int sz = searchStrs.length;,8,1,0,0,0,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1431,        int ret = -1;,4,0,0,0,0,2,0,4,0,12,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1432,        int tmp = 0;,2,0,0,0,0,2,0,4,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1433,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,6,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1434,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1435,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1436,                continue;,8,1,0,0,0,0,0,0,0,10,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1438,            tmp = str.lastIndexOf(search);,2,0,0,1,2,0,6,0,0,9,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1439,            if (tmp > ret) {,10,4,0,1,3,0,0,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1440,                ret = tmp;,6,0,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1443,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1473,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1474,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1478,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1479,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1482,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1483,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1485,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1486,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1489,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1528,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1529,            return null;,2,0,0,0,0,2,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1533,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1534,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1536,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1537,            start = str.length() + start; // remember start is negative,6,1,0,1,2,0,4,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1541,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1542,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1546,        if (start > end) {,8,2,0,1,3,0,2,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1547,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1550,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1551,            start = 0;,4,0,0,0,0,0,0,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1553,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1554,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1557,"        return str.substring(start, end);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1583,        if (str == null) {,0,0,0,1,3,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1584,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1586,        if (len < 0) {,2,1,0,1,3,0,6,0,0,9,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1587,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1589,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1590,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1592,"            return str.substring(0, len);",0,0,0,1,2,1,6,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1617,        if (str == null) {,4,1,0,1,3,0,0,2,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1618,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1620,        if (len < 0) {,4,2,0,1,3,0,0,2,0,10,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1621,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1623,        if (str.length() <= len) {,2,1,0,2,5,0,0,2,0,6,26,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1624,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1626,            return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1655,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1656,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1658,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1659,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1661,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1662,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1664,        if (str.length() <= (pos + len)) {,0,0,0,3,7,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1665,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1667,"            return str.substring(pos, pos + len);",6,1,0,1,2,1,10,0,0,17,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1699,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1700,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1702,        if (separator.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1703,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1705,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1706,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1707,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1709,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,1,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1739,        if (isEmpty(str)) {,2,0,0,2,5,0,8,0,0,10,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1740,            return str;,4,0,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1742,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1743,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1745,        int pos = str.indexOf(separator);,4,0,0,1,2,0,6,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1746,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1747,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1749,        return str.substring(pos + separator.length());,2,0,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1778,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1779,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1781,        int pos = str.lastIndexOf(separator);,4,0,0,1,2,0,10,0,0,14,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1782,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1783,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1785,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1816,        if (isEmpty(str)) {,2,0,0,2,5,0,4,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1817,            return str;,10,1,0,0,0,1,6,2,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1819,        if (isEmpty(separator)) {,8,6,0,2,5,0,16,2,0,32,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1820,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1822,        int pos = str.lastIndexOf(separator);,8,0,0,1,2,0,14,0,0,23,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1823,        if (pos == -1 || pos == (str.length() - separator.length())) {,0,0,0,4,9,0,0,0,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1826,        return str.substring(pos + separator.length());,6,3,0,2,4,1,8,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1853,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1882,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1883,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1885,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1886,        if (start != -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1887,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1888,            if (end != -1) {,6,2,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1889,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1892,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1920,"        return substringBetween(str, tag, tag);",2,0,0,1,2,1,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1950,"        return substringBetween(str, open, close);",0,0,0,1,2,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1978,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2008,"        return splitWorker(str, separatorChar, false);",6,0,0,1,2,1,0,2,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2037,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,16,0,0,18,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2071,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2098,"        return splitByWholeSeparator( str, separator, -1 ) ;",0,0,0,1,2,1,6,0,0,7,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2129,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2130,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2133,        int len = str.length() ;,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2135,        if (len == 0) {,8,2,0,1,3,0,12,0,0,23,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2136,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,2,0,0,0,1,4,0,0,10,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2139,"        if ( ( separator == null ) || ( """".equals( separator ) ) ) {",2,2,0,4,9,0,4,0,0,9,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2141,"            return split( str, null, max ) ;",0,0,0,1,2,1,6,0,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2145,        int separatorLength = separator.length() ;,4,0,1,1,2,0,4,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2147,        ArrayList substrings = new ArrayList() ;,4,0,0,1,2,0,0,4,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2148,        int numberOfSubstrings = 0 ;,2,0,0,0,0,0,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2149,        int beg = 0 ;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2150,        int end = 0 ;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2151,        while ( end < len ) {,4,1,0,1,3,0,0,0,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2152,"            end = str.indexOf( separator, beg ) ;",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2154,            if ( end > -1 ) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2155,                if ( end > beg ) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2156,                    numberOfSubstrings += 1 ;,2,0,0,0,0,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2158,                    if ( numberOfSubstrings == max ) {,0,0,0,1,3,0,4,0,0,4,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2159,                        end = len ;,4,0,0,0,0,0,0,0,0,5,11,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2160,                        substrings.add( str.substring( beg ) ) ;,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2164,"                        substrings.add( str.substring( beg, end ) ) ;",4,1,0,2,4,0,0,0,0,5,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2169,                        beg = end + separatorLength ;,8,2,0,0,0,0,0,2,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2173,                    beg = end + separatorLength ;,6,1,0,0,0,0,0,0,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2177,                substrings.add( str.substring( beg ) ) ;,0,0,0,2,4,0,10,0,0,10,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2178,                end = len ;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2182,        return (String[]) substrings.toArray( new String[substrings.size()] ) ;,2,1,0,5,10,1,14,4,0,21,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2212,"        return splitWorker(str, null, -1, true);",2,0,0,1,2,1,4,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2248,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2266,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2267,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2269,        int len = str.length();,2,0,0,1,2,0,10,0,0,13,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2270,        if (len == 0) {,14,3,0,1,3,0,0,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2271,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2273,        List list = new ArrayList();,6,2,0,1,2,0,0,4,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2274,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2275,        boolean match = false;,4,0,0,0,0,0,0,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2276,        boolean lastMatch = false;,2,0,0,0,0,0,6,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2277,        while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2278,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2279,                if (match || preserveAllTokens) {,6,1,1,1,3,0,0,0,0,12,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2280,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2281,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2282,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2284,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2285,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2287,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2289,            match = true;,2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2290,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2292,        if (match || (preserveAllTokens && lastMatch)) {,10,2,0,2,5,0,6,0,0,18,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2293,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2295,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,0,0,0,16,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2332,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2372,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2394,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2395,            return null;,2,0,0,0,0,1,0,0,0,2,12,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2397,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2398,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2399,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2401,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2402,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2403,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2404,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2405,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2406,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2408,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2409,                if (Character.isWhitespace(str.charAt(i))) {,4,1,0,3,7,0,10,0,0,15,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2410,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2411,                        lastMatch = true;,22,6,0,0,0,0,20,0,0,52,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2412,                        if (sizePlus1++ == max) {,10,1,0,1,3,0,4,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2413,                            i = len;,6,1,0,0,0,0,0,0,0,8,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2414,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2416,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,13,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2417,                        match = false;,4,0,0,0,0,0,4,2,0,13,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2419,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2420,                    continue;,14,0,0,0,0,0,0,2,0,17,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2422,                    lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2424,                match = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2425,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2427,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2429,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2430,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2431,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2432,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2433,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2434,                        if (sizePlus1++ == max) {,6,3,0,1,3,0,4,0,0,15,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2435,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2436,                            lastMatch = false;,4,1,0,0,0,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2438,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2439,                        match = false;,8,1,0,0,0,0,0,2,0,13,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2441,                    start = ++i;,6,0,0,0,0,0,4,2,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2442,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2444,                    lastMatch = false;,2,1,0,0,0,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2446,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2447,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2449,        } else {,8,2,0,0,2,0,10,8,0,28,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2451,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2452,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,6,2,0,3,7,0,12,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2453,                    if (match || preserveAllTokens) {,6,1,0,1,3,0,12,0,0,20,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2454,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2455,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2456,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2457,                            lastMatch = false;,10,0,0,0,0,0,0,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2459,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2460,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2462,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2463,                    continue;,14,1,0,0,0,0,0,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2465,                    lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2467,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2468,                i++;,4,1,0,0,0,0,0,0,0,5,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2471,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2472,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2474,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,8,4,0,12,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2498,"        return join(array, null);",4,1,0,1,2,1,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2522,"        return join(array, null);",10,1,0,1,2,1,4,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2548,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2549,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2552,"        return join(array, separator, 0, array.length);",2,0,0,1,2,1,0,0,0,2,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2582,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2583,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2585,        int bufSize = (endIndex - startIndex);,10,1,0,1,2,0,0,0,0,12,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2586,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2587,            return EMPTY;,12,1,0,0,0,1,12,0,0,26,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2590,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2591,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2593,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2594,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2595,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2597,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2598,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2601,        return buf.toString();,6,0,0,1,2,1,4,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2629,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2630,            return null;,0,3,0,0,0,1,8,0,0,13,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2632,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2663,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2664,            return null;,2,1,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2666,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2667,            separator = EMPTY;,6,0,0,0,0,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2672,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2673,        if (bufSize <= 0) {,10,1,0,1,3,0,8,0,0,19,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2674,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2677,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2680,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2682,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2683,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2684,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2686,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2687,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2690,        return buf.toString();,2,0,0,1,2,1,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2710,        if (iterator == null) {,8,2,0,1,3,0,4,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2711,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2713,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2714,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2716,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2717,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2718,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2722,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",6,0,0,1,2,0,6,4,0,16,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2723,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2724,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2727,        while (iterator.hasNext()) {,2,2,0,2,5,0,8,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2728,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2729,            Object obj = iterator.next();,14,2,0,1,2,0,4,2,0,23,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2730,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2731,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2735,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2754,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2755,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2757,        if (!iterator.hasNext()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2758,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2760,        Object first = iterator.next();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2761,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2762,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2766,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2767,        if (first != null) {,0,0,0,1,3,0,12,0,0,13,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2768,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2771,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2772,            if (separator != null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2773,                buf.append(separator);,2,0,0,1,2,0,6,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2775,            Object obj = iterator.next();,2,1,0,1,2,0,12,2,0,18,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2776,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2777,                buf.append(obj);,0,0,0,1,2,0,14,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2779,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2780,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2798,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2799,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2801,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2819,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2820,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2822,"        return join(collection.iterator(), separator);",10,1,0,2,4,1,8,0,0,20,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2854,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2855,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2857,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",2,2,0,1,2,1,14,0,0,19,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2875,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2876,            return str;,14,1,0,0,0,1,0,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2878,        int sz = str.length();,0,0,0,1,2,0,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2879,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2880,        int count = 0;,6,0,0,0,0,0,6,0,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2881,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2882,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2883,                chs[count++] = str.charAt(i);,2,0,1,2,4,0,6,0,0,12,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2886,        if (count == sz) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2887,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2889,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2919,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2920,            return str;,0,0,0,0,0,1,8,2,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2922,        if (str.startsWith(remove)){,0,0,0,2,5,0,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2923,            return str.substring(remove.length());,2,1,0,2,4,1,8,0,0,11,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2925,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2953,        if (isEmpty(str) || isEmpty(remove)) {,10,1,0,3,7,0,8,2,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2954,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2956,        if (str.endsWith(remove)) {,2,0,0,2,5,0,0,0,0,3,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2957,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2959,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2986,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2987,            return str;,4,0,1,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2989,"        return replace(str, remove, """", -1);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3012,        if (isEmpty(str) || str.indexOf(remove) == -1) {,8,3,0,3,7,0,10,2,0,24,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3013,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3015,        char[] chars = str.toCharArray();,4,1,0,2,4,0,12,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3016,        int pos = 0;,4,1,0,0,0,0,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3017,        for (int i = 0; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3018,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3019,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,10,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3022,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3051,"        return replace(text, repl, with, 1);",2,1,1,1,2,1,8,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3078,"        return replace(text, repl, with, -1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3110,        if (isEmpty(text) || isEmpty(repl) || with == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3111,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3113,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3114,"        int end = text.indexOf(repl, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3115,        if (end == -1) {,4,2,0,1,3,0,8,2,0,17,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3116,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3118,        int replLength = repl.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3119,        int increase = with.length() - replLength;,2,0,0,1,2,0,4,2,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3120,        increase = (increase < 0 ? 0 : increase);,10,4,0,1,2,0,0,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3121,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3122,        StringBuffer buf = new StringBuffer(text.length() + increase);,8,2,0,2,4,1,4,4,0,19,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3123,        while (end != -1) {,6,1,1,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3124,"            buf.append(text.substring(start, end)).append(with);",0,0,0,3,6,0,16,0,0,16,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3125,            start = end + replLength;,8,1,0,0,0,0,0,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3126,            if (--max == 0) {,6,2,0,1,3,0,4,0,0,17,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3127,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3129,"            end = text.indexOf(repl, start);",2,0,0,1,2,0,8,0,0,11,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3131,        buf.append(text.substring(start));,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3132,        return buf.toString();,2,0,0,1,2,1,4,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3158,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3159,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3161,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3201,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3202,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3204,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3205,"            replaceChars = """";",6,1,1,0,0,0,4,0,0,21,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3207,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3208,        int replaceCharsLength = replaceChars.length();,6,0,0,1,2,0,12,2,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3209,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3210,        StringBuffer buf = new StringBuffer(strLength);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3211,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,2,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3212,            char ch = str.charAt(i);,4,0,0,1,2,0,10,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3213,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3214,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3215,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3216,                if (index < replaceCharsLength) {,8,1,0,1,3,0,6,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3217,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3220,                buf.append(ch);,0,0,1,1,2,0,2,0,0,11,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3223,        if (modified) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3224,            return buf.toString();,2,0,0,1,2,1,4,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3226,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3258,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),0,0,0,3,6,1,6,0,0,7,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3295,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3296,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3298,        if (overlay == null) {,2,2,0,1,3,0,8,0,0,12,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3299,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3301,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3302,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3303,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3305,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3306,            start = len;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3308,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3309,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3311,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3312,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3314,        if (start > end) {,6,1,0,1,3,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3315,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3316,            start = end;,4,0,0,0,0,0,12,0,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3317,            end = temp;,4,0,1,0,0,0,16,0,0,32,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3319,        return new StringBuffer(len + start - end + overlay.length() + 1),6,4,0,2,4,1,4,2,0,16,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3354,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3355,            return str;,6,0,0,0,0,1,6,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3358,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3359,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3360,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,4,0,0,1,3,0,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3361,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3363,                return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3367,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3368,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3370,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3371,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3372,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3374,        } else if (last != CharUtils.CR) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3375,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3377,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3407,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3410,        if (str.endsWith(separator)) {,0,0,0,2,5,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3411,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3413,        return str;,6,1,0,0,0,1,2,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3427,"        return chompLast(str, ""\n"");",2,1,0,1,2,1,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3441,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3442,            return str;,10,0,0,0,0,1,6,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3444,        String sub = str.substring(str.length() - sep.length());,2,1,0,3,6,0,12,2,0,17,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3445,        if (sep.equals(sub)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3446,"            return str.substring(0, str.length() - sep.length());",0,1,0,3,6,1,12,0,0,13,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3448,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3465,        int idx = str.lastIndexOf(sep);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3466,        if (idx == str.length() - sep.length()) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3467,            return sep;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3468,        } else if (idx != -1) {,2,1,0,1,4,0,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3469,            return str.substring(idx);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3471,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3487,        int idx = str.indexOf(sep);,6,1,0,1,2,0,6,4,0,17,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3488,        if (idx != -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3489,            return str.substring(idx + sep.length());,2,1,0,2,4,1,12,0,0,15,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3491,            return str;,2,1,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3508,        int idx = str.indexOf(sep);,2,0,1,1,2,0,10,0,0,21,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3509,        if (idx != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3510,"            return str.substring(0, idx + sep.length());",4,1,0,2,4,1,8,0,0,13,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3512,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3542,        if (str == null) {,6,2,0,1,3,0,4,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3543,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3545,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3546,        if (strLen < 2) {,8,2,0,1,3,0,10,0,0,20,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3547,            return EMPTY;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3549,        int lastIdx = strLen - 1;,2,1,0,0,0,0,8,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3550,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,1,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3551,        char last = str.charAt(lastIdx);,4,0,0,1,2,0,6,0,0,10,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3552,        if (last == CharUtils.LF) {,8,2,0,1,3,0,6,0,0,16,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3553,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,8,3,1,2,5,0,4,0,0,19,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3554,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3557,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3571,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3572,        if (lastIdx <= 0) {,4,1,0,1,3,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3573,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3575,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3576,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3577,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,10,0,0,18,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3578,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3581,            lastIdx++;,6,1,0,0,0,0,4,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3583,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3605,        return StringEscapeUtils.escapeJava(str);,2,0,0,1,2,1,0,0,0,3,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3631,        if (str == null) {,2,1,0,1,3,0,4,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3632,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3634,        if (repeat <= 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3635,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3637,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3638,        if (repeat == 1 || inputLength == 0) {,10,4,0,1,3,0,4,2,0,21,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3639,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3641,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3642,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3645,        int outputLength = inputLength * repeat;,6,1,0,0,0,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3646,        switch (inputLength) {,4,0,0,1,3,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3648,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3649,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3650,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3651,                    output1[i] = ch;,2,0,1,1,2,0,0,0,0,7,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3653,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3655,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3656,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3657,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3658,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",14,4,0,1,3,0,0,0,0,22,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3659,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3660,                    output2[i + 1] = ch1;,12,2,0,1,2,0,6,0,0,22,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3662,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3664,                StringBuffer buf = new StringBuffer(outputLength);,6,0,0,1,2,0,4,4,0,14,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3665,                for (int i = 0; i < repeat; i++) {,8,1,0,1,3,0,0,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3666,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3668,                return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3696,        if (repeat < 0) {,2,0,0,1,3,0,0,0,0,2,17,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3697,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3699,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3700,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3701,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3703,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3726,"        return rightPad(str, size, ' ');",2,0,0,1,2,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3751,        if (str == null) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3752,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3754,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3755,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3756,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3758,        if (pads > PAD_LIMIT) {,2,0,0,1,3,0,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3759,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3761,"        return str.concat(padding(pads, padChar));",4,1,0,2,4,1,10,0,0,15,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3788,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3789,            return null;,6,1,0,0,0,1,0,0,0,7,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3791,        if (isEmpty(padStr)) {,2,0,0,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3792,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3794,        int padLen = padStr.length();,10,0,0,1,2,1,4,4,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3795,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3796,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3797,        if (pads <= 0) {,6,0,0,1,3,1,0,4,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3798,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3800,        if (padLen == 1 && pads <= PAD_LIMIT) {,20,5,0,1,3,0,6,0,0,32,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3801,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3804,        if (pads == padLen) {,6,1,0,1,3,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3805,            return str.concat(padStr);,2,1,0,1,2,1,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3806,        } else if (pads < padLen) {,8,1,0,1,4,0,0,0,0,10,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3807,"            return str.concat(padStr.substring(0, pads));",2,0,0,2,4,1,10,0,0,12,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3809,            char[] padding = new char[pads];,6,1,0,2,4,0,0,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3810,            char[] padChars = padStr.toCharArray();,2,0,1,2,4,0,6,0,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3811,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3812,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3814,            return str.concat(new String(padding));,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3838,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3863,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3864,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3866,        int pads = size - str.length();,10,4,0,1,2,0,4,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3867,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3868,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3870,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3871,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3873,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3900,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3901,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3903,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3904,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3906,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3907,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3908,        int pads = size - strLen;,8,2,0,0,0,0,0,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3909,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3910,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3912,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3913,"            return leftPad(str, size, padStr.charAt(0));",12,1,0,2,4,1,14,0,0,29,44,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3916,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3917,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3918,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3919,"            return padStr.substring(0, pads).concat(str);",2,0,0,2,4,1,10,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3921,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3922,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3923,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3924,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3926,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3956,"        return center(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3984,        if (str == null || size <= 0) {,2,0,0,1,3,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3985,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3987,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3988,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3989,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3990,            return str;,4,0,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3992,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3993,"        str = rightPad(str, size, padChar);",6,1,0,1,2,0,8,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3994,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4024,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4025,            return str;,14,5,1,0,0,1,8,2,0,31,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4027,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4028,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4030,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4031,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4032,        if (pads <= 0) {,12,4,0,1,3,0,0,0,0,18,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4033,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4035,"        str = leftPad(str, strLen + pads / 2, padStr);",2,0,0,1,2,0,0,2,0,4,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4036,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4037,        return str;,4,0,0,0,0,1,0,0,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4057,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4058,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4060,        return str.toUpperCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4078,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4079,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4081,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4106,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4107,            return str;,4,2,0,0,0,1,6,0,0,12,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4109,        return new StringBuffer(strLen),0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4125,        return capitalize(str);,0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4150,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4151,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4153,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4169,        return uncapitalize(str);,0,0,0,1,2,1,10,0,0,10,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4201,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4202,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4204,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4206,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4207,        for (int i = 0; i < strLen; i++) {,2,0,0,1,3,0,4,0,0,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4208,            ch = str.charAt(i);,4,1,0,1,2,0,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4209,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,8,0,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4210,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4211,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4212,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4213,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4214,                ch = Character.toUpperCase(ch);,4,0,0,1,2,0,6,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4216,            buffer.append(ch);,2,1,0,1,2,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4218,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4234,        return WordUtils.capitalize(str);,4,1,0,1,2,1,6,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4259,        if (isEmpty(str) || isEmpty(sub)) {,2,0,0,3,7,0,0,0,0,2,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4260,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4262,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4263,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4264,"        while ((idx = str.indexOf(sub, idx)) != -1) {",4,1,0,3,7,0,8,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4265,            count++;,2,0,0,0,0,0,0,0,0,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4266,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4268,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4292,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4293,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4295,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4296,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4297,            if (Character.isLetter(str.charAt(i)) == false) {,2,1,0,3,7,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4298,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4301,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4326,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4327,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4329,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4330,        for (int i = 0; i < sz; i++) {,12,1,0,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4331,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4332,                return false;,4,0,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4335,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4359,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4360,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4362,        int sz = str.length();,2,0,0,1,2,0,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4363,        for (int i = 0; i < sz; i++) {,8,2,0,1,3,0,20,0,0,32,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4364,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4365,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4368,        return true;,8,2,0,0,0,1,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4393,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4394,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4396,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4397,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4398,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4399,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4402,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4431,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4432,            return false;,10,1,0,0,0,1,0,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4434,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4435,        for (int i = 0; i < sz; i++) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4436,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4437,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4440,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4465,        if (str == null) {,6,1,0,1,3,0,8,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4466,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4468,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4469,        for (int i = 0; i < sz; i++) {,0,0,1,1,3,0,4,0,0,8,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4470,            if (Character.isDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4471,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4474,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4501,        if (str == null) {,8,3,0,1,3,0,4,2,0,18,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4502,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4504,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4505,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4506,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4507,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4510,        return true;,4,0,0,0,0,1,4,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4533,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4534,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4536,        int sz = str.length();,6,1,0,1,2,0,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4537,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4538,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4539,                return false;,2,0,0,0,0,1,16,0,0,19,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4542,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4564,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4585,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4605,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4625,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4626,            return null;,4,0,0,0,0,1,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4628,        return new StringBuffer(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4651,        if (str == null) {,6,2,1,1,3,0,0,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4652,            return null;,6,1,0,0,0,1,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4656,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4657,        ArrayUtils.reverse(strs);,2,1,0,1,2,0,14,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4658,"        return join(strs, separatorChar);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4684,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4685,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4689,"        String[] strs = split(str, separatorChars);",2,0,0,2,4,0,6,2,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4690,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4691,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4692,"            return join(strs, ' ');",0,0,0,1,2,1,4,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4694,"        return join(strs, separatorChars);",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4732,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4771,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4772,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4774,        if (maxWidth < 4) {,6,3,0,1,3,0,0,0,0,9,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4775,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4777,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4778,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4780,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4781,            offset = str.length();,10,2,1,1,2,0,18,2,0,38,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4783,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4784,            offset = str.length() - (maxWidth - 3);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4786,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4787,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4789,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4790,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",4,3,0,1,2,0,0,2,0,10,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4792,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4793,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4795,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4826,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4827,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4829,        if (str2 == null) {,2,0,0,1,3,0,4,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4830,            return str1;,2,0,1,0,0,2,4,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4832,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4833,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4834,            return EMPTY;,4,0,0,0,0,1,4,2,0,10,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4836,        return str2.substring(at);,0,0,0,1,2,1,10,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4863,        if (str1 == str2) {,4,1,0,1,3,0,4,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4864,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4866,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4867,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4870,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4871,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4872,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4875,        if (i < str2.length() || i < str1.length()) {,4,0,0,3,7,0,0,0,0,5,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4876,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4878,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4918,        if (s == null || t == null) {,4,3,0,1,3,0,4,0,0,13,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4919,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4939,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4940,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4942,        if (n == 0) {,2,1,0,1,3,0,6,0,0,9,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4943,            return m;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4944,        } else if (m == 0) {,0,0,0,1,4,0,10,0,0,10,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4945,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4948,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4949,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4960,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,4,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4961,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4964,        for (j = 1; j<=m; j++) {,10,1,0,1,3,0,4,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4965,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4966,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4968,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4969,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4971,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4975,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4976,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4977,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4982,        return p[n];,6,0,1,1,2,2,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,108,        return toInt(str);,0,0,0,1,2,1,4,0,0,4,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,129,"        return toInt(str, 0);",0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,151,"        return toInt(str, defaultValue);",0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,172,        if(str == null) {,4,1,0,1,3,0,4,2,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,173,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,176,            return Integer.parseInt(str);,10,1,0,1,2,1,6,2,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,177,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,178,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,200,"        return toLong(str, 0L);",2,0,0,1,2,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,221,        if (str == null) {,2,1,0,1,3,0,10,0,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,222,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,225,            return Long.parseLong(str);,0,0,0,1,2,1,6,0,0,6,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,226,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,227,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,250,"        return toFloat(str, 0.0f);",0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,273,      if (str == null) {,4,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,274,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,277,          return Float.parseFloat(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,278,      } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,279,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,302,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,325,      if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,326,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,329,          return Double.parseDouble(str);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,330,      } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,331,          return defaultValue;,4,0,0,0,0,1,0,0,0,4,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,402,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,412,            return createInteger(str);,0,0,0,1,2,1,6,0,0,6,26,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,423,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,424,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,425,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,427,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,429,                dec = str.substring(decPos + 1);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,431,"            mant = str.substring(0, decPos);",4,0,0,1,2,0,6,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,434,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,0,0,0,2,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,442,"                exp = str.substring(expPos + 1, str.length() - 1);",8,3,0,2,4,1,8,0,0,21,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,458,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,461,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,468,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,469,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,472,                            return f;,2,0,0,0,0,1,6,0,0,9,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,477,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,475,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,482,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,0,0,0,3,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,483,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,484,                            return d;,8,2,1,0,0,1,0,0,0,17,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,488,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,486,                    } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,490,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,491,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,496,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,2,0,1,2,0,16,2,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,502,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,503,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,0,12,0,0,19,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,505,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,507,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,510,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,511,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,515,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,516,                } catch (NumberFormatException nfe) {,8,3,1,1,4,0,0,2,0,18,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,519,                return createBigInteger(str);,2,0,1,1,2,1,4,0,0,8,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,523,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,0,8,0,0,13,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,525,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,526,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,527,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,531,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,529,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,533,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,534,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,535,                        return d;,2,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,539,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,537,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,541,                return createBigDecimal(str);,2,1,0,1,2,1,0,0,0,4,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,557,            return true;,0,0,0,0,0,1,8,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,564,        return str.length() > 0;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,578,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,579,            return null;,4,0,0,0,0,1,4,0,0,8,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,581,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,594,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,595,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,597,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,611,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,612,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,615,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,629,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,645,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,647,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,660,        if (str == null) {,0,3,0,1,3,0,16,0,0,21,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,661,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,664,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,665,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,667,        return new BigDecimal(str);,2,0,1,1,2,1,4,2,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,680,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,681,            return true;,4,0,0,0,0,1,0,0,0,5,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,683,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,684,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,686,        if (array1.length != array2.length) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,687,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,690,        for (int i=0; i<array1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,691,            if (array1[i] != array2[i]) {,0,1,1,3,7,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,692,                return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,696,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,707,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,708,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,710,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,711,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,713,        if (array1.length != array2.length) {,12,3,0,1,3,0,6,0,0,22,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,714,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,717,        for (int i=0; i<array1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,718,            if (array1[i] != array2[i]) {,0,1,1,3,7,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,719,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,723,        return true;,0,1,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,734,        if (array1 == array2) {,6,1,0,1,3,0,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,735,            return true;,0,0,1,0,0,1,4,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,737,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,738,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,740,        if (array1.length != array2.length) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,741,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,744,        for (int i=0; i<array1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,745,            if (array1[i] != array2[i]) {,0,1,1,3,7,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,746,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,750,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,761,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,762,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,764,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,765,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,767,        if (array1.length != array2.length) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,768,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,771,        for (int i=0; i<array1.length; i++) {,14,3,0,1,3,0,0,0,0,18,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,772,            if (array1[i] != array2[i]) {,0,1,1,3,7,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,773,                return false;,0,0,0,0,0,1,8,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,777,        return true;,8,0,0,0,0,1,8,0,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,788,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,789,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,791,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,792,            return false;,8,3,0,0,0,1,12,0,0,25,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,794,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,795,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,798,        for (int i=0; i<array1.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,799,"            if (compare(array1[i], array2[i]) != 0) {",0,1,1,4,9,0,2,0,0,11,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,800,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,804,        return true;,2,1,0,0,0,1,8,0,0,12,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,815,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,816,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,818,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,819,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,821,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,822,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,825,        for (int i=0; i<array1.length; i++) {,20,2,0,1,3,0,0,0,0,24,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,826,"            if (compare(array1[i], array2[i]) != 0) {",0,1,1,4,9,0,2,0,0,11,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,827,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,831,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,846,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,847,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,0,1,2,0,4,2,0,10,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,848,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,849,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,853,        long min = array[0];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,854,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,855,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,856,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,860,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,873,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,874,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,875,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,876,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,880,        int min = array[0];,4,0,1,1,2,0,18,0,0,25,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,881,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,882,            if (array[j] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,883,                min = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,887,        return min;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,900,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,901,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,902,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,903,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,14,2,0,19,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,907,        short min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,908,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,909,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,910,                min = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,914,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,927,        if (array == null) {,10,1,0,1,3,0,4,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,928,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,929,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,930,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,934,        byte min = array[0];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,935,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,936,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,937,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,941,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,954,        if (array == null) {,2,1,0,1,3,0,8,0,0,11,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,955,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,956,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,957,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,961,        double min = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,962,        for (int i = 1; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,963,            if (array[i] < min) {,2,2,1,2,5,0,12,0,0,20,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,964,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,968,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,981,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,982,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,983,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,984,"            throw new IllegalArgumentException(""Array cannot be empty."");",12,4,0,1,2,0,4,0,0,20,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,988,        float min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,989,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,2,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,990,            if (array[i] < min) {,6,2,1,2,5,0,10,2,0,24,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,991,                min = array[i];,8,3,1,1,2,0,0,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,995,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1010,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1011,"            throw new IllegalArgumentException(""The Array must not be null"");",2,3,0,1,2,0,4,2,0,13,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1012,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1013,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,0,2,0,5,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1017,        long max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1018,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1019,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1020,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1024,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1037,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1038,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1039,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1040,"            throw new IllegalArgumentException(""Array cannot be empty."");",8,1,0,1,2,0,0,2,0,13,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1044,        int max = array[0];,2,0,1,1,2,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1045,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1046,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1047,                max = array[j];,2,0,1,1,2,0,8,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1051,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1064,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1065,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,0,1,2,0,4,2,0,10,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1066,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1067,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1071,        short max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1072,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1073,            if (array[i] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1074,                max = array[i];,2,0,0,1,2,0,0,0,0,2,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1078,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1091,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1092,"            throw new IllegalArgumentException(""The Array must not be null"");",4,1,0,1,2,0,0,0,0,5,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1093,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1094,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1098,        byte max = array[0];,4,1,0,1,2,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1099,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1100,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1101,                max = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1105,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1118,        if (array== null) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1119,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1120,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1121,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1125,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1126,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,12,0,0,24,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1127,            if (array[j] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1128,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1132,        return max;,4,0,1,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1145,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1146,"            throw new IllegalArgumentException(""The Array must not be null"");",2,1,0,1,2,0,0,2,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1147,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1148,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1152,        float max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1153,        for (int j = 1; j < array.length; j++) {,12,3,0,1,3,0,4,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1154,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1155,                max = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1159,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1173,        if (b < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1174,            a = b;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1176,        if (c < a) {,10,3,0,1,3,0,6,0,0,20,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1177,            a = c;,4,0,0,0,0,0,4,0,0,9,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1179,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1191,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1192,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1194,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1195,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1197,        return a;,6,1,0,0,0,1,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1209,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1210,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1212,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1213,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1215,        return a;,2,0,0,0,0,1,0,2,0,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1227,        if (b < a) {,6,1,0,1,3,0,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1228,            a = b;,6,0,0,0,0,0,0,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1230,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1231,            a = c;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1233,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1248,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,14,2,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1263,"        return Math.min(Math.min(a, b), c);",2,1,0,2,4,1,0,0,0,4,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1277,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1278,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1280,        if (c > a) {,2,0,0,1,3,0,0,2,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1281,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1283,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1295,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1296,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1298,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1299,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1301,        return a;,20,3,1,0,0,1,8,0,0,37,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1313,        if (b > a) {,6,2,0,1,3,0,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1314,            a = b;,8,3,1,0,0,0,4,0,0,18,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1316,        if (c > a) {,6,2,0,1,3,0,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1317,            a = c;,4,0,0,0,0,0,0,2,0,6,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1319,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1331,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1332,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1334,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1335,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1337,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1352,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1367,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1406,        if (lhs < rhs) {,6,1,0,1,3,0,4,2,0,13,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1407,            return -1;,2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1409,        if (lhs > rhs) {,6,1,0,1,3,0,4,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1410,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1416,        long lhsBits = Double.doubleToLongBits(lhs);,2,0,0,1,2,0,6,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1417,        long rhsBits = Double.doubleToLongBits(rhs);,2,0,0,1,2,0,6,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1418,        if (lhsBits == rhsBits) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1419,            return 0;,2,0,1,0,0,1,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1427,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1428,            return -1;,0,0,0,0,0,1,8,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1430,            return +1;,14,2,0,0,0,1,16,0,0,35,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1467,        if (lhs < rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1468,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1470,        if (lhs > rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1471,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1477,        int lhsBits = Float.floatToIntBits(lhs);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1478,        int rhsBits = Float.floatToIntBits(rhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1479,        if (lhsBits == rhsBits) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1480,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1488,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1489,            return -1;,4,1,0,0,0,1,0,0,0,6,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1491,            return +1;,6,0,0,0,0,1,0,0,0,6,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1512,                return false;,2,0,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1532,        if (StringUtils.isEmpty(str)) {,2,0,1,2,5,0,0,0,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1533,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1535,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1536,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1537,        boolean hasExp = false;,4,1,0,0,0,0,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1538,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1539,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1540,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1542,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,7,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1543,        if (sz > start + 1) {,0,4,1,1,3,0,0,0,0,12,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1544,            if (chars[start] == '0' && chars[start + 1] == 'x') {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1545,                int i = start + 2;,12,4,0,0,0,0,0,0,0,17,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1546,                if (i == sz) {,4,1,0,1,3,0,0,0,0,5,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1547,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1550,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1551,                    if ((chars[i] < '0' || chars[i] > '9'),2,3,1,3,7,0,0,0,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1554,                        return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1557,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1560,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1562,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1565,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1566,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1567,                foundDigit = true;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1568,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1570,            } else if (chars[i] == '.') {,10,2,1,2,6,0,0,0,0,18,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1571,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1573,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1575,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1576,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1578,                if (hasExp) {,14,3,0,1,3,0,4,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1580,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1582,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1583,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1585,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1586,                allowSigns = true;,4,1,1,0,0,0,14,0,0,25,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1587,            } else if (chars[i] == '+' || chars[i] == '-') {,2,3,1,3,8,0,0,0,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1588,                if (!allowSigns) {,2,0,0,1,3,0,0,0,0,3,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1589,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1591,                allowSigns = false;,4,1,1,0,0,0,0,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1592,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1594,                return false;,6,3,0,0,0,1,0,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1596,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1598,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1599,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1601,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1603,            if (chars[i] == 'e' || chars[i] == 'E') {,2,4,1,3,7,0,4,0,0,20,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1605,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1607,            if (!allowSigns,4,0,0,0,1,0,0,0,0,5,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1612,                return foundDigit;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1614,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1617,                return foundDigit && !hasExp;,6,2,0,0,0,1,0,0,0,9,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1620,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1624,        return !allowSigns && foundDigit;,4,1,0,0,0,1,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,8,1,0,1,3,3,2,2,0,18,16,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,2,0,1,2,0,10,0,0,18,29,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,0,0,0,1,3,0,0,0,0,4,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",2,1,0,1,2,0,0,0,0,3,38,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,2,0,1,3,0,10,0,0,15,27,3,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,0,0,0,1,2,0,0,0,0,3,35,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,0,0,0,0,0,1,6,0,0,6,12,5,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,241,        super();,8,2,0,1,2,0,4,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,2,0,0,1,2,1,4,2,0,9,60,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,59,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,127,    private boolean emptyAsNull = false;,2,0,0,0,0,1,0,0,0,4,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,2,0,0,0,0,1,0,0,0,4,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,252,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,8,1,0,1,3,0,4,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,258,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,267,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,0,0,0,1,2,0,4,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,279,        setDelimiterString(delim);,2,1,0,1,2,0,4,0,0,7,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,0,0,0,0,2,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,289,        this(input);,4,0,0,1,2,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,290,        setDelimiterMatcher(delim);,2,0,0,1,2,3,6,2,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,291,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,4,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",6,0,0,1,2,0,4,2,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,0,0,0,1,2,0,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,329,        super();,2,0,0,1,2,3,0,4,0,9,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,0,1,0,0,0,0,8,0,0,9,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,331,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,343,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,344,        setDelimiterChar(delim);,0,0,0,1,2,0,4,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,345,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,6,0,0,8,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,372,        setDelimiterMatcher(delim);,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,373,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,387,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,388,        setQuoteChar(quote);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,389,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,403,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0,0,0,2,4,0,8,0,0,8,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,98,        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,0,0,0,1,2,0,4,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,102,        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());,0,0,0,2,4,0,8,0,0,8,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,103,        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,104,        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,2,0,1,2,4,0,8,2,0,16,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,0,0,0,1,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0,0,0,1,2,0,4,0,0,4,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,0,0,0,1,2,0,4,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,108,    },2,0,1,0,1,0,0,2,0,8,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,139,        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();,0,0,0,2,4,1,4,2,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,152,        return getCSVClone();,0,0,0,1,2,1,2,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,165,        StrTokenizer tok = getCSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,166,        tok.reset(input);,0,0,0,1,2,0,6,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,167,        return tok;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,180,        StrTokenizer tok = getCSVClone();,4,0,0,1,2,0,8,2,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,181,        tok.reset(input);,0,0,0,1,2,0,6,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,182,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,191,        return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();,0,0,0,2,4,1,4,2,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,204,        return getTSVClone();,0,0,0,1,2,1,2,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,215,        StrTokenizer tok = getTSVClone();,4,0,0,1,2,0,2,2,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,216,        tok.reset(input);,0,0,0,1,2,0,6,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,217,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,228,        StrTokenizer tok = getTSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,229,        tok.reset(input);,8,2,0,1,2,0,20,0,0,31,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,230,        return tok;,8,0,0,0,0,1,0,4,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,415,        checkTokenized();,0,0,0,1,2,0,2,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,416,        return tokens.length;,4,0,0,0,0,1,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,425,        if (hasNext()) {,0,0,0,2,5,0,2,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,426,            return tokens[tokenPos++];,2,0,1,1,2,1,0,0,0,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,428,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,437,        if (hasPrevious()) {,0,0,0,2,5,0,2,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,438,            return tokens[--tokenPos];,2,0,1,1,2,1,4,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,440,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,449,        checkTokenized();,2,0,1,1,2,0,2,4,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,450,        return (String[]) tokens.clone();,0,0,0,3,6,1,4,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,459,        checkTokenized();,0,0,0,1,2,0,8,0,0,8,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,460,        List list = new ArrayList(tokens.length);,6,0,0,1,2,0,0,4,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,461,        for (int i = 0; i < tokens.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,462,            list.add(tokens[i]);,0,0,1,2,4,0,4,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,464,        return list;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,475,        tokenPos = 0;,2,0,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,476,        tokens = null;,2,0,0,0,0,2,0,2,0,7,14,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,477,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,489,        reset();,0,0,0,1,2,0,2,0,0,2,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,490,        if (input != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,491,            this.chars = input.toCharArray();,2,0,0,1,2,0,4,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,493,            this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,495,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,510,        reset();,0,0,0,1,2,0,2,0,0,2,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,511,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,512,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,523,        checkTokenized();,0,0,0,1,2,0,2,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,524,        return tokenPos < tokens.length;,6,1,0,0,0,1,8,0,0,15,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,533,        if (hasNext()) {,0,0,0,2,5,0,2,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,534,            return tokens[tokenPos++];,4,0,1,1,2,1,4,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,536,        throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,545,        return tokenPos;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,554,        checkTokenized();,0,0,0,1,2,0,2,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,555,        return tokenPos > 0;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,564,        if (hasPrevious()) {,0,0,0,2,5,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,565,            return tokens[--tokenPos];,2,0,1,1,2,1,8,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,567,        throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,576,        return tokenPos - 1;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,585,"        throw new UnsupportedOperationException(""remove() is unsupported"");",0,0,0,2,4,0,0,2,0,4,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,594,"        throw new UnsupportedOperationException(""set() is unsupported"");",0,0,0,2,4,0,0,2,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,603,"        throw new UnsupportedOperationException(""add() is unsupported"");",0,0,0,2,4,0,0,2,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,612,        if (tokens == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,613,            if (chars == null) {,10,3,0,1,3,0,0,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,615,"                List split = tokenize(null, 0, 0);",2,0,0,1,2,0,2,2,0,7,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,616,                tokens = (String[]) split.toArray(new String[split.size()]);,2,0,0,5,10,0,8,4,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,617,            } else {,2,0,0,0,2,0,4,2,0,8,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,618,"                List split = tokenize(chars, 0, chars.length);",6,0,0,1,2,0,4,2,0,12,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,619,                tokens = (String[]) split.toArray(new String[split.size()]);,2,0,0,5,10,0,8,4,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,622,    },6,5,0,0,1,0,0,0,0,11,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,645,        if (chars == null || count == 0) {,4,3,0,1,3,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,646,            return Collections.EMPTY_LIST;,4,0,0,0,0,1,0,0,0,4,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,648,        StrBuilder buf = new StrBuilder();,2,0,0,1,2,0,0,4,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,649,        List tokens = new ArrayList();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,650,        int pos = offset;,6,0,0,0,0,3,2,0,0,12,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,653,        while (pos >= 0 && pos < count) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,655,"            pos = readNextToken(chars, pos, count, buf, tokens);",2,0,0,1,2,0,12,0,0,15,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,658,            if (pos >= count) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,659,"                addToken(tokens, """");",0,0,0,1,2,0,4,0,0,5,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,662,        return tokens;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,672,        if (tok == null || tok.length() == 0) {,0,0,0,2,5,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,673,            if (isIgnoreEmptyTokens()) {,0,0,0,2,5,0,2,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,674,                return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,676,            if (isEmptyTokenAsNull()) {,0,0,0,2,5,0,2,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,677,                tok = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,680,        list.add(tok);,0,0,0,1,2,0,6,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,681,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,697,        while (start < len) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,698,            int removeLen = Math.max(,2,0,0,0,1,0,6,0,0,9,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,701,            if (removeLen == 0 ||,4,3,0,0,1,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,704,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,706,            start += removeLen;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,707,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,710,        if (start >= len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,711,"            addToken(tokens, """");",4,3,0,1,2,0,4,0,0,12,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,712,            return -1;,2,0,0,0,0,1,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,716,"        int delimLen = getDelimiterMatcher().isMatch(chars, start, start, len);",2,0,0,2,4,0,12,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,717,        if (delimLen > 0) {,2,0,0,1,3,3,2,0,0,8,19,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,718,"            addToken(tokens, """");",0,0,0,1,2,0,4,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,719,            return start + delimLen;,4,1,0,0,0,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,723,"        int quoteLen = getQuoteMatcher().isMatch(chars, start, start, len);",2,0,0,2,4,0,12,0,0,14,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,724,        if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,725,"            return readWithQuotes(chars, start + quoteLen, len, workArea, tokens, start, quoteLen);",4,1,0,1,2,1,14,0,0,19,87,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,727,"        return readWithQuotes(chars, start, len, workArea, tokens, 0, 0);",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,749,        workArea.clear();,2,0,0,1,2,1,6,4,0,13,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,750,        int pos = start;,4,0,0,0,0,0,0,0,0,4,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,751,        boolean quoting = (quoteLen > 0);,4,1,0,1,2,0,14,0,0,20,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,752,        int trimStart = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,754,        while (pos < len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,758,            if (quoting) {,2,0,0,1,3,0,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,765,"                if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,766,"                    if (isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,0,0,0,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,768,"                        workArea.append(chars, pos, quoteLen);",0,0,0,1,2,0,10,0,0,10,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,769,                        pos += (quoteLen * 2);,4,1,0,1,2,0,0,0,0,6,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,770,                        trimStart = workArea.size();,2,0,0,1,2,0,4,0,0,7,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,771,                        continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,775,                    quoting = false;,8,6,0,0,0,0,0,0,0,14,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,776,                    pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,777,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,781,                workArea.append(chars[pos++]);,2,0,1,2,4,0,4,0,0,9,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,782,                trimStart = workArea.size();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,788,"                int delimLen = getDelimiterMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,12,0,0,14,69,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,789,                if (delimLen > 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,791,"                    addToken(tokens, workArea.substring(0, trimStart));",2,0,0,2,4,0,10,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,792,                    return pos + delimLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,796,                if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,797,"                    if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,12,0,0,12,53,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,798,                        quoting = true;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,799,                        pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,800,                        continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,805,"                int ignoredLen = getIgnoredMatcher().isMatch(chars, pos, start, len);",0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,806,                if (ignoredLen > 0) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,807,                    pos += ignoredLen;,18,4,0,0,0,0,0,0,0,24,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,808,                    continue;,4,2,0,0,0,0,12,0,0,19,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,814,"                int trimmedLen = getTrimmerMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,20,0,0,22,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,815,                if (trimmedLen > 0) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,816,"                    workArea.append(chars, pos, trimmedLen);",0,0,0,1,2,0,10,0,0,10,40,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,817,                    pos += trimmedLen;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,818,                    continue;,2,0,0,0,0,0,0,4,0,6,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,822,                workArea.append(chars[pos++]);,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,823,                trimStart = workArea.size();,4,0,1,1,2,0,4,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,824,            },2,0,0,0,1,0,0,0,0,2,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,828,"        addToken(tokens, workArea.substring(0, trimStart));",0,0,0,2,4,0,12,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,829,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,844,        for (int i = 0; i < quoteLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,845,            if ((pos + i) >= len || chars[pos + i] != chars[quoteStart + i]) {,14,6,1,4,9,0,0,0,0,24,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,846,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,849,        return true;,0,0,0,0,0,1,0,2,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,860,        return this.delimMatcher;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,872,        if (delim == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,873,            this.delimMatcher = StrMatcher.noneMatcher();,14,1,0,1,2,0,4,0,0,21,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,875,            this.delimMatcher = delim;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,877,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,887,        return setDelimiterMatcher(StrMatcher.charMatcher(delim));,2,0,0,2,4,1,12,0,0,14,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,897,        return setDelimiterMatcher(StrMatcher.stringMatcher(delim));,2,0,0,2,4,1,8,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,912,        return quoteMatcher;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,925,        if (quote != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,926,            this.quoteMatcher = quote;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,928,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,941,        return setQuoteMatcher(StrMatcher.charMatcher(quote));,2,1,1,2,4,1,0,0,0,7,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,956,        return ignoredMatcher;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,969,        if (ignored != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,970,            this.ignoredMatcher = ignored;,6,0,0,0,0,0,4,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,972,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,985,        return setIgnoredMatcher(StrMatcher.charMatcher(ignored));,0,0,0,2,4,1,0,0,0,7,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1000,        return trimmerMatcher;,2,0,0,0,0,1,6,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1013,        if (trimmer != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1014,            this.trimmerMatcher = trimmer;,4,0,0,0,0,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1016,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1027,        return this.emptyAsNull;,2,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1038,        this.emptyAsNull = emptyAsNull;,2,0,1,0,0,0,0,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1039,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1050,        return ignoreEmptyTokens;,2,0,0,0,0,1,0,0,0,2,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1061,        this.ignoreEmptyTokens = ignoreEmptyTokens;,8,4,0,0,0,0,12,0,0,25,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1062,        return this;,2,1,0,0,0,1,8,0,0,11,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1072,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1073,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1075,        return new String(chars);,4,1,0,1,2,1,0,2,0,7,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1088,            return cloneReset();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1089,        } catch (CloneNotSupportedException ex) {,2,0,0,1,4,0,0,2,0,4,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1090,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1102,        StrTokenizer cloned = (StrTokenizer) super.clone();,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1103,        if (cloned.chars != null) {,6,2,0,1,3,0,0,0,0,8,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1104,            cloned.chars = (char[]) cloned.chars.clone();,8,0,0,3,6,0,2,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1106,        cloned.reset();,8,0,0,1,2,0,4,4,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1107,        return cloned;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1117,        if (tokens == null) {,4,1,0,1,3,0,0,0,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1118,"            return ""StrTokenizer[not tokenized yet]"";",0,0,0,1,2,1,0,0,0,1,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1120,"            return ""StrTokenizer"" + getTokenList();",0,1,0,1,2,1,2,0,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2213,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2212,        StrBuilderTokenizer() {,2,0,0,1,3,0,0,0,0,2,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2214,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2218,            if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2219,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",8,0,0,2,4,1,2,0,0,10,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2221,"                return super.tokenize(chars, offset, count);",8,0,0,1,2,1,0,0,0,8,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2227,            String str = super.getContent();,4,0,0,1,2,0,0,2,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2228,            if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2229,                return StrBuilder.this.toString();,2,0,0,1,2,1,2,0,0,4,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2231,                return str;,6,3,0,0,0,1,0,0,0,9,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,109,            initialCapacity = CAPACITY;,2,0,0,0,0,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,121,        super();,2,0,0,1,2,0,6,0,0,9,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,123,            buffer = new char[CAPACITY];,12,1,1,1,2,0,0,2,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,126,            append(str);,0,0,0,1,2,0,12,0,0,12,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,137,        return newLine;,4,0,0,0,0,1,12,0,0,18,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,147,        this.newLine = newLine;,8,0,0,0,0,0,6,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,148,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,158,        return nullText;,4,0,0,0,0,1,0,0,0,4,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,168,        if (nullText != null && nullText.length() == 0) {,0,0,0,2,5,0,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,169,            nullText = null;,2,0,0,0,0,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,171,        this.nullText = nullText;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,172,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,182,        return size;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,194,        if (length < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,195,            throw new StringIndexOutOfBoundsException(length);,2,0,0,1,2,0,0,2,0,4,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,197,        if (length < size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,198,            size = length;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,199,        } else if (length > size) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,200,            ensureCapacity(length);,0,0,0,1,2,0,4,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,201,            int oldEnd = size;,4,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,202,            int newEnd = length;,6,0,0,0,0,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,203,            size = length;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,204,            for (int i = oldEnd; i < newEnd; i++) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,205,                buffer[i] = '\0';,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,208,        return this;,0,0,0,0,0,1,0,2,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,218,        return buffer.length;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,229,            char[] old = buffer;,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,230,            buffer = new char[capacity];,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,231,"            System.arraycopy(old, 0, buffer, 0, size);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,242,        if (buffer.length > length()) {,4,1,0,2,5,0,2,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,243,            char[] old = buffer;,4,0,0,1,2,0,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,244,            buffer = new char[length()];,2,0,0,2,4,0,2,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,245,"            System.arraycopy(old, 0, buffer, 0, size);",0,0,0,1,2,0,10,0,0,10,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,247,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,260,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,272,        return size == 0;,4,1,0,0,0,1,6,2,0,13,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,287,        size = 0;,2,0,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,288,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,302,        if (index < 0 || index >= length()) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,303,            throw new StringIndexOutOfBoundsException(index);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,305,        return buffer[index];,0,0,1,1,2,1,12,0,0,16,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,319,        if (index < 0 || index >= length()) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,320,            throw new StringIndexOutOfBoundsException(index);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,322,        buffer[index] = ch;,2,0,1,1,2,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,323,        return this;,2,0,1,0,0,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,336,        if (index < 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,337,            throw new StringIndexOutOfBoundsException(index);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,339,"        deleteImpl(index, index + 1, 1);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,340,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,350,        if (size == 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,351,            return ArrayUtils.EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,353,        char chars[] = new char[size];,2,0,1,2,4,0,0,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,354,"        System.arraycopy(buffer, 0, chars, 0, size);",0,0,0,1,2,0,10,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,355,        return chars;,2,1,0,0,0,1,4,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,369,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,370,        int len = endIndex - startIndex;,8,1,0,0,0,0,0,0,0,9,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,371,        if (len == 0) {,4,2,0,1,3,0,0,0,0,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,372,            return ArrayUtils.EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,374,        char chars[] = new char[len];,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,375,"        System.arraycopy(buffer, startIndex, chars, 0, len);",0,0,0,1,2,0,12,0,0,12,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,376,        return chars;,14,6,0,0,0,1,4,2,0,27,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,386,        int len = length();,2,3,1,1,2,0,2,0,0,17,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,387,        if (destination == null || destination.length < len) {,8,3,0,1,3,0,0,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,388,            destination = new char[len];,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,390,"        System.arraycopy(buffer, 0, destination, 0, len);",4,1,0,1,2,0,0,2,0,8,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,391,        return destination;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,405,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,406,            throw new StringIndexOutOfBoundsException(startIndex);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,408,        if (endIndex < 0 || endIndex > length()) {,0,0,0,2,5,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,409,            throw new StringIndexOutOfBoundsException(endIndex);,2,0,0,1,2,0,0,2,0,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,411,        if (startIndex > endIndex) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,412,"            throw new StringIndexOutOfBoundsException(""end < start"");",2,1,0,1,2,0,0,2,0,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,414,"        System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",4,1,0,1,2,0,12,0,0,17,91,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,415,    },4,1,0,0,1,0,10,0,0,16,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,428,        if (newLine == null)  {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,429,            append(SystemUtils.LINE_SEPARATOR);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,430,            return this;,10,0,0,0,0,1,8,2,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,432,        return append(newLine);,0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,441,        if (nullText == null)  {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,442,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,444,        return append(nullText);,0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,455,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,456,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,458,        return append(obj.toString());        ,0,0,0,2,4,1,0,0,0,1,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,470,            return appendNull();,2,0,0,1,2,1,2,0,0,4,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,472,        int strLen = str.length();,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,473,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,475,            ensureCapacity(len + strLen);,12,7,0,1,2,0,2,0,0,21,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,10,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,477,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,492,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,493,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,495,        if (startIndex < 0 || startIndex > str.length()) {,4,3,0,2,5,0,4,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,496,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,498,        if (length < 0 || (startIndex + length) > str.length()) {,6,4,0,3,7,0,4,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,499,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",2,0,0,1,2,1,4,4,0,12,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,501,        if (length > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,502,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,503,            ensureCapacity(len + length);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,504,"            str.getChars(startIndex, startIndex + length, buffer, len);",4,1,0,1,2,0,10,0,0,15,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,505,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,507,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,518,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,519,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,521,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,522,        if (strLen > 0) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,523,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,524,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,525,"            str.getChars(0, strLen, buffer, len);",2,0,0,1,2,0,10,0,0,12,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,526,            size += strLen;,4,0,0,0,0,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,528,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,541,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,542,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,544,        if (startIndex < 0 || startIndex > str.length()) {,4,3,0,2,5,0,4,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,545,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,547,        if (length < 0 || (startIndex + length) > str.length()) {,18,4,0,3,7,0,8,0,0,31,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,548,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,550,        if (length > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,551,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,552,            ensureCapacity(len + length);,4,1,0,1,2,0,6,0,0,11,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,553,"            str.getChars(startIndex, startIndex + length, buffer, len);",6,1,0,1,2,0,10,8,0,25,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,554,            size += length;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,556,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,567,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,568,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,570,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,571,        if (strLen > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,572,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,573,            ensureCapacity(len + strLen);,6,1,0,1,2,0,2,0,0,9,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,574,"            System.arraycopy(str.buffer, 0, buffer, len, strLen);",12,2,0,1,2,0,2,0,0,16,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,575,            size += strLen;,4,1,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,577,        return this;,2,0,0,0,0,2,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,590,        if (str == null) {,0,0,0,1,3,0,12,0,0,12,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,591,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,593,        if (startIndex < 0 || startIndex > str.length()) {,0,0,0,2,5,0,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,594,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,596,        if (length < 0 || (startIndex + length) > str.length()) {,0,0,0,3,7,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,597,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,599,        if (length > 0) {,4,2,0,1,3,0,8,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,600,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,601,            ensureCapacity(len + length);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,602,"            str.getChars(startIndex, startIndex + length, buffer, len);",8,1,0,1,2,0,10,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,603,            size += length;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,605,        return this;,6,0,1,0,0,1,6,4,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,616,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,617,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,619,        int strLen = chars.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,620,        if (strLen > 0) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,621,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,622,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,623,"            System.arraycopy(chars, 0, buffer, len, strLen);",0,0,0,1,2,0,12,0,0,12,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,624,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,626,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,639,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,640,            return appendNull();,4,0,0,1,2,1,2,0,0,7,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,642,        if (startIndex < 0 || startIndex > chars.length) {,8,3,0,1,3,0,0,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,643,"            throw new StringIndexOutOfBoundsException(""Invalid startIndex: "" + length);",8,2,0,1,2,0,0,2,0,14,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,645,        if (length < 0 || (startIndex + length) > chars.length) {,10,4,0,2,5,0,6,0,0,20,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,646,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",2,1,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,648,        if (length > 0) {,2,0,0,1,3,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,649,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,650,            ensureCapacity(len + length);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,651,"            System.arraycopy(chars, startIndex, buffer, len, length);",2,0,0,1,2,0,14,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,652,            size += length;,4,0,0,0,0,0,12,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,654,        return this;,8,1,0,0,0,1,4,2,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,664,        if (value) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,665,            ensureCapacity(size + 4);,2,1,0,1,2,0,10,2,0,15,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,666,            buffer[size++] = 't';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,667,            buffer[size++] = 'r';,4,1,1,1,2,0,2,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,668,            buffer[size++] = 'u';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,669,            buffer[size++] = 'e';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,671,            ensureCapacity(size + 5);,2,1,0,1,2,0,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,672,            buffer[size++] = 'f';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,673,            buffer[size++] = 'a';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,674,            buffer[size++] = 'l';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,675,            buffer[size++] = 's';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,676,            buffer[size++] = 'e';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,678,        return this;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,688,        int len = length();,6,0,0,1,2,0,2,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,689,        ensureCapacity(len + 1);,2,1,0,1,2,0,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,690,        buffer[size++] = ch;,4,0,1,1,2,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,691,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,701,        return append(String.valueOf(value));,0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,711,        return append(String.valueOf(value));,0,0,0,2,4,1,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,721,        return append(String.valueOf(value));,0,0,0,2,4,1,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,731,        return append(String.valueOf(value));,0,0,0,2,4,1,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,746,        if (array != null && array.length > 0) {,6,3,0,1,3,0,0,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,747,"            separator = (separator == null ? """" : separator);",6,1,0,1,2,0,0,0,0,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,748,            append(array[0]);,0,0,1,2,4,0,2,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,749,            for (int i = 1; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,750,                append(separator);,0,0,0,1,2,0,4,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,751,                append(array[i]);,2,0,0,2,4,0,8,0,0,10,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,754,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,768,        if (coll != null && coll.size() > 0) {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,769,"            separator = (separator == null ? """" : separator);",6,1,0,1,2,0,0,0,0,9,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,770,            Iterator it = coll.iterator();,2,0,0,1,2,0,4,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,771,            while (it.hasNext()) {,12,1,0,2,5,0,4,0,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,772,                append(it.next());,0,0,0,2,4,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,773,                if (it.hasNext()) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,774,                    append(separator);,2,1,0,1,2,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,778,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,792,        if (it != null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,793,"            separator = (separator == null ? """" : separator);",6,1,0,1,2,0,0,0,0,9,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,794,            while (it.hasNext()) {,0,0,0,2,5,0,14,0,0,14,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,795,                append(it.next());,0,0,0,2,4,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,796,                if (it.hasNext()) {,0,0,1,2,5,0,8,0,0,17,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,797,                    append(separator);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,801,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,813,        if (length >= 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,814,            ensureCapacity(size + length);,2,0,0,1,2,0,0,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,815,            for (int i = 0; i < length; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,816,                buffer[size++] = padChar;,4,0,1,1,2,0,0,0,0,8,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,819,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,835,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,836,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,837,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,838,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,839,            if (strLen >= width) {,8,1,0,1,3,0,0,0,0,10,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,840,"                str.getChars(strLen - width, strLen, buffer, size);",6,1,0,1,2,0,10,0,0,19,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,842,                int padLen = width - strLen;,6,1,0,0,0,0,0,0,0,7,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,843,                for (int i = 0; i < padLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,844,                    buffer[size + i] = padChar;,8,1,1,1,2,0,0,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,846,"                str.getChars(0, strLen, buffer, size + padLen);",4,1,0,1,2,0,8,0,0,13,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,848,            size += width;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,850,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,864,"        return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",0,0,0,2,4,1,12,0,0,12,70,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,886,                int padLen = width - strLen;,8,2,0,0,0,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,887,"                str.getChars(0, strLen, buffer, size);",0,3,1,1,2,0,10,0,0,23,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,888,                for (int i = 0; i < padLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,889,                    buffer[size + strLen + i] = padChar;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,892,            size += width;,6,0,0,0,0,0,0,2,0,9,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,894,        return this;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,908,"        return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",0,0,0,2,4,1,4,0,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,922,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,923,"            return insert(index, nullText);",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,925,"        return insert(index, obj.toString());",2,0,0,2,4,1,8,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,938,        validateIndex(index);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,939,        if (str == null) {,4,1,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,940,            str = nullText;,4,3,1,0,0,0,0,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,942,        int strLen = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,943,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,944,            int newSize = size + strLen;,6,1,0,0,0,0,0,0,0,7,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,945,            ensureCapacity(newSize);,0,0,0,1,2,0,4,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,946,"            System.arraycopy(buffer, index, buffer, index + strLen, size - index);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,947,            size = newSize;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,948,"            str.getChars(0, strLen, buffer, index);",0,0,0,1,2,0,10,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,950,        return this;,2,0,0,0,0,1,16,0,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,963,        validateIndex(index);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,964,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,965,"            return insert(index, nullText);",8,2,0,1,2,1,16,0,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,967,        int len = chars.length;,6,0,0,0,0,0,0,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,968,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,969,            ensureCapacity(size + len);,6,1,0,1,2,0,2,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,970,"            System.arraycopy(buffer, index, buffer, index + len, size - index);",10,2,0,1,2,0,10,0,0,24,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,971,"            System.arraycopy(chars, 0, buffer, index, len);",0,0,0,1,2,0,12,0,0,12,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,972,            size += len;,4,0,0,0,0,0,10,2,0,17,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,974,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,989,        validateIndex(index);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,990,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,991,"            return insert(index, nullText);",0,0,0,1,2,1,6,0,0,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,993,        if (offset < 0 || offset > chars.length) {,0,0,0,1,3,0,12,0,0,12,42,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,994,"            throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,996,        if (length < 0 || offset + length > chars.length) {,10,4,0,1,3,0,0,0,0,14,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,997,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",4,1,0,1,2,0,4,2,0,12,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,999,        if (length > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1000,            ensureCapacity(size + length);,4,1,0,1,2,0,2,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1001,"            System.arraycopy(buffer, index, buffer, index + length, size - index);",8,2,0,1,2,0,10,0,0,20,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1002,"            System.arraycopy(chars, offset, buffer, index, length);",6,1,0,1,2,0,14,0,0,21,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1003,            size += length;,6,1,1,0,0,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1005,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1017,        validateIndex(index);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1018,        if (value) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1019,            ensureCapacity(size + 4);,2,1,0,1,2,0,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1020,"            System.arraycopy(buffer, index, buffer, index + 4, size - index);",4,3,0,1,2,0,8,0,0,15,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1021,            buffer[index++] = 't';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1022,            buffer[index++] = 'r';,4,1,1,1,2,0,0,0,0,10,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1023,            buffer[index++] = 'u';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1024,            buffer[index] = 'e';,0,0,1,1,2,0,0,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1025,            size += 4;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1027,            ensureCapacity(size + 5);,2,1,0,1,2,0,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1028,"            System.arraycopy(buffer, index, buffer, index + 5, size - index);",6,2,0,1,2,0,10,0,0,18,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1029,            buffer[index++] = 'f';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1030,            buffer[index++] = 'a';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1031,            buffer[index++] = 'l';,0,0,0,1,2,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1032,            buffer[index++] = 's';,0,0,0,1,2,0,0,0,0,1,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1033,            buffer[index] = 'e';,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1034,            size += 5;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1036,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1048,        validateIndex(index);,0,0,0,1,2,0,12,0,0,12,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1049,        ensureCapacity(size + 1);,4,1,0,1,2,0,2,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1050,"        System.arraycopy(buffer, index, buffer, index + 1, size - index);",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1051,        buffer[index] = value;,2,0,1,1,2,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1052,        size++;,4,0,0,0,0,0,0,0,0,5,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1053,        return this;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1065,"        return insert(index, String.valueOf(value));",2,0,0,2,4,1,0,0,0,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1077,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,10,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1089,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,10,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1101,"        return insert(index, String.valueOf(value));",2,0,0,2,4,1,0,0,0,3,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1116,    },2,0,0,0,1,0,2,2,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1128,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1129,        int len = endIndex - startIndex;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1130,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1131,"            deleteImpl(startIndex, endIndex, len);",0,0,0,1,2,0,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1133,        return this;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1144,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1145,            if (buffer[i] == ch) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1146,                int start = i;,4,0,0,0,0,0,0,0,0,4,14,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1147,                while (++i < size) {,4,1,0,1,3,0,0,0,0,6,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1148,                    if (buffer[i] != ch) {,2,1,1,2,5,0,8,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1149,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1152,                int len = i - start;,10,1,0,0,0,0,6,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1153,"                deleteImpl(start, i, len);",0,0,0,1,2,0,8,0,0,8,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1154,                i -= len;,8,1,0,0,0,0,6,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1157,        return this;,2,1,1,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1167,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1168,            if (buffer[i] == ch) {,2,1,1,2,5,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1169,"                deleteImpl(i, i + 1, 1);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1170,                break;,14,2,0,0,0,1,10,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1173,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1184,        int len = (str == null ? 0 : str.length());,6,1,0,2,4,0,4,0,0,11,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1185,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1187,            while (index >= 0) {,16,5,0,1,3,0,0,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1188,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1192,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1204,"            int index = indexOf(str, 0);",6,0,0,1,2,0,10,0,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1206,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1209,        return this;,2,0,0,0,0,1,0,0,0,2,12,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1224,"        return replace(matcher, null, 0, size, -1);",0,0,0,1,2,1,6,0,0,8,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1238,"        return replace(matcher, null, 0, size, 1);",0,1,0,1,2,1,12,0,0,13,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1253,        int newSize = size - removeLen + insertLen;,8,2,0,0,0,0,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1254,        if (insertLen != removeLen) {,10,2,0,1,3,0,0,0,0,13,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1255,            ensureCapacity(newSize);,4,0,0,1,2,0,10,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1256,"            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",0,0,0,1,2,0,0,0,0,3,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1257,            size = newSize;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1259,        if (insertLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1260,"            insertStr.getChars(0, insertLen, buffer, startIndex);",4,0,0,1,2,0,10,0,0,15,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1262,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1276,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1277,        int insertLen = (replaceStr == null ? 0 : replaceStr.length());,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1278,"        replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",2,1,0,1,2,0,8,2,0,13,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1279,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1292,        if (search != replace) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1293,            for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1294,                if (buffer[i] == search) {,8,1,1,2,5,0,0,0,0,14,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1295,                    buffer[i] = replace;,2,0,1,1,2,0,0,0,0,7,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1299,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1311,        if (search != replace) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1312,            for (int i = 0; i < size; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1313,                if (buffer[i] == search) {,2,1,1,2,5,0,0,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1314,                    buffer[i] = replace;,6,3,1,1,2,0,0,0,0,14,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1315,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1319,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1331,        int searchLen = (searchStr == null ? 0 : searchStr.length());,4,1,0,2,4,0,4,0,0,9,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1332,        if (searchLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1333,            int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,4,1,0,2,4,0,4,0,0,9,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1334,"            int index = indexOf(searchStr, 0);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1335,            while (index >= 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1336,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1337,"                index = indexOf(searchStr, index + replaceLen);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1340,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1351,        int searchLen = (searchStr == null ? 0 : searchStr.length());,4,1,0,2,4,0,4,0,0,9,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1352,        if (searchLen > 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1353,"            int index = indexOf(searchStr, 0);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1354,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1355,                int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1356,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1359,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1375,"        return replace(matcher, replaceStr, 0, size, -1);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1390,"        return replace(matcher, replaceStr, 0, size, 1);",4,1,0,1,2,1,8,0,0,14,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1413,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1414,"        return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",0,0,0,1,2,1,12,0,0,12,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1435,        if (matcher == null || size == 0) {,4,3,0,1,3,0,0,0,0,8,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1436,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1438,        int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,4,1,0,2,4,0,4,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1439,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1440,        for (int i = from; i < to && replaceCount != 0; i++) {,12,3,0,1,3,0,0,0,0,16,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1441,"            int removeLen = matcher.isMatch(buf, i, from, to);",2,0,0,1,2,0,12,0,0,14,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1442,            if (removeLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1443,"                replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",14,2,1,1,2,0,10,0,0,32,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1444,                to = to - removeLen + replaceLen;,26,3,0,0,0,0,0,0,0,32,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1445,                i = i + replaceLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1446,                if (replaceCount > 0) {,2,1,0,1,3,0,0,0,0,3,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1447,                    replaceCount--;,2,0,0,0,0,0,0,0,0,3,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1451,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1461,        if (size == 0) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1462,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1465,        int half = size / 2;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1466,        char[] buf = buffer;,6,1,0,1,2,0,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1467,"        for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {",14,2,0,1,3,0,0,0,0,18,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1468,            char swap = buf[leftIdx];,2,0,1,1,2,0,0,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1469,            buf[leftIdx] = buf[rightIdx];,0,0,1,2,4,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1470,            buf[rightIdx] = swap;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1472,        return this;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1483,        if (size == 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1484,            return this;,2,2,0,0,0,1,14,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1486,        int len = size;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1487,        char[] buf = buffer;,6,1,0,1,2,0,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1488,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1489,        while (pos < len && buf[pos] <= ' ') {,4,3,1,2,5,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1490,            pos++;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1492,        while (pos < len && buf[len - 1] <= ' ') {,6,4,1,2,5,0,0,0,0,13,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1493,            len--;,2,0,0,0,0,0,0,0,0,3,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1495,        if (len < size) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1496,"            delete(len, size);",0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1498,        if (pos > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1499,"            delete(0, pos);",0,0,0,1,2,0,4,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1501,        return this;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1514,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1515,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1517,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1518,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1519,            return true;,8,2,0,0,0,1,6,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1521,        if (len > size) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1522,            return false;,2,0,0,0,0,1,14,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1524,        for (int i = 0; i < len; i++) {,12,4,0,1,3,0,0,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1525,            if (buffer[i] != str.charAt(i)) {,0,1,1,3,7,0,6,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1526,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1529,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1541,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1542,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1544,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1545,        if (len == 0) {,6,1,0,1,3,0,4,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1546,            return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1548,        if (len > size) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1549,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1551,        int pos = size - len;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1552,"        for (int i = 0; i < len; i++,pos++) {",10,1,0,1,3,0,0,0,0,13,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1553,            if (buffer[pos] != str.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1554,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1557,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1569,"        return substring(start, size);",0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1586,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1587,"        return new String(buffer, startIndex, endIndex - startIndex);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1603,        if (length <= 0) {,2,2,0,1,3,0,10,0,0,14,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1604,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1605,        } else if (length >= size) {,4,1,0,1,4,0,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1606,"            return new String(buffer, 0, size);",4,0,0,1,2,1,0,2,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1608,"            return new String(buffer, 0, length);",26,3,1,1,2,1,0,2,0,36,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1625,        if (length <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1626,"            return """";",2,0,0,0,0,1,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1627,        } else if (length >= size) {,4,1,0,1,4,0,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1628,"            return new String(buffer, 0, size);",4,0,0,1,2,1,0,2,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1630,"            return new String(buffer, size - length, length);",16,1,0,1,2,2,0,2,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1651,        if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1652,            index = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1654,        if (length <= 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1655,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1657,        if (size <= index + length) {,6,2,0,1,3,0,0,0,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1658,"            return new String(buffer, index, size - index);",18,2,0,1,2,1,0,2,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1660,"            return new String(buffer, index, length);",8,1,0,1,2,1,8,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1673,        for (int i = 0; i < this.size; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1674,            if (thisBuf[i] == ch) {,4,1,1,2,5,0,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1675,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1678,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1688,"        return indexOf(str, 0) >= 0;",0,1,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1703,"        return indexOf(matcher, 0) >= 0;",0,1,0,1,2,1,4,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1714,"        return indexOf(ch, 0);",6,2,0,1,2,1,4,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1725,        startIndex = (startIndex < 0 ? 0 : startIndex);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1726,        if (startIndex >= size) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1727,            return -1;,2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1729,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1730,        for (int i = startIndex; i < size; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1731,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1732,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1735,        return -1;,4,0,0,0,0,1,0,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1747,"        return indexOf(str, 0);",0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1763,            return -1;,2,1,1,0,0,1,14,0,0,21,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1765,        int strLen = str.length();,4,3,0,1,2,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,4,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1767,"            return indexOf(str.charAt(0), startIndex);",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1769,        if (strLen == 0) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1770,            return startIndex;,2,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1772,        if (strLen > size) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1773,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1776,        int len = size - strLen + 1;,6,2,0,0,0,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1778,        for (int i = startIndex; i < len; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1779,            for (int j = 0; j < strLen; j++) {,2,1,1,1,3,0,0,0,0,7,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1780,                if (str.charAt(j) != thisBuf[i + j]) {,8,2,1,3,7,0,10,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1786,        return -1;,2,0,0,0,0,1,6,2,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1800,"        return indexOf(matcher, 0);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1816,        startIndex = (startIndex < 0 ? 0 : startIndex);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1817,        if (matcher == null || startIndex >= size) {,2,1,0,1,3,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1818,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1820,        int len = size;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1821,        char[] buf = buffer;,2,0,0,1,2,0,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1822,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,8,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1823,"            if (matcher.isMatch(buf, i, startIndex, len) > 0) {",0,1,0,2,5,0,12,0,0,13,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1824,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1827,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1838,"        return lastIndexOf(ch, size - 1);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1849,        startIndex = (startIndex >= size ? size - 1 : startIndex);,12,2,0,1,2,0,6,2,0,24,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1850,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1851,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1853,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1854,            if (buffer[i] == ch) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1855,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1858,        return -1;,2,1,0,0,0,1,10,0,0,14,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1870,"        return lastIndexOf(str, size - 1);",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1884,        startIndex = (startIndex >= size ? size - 1 : startIndex);,14,2,0,1,2,0,0,0,0,18,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1885,        if (str == null || startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1886,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1888,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1889,        if (strLen > 0 && strLen <= size) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1890,            if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1891,"                return lastIndexOf(str.charAt(0), startIndex);",0,0,0,2,4,1,8,0,0,8,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1895,            for (int i = startIndex - strLen + 1; i >= 0; i--) {,4,0,1,1,3,0,0,0,0,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1896,                for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1897,                    if (str.charAt(j) != buffer[i + j]) {,0,1,0,3,7,0,4,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1898,                        continue outer;,4,0,0,0,0,0,6,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1901,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1904,        } else if (strLen == 0) {,0,0,0,1,4,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1905,            return startIndex;,0,0,0,0,0,1,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1907,        return -1;,2,0,0,0,0,1,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1921,"        return lastIndexOf(matcher, size);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1937,        startIndex = (startIndex >= size ? size - 1 : startIndex);,22,3,1,1,2,1,14,4,0,49,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1938,        if (matcher == null || startIndex < 0) {,16,5,0,1,3,0,0,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1939,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1941,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1942,        int endIndex = startIndex + 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1943,        for (int i = startIndex; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1944,"            if (matcher.isMatch(buf, i, 0, endIndex) > 0) {",0,1,0,2,5,0,10,0,0,11,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1945,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1948,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1985,        return new StrBuilderTokenizer();,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2009,        return new StrBuilderReader();,0,0,0,1,2,1,6,2,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2034,        return new StrBuilderWriter();,0,0,0,1,2,1,0,2,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2076,        if (this == other) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2077,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2079,        if (this.size != other.size) {,8,1,0,1,3,0,0,0,0,9,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2080,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2082,        char thisBuf[] = this.buffer;,4,0,0,1,2,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2083,        char otherBuf[] = other.buffer;,8,0,0,1,2,0,4,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2084,        for (int i = size - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2085,            char c1 = thisBuf[i];,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2086,            char c2 = otherBuf[i];,6,1,1,1,2,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2087,            if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2)) {,0,0,0,3,7,0,0,0,0,10,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2088,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2091,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2102,        if (this == other) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2103,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2105,        if (this.size != other.size) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2106,            return false;,0,0,0,0,0,1,8,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2108,        char thisBuf[] = this.buffer;,4,0,0,1,2,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2109,        char otherBuf[] = other.buffer;,12,0,0,1,2,1,0,0,0,13,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2110,        for (int i = size - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2111,            if (thisBuf[i] != otherBuf[i]) {,0,1,1,3,7,0,0,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2112,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2115,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2126,        if (obj instanceof StrBuilder) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2127,            return equals((StrBuilder) obj);,0,0,0,2,4,1,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2129,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2138,        char buf[] = buffer;,8,1,0,1,2,0,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2139,        int hash = 0;,10,2,1,0,0,0,0,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2140,        for (int i = size - 1; i >= 0; i--) {,2,1,0,1,3,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2141,            hash = 31 * hash + buf[i];,6,2,1,1,2,0,6,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2143,        return hash;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2157,"        return new String(buffer, 0, size);",4,0,0,1,2,1,10,2,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2167,"        return new StringBuffer(size).append(buffer, 0, size);",2,0,0,2,4,1,6,2,0,10,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2181,        if (startIndex < 0) {,12,2,0,1,3,0,12,0,0,28,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2182,            throw new StringIndexOutOfBoundsException(startIndex);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2184,        if (endIndex > size) {,4,1,0,1,3,0,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2185,            endIndex = size;,6,0,0,0,0,1,6,4,0,18,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2187,        if (startIndex > endIndex) {,8,1,0,1,3,0,8,0,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2188,"            throw new StringIndexOutOfBoundsException(""end < start"");",0,0,0,1,2,0,0,2,0,3,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2190,        return endIndex;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2200,        if (index < 0 || index > size) {,6,3,0,1,3,0,0,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2201,            throw new StringIndexOutOfBoundsException(index);,2,0,0,1,2,0,0,2,0,4,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2203,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2325,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2324,        StrBuilderWriter() {,4,0,0,1,3,0,0,0,0,4,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2326,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2331,        },2,0,0,0,1,0,6,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2336,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2340,            StrBuilder.this.append((char) c);,8,1,0,2,4,0,6,0,0,15,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2341,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2345,            StrBuilder.this.append(cbuf);,2,0,0,1,2,0,4,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2346,        },10,1,0,0,1,0,0,0,0,12,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2350,"            StrBuilder.this.append(cbuf, off, len);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2355,            StrBuilder.this.append(str);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2356,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2360,"            StrBuilder.this.append(str, off, len);",4,0,0,1,2,0,8,0,0,12,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2248,            super();,4,0,1,1,2,0,0,0,0,6,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2247,        StrBuilderReader() {,2,0,0,1,3,0,0,0,0,2,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2249,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2254,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2258,            if (ready() == false) {,12,2,0,2,5,0,8,0,0,26,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2259,                return -1;,0,0,0,0,0,1,0,0,0,1,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2261,            return StrBuilder.this.charAt(pos++);,0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2266,            if (off < 0 || len < 0 || off > b.length ||,10,7,0,0,1,0,0,0,0,17,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2268,                throw new IndexOutOfBoundsException();,0,0,0,1,2,0,0,2,0,2,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2270,            if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2271,                return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2273,            if (pos >= StrBuilder.this.size()) {,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2274,                return -1;,0,0,0,0,0,1,0,0,0,1,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2276,            if (pos + len > size()) {,4,2,0,2,5,0,2,0,0,8,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2277,                len = StrBuilder.this.size() - pos;,6,1,0,1,2,0,2,0,0,10,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2279,"            StrBuilder.this.getChars(pos, pos + len, b, off);",6,1,0,1,2,0,8,0,0,15,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2280,            pos += len;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2281,            return len;,2,0,0,0,0,1,10,0,0,14,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2286,            if (pos + n > StrBuilder.this.size()) {,8,2,0,2,5,0,2,0,0,12,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2287,                n = StrBuilder.this.size() - pos;,6,1,0,1,2,0,2,0,0,10,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2289,            if (n < 0) {,10,1,0,1,3,1,6,0,0,18,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2290,                return 0;,4,0,0,0,0,1,0,8,0,12,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2292,            pos += n;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2293,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2298,            return pos < StrBuilder.this.size();,4,1,0,1,2,1,2,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2303,            return true;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2308,            mark = pos;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2309,        },2,0,0,0,1,0,0,0,0,4,1,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2313,            pos = mark;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2314,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,0,0,0,1,2,0,0,0,0,3,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,0,0,0,1,2,0,0,0,0,3,24,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,4,0,0,0,0,4,4,2,0,13,9,1,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",6,1,0,1,2,2,12,4,0,25,72,1,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,3,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,12,2,0,1,2,0,0,0,0,15,47,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,1,0,1,3,0,14,0,0,17,40,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,6,0,0,1,2,0,0,0,0,6,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,2,0,0,1,3,0,0,0,0,2,18,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,0,0,0,1,3,0,0,0,0,4,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,0,0,0,1,2,0,0,0,0,3,24,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,6,0,0,16,34,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,6,2,0,0,0,1,0,0,0,9,9,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,4,1,0,1,3,3,0,0,0,8,20,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,3,0,4,0,9,28,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,4,1,0,1,3,3,0,0,0,8,17,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",6,2,0,1,2,0,6,0,0,16,36,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",0,0,0,1,2,1,8,0,0,9,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",8,1,0,1,2,0,4,0,0,13,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,4,0,0,0,0,0,10,0,0,15,12,3,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,10,0,0,1,3,1,0,4,0,15,18,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,10,0,0,16,43,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,6,1,0,1,2,0,2,0,0,10,29,6,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,10,0,0,10,37,7,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.03571,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,4,0,0,6,36,14,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,0,0,0,1,3,0,0,0,0,4,37,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,0,0,2,4,0,8,0,0,14,56,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,3,4,2,0,12,33,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,2,0,0,2,4,0,4,4,0,10,50,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,1,39,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,0,0,0,1,3,0,0,0,0,4,16,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",6,1,0,1,2,3,4,0,0,15,35,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,0,0,0,1,3,0,0,0,0,4,17,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",4,1,0,1,2,0,6,2,0,13,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,2,0,0,2,5,0,0,0,0,2,31,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,0,0,0,4,24,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,4,0,0,0,2,1,0,2,0,7,8,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,4,1,0,1,3,0,0,0,0,5,19,4,0.03704,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",4,1,1,1,3,0,2,0,0,12,62,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,4,0,0,0,0,0,0,0,0,5,17,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,0,0,0,0,0,0,0,0,0,0,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,4,0,0,0,0,0,0,0,0,5,19,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,0,0,0,0,0,0,0,0,0,0,17,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,88,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,2,0,0,0,1,1,0,2,0,5,57,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,4,0,0,0,0,1,4,0,0,10,36,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,4,0,0,0,1,1,12,2,0,20,54,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,0,0,0,1,2,0,0,0,0,3,43,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,2,0,0,1,2,1,0,4,0,7,53,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",2,0,0,2,4,0,6,2,0,10,45,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",2,0,0,1,2,1,8,0,0,12,32,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,429,        },2,0,0,0,1,0,6,2,0,10,1,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,2,0,0,0,1,0,0,0,0,2,16,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,6,0,0,1,2,0,0,2,0,8,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,2,0,0,2,5,3,0,2,0,7,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,2,0,0,2,5,3,0,2,0,7,46,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,2,0,0,2,5,2,0,2,0,6,43,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,2,0,0,2,5,2,8,2,0,15,40,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,2,0,0,1,2,0,0,2,0,5,21,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,367,        XML.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,6,0,0,6,29,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,368,        XML.addEntities(APOS_ARRAY);,0,0,0,1,2,0,6,0,0,6,28,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,2,0,0,1,2,0,0,2,0,5,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,373,        HTML32.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,0,0,0,3,32,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,374,        HTML32.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,6,0,0,6,36,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,378,        HTML40 = new Entities();,2,0,0,1,2,0,0,2,0,5,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,379,        fillWithHtml40Entities(HTML40);,0,0,0,1,2,0,0,0,0,3,31,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,380,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,388,        entities.addEntities(BASIC_ARRAY);,0,0,1,1,2,0,10,0,0,19,34,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,389,        entities.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,6,0,0,6,38,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,390,        entities.addEntities(HTML40_ARRAY);,0,0,0,1,2,0,6,0,0,6,35,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,391,    },6,0,0,0,1,0,0,0,0,7,1,11,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,0,0,0,1,3,0,0,0,0,4,46,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,1,6,12,0,10,0,0,19,66,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,704,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,713,"        map.add(name, value);",0,0,0,1,2,0,12,0,0,12,21,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,714,    },2,0,0,0,1,0,0,0,0,3,1,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,96,"        this(20, 0.75f);",0,0,0,1,2,0,0,0,0,3,16,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,97,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,6,1,0,1,3,0,0,2,0,9,26,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,125,        if (loadFactor <= 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,16,1,0,1,3,3,0,0,0,20,27,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,0,0,0,0,0,0,0,0,0,0,29,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,2,0,1,1,2,0,0,2,0,7,35,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,6,1,0,2,4,0,0,0,0,8,49,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,135,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,0,0,0,0,0,0,0,0,0,0,31,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,259,        Entry oldMap[] = table;,4,0,0,1,2,0,0,2,0,6,23,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,0,0,0,0,0,0,0,0,0,0,38,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,2,0,1,2,4,0,0,4,0,8,40,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,10,1,0,2,4,0,0,0,0,13,45,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,4,0,0,0,0,0,0,0,0,5,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,6,1,0,1,3,0,0,0,0,8,37,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,0,0,0,2,5,0,0,0,0,7,43,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,0,0,0,0,0,0,0,0,0,0,14,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,10,3,0,0,0,0,0,0,0,16,15,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,0,0,0,1,2,0,0,0,0,3,48,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,4,0,1,1,2,0,0,0,0,9,23,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,10,1,1,1,2,0,0,0,0,17,18,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,275,            },0,0,0,0,1,0,6,0,0,6,1,7,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,277,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,4,0,0,1,2,0,0,2,0,6,20,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,4,0,0,0,0,0,0,0,0,4,15,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,0,0,0,1,2,0,0,0,0,3,45,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,10,1,1,2,5,0,0,2,0,18,51,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,6,1,0,1,3,0,0,0,0,7,21,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,307,        if (count >= threshold) {,4,1,0,1,3,0,0,0,0,5,25,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,2,0,0,2,9,7,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,4,0,0,0,0,0,0,0,0,5,12,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,8,2,0,1,2,0,0,0,0,11,41,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",8,0,1,2,4,0,0,4,0,16,50,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,2,0,1,1,2,0,0,0,0,7,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,318,        count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,319,        return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",2,1,0,2,4,1,12,0,0,16,81,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,0,0,0,7,46,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,2,0,0,0,0,0,0,0,9,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,0,0,0,0,0,0,0,0,0,0,10,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,4,0,0,7,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,2,0,0,0,0,0,0,0,0,3,9,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,8,5,0,0,0,0,4,0,0,19,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,2,0,0,0,0,0,0,0,0,3,10,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,4,1,0,0,0,0,0,0,0,6,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,0,0,0,0,0,0,0,0,0,0,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,0,0,0,0,0,0,0,0,0,0,38,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,6,2,0,1,3,0,0,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,3,0,0,0,5,30,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,2,0,0,2,4,0,4,2,0,8,37,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,1,0,1,2,0,10,2,0,15,46,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,10,1,0,2,4,0,8,0,0,19,83,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,10,1,0,2,4,0,8,0,0,19,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,10,1,0,2,4,0,8,0,0,19,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,10,1,0,2,4,0,8,0,0,19,76,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,14,1,0,2,4,0,8,0,0,24,77,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,12,2,0,2,4,0,8,2,0,26,65,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,1,0,2,4,0,8,2,0,25,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,4,1,0,1,3,0,0,0,0,5,20,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",0,0,0,1,2,0,0,0,0,3,81,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",8,0,0,1,2,3,8,4,0,24,66,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",8,0,0,1,2,3,8,4,0,24,63,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",6,0,0,1,2,0,8,0,0,15,60,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",2,0,0,2,5,0,0,2,0,5,47,10,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,2,0,13,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",2,1,0,1,2,0,6,0,0,10,34,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,2,0,0,1,2,0,6,0,0,8,30,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,4,0,0,1,2,3,6,4,0,17,34,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,6,0,0,6,9,13,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,2,0,0,0,0,0,0,0,0,4,26,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,0,0,0,0,0,1,0,0,0,1,13,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,2,0,0,0,0,0,0,0,0,4,10,8,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,0,0,0,2,4,0,0,0,0,6,50,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,4,1,0,1,3,0,0,0,0,6,20,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,0,0,0,1,2,0,0,0,0,3,31,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,1,2,0,8,0,0,8,35,7,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,4,0,0,1,2,0,2,0,0,6,21,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,2,0,0,1,2,0,0,4,0,6,26,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,4,0,0,1,2,3,4,2,0,13,38,1,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,0,0,0,1,2,0,0,0,0,3,65,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,6,0,0,1,2,0,2,2,0,12,23,3,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,2,0,0,0,0,0,0,0,0,3,19,5,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,0,0,0,1,3,0,0,0,0,4,23,4,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,2,1,0,1,3,0,0,0,0,4,18,4,0.01515,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,6,0,0,1,3,0,4,0,0,11,19,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,0,0,1,2,1,10,0,0,13,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,2,0,0,0,0,0,0,0,0,3,24,5,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,4,1,1,3,7,0,6,0,0,17,28,3,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,0,0,0,1,3,0,0,0,0,4,23,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,0,0,0,1,7,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,2,0,0,0,0,0,0,0,0,2,15,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,2,0,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,18,1,1,3,6,3,12,0,0,39,45,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,702,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,706,                roundUp = offset > ((max - min) / 2);,8,3,0,2,4,0,0,0,0,12,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",0,0,0,6,12,0,0,0,0,18,54,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",2,0,0,1,2,3,4,2,0,12,73,2,0.05,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,0,0,0,2,5,0,0,0,0,7,39,4,0.05,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,123,        super();,2,0,0,1,2,3,0,12,0,17,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,141,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,142,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,144,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,145,        cal1.setTime(date1);,0,0,0,1,2,0,12,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,146,        Calendar cal2 = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,147,        cal2.setTime(date2);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,148,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,165,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,166,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,168,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,8,3,0,2,5,1,8,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,186,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,187,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,189,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,204,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,205,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,207,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,1,0,4,8,1,12,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,224,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,225,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,227,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,8,8,0,2,5,1,8,0,0,24,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,252,        if (str == null || parsePatterns == null) {,4,3,0,1,3,0,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,253,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,256,        SimpleDateFormat parser = null;,2,0,0,0,0,0,0,2,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,257,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,258,        for (int i = 0; i < parsePatterns.length; i++) {,10,1,0,1,3,0,0,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,259,            if (i == 0) {,2,1,0,1,3,0,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,260,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,1,2,4,0,0,2,0,7,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,262,                parser.applyPattern(parsePatterns[i]);,2,0,0,2,4,0,0,0,0,2,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,264,            pos.setIndex(0);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,265,"            Date date = parser.parse(str, pos);",12,8,0,1,2,0,16,2,0,38,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,266,            if (date != null && pos.getIndex() == str.length()) {,2,3,0,3,7,0,8,0,0,13,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,267,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,270,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,284,"        return add(date, Calendar.YEAR, amount);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,298,"        return add(date, Calendar.MONTH, amount);",4,0,0,1,2,1,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,312,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,326,"        return add(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,340,"        return add(date, Calendar.HOUR_OF_DAY, amount);",4,0,0,1,2,1,12,0,0,16,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,354,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,368,"        return add(date, Calendar.SECOND, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,382,"        return add(date, Calendar.MILLISECOND, amount);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,397,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,398,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,2,4,2,0,10,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,400,        Calendar c = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,401,        c.setTime(date);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,402,"        c.add(calendarField, amount);",2,1,0,1,2,0,8,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,403,        return c.getTime();,0,0,0,1,2,1,4,2,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,436,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,437,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,439,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,440,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,441,"        modify(gval, field, true);",0,0,0,1,2,0,6,0,0,7,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,442,        return gval.getTime();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,474,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,475,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,477,        Calendar rounded = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,478,"        modify(rounded, field, true);",0,0,0,1,2,0,10,0,0,12,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,479,        return rounded;,8,0,0,0,0,1,0,0,0,8,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,513,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,514,"            throw new IllegalArgumentException(""The date must not be null"");",6,0,0,1,2,0,0,2,0,11,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,516,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,517,"            return round((Date) date, field);",2,0,0,2,4,1,4,2,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,518,        } else if (date instanceof Calendar) {,2,0,0,1,4,1,0,2,0,5,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,519,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,521,"            throw new ClassCastException(""Could not round "" + date);",0,0,0,1,2,0,0,0,0,3,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,544,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,569,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,570,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,572,        Calendar truncated = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,573,"        modify(truncated, field, false);",0,0,0,1,2,0,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,574,        return truncated;,2,1,0,0,0,1,14,0,0,18,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,598,        if (date == null) {,4,2,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,599,"            throw new IllegalArgumentException(""The date must not be null"");",6,1,0,1,2,0,0,2,0,12,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,601,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,602,"            return truncate((Date) date, field);",2,0,0,2,4,1,4,2,0,8,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,603,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,604,"            return truncate((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,606,"            throw new ClassCastException(""Could not truncate "" + date);",4,1,0,1,2,3,2,4,0,16,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,621,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",0,0,0,1,2,0,0,2,0,3,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,647,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,651,                            if (val.get(Calendar.DATE) == 1) {,4,1,0,2,5,0,4,0,0,9,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,652,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,654,"                                val.add(Calendar.DATE, -15);",4,0,0,1,2,0,4,0,0,9,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,655,"                                val.add(Calendar.MONTH, 1);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,660,"                            val.add(fields[i][0], 1);",2,0,1,3,6,0,10,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,672,                    if (fields[i][0] == Calendar.DATE) {,4,1,1,3,7,0,0,0,0,9,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,676,                        offset = val.get(Calendar.DATE) - 1;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,679,                        if (offset >= 15) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,680,                            offset -= 15;,2,0,0,0,0,0,0,0,0,3,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,683,                        roundUp = offset > 7;,6,1,0,0,0,0,0,2,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,684,                        offsetSet = true;,2,0,0,0,0,0,0,0,0,4,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,688,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,6,2,1,3,7,0,0,0,0,12,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,691,                        offset = val.get(Calendar.HOUR_OF_DAY);,6,0,0,1,2,0,4,0,0,11,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,692,                        if (offset >= 12) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,693,                            offset -= 12;,6,4,0,0,0,0,12,0,0,23,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,695,                        roundUp = offset > 6;,4,1,0,0,0,0,0,0,0,6,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,696,                        offsetSet = true;,2,0,0,0,0,0,0,0,0,4,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,711,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,741,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,742,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,744,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,745,        gval.setTime(focus);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,746,"        return iterator(gval, rangeStyle);",2,1,0,1,2,1,6,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,774,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,775,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,2,0,6,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,777,        Calendar start = null;,2,0,0,0,0,0,0,2,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,778,        Calendar end = null;,2,0,0,0,0,0,0,2,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,779,        int startCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,780,        int endCutoff = Calendar.SATURDAY;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,781,        switch (rangeStyle) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,785,"                start = truncate(focus, Calendar.MONTH);",12,0,0,1,2,0,4,0,0,18,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,787,                end = (Calendar) start.clone();,2,0,0,2,4,0,4,2,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,788,"                end.add(Calendar.MONTH, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,789,"                end.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,791,                if (rangeStyle == RANGE_MONTH_MONDAY) {,4,1,0,1,3,0,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,792,                    startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,793,                    endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,801,"                start = truncate(focus, Calendar.DATE);",0,1,0,1,2,0,4,0,0,6,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,802,"                end = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,803,                switch (rangeStyle) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,806,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,808,                        startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,809,                        endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,810,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,812,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,4,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,813,                        endCutoff = startCutoff - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,814,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,816,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,6,1,0,1,2,0,4,0,0,12,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,817,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,820,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,822,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",2,1,0,1,2,0,0,2,0,7,87,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,824,        if (startCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,825,            startCutoff += 7;,4,0,0,0,0,0,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,827,        if (startCutoff > Calendar.SATURDAY) {,8,2,0,1,3,0,0,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,828,            startCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,830,        if (endCutoff < Calendar.SUNDAY) {,8,2,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,831,            endCutoff += 7;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,833,        if (endCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,834,            endCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,836,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,6,1,0,2,5,0,4,0,0,11,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,837,"            start.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,839,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,11,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,840,"            end.add(Calendar.DATE, 1);",6,0,0,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,842,"        return new DateIterator(start, end);",6,0,0,1,2,1,0,2,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,865,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,866,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,868,        if (focus instanceof Date) {,2,0,0,1,3,0,0,2,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,869,"            return iterator((Date) focus, rangeStyle);",2,0,0,2,4,1,4,2,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,870,        } else if (focus instanceof Calendar) {,0,0,0,1,4,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,871,"            return iterator((Calendar) focus, rangeStyle);",2,0,0,2,4,1,4,2,0,8,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,873,"            throw new ClassCastException(""Could not iterate based on "" + focus);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,891,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,892,            this.endFinal = endFinal;,4,0,0,0,0,0,10,0,0,15,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,893,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,894,"            spot.add(Calendar.DATE, -1);",6,0,0,1,2,3,8,2,0,20,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,895,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,903,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,912,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,6,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,913,                throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,915,"            spot.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,916,            return spot.clone();,0,0,0,1,2,1,4,0,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,926,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
