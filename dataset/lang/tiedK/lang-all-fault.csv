dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,2,1,0,1,2,2,2,0,1,7,44,6,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,1,1,0,1,3,2,0,0,0,5,42,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,1,1,0,1,3,2,0,0,0,5,43,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,6,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,1,7,50,6,0.04167,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",1,0,0,1,2,1,0,3,2,6,54,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",1,0,1,0,6,1,1,0,0,5,35,9,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,6,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",1,0,0,0,4,0,6,0,1,4,62,8,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,77,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,1,0,1,3,1,2,0,0,5,26,5,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1112,            zone = timeZone;,2,0,0,0,0,0,0,0,1,2,16,5,0.8,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,308,                if(!wasWhite) {,1,0,0,1,3,1,0,0,1,5,15,8,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,1,0,0,0,0,0,0,0,2,2,15,10,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,310,"                    regex.append(""\\s*+"");",0,0,0,1,2,0,2,0,1,4,22,11,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,            wasWhite= false;,1,0,0,0,0,0,0,0,2,2,16,6,0.0381,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,304,        boolean wasWhite= false;,1,0,0,0,0,1,0,0,1,3,24,5,0.03738,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,307,            if(Character.isWhitespace(c)) {,0,0,0,2,5,1,3,0,0,4,31,7,0.03738,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,2,1,0,2,6,1,3,0,1,7,42,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,2,1,1,1,4,0,3,0,1,7,40,8,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,2,1,0,1,3,1,0,0,2,6,27,6,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,1,0,1,0,4,3,0,0,0,4,32,5,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,1,0,2,1,6,65,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,1,6,1,3,1,2,7,85,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,1,0,0,1,4,0,2,2,0,5,35,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,0,0,0,1,2,1,3,0,0,4,23,5,0.0625,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,1,2,0,2,7,1,5,0,0,6,64,4,1.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",3,0,0,1,5,1,2,2,0,6,76,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,1,0,0,1,2,0,2,1,0,5,34,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,1,0,0,2,4,0,4,1,0,5,58,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,            },0,0,0,0,1,0,0,0,0,1,1,2,0.04348,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,83,"        int len = Character.codePointCount(input, 0, input.length());",1,0,0,1,4,1,5,0,0,5,61,5,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,102,            pos++;,1,0,0,0,0,0,0,0,1,2,6,6,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,94,                    if (pos < len - 2) {,2,2,0,1,3,1,0,0,0,5,20,10,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,97,                        pos++;,1,0,0,0,0,0,0,0,1,2,6,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,100,                pos--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,496,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",3,0,0,0,2,0,2,0,2,4,49,9,0.02222,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,495,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,0.02174,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,3,7,0,2,7,1,5,0,2,7,88,4,0.44444,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,            while(input.charAt(end) != ';') ,0,1,0,2,4,1,3,0,1,6,31,6,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,80,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,3,2,0,1,4,1,0,0,0,5,47,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,1,2,2,1,9,116,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,1,2,1,3,14,1,4,2,1,9,133,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,2,7,1,6,0,0,5,43,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,2,0,0,0,0,0,0,1,0,2,19,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",1,0,0,1,4,1,2,0,0,5,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,2,0,0,1,2,1,0,2,1,6,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,2,1,0,1,3,1,0,0,0,5,22,8,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,3,0,0,3,23,7,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,3,2,0,1,4,1,0,0,0,5,47,6,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,1,0,0,1,2,13,10,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,52,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,10,7,0,1,3,1,0,0,0,5,111,10,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,1,3,0,0,5,34,6,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,170,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,171,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1457,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,1,2,12,10,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,2,0,2,1,5,28,8,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,1,0,0,2,6,2,2,1,2,7,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,36,5,0.14286,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,1,0,0,1,3,4,0,6,4,6,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();",0,1,0,1,6,1,6,2,0,6,88,5,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,        return m.containsKey(value);,0,0,0,1,2,1,3,0,0,4,28,5,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,1,0,0,0,0,1,0,1,1,4,20,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,0,0,0,1,8,2,0,2,0,4,35,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,4.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,0,2,1,3,0,1,4,33,4,0.0303,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,1,6,1,5,0,1,5,60,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,203,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,1,1,0,1,3,1,0,0,0,5,15,8,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",1,0,0,1,4,1,2,0,0,5,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,2,3,0,2,5,1,2,0,1,7,42,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,0,0,0,1,2,0,2,0,1,4,16,13,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,0,0,0,1,2,0,2,0,1,4,15,13,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",0,0,0,0,2,1,2,0,2,4,41,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,0,2,0,4,0,1,3,55,6,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);",0,0,0,0,2,0,3,0,2,3,39,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);",0,0,0,0,2,0,3,0,2,3,38,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,1,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,7,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,1,0,0,1,2,0,3,0,1,5,27,6,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.02222,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,1,0,0,1,2,2,0,1,1,6,38,5,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,1,0,0,0,0,1,0,0,0,2,15,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,8,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",3,0,0,0,2,1,0,1,2,5,28,6,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,6,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,8,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,285,        if (locale != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",3,0,0,0,2,1,0,1,2,5,28,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,292,            if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,0,0,0,1,2,0,3,0,0,3,14,13,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,3,1,0,1,3,1,0,0,0,5,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,1,0,6,0,2,0,0,3,25,15,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,8,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,1,0,0,1,2,0,2,0,1,5,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,2,0,0,0,0,1,0,0,1,3,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,3,0,0,4,44,5,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,0,2,0,5,0,0,2,38,9,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,6,1,0,1,3,2,0,0,1,6,51,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,1,0,0,0,3,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,922,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",1,0,0,1,4,0,4,0,1,5,63,18,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,926,                            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,927,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,0,5,1,4,0,0,3,46,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",3,0,0,0,2,0,4,0,2,4,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",3,0,0,0,2,0,4,0,2,4,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",3,0,0,0,2,0,4,0,2,4,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",3,0,0,0,2,0,4,0,2,4,63,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",3,0,0,0,2,0,4,0,2,4,60,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,0,2,0,3,0,1,5,34,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,1,0,0,1,2,1,3,0,0,5,30,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,1,0,0,1,2,1,3,0,0,5,34,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,2,1,0,1,3,1,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,1,0,0,0,0,0,0,0,1,2,11,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,1,0,0,0,3,36,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,438,"            end.add( field, newdiff );",0,0,0,0,2,0,4,0,0,2,26,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,3,1,0,2,4,1,0,1,0,6,44,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,204,        if (iToString == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,1,0,0,2,4,0,3,1,1,6,64,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",2,1,0,1,6,0,2,0,6,6,65,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,208,        return iToString;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,1,0,0,0,0,1,0,0,1,3,24,5,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,5,1,0,1,3,2,0,0,1,6,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,4,1,1,1,5,2,0,0,1,7,44,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,1,1,1,1,7,1,0,0,0,6,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,2,1,0,1,3,1,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,0,0,1,2,7,9,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",1,1,1,1,12,0,4,0,0,6,54,7,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,1,0,0,0,5,4,0,0,3,4,39,2,0.05,1,1,-1
