dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,0,2,2,23,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,2,0,0,0,0,0,0,0,2,2,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,3,1,0,1,4,1,0,0,2,6,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,1,0,0,0,0,1,0,0,0,2,8,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,2,7,2,0,0,0,5,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,1,1,0,1,3,1,0,0,0,5,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,2,6,1,0,0,1,6,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,2,0,0,0,5,39,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,1,1,0,1,3,1,0,0,0,5,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,2,0,0,0,0,0,0,0,2,2,7,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,2,0,0,0,0,0,0,0,1,2,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,3,2,0,1,2,0,0,0,1,5,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,1,1,0,1,3,1,0,0,0,5,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,1,0,0,1,6,33,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,2,7,1,6,0,0,5,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,1,1,0,1,3,1,0,0,0,5,23,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,1,1,0,1,3,1,0,0,0,5,22,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",2,0,0,0,2,2,0,1,1,5,44,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,1,0,0,0,0,1,0,0,0,2,17,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,1,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,125,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,107,    private transient int hashCode = 0;,1,0,0,0,0,3,0,0,2,3,35,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,111,    private transient String toString = null;,1,0,0,0,0,2,0,1,2,4,41,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,115,    private transient String toProperString = null;,1,0,0,0,0,2,0,1,2,4,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,126,        this.numerator = numerator;,2,0,0,0,0,1,0,0,1,3,27,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,127,        this.denominator = denominator;,2,0,0,0,0,1,0,0,1,3,31,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,128,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,48,"    public static final Fraction ZERO = new Fraction(0, 1);",1,0,0,0,2,4,0,2,4,5,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,52,"    public static final Fraction ONE = new Fraction(1, 1);",1,0,0,0,2,4,0,2,4,5,54,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,56,"    public static final Fraction ONE_HALF = new Fraction(1, 2);",1,0,0,0,2,4,0,2,4,5,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,60,"    public static final Fraction ONE_THIRD = new Fraction(1, 3);",1,0,0,0,2,4,0,2,4,5,60,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,64,"    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",1,0,0,0,2,4,0,2,4,5,61,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,68,"    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",1,0,0,0,2,4,0,2,4,5,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,72,"    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",1,0,0,0,2,4,0,2,4,5,63,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,76,"    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",1,0,0,0,2,4,0,2,4,5,65,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,80,"    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",1,0,0,0,2,4,0,2,4,5,60,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,84,"    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",1,0,0,0,2,4,0,2,4,5,61,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,88,"    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",1,0,0,0,2,4,0,2,4,5,63,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,92,"    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",1,0,0,0,2,4,0,2,4,5,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,143,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,2,0,1,2,5,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,148,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,2,0,1,2,5,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,173,        if (denominator == 0) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,174,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,2,0,1,2,5,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,176,        if (denominator < 0) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,177,"            throw new ArithmeticException(""The denominator must not be negative"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,179,        if (numerator < 0) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,180,"            throw new ArithmeticException(""The numerator must not be negative"");",0,0,0,1,2,2,0,1,2,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,183,        if (whole < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,184,            numeratorValue = whole * (long)denominator - numerator;,4,2,0,1,2,1,0,0,1,6,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,186,            numeratorValue = whole * (long)denominator + numerator;,4,2,0,1,2,1,0,0,1,6,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,188,        if (numeratorValue < Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,190,"            throw new ArithmeticException(""Numerator too large to represent as an Integer."");",0,0,0,1,2,2,0,1,2,5,81,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,192,"        return new Fraction((int) numeratorValue, denominator);",2,0,0,1,4,3,0,1,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,210,        if (denominator == 0) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,211,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,2,0,1,2,5,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,213,        if (numerator==0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,214,            return ZERO; // normalize zero.,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,217,        if (denominator==Integer.MIN_VALUE && (numerator&1)==0) {,4,4,0,2,5,1,0,0,0,5,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,218,            numerator/=2; denominator/=2;,2,0,0,0,0,0,0,0,2,2,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,220,        if (denominator < 0) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,221,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,223,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,2,0,1,2,5,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,225,            numerator = -numerator;,2,0,0,0,0,0,0,0,2,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,226,            denominator = -denominator;,2,0,0,0,0,0,0,0,2,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,229,"        int gcd = greatestCommonDivisor(numerator, denominator);",1,0,0,0,2,1,3,0,1,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,230,        numerator /= gcd;,2,0,0,0,0,0,0,0,1,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,231,        denominator /= gcd;,2,0,0,0,0,0,0,0,1,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,232,"        return new Fraction(numerator, denominator);",2,0,0,0,2,2,0,1,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,250,        int sign = (value < 0 ? -1 : 1);,2,1,0,1,2,1,0,0,1,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,251,        value = Math.abs(value);,1,0,0,1,2,0,3,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,252,        if (value  > Integer.MAX_VALUE || Double.isNaN(value)) {,3,2,0,2,5,1,3,0,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,253,            throw new ArithmeticException,0,0,0,0,0,2,0,1,1,3,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,256,        int wholeNumber = (int) value;,2,0,0,1,2,2,0,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,257,        value -= wholeNumber;,2,0,0,0,0,0,0,0,1,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,259,        int numer0 = 0;  // the pre-previous,1,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,260,        int denom0 = 1;  // the pre-previous,1,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,261,        int numer1 = 1;  // the previous,1,0,0,0,0,1,0,0,0,2,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,262,        int denom1 = 0;  // the previous,1,0,0,0,0,1,0,0,0,2,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,263,"        int numer2 = 0;  // the current, setup in calculation",1,0,0,0,0,1,0,0,0,2,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,264,"        int denom2 = 0;  // the current, setup in calculation",1,0,0,0,0,1,0,0,0,2,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,265,        int a1 = (int) value;,2,0,0,1,2,2,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,266,        int a2 = 0;,1,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,267,        double x1 = 1;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,268,        double x2 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,269,        double y1 = value - a1;,3,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,270,        double y2 = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,271,"        double delta1, delta2 = Double.MAX_VALUE;",4,0,0,0,0,1,0,0,0,2,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,273,        int i = 1;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,276,            delta1 = delta2;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,277,            a2 = (int) (x1 / y1);,3,1,0,1,4,1,0,0,1,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,278,            x2 = y1;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,279,            y2 = x1 - a2 * y1;,4,2,0,0,0,0,0,0,1,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,280,            numer2 = a1 * numer1 + numer0;,4,2,0,0,0,0,0,0,1,3,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,281,            denom2 = a1 * denom1 + denom0;,4,2,0,0,0,0,0,0,1,3,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,282,            fraction = (double) numer2 / (double) denom2;,3,1,0,1,4,2,0,0,1,6,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,283,            delta2 = Math.abs(value - fraction);,3,1,0,1,2,0,2,0,1,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,285,            a1 = a2;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,286,            x1 = x2;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,287,            y1 = y2;,2,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,288,            numer0 = numer1;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,289,            denom0 = denom1;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,290,            numer1 = numer2;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,291,            denom1 = denom2;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,292,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,294,        } while ((delta1 > delta2) && (denom2 <= 10000) && (denom2 > 0) && (i < 25));,5,5,0,2,11,1,0,0,0,5,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,295,        if (i == 25) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,296,"            throw new ArithmeticException(""Unable to convert double to fraction"");",0,0,0,1,2,3,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,298,"        return getReducedFraction((numer0 + wholeNumber * denom0) * sign, denom0);",4,3,0,1,4,1,2,0,1,7,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,320,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,321,"            throw new IllegalArgumentException(""The string must not be null"");",0,0,0,1,2,2,0,1,2,5,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,324,        int pos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,325,        if (pos >= 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,326,            return getFraction(Double.parseDouble(str));,0,0,0,2,4,1,4,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,330,        pos = str.indexOf(' ');,1,0,0,1,2,0,2,0,2,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,331,        if (pos > 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,332,"            int whole = Integer.parseInt(str.substring(0, pos));",1,0,0,0,4,1,5,0,0,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,333,            str = str.substring(pos + 1);,2,1,0,1,2,0,2,0,1,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,334,            pos = str.indexOf('/');,1,0,0,1,2,0,2,0,2,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,335,            if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,336,"                throw new NumberFormatException(""The fraction could not be parsed as the format X Y/Z"");",0,0,0,1,2,2,0,1,2,5,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,338,"                int numer = Integer.parseInt(str.substring(0, pos));",1,0,0,0,4,1,5,0,0,4,52,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,339,                int denom = Integer.parseInt(str.substring(pos + 1));,2,1,0,2,4,1,4,0,0,6,53,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,340,"                return getFraction(whole, numer, denom);",0,0,0,0,2,1,4,0,1,4,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,345,        pos = str.indexOf('/');,1,0,0,1,2,0,2,0,2,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,346,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,348,"            return getFraction(Integer.parseInt(str), 1);",0,0,0,1,4,1,4,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,350,"            int numer = Integer.parseInt(str.substring(0, pos));",1,0,0,0,4,1,5,0,0,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,351,            int denom = Integer.parseInt(str.substring(pos + 1));,2,1,0,2,4,1,4,0,0,6,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,352,"            return getFraction(numer, denom);",0,0,0,0,2,1,3,0,1,4,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,392,        return Math.abs(numerator % denominator);,2,1,0,1,2,1,2,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,407,        return numerator / denominator;,2,1,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,420,        return numerator / denominator;,2,1,0,0,0,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,430,        return (long) numerator / denominator;,2,1,0,1,2,2,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,440,        return ((float) numerator) / ((float) denominator);,2,1,0,2,8,3,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,450,        return ((double) numerator) / ((double) denominator);,2,1,0,2,8,3,0,0,0,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,466,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,1,4,1,5,0,1,6,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,467,        if (gcd == 1) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,468,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,470,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,0,2,1,2,0,0,5,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,483,        if (numerator == 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,484,"            throw new ArithmeticException(""Unable to invert zero."");",0,0,0,1,2,2,0,1,2,5,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,486,        if (numerator==Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,487,"            throw new ArithmeticException(""overflow: can't negate numerator"");",0,0,0,1,2,2,0,1,2,5,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,489,        if (numerator<0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,490,"            return new Fraction(-denominator, -numerator);",2,0,0,0,2,2,0,1,3,5,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,492,"            return new Fraction(denominator, numerator);",2,0,0,0,2,2,0,1,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,505,        if (numerator==Integer.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,506,"            throw new ArithmeticException(""overflow: too large to negate"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,508,"        return new Fraction(-numerator, denominator);",2,0,0,0,2,2,0,1,2,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,521,        if (numerator >= 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,522,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,524,        return negate();,0,0,0,1,2,1,1,0,1,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,540,        if (power == 1) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,541,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,542,        } else if (power == 0) {,1,1,0,1,4,2,0,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,543,            return ONE;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,544,        } else if (power < 0) {,1,1,0,1,4,2,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,545,            if (power==Integer.MIN_VALUE) { // MIN_VALUE can't be negated.,3,1,0,1,3,1,0,0,0,5,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,546,                return this.invert().pow(2).pow(-(power/2));,1,1,0,2,8,2,3,0,1,7,44,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,548,            return this.invert().pow(-power);,1,0,0,1,4,2,2,0,1,6,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,550,            Fraction f = this.multiplyBy(this);,1,0,0,1,2,2,1,1,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,551,            if ((power % 2) == 0) { // if even...,1,2,0,2,5,2,0,0,0,5,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,552,                return f.pow(power/2);,1,1,0,1,2,1,2,0,0,6,22,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,554,                return f.pow(power/2).multiplyBy(this);,1,1,0,1,4,2,3,0,0,6,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,583,            u/=2; v/=2; k++; // cast out twos.,3,0,0,0,0,0,0,0,3,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,586,"            throw new ArithmeticException(""overflow: gcd is 2^31"");",0,0,0,1,2,2,0,1,2,5,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,597,                t/=2; // cast out twos,1,0,0,0,0,0,0,0,1,2,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,626,        long m = ((long)x)*((long)y);,3,1,0,2,8,3,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,627,        if (m < Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,629,"            throw new ArithmeticException(""overflow: mul"");",0,0,0,1,2,2,0,1,2,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,631,        return (int)m;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,645,        long m = ((long)x)*((long)y);,3,1,0,2,8,3,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,646,        if (m > Integer.MAX_VALUE) {,3,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,647,"            throw new ArithmeticException(""overflow: mulPos"");",0,0,0,1,2,2,0,1,2,5,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,649,        return (int)m;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,662,        long s = (long)x+(long)y;,3,1,0,1,4,3,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,663,        if (s < Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,665,"            throw new ArithmeticException(""overflow: add"");",0,0,0,1,2,2,0,1,2,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,667,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,680,        long s = (long)x-(long)y;,3,1,0,1,4,3,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,681,        if (s < Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,683,"            throw new ArithmeticException(""overflow: add"");",0,0,0,1,2,2,0,1,2,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,685,        return (int)s;,1,0,0,1,2,2,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,699,"        return addSub(fraction, true /* add */);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,713,"        return addSub(fraction, false /* subtract */);",0,0,0,0,2,1,2,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,727,        if (fraction == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,728,"            throw new IllegalArgumentException(""The fraction must not be null"");",0,0,0,1,2,2,0,1,2,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,731,        if (numerator == 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,732,            return isAdd ? fraction : fraction.negate();,2,0,0,1,2,1,2,0,0,5,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,734,        if (fraction.numerator == 0) {,2,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,735,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,739,"        int d1 = greatestCommonDivisor(denominator, fraction.denominator);",3,0,0,0,2,1,2,0,1,5,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,740,        if (d1==1) {,1,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,742,"            int uvp = mulAndCheck(numerator, fraction.denominator);",3,0,0,0,2,1,2,0,1,5,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,743,"            int upv = mulAndCheck(fraction.numerator, denominator);",3,0,0,0,2,1,2,0,1,5,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,744,            return new Fraction,0,0,0,0,0,2,0,1,1,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,751,        BigInteger uvp = BigInteger.valueOf(numerator),1,0,0,1,2,0,3,1,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,753,        BigInteger upv = BigInteger.valueOf(fraction.numerator),3,0,0,1,2,0,2,1,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,755,        BigInteger t = isAdd ? uvp.add(upv) : uvp.subtract(upv);,2,0,0,1,4,0,6,1,0,5,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,758,        int tmodd1 = t.mod(BigInteger.valueOf(d1)).intValue();,1,0,0,2,6,1,6,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,759,"        int d2 = (tmodd1==0)?d1:greatestCommonDivisor(tmodd1, d1);",3,1,0,1,4,1,3,0,1,7,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,762,        BigInteger w = t.divide(BigInteger.valueOf(d2));,1,0,0,2,4,0,5,1,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,763,        if (w.bitLength() > 31) {,0,1,0,2,5,1,2,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,764,            throw new ArithmeticException,0,0,0,0,0,2,0,1,1,3,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,767,        return new Fraction,0,0,0,0,0,2,0,1,1,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,783,        if (fraction == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,784,"            throw new IllegalArgumentException(""The fraction must not be null"");",0,0,0,1,2,2,0,1,2,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,786,        if (numerator == 0 || fraction.numerator == 0) {,3,3,0,1,3,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,787,            return ZERO;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,791,"        int d1 = greatestCommonDivisor(numerator, fraction.denominator);",3,0,0,0,2,1,2,0,1,5,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,792,"        int d2 = greatestCommonDivisor(fraction.numerator, denominator);",3,0,0,0,2,1,2,0,1,5,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,793,        return getReducedFraction,0,0,0,0,0,1,1,0,1,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,809,        if (fraction == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,810,"            throw new IllegalArgumentException(""The fraction must not be null"");",0,0,0,1,2,2,0,1,2,5,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,812,        if (fraction.numerator == 0) {,2,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,813,"            throw new ArithmeticException(""The fraction to divide by must not be zero"");",0,0,0,1,2,2,0,1,2,5,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,815,        return multiplyBy(fraction.invert());,0,0,0,2,4,1,3,0,1,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,830,        if (obj == this) {,1,1,0,1,3,2,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,831,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,833,        if (obj instanceof Fraction == false) {,1,1,0,1,3,2,0,1,1,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,834,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,836,        Fraction other = (Fraction) obj;,2,0,0,1,2,0,0,2,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,837,        return (getNumerator() == other.getNumerator() &&,0,2,0,1,5,1,3,0,1,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,847,        if (hashCode == 0) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,849,            hashCode = 37 * (37 * 17 + getNumerator()) + getDenominator();,1,4,0,2,6,0,2,0,3,6,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,851,        return hashCode;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,867,        Fraction other = (Fraction) object;,2,0,0,1,2,0,0,2,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,868,        if (this==other) {,1,1,0,1,3,2,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,869,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,871,        if (numerator == other.numerator && denominator == other.denominator) {,6,3,0,1,3,1,0,0,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,872,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,876,        long first = (long) numerator * (long) other.denominator;,4,1,0,1,4,3,0,0,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,877,        long second = (long) other.numerator * (long) denominator;,4,1,0,1,4,3,0,0,0,5,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,878,        if (first == second) {,2,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,879,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,880,        } else if (first < second) {,2,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,881,            return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,883,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,895,        if (toString == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,896,            toString = new StringBuffer(32),1,0,0,1,2,1,0,1,2,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,901,        return toString;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,914,        if (toProperString == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,915,            if (numerator == 0) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,916,"                toProperString = ""0"";",1,0,0,0,0,0,0,0,2,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,917,            } else if (numerator == denominator) {,2,1,0,1,4,2,0,0,0,5,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,918,"                toProperString = ""1"";",1,0,0,0,0,0,0,0,2,2,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,919,            } else if (numerator == -1 * denominator) {,2,2,0,1,4,2,0,0,1,6,43,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,920,"                toProperString = ""-1"";",1,0,0,0,0,0,0,0,2,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,921,            } else if ((numerator>0?-numerator:numerator) < -denominator) {,4,2,0,2,6,2,0,0,2,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,926,                int properNumerator = getProperNumerator();,1,0,0,1,2,1,1,0,1,6,43,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,927,                if (properNumerator == 0) {,1,1,0,1,3,1,0,0,0,5,27,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,928,                    toProperString = Integer.toString(getProperWhole());,1,0,0,2,4,0,3,0,2,5,52,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,930,                    toProperString = new StringBuffer(32),1,0,0,1,2,1,0,1,2,6,37,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,935,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,936,                toProperString = new StringBuffer(32),1,0,0,1,2,1,0,1,2,6,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,941,        return toProperString;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
