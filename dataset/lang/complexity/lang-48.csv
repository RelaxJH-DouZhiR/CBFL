dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,1,0,0,1,2,0,3,0,1,5,27,6,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,1,0,0,1,2,0,2,1,0,5,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.02222,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,1,0,0,0,0,2,0,0,0,2,21,5,0.01639,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,1,0,0,1,3,1,0,0,1,5,24,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,1,0,0,0,0,2,0,0,2,3,32,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,125,"        return reflectionEquals(lhs, rhs, false, null, null);",0,0,0,0,2,1,3,0,2,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,148,"        return reflectionEquals(lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,1,4,1,6,0,1,5,96,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,171,"        return reflectionEquals(lhs, rhs, false, null, excludeFields);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,195,"        return reflectionEquals(lhs, rhs, testTransients, null, null);",0,0,0,0,2,1,4,0,1,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,224,"        return reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);",0,0,0,0,2,1,5,0,1,4,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,255,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,256,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,258,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,259,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,265,        Class lhsClass = lhs.getClass();,1,0,0,1,2,0,2,1,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,266,        Class rhsClass = rhs.getClass();,1,0,0,1,2,0,2,1,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,268,        if (lhsClass.isInstance(rhs)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,269,            testClass = lhsClass;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,270,            if (!rhsClass.isInstance(lhs)) {,0,0,0,2,5,1,3,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,272,                testClass = rhsClass;,2,0,0,0,0,0,0,0,1,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,274,        } else if (rhsClass.isInstance(lhs)) {,0,0,0,2,6,2,3,0,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,275,            testClass = rhsClass;,2,0,0,0,0,0,0,0,1,2,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,276,            if (!lhsClass.isInstance(rhs)) {,0,0,0,2,5,1,3,0,1,5,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,278,                testClass = lhsClass;,2,0,0,0,0,0,0,0,1,2,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,282,            return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,284,        EqualsBuilder equalsBuilder = new EqualsBuilder();,1,0,0,1,2,1,0,2,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,286,"            reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);",0,0,0,0,2,0,7,0,1,3,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,287,            while (testClass.getSuperclass() != null && testClass != reflectUpToClass) {,2,3,0,2,5,1,2,0,0,6,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,288,                testClass = testClass.getSuperclass();,1,0,0,1,2,0,2,0,1,5,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,289,"                reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);",0,0,0,0,2,0,7,0,1,3,84,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,298,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,291,        } catch (IllegalArgumentException e) {,1,0,0,1,4,1,0,1,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,297,            return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,299,        return equalsBuilder.isEquals();,0,0,0,1,2,1,2,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,320,        Field[] fields = clazz.getDeclaredFields();,1,0,0,1,4,0,2,1,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,321,        List excludedFieldList = excludeFields != null ? Arrays.asList(excludeFields) : Collections.EMPTY_LIST;,4,1,0,1,2,0,3,1,0,6,103,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,322,"        AccessibleObject.setAccessible(fields, true);",0,0,0,0,2,0,3,0,1,3,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,323,        for (int i = 0; i < fields.length && builder.isEquals; i++) {,7,2,0,1,3,2,0,0,1,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,324,            Field f = fields[i];,1,0,1,0,2,0,0,1,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,325,            if (!excludedFieldList.contains(f.getName()),0,1,0,2,5,1,4,0,1,6,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,330,"                    builder.append(f.get(lhs), f.get(rhs));",0,0,0,1,6,0,8,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,335,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,331,                } catch (IllegalAccessException e) {,1,0,0,1,4,1,0,1,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,334,"                    throw new InternalError(""Unexpected IllegalAccessException"");",0,0,0,1,2,2,0,1,2,5,61,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,338,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,350,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,351,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,353,        isEquals = superEquals;,2,0,0,0,0,0,0,0,1,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,354,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,369,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,375,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,376,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,382,        } else if (lhs.getClass() != rhs.getClass()) {,0,1,0,2,8,2,4,0,0,5,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,384,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,388,        else if (lhs instanceof long[]) {,1,0,0,1,5,4,0,0,0,4,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,389,"            append((long[]) lhs, (long[]) rhs);",2,0,0,1,10,2,1,0,1,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,390,        } else if (lhs instanceof int[]) {,1,0,0,1,6,4,0,0,0,4,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,391,"            append((int[]) lhs, (int[]) rhs);",2,0,0,1,10,2,1,0,1,6,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,392,        } else if (lhs instanceof short[]) {,1,0,0,1,6,4,0,0,0,4,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,393,"            append((short[]) lhs, (short[]) rhs);",2,0,0,1,10,2,1,0,1,6,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,394,        } else if (lhs instanceof char[]) {,1,0,0,1,6,4,0,0,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,395,"            append((char[]) lhs, (char[]) rhs);",2,0,0,1,10,2,1,0,1,6,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,396,        } else if (lhs instanceof byte[]) {,1,0,0,1,6,4,0,0,0,4,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,397,"            append((byte[]) lhs, (byte[]) rhs);",2,0,0,1,10,2,1,0,1,6,35,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,398,        } else if (lhs instanceof double[]) {,1,0,0,1,6,4,0,0,0,4,37,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,399,"            append((double[]) lhs, (double[]) rhs);",2,0,0,1,10,2,1,0,1,6,39,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,400,        } else if (lhs instanceof float[]) {,1,0,0,1,6,4,0,0,0,4,36,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,401,"            append((float[]) lhs, (float[]) rhs);",2,0,0,1,10,2,1,0,1,6,37,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,402,        } else if (lhs instanceof boolean[]) {,1,0,0,1,6,4,0,0,0,4,38,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,403,"            append((boolean[]) lhs, (boolean[]) rhs);",2,0,0,1,10,2,1,0,1,6,41,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,406,"            append((Object[]) lhs, (Object[]) rhs);",2,0,0,1,10,0,1,2,1,6,39,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,423,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,424,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,426,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,427,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,438,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,439,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,441,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,442,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,453,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,454,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,456,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,457,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,468,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,469,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,471,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,472,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,483,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,484,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,486,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,487,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,504,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,505,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,507,"        return append(Double.doubleToLongBits(lhs), Double.doubleToLongBits(rhs));",0,0,0,1,6,1,7,0,1,5,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,524,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,525,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,527,"        return append(Float.floatToIntBits(lhs), Float.floatToIntBits(rhs));",0,0,0,1,6,1,7,0,1,5,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,538,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,539,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,541,        isEquals = (lhs == rhs);,3,1,0,1,2,0,0,0,1,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,542,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,556,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,557,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,559,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,560,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,562,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,563,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,564,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,566,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,567,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,568,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,570,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,571,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,573,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,587,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,588,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,590,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,591,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,593,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,594,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,595,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,597,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,598,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,599,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,601,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,602,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,604,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,618,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,619,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,621,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,622,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,624,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,625,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,626,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,628,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,629,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,630,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,632,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,633,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,635,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,649,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,650,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,652,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,653,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,655,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,656,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,657,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,659,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,660,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,661,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,663,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,664,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,666,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,680,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,681,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,683,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,684,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,686,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,687,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,688,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,690,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,691,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,692,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,694,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,695,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,697,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,711,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,712,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,714,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,715,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,717,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,718,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,719,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,721,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,722,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,723,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,725,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,726,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,728,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,742,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,743,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,745,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,746,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,748,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,749,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,750,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,752,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,753,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,754,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,756,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,757,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,759,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,773,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,774,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,776,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,777,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,779,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,780,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,781,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,783,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,784,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,785,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,787,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,788,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,790,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,804,        if (isEquals == false) {,1,1,0,1,3,1,0,0,1,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,805,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,807,        if (lhs == rhs) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,808,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,810,        if (lhs == null || rhs == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,811,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,812,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,814,        if (lhs.length != rhs.length) {,4,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,815,            this.setEquals(false);,0,0,0,1,2,1,1,0,1,5,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,816,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,818,        for (int i = 0; i < lhs.length && isEquals; ++i) {,6,2,0,1,3,2,0,0,1,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,819,"            append(lhs[i], rhs[i]);",0,0,1,0,6,0,1,0,1,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,821,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,841,        this.isEquals = isEquals;,2,0,0,0,0,1,0,0,1,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,842,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
