dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,1,0,0,1,4,0,3,1,0,5,56,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",2,0,0,0,4,2,4,1,2,6,93,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,1,1,0,1,3,1,0,0,0,5,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",1,0,1,0,4,0,3,0,0,4,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,1,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,250,"        Date date= parse(source, new ParsePosition(0));",1,0,0,1,4,1,2,2,2,7,47,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,        if(date==null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,260,        return date;,1,0,0,0,0,1,0,0,0,2,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,741,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,2,6,0,7,0,1,4,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,742,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,276,        int offset= pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,1,0,0,2,4,0,5,1,0,5,64,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,278,        if(!matcher.lookingAt()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",1,0,0,0,2,0,4,1,0,4,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,283,        cal.clear();,0,0,0,1,2,0,2,0,0,3,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,285,        for(int i=0; i<strategies.length;) {,4,1,0,1,3,2,0,0,0,5,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,286,            Strategy strategy= strategies[i++];,2,0,1,0,2,0,0,1,1,5,35,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,1,4,1,6,0,0,4,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,288,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,289,        pos.setIndex(offset+matcher.end());,1,1,0,2,4,0,4,0,0,5,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,290,        return cal.getTime();,0,0,0,1,2,1,2,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,395,"                fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays());",1,0,0,1,6,0,5,0,2,5,83,7,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,396,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,555,            return DAY_OF_WEEK_STRATEGY;,1,0,0,0,0,1,0,0,0,2,28,5,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,754,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,755,        },0,0,0,0,1,0,0,0,0,1,1,2,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,747,        static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();,1,0,0,1,2,3,0,2,3,6,68,3,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,762,            return 2;,0,0,0,0,0,1,0,0,0,1,9,2,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,213,                    rule = UnpaddedMonthField.INSTANCE;,3,0,0,0,0,0,0,0,1,2,35,11,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,215,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,379,        Integer fieldInt = Integer.valueOf(field);,1,0,0,1,2,0,3,1,0,5,42,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,380,        KeyValue[] fieldKeyValues= nameValues.get(fieldInt);,1,0,0,1,4,0,3,1,0,5,52,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,381,        if(fieldKeyValues==null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,382,            DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale);,1,0,0,1,2,0,3,1,0,5,65,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,383,            switch(field) {,1,0,0,1,3,1,0,0,0,4,15,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,406,"            KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues);",1,0,0,0,4,0,4,1,0,4,68,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,407,            if(prior!=null) {,1,1,0,1,3,1,0,0,0,5,17,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,411,        return fieldKeyValues;,1,0,0,0,0,1,0,0,0,2,22,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,434,        KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];,1,1,0,1,8,1,4,2,2,8,78,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,435,"        copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues);",0,0,0,0,4,0,6,0,2,3,71,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,436,"        Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR);",0,0,0,0,2,0,4,0,0,2,52,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,437,        return fieldKeyValues;,1,0,0,0,0,1,0,0,0,2,22,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,446,        int count= 0;,1,0,0,0,0,1,0,0,0,2,13,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,447,        if(values!=null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,448,            for(String value : values) {,2,0,0,1,3,1,0,1,0,5,28,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,449,                if(value.length()>0) {,0,1,0,2,5,1,2,0,0,5,22,8,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,450,                    ++count;,1,0,0,0,0,0,0,0,1,2,8,10,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,454,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,465,        if(values!=null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,466,            for(int i= 0; i<values.length; ++i) {,5,1,0,1,3,2,0,0,1,6,37,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,467,                String value= values[i];,1,0,1,0,2,0,0,1,0,4,24,8,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,468,                if(value.length()>0) {,0,1,0,2,5,1,2,0,0,5,22,8,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,469,"                    fieldKeyValues[offset++]= new KeyValue(value, i);",3,0,1,0,4,1,0,1,3,6,49,10,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,473,        return offset;,1,0,0,0,0,1,0,0,0,2,14,4,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,357,"        public KeyValue(String key, int value) {",3,0,0,0,3,2,0,1,1,5,40,3,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,358,            this.key= key;,2,0,0,0,0,1,0,0,1,3,14,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,359,            this.value= value;,2,0,0,0,0,1,0,0,1,3,18,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,360,        },0,0,0,0,1,0,0,0,0,1,1,2,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,369,            return left.key.compareToIgnoreCase(right.key);,4,0,0,1,2,1,1,0,0,5,47,9,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,672,            regex.append('(');,0,0,0,1,3,0,2,0,1,4,18,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,673,            for(KeyValue textKeyValue : parser.getDisplayNames(field)) {,1,0,0,2,5,1,3,1,0,6,60,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,674,"                escapeRegex(regex, textKeyValue.key, false).append('|');",2,0,0,1,4,0,3,0,3,5,56,8,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,676,"            regex.setCharAt(regex.length()-1, ')');",0,1,0,1,5,0,4,0,1,5,39,6,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,677,            return true;,0,0,0,0,0,1,0,0,1,2,12,5,0.06349,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,308,                if(!wasWhite) {,1,0,0,1,3,1,0,0,1,5,15,8,0.05263,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,1,0,0,0,0,0,0,0,2,2,15,10,0.05263,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,310,"                    regex.append(""\\s*+"");",0,0,0,1,2,0,2,0,1,4,22,11,0.05263,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,472,        return parser.parse(source);,0,0,0,1,2,1,3,0,0,4,28,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,145,            collector.add(currentStrategy);,0,0,0,1,2,0,3,0,0,3,31,7,0.03846,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,            wasWhite= false;,1,0,0,0,0,0,0,0,2,2,16,6,0.0381,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,315,            switch(c) {,1,0,0,1,3,1,0,0,0,4,11,6,0.0381,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,340,            regex.append(c);,0,0,0,1,2,0,3,0,0,3,16,7,0.0381,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,565,            return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY;,2,1,0,1,2,1,2,0,0,6,75,6,0.0381,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,621,            char c= formatField.charAt(0);,1,0,0,1,2,1,2,0,0,5,30,6,0.03774,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,622,            if(c=='\'') {,1,1,0,1,3,1,0,0,1,6,13,5,0.03774,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,625,            return Character.isDigit(c);,0,0,0,1,2,1,3,0,0,4,28,6,0.03774,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,304,        boolean wasWhite= false;,1,0,0,0,0,1,0,0,1,3,24,5,0.03738,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,305,        for(int i= 0; i<value.length(); ++i) {,3,1,0,2,5,2,2,0,1,7,38,4,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,306,            char c= value.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,307,            if(Character.isWhitespace(c)) {,0,0,0,2,5,1,3,0,0,4,31,7,0.03738,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,342,        return regex;,1,0,0,0,0,1,0,0,0,2,13,4,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,551,            return new CopyQuotedStrategy(formatField);,1,0,0,1,2,2,0,1,1,6,43,5,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,68,"public class FastDateParser implements DateParser, Serializable {",1,0,0,0,1,3,0,2,1,5,65,1,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,612,        CopyQuotedStrategy(String formatField) {,2,0,0,1,3,0,0,1,0,4,40,3,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,613,            this.formatField= formatField;,2,0,0,0,0,1,0,0,1,3,30,5,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,614,        },0,0,0,0,1,0,0,0,0,1,1,2,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,633,"            escapeRegex(regex, formatField, true);",0,0,0,0,2,0,3,0,2,3,38,5,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,634,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.03738,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,727,            if(parser.isNextNumber()) {,0,0,0,2,5,1,2,0,0,4,27,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,731,"                regex.append(""(\\p{IsNd}++)"");",0,0,0,2,6,0,2,0,1,4,30,8,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,733,            return true;,0,0,0,0,0,1,0,0,1,2,12,5,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,104,"    protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {",4,0,0,0,3,1,0,3,1,5,76,2,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,105,        this.pattern = pattern;,2,0,0,0,0,1,0,0,1,3,23,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,106,        this.timeZone = timeZone;,2,0,0,0,0,1,0,0,1,3,25,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,107,        this.locale = locale;,2,0,0,0,0,1,0,0,1,3,21,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,108,        init();,0,0,0,1,2,0,1,0,1,4,7,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,109,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,116,"        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",3,0,0,1,4,0,5,0,1,5,68,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,118,"        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();",1,0,0,1,4,1,0,3,2,6,57,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,120,        StringBuilder regex= new StringBuilder();,1,0,0,1,2,1,0,2,1,6,41,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,121,        List<Strategy> collector = new ArrayList<Strategy>();,1,0,0,1,2,1,0,4,1,6,53,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,123,        Matcher patternMatcher= formatPattern.matcher(pattern);,1,0,0,1,2,0,3,1,0,5,55,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,124,        if(!patternMatcher.lookingAt()) {,0,0,0,2,5,1,2,0,1,5,33,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,128,        currentFormatField= patternMatcher.group();,1,0,0,1,2,0,2,0,1,5,43,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,129,        Strategy currentStrategy= getStrategy(currentFormatField);,1,0,0,1,2,0,2,1,1,6,58,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,131,"            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",0,0,0,1,6,0,6,0,0,3,72,7,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,132,            if(!patternMatcher.lookingAt()) {,0,0,0,2,5,1,2,0,1,5,33,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,133,                nextStrategy = null;,1,0,0,0,0,0,0,0,1,2,20,8,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,134,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,136,            String nextFormatField= patternMatcher.group();,1,0,0,1,2,0,2,1,0,5,47,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,137,            nextStrategy = getStrategy(nextFormatField);,1,0,0,1,2,0,2,0,2,5,44,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,138,"            if(currentStrategy.addRegex(this, regex)) {",0,0,0,0,5,2,3,0,0,3,43,7,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,139,                collector.add(currentStrategy);,0,0,0,1,2,0,3,0,0,3,31,9,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,141,            currentFormatField= nextFormatField;,2,0,0,0,0,0,0,0,1,2,36,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,142,            currentStrategy= nextStrategy;,2,0,0,0,0,0,0,0,1,2,30,6,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,143,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,144,"        if(currentStrategy.addRegex(this, regex)) {",0,0,0,0,5,2,3,0,0,3,43,5,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,147,        currentFormatField= null;,1,0,0,0,0,0,0,0,1,2,25,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,148,        strategies= collector.toArray(new Strategy[collector.size()]);,1,0,0,2,6,1,4,1,1,7,62,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,149,        parsePattern= Pattern.compile(regex.toString());,1,0,0,2,4,0,4,0,1,5,48,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,150,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,494,        return nextStrategy!=null && nextStrategy.isNumber();,1,2,0,1,2,1,2,0,0,6,53,4,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,544,        switch(formatField.charAt(0)) {,0,0,0,2,5,1,2,0,0,4,31,5,0.0367,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,860,    private static final Strategy MODULO_HOUR_OF_DAY_STRATEGY = new NumberStrategy(Calendar.HOUR_OF_DAY) {,3,0,0,1,3,4,0,2,4,6,102,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,710,        NumberStrategy(int field) {,2,0,0,1,3,1,0,0,0,4,27,3,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,711,             this.field= field;,2,0,0,0,0,1,0,0,1,3,18,5,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,712,        },0,0,0,0,1,0,0,0,0,1,1,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,76,"    private static final ConcurrentMap<Locale,TimeZoneStrategy> tzsCache=",1,0,0,0,0,3,0,3,3,4,69,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,79,"    static final Locale JAPANESE_IMPERIAL = new Locale(""ja"",""JP"",""JP"");",1,0,0,0,2,3,0,2,6,5,67,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,366,    private static final Comparator<KeyValue> IGNORE_CASE_COMPARATOR = new Comparator<KeyValue> () {,1,0,0,1,3,4,0,4,4,6,96,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,535,    private static final Pattern formatPattern= Pattern.compile(,1,0,0,0,1,3,2,1,3,6,60,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,754,    private static final Strategy ABBREVIATED_YEAR_STRATEGY = new NumberStrategy(Calendar.YEAR) {,3,0,0,1,3,4,0,2,4,6,93,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,842,    private static final Strategy ERA_STRATEGY = new TextStrategy(Calendar.ERA);,3,0,0,1,2,4,0,2,4,6,76,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,843,    private static final Strategy DAY_OF_WEEK_STRATEGY = new TextStrategy(Calendar.DAY_OF_WEEK);,3,0,0,1,2,4,0,2,4,6,92,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,844,    private static final Strategy AM_PM_STRATEGY = new TextStrategy(Calendar.AM_PM);,3,0,0,1,2,4,0,2,4,6,80,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,845,    private static final Strategy TEXT_MONTH_STRATEGY = new TextStrategy(Calendar.MONTH);,3,0,0,1,2,4,0,2,4,6,85,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,847,    private static final Strategy NUMBER_MONTH_STRATEGY = new NumberStrategy(Calendar.MONTH) {,3,0,0,1,3,4,0,2,4,6,90,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,853,    private static final Strategy LITERAL_YEAR_STRATEGY = new NumberStrategy(Calendar.YEAR);,3,0,0,1,2,4,0,2,4,6,88,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,854,    private static final Strategy WEEK_OF_YEAR_STRATEGY = new NumberStrategy(Calendar.WEEK_OF_YEAR);,3,0,0,1,2,4,0,2,4,6,96,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,855,    private static final Strategy WEEK_OF_MONTH_STRATEGY = new NumberStrategy(Calendar.WEEK_OF_MONTH);,3,0,0,1,2,4,0,2,4,6,98,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,856,    private static final Strategy DAY_OF_YEAR_STRATEGY = new NumberStrategy(Calendar.DAY_OF_YEAR);,3,0,0,1,2,4,0,2,4,6,94,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,857,    private static final Strategy DAY_OF_MONTH_STRATEGY = new NumberStrategy(Calendar.DAY_OF_MONTH);,3,0,0,1,2,4,0,2,4,6,96,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,858,    private static final Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY = new NumberStrategy(Calendar.DAY_OF_WEEK_IN_MONTH);,3,0,0,1,2,4,0,2,4,6,112,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,859,    private static final Strategy HOUR_OF_DAY_STRATEGY = new NumberStrategy(Calendar.HOUR_OF_DAY);,3,0,0,1,2,4,0,2,4,6,94,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,860,    private static final Strategy MODULO_HOUR_OF_DAY_STRATEGY = new NumberStrategy(Calendar.HOUR_OF_DAY) {,3,0,0,1,3,4,0,2,4,6,102,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,866,    private static final Strategy MODULO_HOUR_STRATEGY = new NumberStrategy(Calendar.HOUR) {,3,0,0,1,3,4,0,2,4,6,88,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,872,    private static final Strategy HOUR_STRATEGY = new NumberStrategy(Calendar.HOUR);,3,0,0,1,2,4,0,2,4,6,80,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,873,    private static final Strategy MINUTE_STRATEGY = new NumberStrategy(Calendar.MINUTE);,3,0,0,1,2,4,0,2,4,6,84,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,874,    private static final Strategy SECOND_STRATEGY = new NumberStrategy(Calendar.SECOND);,3,0,0,1,2,4,0,2,4,6,84,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,875,    private static final Strategy MILLISECOND_STRATEGY = new NumberStrategy(Calendar.MILLISECOND);,3,0,0,1,2,4,0,2,4,6,94,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,366,    private static final Comparator<KeyValue> IGNORE_CASE_COMPARATOR = new Comparator<KeyValue> () {,1,0,0,1,3,4,0,4,4,6,96,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,655,        TextStrategy(int field) {,2,0,0,1,3,1,0,0,0,4,25,3,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,656,            this.field= field;,2,0,0,0,0,1,0,0,1,3,18,5,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,657,        },0,0,0,0,1,0,0,0,0,1,1,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,754,    private static final Strategy ABBREVIATED_YEAR_STRATEGY = new NumberStrategy(Calendar.YEAR) {,3,0,0,1,3,4,0,2,4,6,93,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,847,    private static final Strategy NUMBER_MONTH_STRATEGY = new NumberStrategy(Calendar.MONTH) {,3,0,0,1,3,4,0,2,4,6,90,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,866,    private static final Strategy MODULO_HOUR_STRATEGY = new NumberStrategy(Calendar.HOUR) {,3,0,0,1,3,4,0,2,4,6,88,2,0.03604,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,235,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",6,1,0,0,2,1,0,1,2,6,84,7,0.02128,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,236,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.02128,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,165,"        return cache.getInstance(pattern, timeZone, locale);",0,0,0,0,2,1,5,0,0,3,52,5,0.02083,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,667,"        TextField(int field, String[] values) {",3,0,0,0,5,1,0,1,0,4,39,3,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,668,            mField = field;,2,0,0,0,0,0,0,0,1,2,15,5,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,669,            mValues = values;,2,0,0,0,0,0,0,0,1,2,17,5,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,670,        },0,0,0,0,1,0,0,0,0,1,1,2,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,677,            int max = 0;,1,0,0,0,0,1,0,0,0,2,12,6,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,678,            for (int i=mValues.length; --i >= 0; ) {,4,1,0,1,3,2,0,0,1,6,40,5,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,679,                int len = mValues[i].length();,1,0,1,1,4,1,1,0,0,6,30,8,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,680,                if (len > max) {,2,1,0,1,3,1,0,0,0,5,16,7,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,681,                    max = len;,2,0,0,0,0,0,0,0,1,2,10,9,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,683,            },0,0,0,0,1,0,0,0,0,1,1,2,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,684,            return max;,1,0,0,0,0,1,0,0,0,2,11,5,0.01852,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,208,                } else if (tokenLen == 3) {,1,1,0,1,4,2,0,0,0,5,27,8,0.01351,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,210,                } else if (tokenLen == 2) {,1,1,0,1,4,2,0,0,0,5,27,9,0.01351,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,206,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,275,                    rule = new CharacterLiteral(sub.charAt(0));,1,0,0,2,4,1,2,1,2,7,43,9,0.01205,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,599,        CharacterLiteral(char value) {,2,0,0,1,3,1,0,0,0,4,30,3,0.01205,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,600,            mValue = value;,2,0,0,0,0,0,0,0,1,2,15,5,0.01205,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,601,        },0,0,0,0,1,0,0,0,0,1,1,2,0.01205,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,608,            return 1;,0,0,0,0,0,1,0,0,0,1,9,2,0.01205,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,273,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,5,32,7,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,274,                if (sub.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,7,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,320,            buf.append('\'');,0,0,0,1,2,0,2,0,1,4,17,7,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,322,            boolean inLiteral = false;,1,0,0,0,0,1,0,0,1,3,26,7,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,324,            for (; i < length; i++) {,3,1,0,1,3,1,0,0,1,6,25,6,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,325,                c = pattern.charAt(i);,1,0,0,1,2,0,3,0,1,5,22,8,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,327,                if (c == '\'') {,1,1,0,1,3,1,0,0,1,6,16,8,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,335,                } else if (!inLiteral &&,1,1,0,0,2,2,0,0,1,5,24,9,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,337,                    i--;,1,0,0,0,0,0,0,0,1,2,4,11,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,338,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,340,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,0.0119,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,35,abstract class FormatCache<F extends Format> {,2,0,0,0,1,3,0,1,1,5,46,1,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,41,"    private final ConcurrentMap<MultipartKey, F> cInstanceCache ",1,0,0,0,0,2,0,3,2,4,59,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,171,    private static class MultipartKey {,1,0,0,0,1,3,0,0,2,4,35,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,70,        if (pattern == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,73,        if (timeZone == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,76,        if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,79,"        MultipartKey key = new MultipartKey(pattern, timeZone, locale);",4,0,0,0,2,1,0,2,1,5,63,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,80,        F format = cInstanceCache.get(key);,1,0,0,1,2,0,3,1,0,5,35,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,81,        if (format == null) {           ,1,1,0,1,3,1,0,0,0,5,21,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,82,"            format = createInstance(pattern, timeZone, locale);",1,0,0,0,2,0,4,0,2,4,51,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,83,"            F previousValue= cInstanceCache.putIfAbsent(key, format);",1,0,0,0,2,0,4,1,0,4,57,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,84,            if (previousValue != null) {,1,1,0,1,3,1,0,0,0,5,28,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,90,        return format;,1,0,0,0,0,1,0,0,0,2,14,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,368,"    protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {",4,0,0,0,3,1,0,3,1,5,76,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,369,"        printer= new FastDatePrinter(pattern, timeZone, locale);",4,0,0,0,2,1,0,1,2,5,56,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,370,"        parser= new FastDateParser(pattern, timeZone, locale);",4,0,0,0,2,1,0,1,2,5,54,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,371,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,88,    private static final FormatCache<FastDateFormat> cache= new FormatCache<FastDateFormat>() {,1,0,0,1,3,4,0,4,4,6,91,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,88,    private static final FormatCache<FastDateFormat> cache= new FormatCache<FastDateFormat>() {,1,0,0,1,3,4,0,4,4,6,91,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,91,"            return new FastDateFormat(pattern, timeZone, locale);",3,0,0,0,2,2,0,1,1,5,53,8,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,136,"    protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {",4,0,0,0,3,1,0,3,1,5,77,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,137,        mPattern = pattern;,2,0,0,0,0,0,0,0,1,2,19,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,138,        mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,139,        mLocale = locale;,2,0,0,0,0,0,0,0,1,2,17,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,141,        init();,0,0,0,1,2,0,1,0,1,4,7,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,142,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1067,"    private static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache =",1,0,0,0,0,2,0,3,2,4,80,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,148,        List<Rule> rulesList = parsePattern();,1,0,0,1,2,0,1,2,1,6,38,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,149,        mRules = rulesList.toArray(new Rule[rulesList.size()]);,1,0,0,2,6,1,4,1,1,7,55,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,151,        int len = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,152,        for (int i=mRules.length; --i >= 0; ) {,4,1,0,1,3,2,0,0,1,6,39,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,153,            len += mRules[i].estimateLength();,1,0,1,1,4,0,1,0,1,6,34,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,156,        mMaxLengthEstimate = len;,2,0,0,0,0,0,0,0,1,2,25,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,157,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,168,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,2,0,0,1,2,1,0,2,1,6,59,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,169,        List<Rule> rules = new ArrayList<Rule>();,1,0,0,1,2,1,0,4,1,6,41,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,171,        String[] ERAs = symbols.getEras();,1,0,0,1,4,0,2,1,0,5,34,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,172,        String[] months = symbols.getMonths();,1,0,0,1,4,0,2,1,0,5,38,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,173,        String[] shortMonths = symbols.getShortMonths();,1,0,0,1,4,0,2,1,0,5,48,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,174,        String[] weekdays = symbols.getWeekdays();,1,0,0,1,4,0,2,1,0,5,42,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,175,        String[] shortWeekdays = symbols.getShortWeekdays();,1,0,0,1,4,0,2,1,0,5,52,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,176,        String[] AmPmStrings = symbols.getAmPmStrings();,1,0,0,1,4,0,2,1,0,5,48,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,178,        int length = mPattern.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,179,        int[] indexRef = new int[1];,1,0,0,0,4,3,0,0,0,3,28,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,181,        for (int i = 0; i < length; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,182,            indexRef[0] = i;,1,0,1,0,2,0,0,0,1,4,16,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,183,"            String token = parseToken(mPattern, indexRef);",1,0,0,0,2,0,3,1,1,5,46,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,184,            i = indexRef[0];,1,0,1,0,2,0,0,0,1,4,16,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,186,            int tokenLen = token.length();,1,0,0,1,2,1,2,0,0,5,30,7,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,187,            if (tokenLen == 0) {,1,1,0,1,3,1,0,0,0,5,20,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,192,            char c = token.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,7,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,194,            switch (c) {,1,0,0,1,3,1,0,0,0,4,12,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,284,            rules.add(rule);,0,0,0,1,2,0,3,0,0,3,16,7,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,287,        return rules;,1,0,0,0,0,1,0,0,0,2,13,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,298,        StringBuilder buf = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,40,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,300,        int i = indexRef[0];,1,0,1,0,2,1,0,0,0,4,20,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,301,        int length = pattern.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,303,        char c = pattern.charAt(i);,1,0,0,1,2,1,3,0,0,5,27,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,304,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,1,0,0,4,6,51,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,307,            buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,7,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,309,            while (i + 1 < length) {,2,2,0,1,3,1,0,0,0,5,24,6,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,310,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,1,2,0,0,6,34,9,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,311,                if (peek == c) {,2,1,0,1,3,1,0,0,0,5,16,8,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,345,        indexRef[0] = i;,1,0,1,0,2,0,0,0,1,4,16,4,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,346,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.01176,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,179,        public MultipartKey(Object... keys) {,2,0,0,1,3,1,0,1,1,6,37,3,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,180,            this.keys = keys;,2,0,0,0,0,1,0,0,1,3,17,5,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,181,        },0,0,0,0,1,0,0,0,0,1,1,2,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,199,            if(hashCode==0) {,1,1,0,1,3,1,0,0,0,5,17,5,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,200,                int rc= 0;,1,0,0,0,0,1,0,0,0,2,10,8,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,201,                for(Object key : keys) {,2,0,0,1,3,1,0,1,0,5,24,7,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,202,                    if(key!=null) {,1,1,0,1,3,1,0,0,0,5,15,9,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,203,                        rc= rc*7 + key.hashCode();,2,2,0,1,2,0,2,0,1,6,26,11,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,206,                hashCode= rc;,2,0,0,0,0,0,0,0,1,2,13,7,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,208,            return hashCode;,1,0,0,0,0,1,0,0,0,2,16,5,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,44,"    private static final ConcurrentMap<MultipartKey, String> cDateTimeInstanceCache ",1,0,0,0,0,3,0,3,3,4,79,2,0.01163,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,863,            return iValue%24;,1,1,0,0,0,1,0,0,0,3,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,719,            return true;,0,0,0,0,0,1,0,0,1,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,728,"                regex.append(""(\\p{IsNd}{"").append(parser.getFieldWidth()).append(""}+)"");",0,0,0,3,14,0,6,0,2,4,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,750,            return iValue;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,125,"            throw new IllegalArgumentException(""Invalid pattern"");",0,0,0,1,2,2,0,1,2,5,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,159,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,167,        return timeZone;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,175,        return locale;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,193,        if (! (obj instanceof FastDateParser) ) {,1,0,0,2,5,2,0,1,1,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,194,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,196,        FastDateParser other = (FastDateParser) obj;,2,0,0,1,2,0,0,2,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,197,        return pattern.equals(other.pattern),2,1,0,1,2,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,209,        return pattern.hashCode() + 13 * (timeZone.hashCode() + 13 * locale.hashCode());,0,4,0,2,8,1,6,0,0,5,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,219,"        return ""FastDateParser["" + pattern + "","" + locale + "","" + timeZone.getID() + ""]"";",2,1,0,1,4,1,2,0,4,7,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,233,        in.defaultReadObject();,0,0,0,1,2,0,2,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,234,        init();,0,0,0,1,2,0,1,0,1,4,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,235,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,242,        return parse(source);,0,0,0,1,2,1,2,0,1,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,253,            if (locale.equals(JAPANESE_IMPERIAL)) {,0,0,0,2,5,1,3,0,0,4,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,254,                throw new ParseException(,0,0,0,0,1,2,0,1,1,4,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,258,"            throw new ParseException(""Unparseable date: \""""+source+""\"" does not match ""+parsePattern.pattern(), 0);",1,1,0,1,4,2,2,1,3,8,103,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,268,"        return parse(source, pos);",0,0,0,0,2,1,3,0,1,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,279,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,317,                if(unquote) {,1,0,0,1,3,1,0,0,0,4,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,318,                    if(++i==value.length()) {,1,1,0,2,5,1,2,0,1,7,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,319,                        return regex;,1,0,0,0,0,1,0,0,0,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,321,                    c= value.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,338,                regex.append('\\');,0,0,0,1,2,0,2,0,1,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,388,                Calendar c = Calendar.getInstance(locale);,1,0,0,1,2,0,3,1,0,5,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,390,"                String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale));",5,0,0,0,6,0,4,1,1,5,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,391,"                String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale));",5,0,0,0,6,0,4,1,1,5,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,392,"                fieldKeyValues= createKeyValues(longEras, shortEras);",1,0,0,0,2,0,3,0,2,4,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,393,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,398,"                fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null);",1,0,0,1,4,0,3,0,2,5,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,399,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,401,"                fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths());",1,0,0,1,6,0,5,0,2,5,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,402,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,404,"                throw new IllegalArgumentException(""Invalid field value ""+field);",1,1,0,1,2,2,0,1,2,7,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,408,                fieldKeyValues= prior;,2,0,0,0,0,0,0,0,1,2,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,415,        String[] eras = new String[era.size()]; // assume no gaps in entry values,1,0,0,1,6,1,2,2,0,6,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,416,"        for(Map.Entry<String, Integer> me : era.entrySet()) {",3,0,0,1,5,1,2,2,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,417,            int idx = me.getValue().intValue();,1,0,0,1,4,1,3,0,0,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,418,            final String key = me.getKey();,1,0,0,1,2,1,2,1,1,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,419,            if (key == null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,420,                throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,422,            eras[idx] = key;,1,0,1,0,2,0,0,0,1,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,423,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,424,        return eras;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,482,        int trial= twoDigitYear + thisYear - thisYear%100;,4,3,0,0,0,1,0,0,0,3,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,483,        if(trial < thisYear+20) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,484,            return trial;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,486,        return trial-100;,1,1,0,0,0,1,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,502,        return currentFormatField.length();,0,0,0,1,2,1,2,0,0,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,546,            if(formatField.length()>2) {,0,1,0,2,5,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,547,"                formatField= formatField.substring(1, formatField.length()-1);",1,1,0,1,4,0,4,0,1,6,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,553,            return DAY_OF_YEAR_STRATEGY;,1,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,557,            return DAY_OF_WEEK_IN_MONTH_STRATEGY;,1,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,559,            return ERA_STRATEGY;,1,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,561,            return MODULO_HOUR_OF_DAY_STRATEGY;,1,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,563,            return HOUR_STRATEGY;,1,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,567,            return MILLISECOND_STRATEGY;,1,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,569,            return WEEK_OF_MONTH_STRATEGY;,1,0,0,0,0,1,0,0,0,2,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,571,            break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,573,            return AM_PM_STRATEGY;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,575,            return DAY_OF_MONTH_STRATEGY;,1,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,577,            return MODULO_HOUR_STRATEGY;,1,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,579,            return HOUR_OF_DAY_STRATEGY;,1,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,581,            return MINUTE_STRATEGY;,1,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,583,            return SECOND_STRATEGY;,1,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,585,            return WEEK_OF_YEAR_STRATEGY;,1,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,587,            return formatField.length()>2 ?LITERAL_YEAR_STRATEGY :ABBREVIATED_YEAR_STRATEGY;,2,1,0,1,2,1,2,0,0,6,80,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,591,        TimeZoneStrategy tzs= tzsCache.get(locale);,1,0,0,1,2,0,3,1,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,592,        if(tzs==null) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,593,            tzs= new TimeZoneStrategy(locale);,2,0,0,1,2,1,0,1,2,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,594,"            TimeZoneStrategy inCache= tzsCache.putIfAbsent(locale, tzs);",1,0,0,0,2,0,4,1,0,4,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,595,            if(inCache!=null) {,1,1,0,1,3,1,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,596,                return inCache;,1,0,0,0,0,1,0,0,0,2,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,599,        return tzs;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,191,"            return Arrays.equals(keys, ((MultipartKey)obj).keys);",2,0,0,2,6,1,3,1,0,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1208,"                           boolean daylight, int style, Locale locale) {",3,0,0,0,2,2,0,1,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1209,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1210,            if (daylight) {,1,0,0,1,3,1,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1211,                style |= 0x80000000;,1,0,0,0,0,0,0,0,1,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1213,            mStyle = style;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1214,            mLocale = locale;,2,0,0,0,0,0,0,0,1,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1215,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1222,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,1,4,0,2,6,1,4,0,0,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1230,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1231,                return true;,0,0,0,0,0,1,0,0,1,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1233,            if (obj instanceof TimeZoneDisplayKey) {,1,0,0,1,3,2,0,1,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1234,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,2,0,0,1,2,0,0,2,0,4,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1235,                return,0,0,0,0,0,0,0,0,0,0,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1240,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,54,"        return getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, TimeZone.getDefault(), Locale.getDefault());",4,0,0,1,6,1,5,0,1,6,107,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,71,"            throw new NullPointerException(""pattern must not be null"");",0,0,0,1,2,2,0,1,2,5,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,74,            timeZone = TimeZone.getDefault();,1,0,0,1,2,0,2,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,77,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,87,                format= previousValue;              ,2,0,0,0,0,0,0,0,1,2,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,120,        if (locale == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,121,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,1,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,123,"        String pattern = getPatternForStyle(dateStyle, timeStyle, locale);",1,0,0,0,2,0,4,1,1,5,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,124,"        return getInstance(pattern, timeZone, locale);",0,0,0,0,2,1,4,0,1,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,137,"        MultipartKey key = new MultipartKey(dateStyle, timeStyle, locale);",4,0,0,0,2,1,0,2,1,5,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,139,        String pattern = cDateTimeInstanceCache.get(key);,1,0,0,1,2,0,3,1,0,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,140,        if (pattern == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,143,                if (dateStyle == null) {,1,1,0,1,3,1,0,0,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,144,"                    formatter = DateFormat.getTimeInstance(timeStyle, locale);                    ",1,0,0,0,2,0,4,0,1,4,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,146,                else if (timeStyle == null) {,1,1,0,1,3,2,0,0,0,5,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,147,"                    formatter = DateFormat.getDateInstance(dateStyle, locale);                    ",1,0,0,0,2,0,4,0,1,4,58,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,150,"                    formatter = DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);",1,0,0,0,2,0,5,0,1,4,73,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,152,                pattern = ((SimpleDateFormat)formatter).toPattern();,2,0,0,2,6,0,1,1,1,6,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,153,"                String previous = cDateTimeInstanceCache.putIfAbsent(key, pattern);",1,0,0,0,2,0,4,1,0,4,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,154,                if (previous != null) {,1,1,0,1,3,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,158,                    pattern= previous;,2,0,0,0,0,0,0,0,1,2,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,162,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,160,            } catch (ClassCastException ex) {,1,0,0,1,4,1,0,1,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,161,"                throw new IllegalArgumentException(""No date time pattern for locale: "" + locale);",1,1,0,1,2,3,0,1,2,7,81,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FormatCache,10,164,        return pattern;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,946,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,947,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,940,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,1,0,0,1,2,3,0,2,3,6,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,954,            return 2;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,962,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,1,4,0,4,0,1,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,963,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,970,            buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,971,            buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,972,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,770,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,1,4,0,4,0,1,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,771,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,778,            if (value < 10) {,1,1,0,1,3,1,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,779,                buffer.append((char)(value + '0'));,1,1,0,2,6,1,2,0,1,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,781,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,782,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,784,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,664,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,688,                StringBuilder sb= new StringBuilder(value);,2,0,0,1,2,1,0,2,1,6,43,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,689,"                sb.append("" not in ("");",0,0,0,1,3,0,2,0,1,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,690,                for(KeyValue textKeyValue : textKeyValues) {,2,0,0,1,3,1,0,1,0,5,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,691,                    sb.append(textKeyValue.key).append(' ');,2,0,0,1,4,0,3,0,1,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,693,"                sb.setCharAt(sb.length()-1, ')');",0,1,0,1,5,0,4,0,1,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,694,                throw new IllegalArgumentException(sb.toString());,0,0,0,2,4,2,2,1,1,6,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1150,        TimeZoneNumberRule(boolean colon) {,2,0,0,1,3,1,0,0,0,4,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1151,            mColon = colon;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1152,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1140,        static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);,1,0,0,1,2,3,0,2,4,6,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1141,        static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);,1,0,0,1,2,3,0,2,4,6,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1159,            return 5;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1167,            int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);,5,1,0,1,4,1,4,0,0,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1169,            if (offset < 0) {,1,1,0,1,3,1,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1170,                buffer.append('-');,0,0,0,1,2,0,2,0,1,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1171,                offset = -offset;,2,0,0,0,0,0,0,0,2,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1173,                buffer.append('+');,0,0,0,1,2,0,2,0,1,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1176,            int hours = offset / (60 * 60 * 1000);,2,2,0,1,2,1,0,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1177,            buffer.append((char)(hours / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1178,            buffer.append((char)(hours % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1180,            if (mColon) {,1,0,0,1,3,1,0,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1181,                buffer.append(':');,0,0,0,1,2,0,2,0,1,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1184,            int minutes = offset / (60 * 1000) - 60 * hours;,3,4,0,1,2,1,0,0,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1185,            buffer.append((char)(minutes / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1186,            buffer.append((char)(minutes % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1187,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,780,        TimeZoneStrategy(Locale locale) {,2,0,0,1,3,0,0,1,0,4,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,774,"        final SortedMap<String, TimeZone> tzNames= new TreeMap<String, TimeZone>(String.CASE_INSENSITIVE_ORDER);",3,0,0,1,2,2,0,6,2,6,104,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,781,            for(String id : TimeZone.getAvailableIDs()) {,1,0,0,2,5,1,2,1,0,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,782,"                if(id.startsWith(""GMT"")) {",0,0,0,2,5,1,2,0,1,5,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,783,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,785,                TimeZone tz= TimeZone.getTimeZone(id);,1,0,0,1,2,0,3,1,0,5,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,786,"                tzNames.put(tz.getDisplayName(false, TimeZone.SHORT, locale), tz);",2,0,0,0,4,0,6,0,1,4,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,787,"                tzNames.put(tz.getDisplayName(false, TimeZone.LONG, locale), tz);",2,0,0,0,4,0,6,0,1,4,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,788,                if(tz.useDaylightTime()) {,0,0,0,2,5,1,2,0,0,4,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,789,"                    tzNames.put(tz.getDisplayName(true, TimeZone.SHORT, locale), tz);",2,0,0,0,4,0,6,0,1,4,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,790,"                    tzNames.put(tz.getDisplayName(true, TimeZone.LONG, locale), tz);",2,0,0,0,4,0,6,0,1,4,64,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,793,            StringBuilder sb= new StringBuilder();,1,0,0,1,2,1,0,2,1,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,794,"            sb.append(""(GMT[+\\-]\\d{0,1}\\d{2}|[+\\-]\\d{2}:?\\d{2}|"");",0,0,0,0,15,0,2,0,1,3,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,795,            for(String id : tzNames.keySet()) {,1,0,0,2,5,1,2,1,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,796,"                escapeRegex(sb, id, false).append('|');",0,0,0,1,4,0,4,0,3,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,797,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,798,"            sb.setCharAt(sb.length()-1, ')');",0,1,0,1,5,0,4,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,799,            validTimeZoneChars= sb.toString();,1,0,0,1,2,0,2,0,1,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,800,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,807,            return false;,0,0,0,0,0,1,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,815,            regex.append(validTimeZoneChars);,0,0,0,1,2,0,3,0,0,3,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,816,            return true;,0,0,0,0,0,1,0,0,1,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,825,            if(value.charAt(0)=='+' || value.charAt(0)=='-') {,0,3,0,2,7,1,4,0,2,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,826,"                tz= TimeZone.getTimeZone(""GMT""+value);",2,1,0,1,2,0,2,0,2,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,828,"            else if(value.startsWith(""GMT"")) {",0,0,0,2,5,2,2,0,1,5,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,829,                tz= TimeZone.getTimeZone(value);,1,0,0,1,2,0,3,0,1,5,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,832,                tz= tzNames.get(value);,1,0,0,1,2,0,3,0,1,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,833,                if(tz==null) {,1,1,0,1,3,1,0,0,0,5,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,834,"                    throw new IllegalArgumentException(value + "" is not a supported timezone name"");",1,1,0,1,2,2,0,1,2,7,80,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,837,            cal.setTimeZone(tz);,0,0,0,1,2,0,3,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,838,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,760,            int iValue= Integer.parseInt(value);,1,0,0,1,2,1,3,0,0,5,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,761,            if(iValue<100) {,1,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,762,                iValue= parser.adjustYear(iValue);,1,0,0,1,2,0,3,0,1,5,34,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,764,"            cal.set(Calendar.YEAR, iValue);",2,0,0,0,2,0,3,0,0,3,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,765,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1107,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",4,0,0,0,3,1,0,2,0,4,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1108,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1110,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",1,0,0,0,2,0,4,0,3,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1111,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",1,0,0,0,2,0,4,0,3,4,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1112,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1119,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,1,6,1,6,0,0,4,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1127,            if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {,2,2,0,2,7,1,4,0,0,6,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1128,                buffer.append(mDaylight);,0,0,0,1,2,0,3,0,0,3,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1130,                buffer.append(mStandard);,0,0,0,1,2,0,3,0,0,3,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1132,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,106,        return cache.getInstance();,0,0,0,1,2,1,2,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,119,"        return cache.getInstance(pattern, null, null);",0,0,0,0,2,1,3,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,134,"        return cache.getInstance(pattern, timeZone, null);",0,0,0,0,2,1,4,0,0,3,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,148,"        return cache.getInstance(pattern, null, locale);",0,0,0,0,2,1,4,0,0,3,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,180,"        return cache.getDateTimeInstance(style, null, null, null);",0,0,0,0,2,1,3,0,0,3,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,195,"        return cache.getDateTimeInstance(style, null, null, locale);",0,0,0,0,2,1,4,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,211,"        return cache.getDateTimeInstance(style, null, timeZone, null);",0,0,0,0,2,1,4,0,0,3,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,227,"        return cache.getDateTimeInstance(style, null, timeZone, locale);",0,0,0,0,2,1,5,0,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,242,"        return cache.getDateTimeInstance(null, style, null, null);",0,0,0,0,2,1,3,0,0,3,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,257,"        return cache.getDateTimeInstance(null, style, null, locale);",0,0,0,0,2,1,4,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,273,"        return cache.getDateTimeInstance(null, style, timeZone, null);",0,0,0,0,2,1,4,0,0,3,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,289,"        return cache.getDateTimeInstance(null, style, timeZone, locale);",0,0,0,0,2,1,5,0,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,305,"        return cache.getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,0,2,1,4,0,0,3,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,321,"        return cache.getDateTimeInstance(dateStyle, timeStyle, null, locale);",0,0,0,0,2,1,5,0,0,3,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,338,"        return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);",0,0,0,0,2,1,4,0,1,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,355,"        return cache.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);",0,0,0,0,2,1,6,0,0,3,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,386,"        return printer.format(obj, toAppendTo, pos);",0,0,0,0,2,1,5,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,398,        return format(new Date(millis));,1,0,0,2,4,2,1,1,2,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,409,        return printer.format(date);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,420,        return printer.format(calendar);,0,0,0,1,2,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,434,"        return printer.format(millis, buf);",0,0,0,0,2,1,4,0,0,3,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,447,"        return printer.format(date, buf);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,460,"        return printer.format(calendar, buf);",0,0,0,0,2,1,4,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,480,"            return parser.parse(source, pos);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,488,"        return parser.parseObject(source, pos);",0,0,0,0,2,1,4,0,0,3,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,500,        return printer.getPattern();,0,0,0,1,2,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,512,        return printer.getTimeZone();,0,0,0,1,2,1,2,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,522,        return printer.getLocale();,0,0,0,1,2,1,2,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,535,        return printer.getMaxLengthEstimate();,0,0,0,1,2,1,2,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,548,        if (obj instanceof FastDateFormat == false) {,1,1,0,1,3,2,0,1,1,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,549,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,551,        FastDateFormat other = (FastDateFormat) obj;,2,0,0,1,2,0,0,2,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,553,        return printer.equals(other.printer);,2,0,0,1,2,1,2,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,563,        return printer.hashCode();,0,0,0,1,2,1,2,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,573,"        return ""FastDateFormat["" + printer.getPattern() + "","" + printer.getLocale() + "","" + printer.getTimeZone().getID() + ""]"";",0,1,0,1,10,1,7,0,4,6,120,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,10,586,"        return printer.applyRules(calendar, buf);",0,0,0,0,2,1,4,0,0,3,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,188,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,196,"                rule = new TextField(Calendar.ERA, ERAs);",4,0,0,0,2,1,0,1,2,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,197,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,199,                if (tokenLen == 2) {,1,1,0,1,3,1,0,0,0,5,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,200,                    rule = TwoDigitYearField.INSTANCE;,3,0,0,0,0,0,0,0,1,2,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,202,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);",5,1,0,0,2,0,1,0,2,5,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,204,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,207,"                    rule = new TextField(Calendar.MONTH, months);",4,0,0,0,2,1,0,1,2,5,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,209,"                    rule = new TextField(Calendar.MONTH, shortMonths);",4,0,0,0,2,1,0,1,2,5,50,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,211,                    rule = TwoDigitMonthField.INSTANCE;,3,0,0,0,0,0,0,0,1,2,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,217,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,218,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,220,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",3,0,0,0,4,1,2,1,3,6,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,221,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,223,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",3,0,0,0,2,0,2,0,2,4,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,224,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,226,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",3,0,0,0,2,0,2,0,2,4,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,227,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,229,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",3,0,0,0,2,0,2,0,2,4,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,230,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,232,"                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",3,0,0,0,2,0,2,0,2,4,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,233,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,238,"                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);",3,0,0,0,2,0,2,0,2,4,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,239,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,241,"                rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,242,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,244,"                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);",3,0,0,0,2,0,2,0,2,4,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,245,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,247,"                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,58,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,248,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,250,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",4,0,0,0,2,1,0,1,2,5,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,251,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,253,"                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));",3,0,0,0,4,1,2,1,3,6,81,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,254,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,256,"                rule = selectNumberRule(Calendar.HOUR, tokenLen);",3,0,0,0,2,0,2,0,2,4,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,257,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,259,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,260,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);",5,0,0,0,2,1,0,1,2,5,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,262,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",5,0,0,0,2,1,0,1,2,5,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,264,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,266,                if (tokenLen == 1) {,1,1,0,1,3,1,0,0,0,5,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,267,                    rule = TimeZoneNumberRule.INSTANCE_NO_COLON;,3,0,0,0,0,0,0,0,1,2,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,269,                    rule = TimeZoneNumberRule.INSTANCE_COLON;,3,0,0,0,0,0,0,0,1,2,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,271,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,277,                    rule = new StringLiteral(sub);,2,0,0,1,2,1,0,1,2,6,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,279,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,281,"                throw new IllegalArgumentException(""Illegal pattern component: "" + token);",1,1,0,1,2,2,0,1,2,7,74,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,312,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,313,                    i++;,1,0,0,0,0,0,0,0,1,2,4,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,317,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,328,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,3,5,0,2,5,1,2,0,1,7,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,330,                        i++;,1,0,0,0,0,0,0,0,1,2,4,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,331,                        buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,333,                        inLiteral = !inLiteral;,2,0,0,0,0,0,0,0,2,2,23,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,357,        switch (padding) {,1,0,0,1,3,1,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,359,            return new UnpaddedNumberField(field);,1,0,0,1,2,2,0,1,1,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,361,            return new TwoDigitNumberField(field);,1,0,0,1,2,2,0,1,1,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,363,"            return new PaddedNumberField(field, padding);",2,0,0,0,2,2,0,1,1,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,380,        if (obj instanceof Date) {,1,0,0,1,3,2,0,1,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,381,"            return format((Date) obj, toAppendTo);",1,0,0,1,4,1,2,1,1,7,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,382,        } else if (obj instanceof Calendar) {,1,0,0,1,4,3,0,1,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,383,"            return format((Calendar) obj, toAppendTo);",1,0,0,1,4,1,2,1,1,7,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,384,        } else if (obj instanceof Long) {,1,0,0,1,4,3,0,1,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,385,"            return format(((Long) obj).longValue(), toAppendTo);",1,0,0,2,8,1,3,1,1,7,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,387,"            throw new IllegalArgumentException(""Unknown class: "" +",0,1,0,0,1,3,0,1,2,5,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,397,        return format(new Date(millis));,1,0,0,2,4,2,1,1,2,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,405,"        Calendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar",3,0,0,0,2,1,0,2,1,5,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,406,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,407,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,1,6,2,3,1,2,7,70,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,415,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,1,6,2,3,1,2,7,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,423,"        return format(new Date(millis), buf);",1,0,0,1,4,2,2,1,2,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,431,"        Calendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar",3,0,0,0,2,1,0,2,1,5,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,432,        c.setTime(date);,0,0,0,1,2,0,3,0,0,3,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,433,"        return applyRules(c, buf);",0,0,0,0,2,1,3,0,1,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,441,"        return applyRules(calendar, buf);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,453,        for (Rule rule : mRules) {,2,0,0,1,3,1,0,1,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,454,"            rule.appendTo(buf, calendar);",0,0,0,0,2,0,4,0,0,2,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,456,        return buf;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,466,        return mPattern;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,474,        return mTimeZone;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,482,        return mLocale;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,495,        return mMaxLengthEstimate;,1,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,508,        if (obj instanceof FastDatePrinter == false) {,1,1,0,1,3,2,0,1,1,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,509,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,511,        FastDatePrinter other = (FastDatePrinter) obj;,2,0,0,1,2,0,0,2,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,512,        return mPattern.equals(other.mPattern),2,1,0,1,2,1,2,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,524,        return mPattern.hashCode() + 13 * (mTimeZone.hashCode() + 13 * mLocale.hashCode());,0,4,0,2,8,1,6,0,0,5,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,534,"        return ""FastDatePrinter["" + mPattern + "","" + mLocale + "","" + mTimeZone.getID() + ""]"";",2,1,0,1,4,1,2,0,4,7,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,548,        in.defaultReadObject();,0,0,0,1,2,0,2,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,549,        init();,0,0,0,1,2,0,1,0,1,4,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,550,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1079,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",5,0,0,0,2,1,0,2,1,5,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1080,        String value = cTimeZoneDisplayCache.get(key);,1,0,0,1,2,0,3,1,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1081,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1083,"            value = tz.getDisplayName(daylight, style, locale);",1,0,0,0,2,0,5,0,1,4,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1084,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",1,0,0,0,2,0,4,1,0,4,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1085,            if (prior != null) {,1,1,0,1,3,1,0,0,0,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1086,                value= prior;,2,0,0,0,0,0,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1089,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,707,        UnpaddedNumberField(int field) {,2,0,0,1,3,1,0,0,0,4,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,708,            mField = field;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,709,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,716,            return 4;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,724,"            appendTo(buffer, calendar.get(mField));",0,0,0,1,4,0,5,0,1,4,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,725,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,732,            if (value < 10) {,1,1,0,1,3,1,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,733,                buffer.append((char)(value + '0'));,1,1,0,2,6,1,2,0,1,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,734,            } else if (value < 100) {,1,1,0,1,4,2,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,735,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,736,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,738,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,3,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,740,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1032,        TwentyFourHourField(NumberRule rule) {,2,0,0,1,3,0,0,1,0,4,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1033,            mRule = rule;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1034,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1041,            return mRule.estimateLength();,0,0,0,1,2,1,2,0,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1049,            int value = calendar.get(Calendar.HOUR_OF_DAY);,3,0,0,1,2,1,2,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1050,            if (value == 0) {,1,1,0,1,3,1,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1051,                value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;,3,1,0,1,2,0,2,0,1,6,54,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1053,"            mRule.appendTo(buffer, value);",0,0,0,0,2,0,4,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1054,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1061,"            mRule.appendTo(buffer, value);",0,0,0,0,2,0,4,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1062,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,632,        StringLiteral(String value) {,2,0,0,1,3,0,0,1,0,4,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,633,            mValue = value;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,634,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,641,            return mValue.length();,0,0,0,1,2,1,2,0,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,649,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,650,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,800,"        PaddedNumberField(int field, int size) {",3,0,0,0,3,2,0,0,0,3,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,801,            if (size < 3) {,1,1,0,1,3,1,0,0,0,5,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,803,                throw new IllegalArgumentException();,0,0,0,1,2,2,0,1,1,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,805,            mField = field;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,806,            mSize = size;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,807,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,814,            return 4;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,822,"            appendTo(buffer, calendar.get(mField));",0,0,0,1,4,0,5,0,1,4,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,823,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,830,            if (value < 100) {,1,1,0,1,3,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,831,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,2,0,0,1,6,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,832,                    buffer.append('0');,0,0,0,1,2,0,2,0,1,4,19,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,834,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,835,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,838,                if (value < 1000) {,1,1,0,1,3,1,0,0,0,5,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,839,                    digits = 3;,1,0,0,0,0,0,0,0,1,2,11,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,841,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",1,1,0,0,2,0,3,0,2,5,77,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,842,                    digits = Integer.toString(value).length();,1,0,0,1,4,0,4,0,1,5,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,844,                for (int i = mSize; --i >= digits; ) {,4,1,0,1,3,2,0,0,1,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,845,                    buffer.append('0');,0,0,0,1,2,0,2,0,1,4,19,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,847,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,3,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,849,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,616,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,617,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,869,            return iValue%12;,1,1,0,0,0,1,0,0,0,3,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,907,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,908,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,901,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,1,0,0,1,2,3,0,2,3,6,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,915,            return 2;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,923,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",2,1,0,1,4,0,4,0,1,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,924,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,931,            buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,932,            buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,933,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,863,        TwoDigitNumberField(int field) {,2,0,0,1,3,1,0,0,0,4,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,864,            mField = field;,2,0,0,0,0,0,0,0,1,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,865,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,872,            return 2;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,880,"            appendTo(buffer, calendar.get(mField));",0,0,0,1,4,0,5,0,1,4,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,881,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,888,            if (value < 100) {,1,1,0,1,3,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,889,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,890,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,892,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,3,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,894,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,623,                c= formatField.charAt(1);,1,0,0,1,2,0,2,0,1,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,642,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,692,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,2,6,0,5,0,0,4,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,693,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,987,        TwelveHourField(NumberRule rule) {,2,0,0,1,3,0,0,1,0,4,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,988,            mRule = rule;,2,0,0,0,0,0,0,0,1,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,989,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,996,            return mRule.estimateLength();,0,0,0,1,2,1,2,0,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1004,            int value = calendar.get(Calendar.HOUR);,3,0,0,1,2,1,2,0,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1005,            if (value == 0) {,1,1,0,1,3,1,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1006,                value = calendar.getLeastMaximum(Calendar.HOUR) + 1;,3,1,0,1,2,0,2,0,1,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1008,"            mRule.appendTo(buffer, value);",0,0,0,0,2,0,4,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1009,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1016,"            mRule.appendTo(buffer, value);",0,0,0,0,2,0,4,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,1017,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
