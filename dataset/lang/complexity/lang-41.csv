dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,0,2,1,3,0,0,3,33,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,86,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,94,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,0,2,1,2,1,0,5,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,0,2,1,2,1,0,5,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,0,2,0,2,0,0,3,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,1,2,1,0,6,62,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,1,3,0,1,5,43,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,0,2,0,4,0,0,2,54,9,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,96,        },0,0,0,0,1,0,0,0,0,1,1,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,89,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,96,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,124,"        addAbbreviation(""int"", ""I"");",0,0,0,0,2,1,1,0,3,4,28,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,0,2,1,1,0,3,4,32,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",0,0,0,0,2,1,1,0,3,4,30,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,127,"        addAbbreviation(""long"", ""J"");",0,0,0,0,2,1,1,0,3,4,29,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,128,"        addAbbreviation(""short"", ""S"");",0,0,0,0,2,1,1,0,3,4,30,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,0,2,1,1,0,3,4,29,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",0,0,0,0,2,1,1,0,3,4,31,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,131,"        addAbbreviation(""char"", ""C"");",0,0,0,0,2,1,1,0,3,4,29,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,132,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,0,2,0,4,0,0,2,45,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,0,2,0,4,0,0,2,52,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,118,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,3,0,1,5,40,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,184,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,187,        if (className.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,196,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,63,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,197,        int innerIdx = className.indexOf(,1,0,0,0,1,1,2,0,0,4,33,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,199,        String out = className.substring(lastDotIdx + 1);,2,1,0,1,2,0,2,1,0,6,49,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,200,        if (innerIdx != -1) {,1,1,0,1,3,1,0,0,1,6,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,203,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,143,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,156,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,157,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,159,        return getShortClassName(object.getClass());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,185,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,188,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,216,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,217,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,219,        return getPackageName(object.getClass());,0,0,0,2,4,1,3,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,246,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,254,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,269,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,270,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,272,        List<Class<?>> classes = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,273,        Class<?> superclass = cls.getSuperclass();,1,0,0,1,2,0,2,1,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,274,        while (superclass != null) {,1,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,275,            classes.add(superclass);,0,0,0,1,2,0,3,0,0,3,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,276,            superclass = superclass.getSuperclass();,1,0,0,1,2,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,278,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,295,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,296,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,299,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,1,0,0,1,2,1,0,4,1,6,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,300,"        getAllInterfaces(cls, interfacesFound);",0,0,0,0,2,0,3,0,1,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,302,        return new ArrayList<Class<?>>(interfacesFound);,1,0,0,1,2,2,0,2,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,306,        while (cls != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,307,            Class<?>[] interfaces = cls.getInterfaces();,1,0,0,1,4,0,2,1,0,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,309,            for (Class<?> i : interfaces) {,2,0,0,1,3,1,0,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,310,                if (interfacesFound.add(i)) {,0,0,0,2,5,1,3,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,311,"                    getAllInterfaces(i, interfacesFound);",0,0,0,0,2,0,3,0,1,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,315,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,316,         },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,317,     },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,334,        if (classNames == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,335,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,337,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,1,0,0,2,4,1,2,4,1,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,338,        for (String className : classNames) {,2,0,0,1,3,1,0,1,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,340,                classes.add(Class.forName(className));,0,0,0,2,4,0,5,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,343,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,341,            } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,342,                classes.add(null);,0,0,0,1,2,0,2,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,344,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,345,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,361,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,364,        List<String> classNames = new ArrayList<String>(classes.size());,1,0,0,2,4,1,2,4,1,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,365,        for (Class<?> cls : classes) {,2,0,0,1,3,1,0,1,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,366,            if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,367,                classNames.add(null);,0,0,0,1,2,0,2,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,369,                classNames.add(cls.getName());,0,0,0,2,4,0,4,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,371,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,372,        return classNames;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,410,"        return isAssignable(classArray, toClassArray, false);",0,0,0,0,2,1,3,0,2,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,446,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,0,5,1,4,0,1,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,447,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,449,        if (classArray == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,450,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,452,        if (toClassArray == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,453,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,455,        for (int i = 0; i < classArray.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,456,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",0,1,1,0,9,1,2,0,2,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,457,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,460,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,491,"        return isAssignable(cls, toClass, false);",0,0,0,0,2,1,3,0,2,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,522,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,523,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,526,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,527,            return !(toClass.isPrimitive());,0,0,0,2,4,1,2,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,530,        if (autoboxing) {,1,0,0,1,3,1,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,531,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,532,                cls = primitiveToWrapper(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,533,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,534,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,537,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,538,                cls = wrapperToPrimitive(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,539,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,540,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,544,        if (cls.equals(toClass)) {,0,0,0,2,5,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,545,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,547,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,548,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,1,2,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,549,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,551,            if (Integer.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,552,                return Long.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,556,            if (Long.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,557,                return Float.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,560,            if (Boolean.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,561,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,563,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,564,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,566,            if (Float.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,567,                return Double.TYPE.equals(toClass);,2,0,0,1,2,1,2,0,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,569,            if (Character.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,570,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,575,            if (Short.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,576,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,581,            if (Byte.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,582,                return Short.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,589,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,591,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,3,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,607,        Class<?> convertedClass = cls;,2,0,0,0,0,0,0,1,0,2,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,608,        if (cls != null && cls.isPrimitive()) {,1,2,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,609,            convertedClass = primitiveWrapperMap.get(cls);,1,0,0,1,2,0,3,0,1,5,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,611,        return convertedClass;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,625,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,629,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,630,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,633,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,634,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,635,            convertedClasses[i] = primitiveToWrapper(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,637,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,657,        return wrapperPrimitiveMap.get(cls);,0,0,0,1,2,1,3,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,675,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,676,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,679,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,680,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,683,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,684,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,685,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,687,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,700,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,701,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,703,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,0,1,0,1,4,1,4,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,722,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,723,"            String clsName = ""["" + abbreviationMap.get(className);",1,1,0,1,3,0,3,1,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,724,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",1,0,0,1,4,0,6,0,1,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,725,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,726,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",1,0,0,1,4,0,6,0,2,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,728,        return clazz;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,743,"        return getClass(classLoader, className, true);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,757,"        return getClass(className, true);",0,0,0,0,2,1,2,0,2,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,772,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,1,0,0,1,4,0,3,1,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,773,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,3,1,0,1,2,1,1,2,0,7,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,774,"        return getClass(loader, className, initialize );",0,0,0,0,2,1,4,0,1,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,803,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,1,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,804,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,805,            return declaredMethod;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,808,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,809,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,4,0,1,4,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,810,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,4,0,1,4,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,812,        for (Class<?> candidateClass : candidateClasses) {,2,0,0,1,3,1,0,1,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,813,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,1,4,0,1,5,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,814,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,818,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,0,1,4,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,821,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,819,            } catch (NoSuchMethodException ex) {,1,0,0,1,4,1,0,1,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,820,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,822,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,823,                return candidateMethod;,1,0,0,0,0,1,0,0,0,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,825,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,827,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,4,0,1,2,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,839,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,840,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,841,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,2,0,1,2,5,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,842,"        } else if (className.endsWith(""[]"")) {",0,0,0,2,8,2,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,843,            StringBuffer classNameBuffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,844,"            while (className.endsWith(""[]"")) {",0,0,0,2,7,1,2,0,1,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,845,"                className = className.substring(0, className.length() - 2);",1,1,0,1,4,0,4,0,1,6,59,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,846,"                classNameBuffer.append(""["");",0,0,0,1,3,0,2,0,1,4,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,848,            String abbreviation = abbreviationMap.get(className);,1,0,0,1,2,0,3,1,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,849,            if (abbreviation != null) {,1,1,0,1,3,1,0,0,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,850,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,3,0,0,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,852,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,1,6,0,5,0,2,4,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,854,            className = classNameBuffer.toString();,1,0,0,1,2,0,2,0,1,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,856,        return className;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,869,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,870,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,871,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,872,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,874,        Class<?>[] classes = new Class[array.length];,3,0,0,0,4,1,0,2,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,875,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,876,            classes[i] = array[i].getClass();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,878,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,892,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,893,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,895,        return getShortCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,906,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,907,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,909,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,922,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,936,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,937,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,939,        return getPackageCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,950,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,951,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,953,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,967,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,987,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,988,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,989,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,991,            int dim = 0;,1,0,0,0,0,1,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,992,"            while (className.startsWith(""["")) {",0,0,0,2,6,1,2,0,1,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,993,                dim++;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,994,                className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,996,            if (dim < 1) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,997,                return className;,1,0,0,0,0,1,0,0,0,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,999,"                if (className.startsWith(""L"")) {",0,0,0,2,5,1,2,0,1,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1000,                    className = className.substring(,1,0,0,0,1,0,2,0,1,4,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1006,                    if (className.length() > 0) {,0,1,0,2,5,1,2,0,0,5,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1007,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",1,0,0,0,4,0,4,0,1,4,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1010,                StringBuffer canonicalClassNameBuffer = new StringBuffer(className);,2,0,0,1,2,1,0,2,1,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1011,                for (int i = 0; i < dim; i++) {,4,1,0,1,3,2,0,0,1,6,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1012,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,1,4,0,2,0,1,4,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,1014,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,2,0,0,4,43,9,0.0,0,0
