dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,3,1,0,2,4,1,0,1,0,6,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,1,0,0,1,2,1,0,0,1,5,12,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,2,0,0,0,0,0,0,0,1,2,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,1,0,1,5,18,4,0.01754,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,2,0,0,0,0,0,0,0,1,2,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,1,2,0,1,6,0,4,0,2,6,64,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,1,0,0,0,0,0,0,0,2,2,10,8,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,1,0,0,1,4,0,3,2,0,5,50,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,1,0,0,1,2,0,2,0,2,5,31,6,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,0,2,0,4,0,0,2,35,7,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,2,0,0,2,5,1,2,0,0,5,34,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",2,0,0,0,2,1,2,0,0,4,26,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,2,0,0,1,2,1,1,0,0,5,21,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,2,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,1,0,0,1,2,1,0,2,1,6,26,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,1,0,0,1,2,0,2,1,0,5,38,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,3,5,0,1,3,3,0,2,0,6,69,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,1,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,0,0,0,1,2,1,0,0,1,4,8,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,1,0,0,1,2,2,0,2,2,6,30,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,1,0,0,1,2,1,3,1,1,7,61,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,1,0,0,1,2,2,0,2,2,6,36,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,1,0,0,1,2,1,3,1,1,7,65,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,2,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,1,0,0,1,2,0,1,1,1,6,23,4,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,1,0,0,0,0,1,0,0,1,3,19,5,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,2,1,0,1,3,1,0,0,0,5,23,6,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,1,1,0,1,3,1,0,0,1,6,18,4,0.01515,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,185,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,312,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,270,    protected transient String iToString = null;,1,0,0,0,0,2,0,1,2,4,44,2,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,313,        init(name);,0,0,0,1,2,0,2,0,1,4,11,4,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,327,        if (StringUtils.isEmpty(name)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,331,        Class enumClass = getEnumClass();,1,0,0,1,2,0,1,1,1,6,33,4,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,332,        if (enumClass == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.01493,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,337,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,3,5,0,1,3,3,0,2,0,6,69,4,0.01408,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,249,    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));,1,0,0,2,4,4,2,2,4,7,81,2,0.01389,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,254,    private static final Map cEnumClasses = new HashMap();,1,0,0,1,2,4,0,2,4,6,54,2,0.01389,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,161,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,162,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,223,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,224,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,226,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,228,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,231,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,3,0,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,276,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,303,        return str == null ? null : str.trim();,1,1,0,1,2,1,2,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,329,        String ts = trim(str);,1,0,0,1,2,0,2,1,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,330,        return isEmpty(ts) ? null : ts;,1,0,0,1,2,1,2,0,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,355,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,383,"        return strip(str, null);",0,0,0,0,2,1,2,0,1,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,410,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,411,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,413,"        str = strip(str, null);",1,0,0,0,2,0,2,0,2,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,414,        return str.length() == 0 ? null : str;,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,440,"        return str == null ? EMPTY : strip(str, null);",2,1,0,0,2,1,2,0,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,470,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,471,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,473,"        str = stripStart(str, stripChars);",1,0,0,0,2,0,3,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,474,"        return stripEnd(str, stripChars);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,503,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,504,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,506,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,507,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,2,0,3,9,1,5,0,0,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,509,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,511,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,512,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,3,0,4,11,1,5,0,1,7,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,515,                start++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,518,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,547,        if (str == null || (end = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,548,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,551,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,2,3,0,3,9,1,4,0,0,6,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,553,                end--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,555,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,556,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,2,4,0,4,11,1,4,0,1,7,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,559,                end--;,1,0,0,0,0,0,0,0,1,2,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,562,"        return str.substring(0, end);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,587,"        return stripAll(strs, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,617,        if (strs == null || (strsLen = strs.length) == 0) {,4,3,0,2,5,1,0,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,618,            return strs;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,620,        String[] newArr = new String[strsLen];,1,0,1,0,4,1,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,621,        for (int i = 0; i < strsLen; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,622,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,0,6,0,2,0,2,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,624,        return newArr;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,650,        return str1 == null ? str2 == null : str1.equals(str2);,2,2,0,1,2,1,3,0,0,6,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,2,2,0,1,2,1,3,0,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,700,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,701,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,703,        return str.indexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,732,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,733,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,735,"        return str.indexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,761,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,762,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,764,        return str.indexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,795,        if (str == null || searchStr == null || ordinal <= 0) {,3,5,0,1,3,1,0,0,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,796,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,798,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,799,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,801,        int found = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,802,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,804,"            index = str.indexOf(searchStr, index + 1);",2,1,0,0,2,0,3,0,1,5,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,805,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,806,                return index;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,808,            found++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,809,        } while (found < ordinal);,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,810,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,845,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,846,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,849,        if (searchStr.length() == 0 && startPos >= str.length()) {,1,3,0,2,7,1,4,0,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,850,            return str.length();,0,0,0,1,2,1,2,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,852,"        return str.indexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,877,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,878,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,880,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,3,0,0,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,911,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,912,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,914,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,0,2,1,4,0,0,3,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,940,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,941,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,943,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,3,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,975,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,976,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,978,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1003,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1004,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1006,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,3,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1031,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1032,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1034,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,3,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1061,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1062,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1064,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,1,6,1,5,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1092,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1093,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1095,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1096,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1097,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1098,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1099,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1103,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1129,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1130,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1132,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1160,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1161,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1163,        outer : for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,2,2,0,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1164,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1165,            for (int j = 0; j < searchChars.length; j++) {,5,1,0,1,3,2,0,0,1,6,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1166,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1167,                    continue outer;,1,0,0,0,0,1,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1170,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1172,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1198,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1199,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1201,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1202,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,1,0,3,7,1,5,0,0,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1203,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1206,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1234,        if ((valid == null) || (str == null)) {,2,3,0,2,7,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1235,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1237,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1238,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1240,        if (valid.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1241,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1243,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,0,2,1,3,0,2,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1269,        if (str == null || validChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1270,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1272,"        return containsOnly(str, validChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1300,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1301,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1303,        int strSize = str.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1304,        int validSize = invalidChars.length;,3,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1305,        for (int i = 0; i < strSize; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1306,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1307,            for (int j = 0; j < validSize; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1308,                if (invalidChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1309,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1313,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1339,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1340,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1342,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1374,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1375,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1377,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1380,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1382,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1383,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1384,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1385,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1386,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1388,            tmp = str.indexOf(search);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1389,            if (tmp == -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1390,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1393,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1394,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1398,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,4,1,0,1,2,1,0,0,1,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1427,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1428,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1430,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1431,        int ret = -1;,1,0,0,0,0,1,0,0,1,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1432,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1433,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1434,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1435,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1436,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1438,            tmp = str.lastIndexOf(search);,1,0,0,1,2,0,3,0,1,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1439,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1440,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1443,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1473,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1474,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1478,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1479,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1482,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1483,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1485,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1486,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1489,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1528,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1529,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1533,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1534,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1536,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1537,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1541,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1542,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1546,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1547,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1550,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1551,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1553,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1554,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1557,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1583,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1584,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1586,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1587,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1589,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1590,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1592,"            return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1617,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1618,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1620,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1621,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1623,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1624,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1626,            return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1655,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1656,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1658,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1659,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1661,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1662,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1664,        if (str.length() <= (pos + len)) {,2,2,0,2,7,1,2,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1665,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1667,"            return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1699,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1700,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1702,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1703,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1705,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1706,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1707,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1709,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1739,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1740,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1742,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1743,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1745,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1746,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1747,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1749,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1778,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1779,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1781,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1782,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1783,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1785,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1816,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1817,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1819,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1820,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1822,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1823,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,4,0,3,9,1,4,0,1,7,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1824,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1826,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1853,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1882,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1883,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1885,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1886,        if (start != -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1887,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1888,            if (end != -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1889,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1892,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1920,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1950,"        return substringBetween(str, open, close);",0,0,0,0,2,1,4,0,1,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,1978,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2008,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2037,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2071,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2098,"        return splitByWholeSeparator( str, separator, -1 ) ;",0,0,0,0,2,1,3,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2129,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2130,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2133,        int len = str.length() ;,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2135,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2136,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2139,"        if ( ( separator == null ) || ( """".equals( separator ) ) ) {",1,2,0,3,9,1,2,0,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2141,"            return split( str, null, max ) ;",0,0,0,0,2,1,3,0,1,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2145,        int separatorLength = separator.length() ;,1,0,0,1,2,1,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2147,        ArrayList substrings = new ArrayList() ;,1,0,0,1,2,1,0,2,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2148,        int numberOfSubstrings = 0 ;,1,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2149,        int beg = 0 ;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2150,        int end = 0 ;,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2151,        while ( end < len ) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2152,"            end = str.indexOf( separator, beg ) ;",1,0,0,0,2,0,4,0,1,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2154,            if ( end > -1 ) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2155,                if ( end > beg ) {,2,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2156,                    numberOfSubstrings += 1 ;,1,0,0,0,0,0,0,0,1,2,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2158,                    if ( numberOfSubstrings == max ) {,2,1,0,1,3,1,0,0,0,5,34,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2159,                        end = len ;,2,0,0,0,0,0,0,0,1,2,11,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2160,                        substrings.add( str.substring( beg ) ) ;,0,0,0,2,4,0,5,0,0,3,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2164,"                        substrings.add( str.substring( beg, end ) ) ;",0,0,0,0,4,0,6,0,0,2,45,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2169,                        beg = end + separatorLength ;,3,1,0,0,0,0,0,0,1,3,29,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2173,                    beg = end + separatorLength ;,3,1,0,0,0,0,0,0,1,3,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2177,                substrings.add( str.substring( beg ) ) ;,0,0,0,2,4,0,5,0,0,3,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2178,                end = len ;,2,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2182,        return (String[]) substrings.toArray( new String[substrings.size()] ) ;,0,0,0,2,10,2,4,2,0,5,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2212,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2248,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2266,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2267,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2269,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2270,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2271,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2273,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2274,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2275,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2276,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2277,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2278,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2279,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2280,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2281,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2282,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2284,                start = ++i;,2,0,0,0,0,0,0,0,2,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2285,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2287,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2289,            match = true;,1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2290,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2292,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2293,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2295,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2332,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,0,2,1,3,0,3,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2372,"        return splitWorker(str, separatorChars, max, true);",0,0,0,0,2,1,4,0,2,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2394,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2395,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2397,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2398,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2399,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2401,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2402,        int sizePlus1 = 1;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2403,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2404,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2405,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2406,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2408,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2409,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2410,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2411,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2412,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2413,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2414,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2416,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2417,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2419,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2420,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2422,                    lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2424,                match = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2425,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2427,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,2,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2429,            char sep = separatorChars.charAt(0);,1,0,0,1,2,1,2,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2430,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2431,                if (str.charAt(i) == sep) {,1,1,0,2,5,1,3,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2432,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2433,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2434,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2435,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2436,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2438,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2439,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2441,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2442,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2444,                    lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2446,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2447,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2449,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2451,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2452,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,1,5,0,0,5,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2453,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2454,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2455,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2456,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2457,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2459,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2460,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2462,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2463,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2465,                    lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2467,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2468,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2471,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2472,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2474,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2498,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2522,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2548,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2549,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2551,        int arraySize = array.length;,3,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2552,        int bufSize = (arraySize == 0 ? 0 : ((array[0] == null ? 16 : array[0].toString().length()) + 1) * arraySize);,3,4,1,4,14,1,2,0,0,7,110,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2553,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2555,        for (int i = 0; i < arraySize; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2556,            if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2557,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2559,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2560,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2563,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2590,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2591,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2593,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2594,            separator = EMPTY;,2,0,0,0,0,0,0,0,1,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2596,        int arraySize = array.length;,3,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2601,        int bufSize =,1,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2608,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2610,        for (int i = 0; i < arraySize; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2611,            if (i > 0) {,1,1,0,1,3,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2612,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2614,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2615,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2618,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2636,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2637,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2639,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2640,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2641,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2642,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2643,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2645,            if (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2646,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2648,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2649,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2666,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2667,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2669,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2670,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2671,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2672,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2673,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2675,            if ((separator != null) && iterator.hasNext()) {,1,2,0,2,7,1,2,0,0,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2676,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2678,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2679,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2711,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2712,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2714,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,0,2,1,3,0,1,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2732,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2733,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2735,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2736,        char[] chs = new char[sz];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2737,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2738,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2739,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2740,                chs[count++] = str.charAt(i);,1,0,1,1,4,0,3,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2743,        if (count == sz) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2744,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2746,"        return new String(chs, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2776,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2777,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2779,        if (str.startsWith(remove)){,0,0,0,2,5,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2780,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2782,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2810,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2811,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2813,        if (str.endsWith(remove)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2814,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2816,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2843,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2844,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2846,"        return replace(str, remove, """", -1);",0,0,0,0,2,1,3,0,3,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2869,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,2,7,1,5,0,2,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2870,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2872,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2873,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2874,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2875,            if (chars[i] != remove) {,1,1,1,1,5,1,0,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2876,                chars[pos++] = chars[i];,1,0,1,0,4,0,0,0,2,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2879,"        return new String(chars, 0, pos);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2908,"        return replace(text, repl, with, 1);",0,0,0,0,2,1,4,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2935,"        return replace(text, repl, with, -1);",0,0,0,0,2,1,4,0,2,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2967,        if (isEmpty(text) || isEmpty(repl) || with == null || max == 0) {,2,4,0,2,7,1,4,0,2,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2968,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2970,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2971,"        int end = text.indexOf(repl, start);",1,0,0,0,2,1,4,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2972,        if (end == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2973,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2975,        int replLength = repl.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2976,        int increase = with.length() - replLength;,2,1,0,1,2,1,2,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2977,        increase = (increase < 0 ? 0 : increase);,3,1,0,1,2,0,0,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2978,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,4,2,0,2,4,0,0,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2979,        StringBuffer buf = new StringBuffer(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2980,        while (end != -1) {,1,1,0,1,3,1,0,0,1,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2981,"            buf.append(text.substring(start, end)).append(with);",0,0,0,1,6,0,8,0,0,3,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2982,            start = end + replLength;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2983,            if (--max == 0) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2984,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2986,"            end = text.indexOf(repl, start);",1,0,0,0,2,0,4,0,1,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2988,        buf.append(text.substring(start));,0,0,0,2,4,0,5,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,2989,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3015,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3016,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3018,"        return str.replace(searchChar, replaceChar);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3058,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3059,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3061,        if (replaceChars == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3062,"            replaceChars = """";",1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3064,        boolean modified = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3065,        int replaceCharsLength = replaceChars.length();,1,0,0,1,2,1,2,0,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3066,        int strLength = str.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3067,        StringBuffer buf = new StringBuffer(strLength);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3068,        for (int i = 0; i < strLength; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3069,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3070,            int index = searchChars.indexOf(ch);,1,0,0,1,2,1,3,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3071,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3072,                modified = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3073,                if (index < replaceCharsLength) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3074,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,5,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3077,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3080,        if (modified) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3081,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3083,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3115,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),2,3,0,2,6,2,4,1,1,8,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3152,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3155,        if (overlay == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3156,            overlay = EMPTY;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3158,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3159,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3160,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3162,        if (start > len) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3163,            start = len;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3165,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3166,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3168,        if (end > len) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3169,            end = len;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3171,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3172,            int temp = start;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3173,            start = end;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3174,            end = temp;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3176,        return new StringBuffer(len + start - end + overlay.length() + 1),3,4,0,2,4,2,2,1,1,8,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3211,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3212,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3215,        if (str.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3216,            char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3217,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,6,3,0,1,3,1,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3218,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3220,                return str;,1,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3224,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3225,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3227,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3228,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3229,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3231,        } else if (last != CharUtils.CR) {,3,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3232,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3234,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3264,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3265,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3267,        if (str.endsWith(separator)) {,0,0,0,2,5,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3268,"            return str.substring(0, str.length() - separator.length());",0,1,0,1,6,1,6,0,0,5,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3270,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3284,"        return chompLast(str, ""\n"");",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3298,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3299,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3301,        String sub = str.substring(str.length() - sep.length());,1,1,0,2,6,0,6,1,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3302,        if (sep.equals(sub)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3303,"            return str.substring(0, str.length() - sep.length());",0,1,0,1,6,1,6,0,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3305,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3322,        int idx = str.lastIndexOf(sep);,1,0,0,1,2,1,3,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3323,        if (idx == str.length() - sep.length()) {,1,2,0,2,7,1,4,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3324,            return sep;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3325,        } else if (idx != -1) {,1,1,0,1,4,2,0,0,1,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3326,            return str.substring(idx);,0,0,0,1,2,1,3,0,0,4,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3328,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3344,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3345,        if (idx != -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3346,            return str.substring(idx + sep.length());,1,1,0,2,4,1,4,0,0,6,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3348,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3365,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3366,        if (idx != -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3367,"            return str.substring(0, idx + sep.length());",1,1,0,1,4,1,4,0,0,6,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3369,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3399,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3400,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3402,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3403,        if (strLen < 2) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3404,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3406,        int lastIdx = strLen - 1;,2,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3407,"        String ret = str.substring(0, lastIdx);",1,0,0,0,2,0,3,1,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3408,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3409,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3410,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3411,"                return ret.substring(0, lastIdx - 1);",1,1,0,0,2,1,2,0,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3414,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3428,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3429,        if (lastIdx <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3430,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3432,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3433,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3434,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3435,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3438,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3440,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3462,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,3,0,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3488,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3489,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3491,        if (repeat <= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3492,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3494,        int inputLength = str.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3495,        if (repeat == 1 || inputLength == 0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3496,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3498,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3499,"            return padding(repeat, str.charAt(0));",0,0,0,1,4,1,4,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3502,        int outputLength = inputLength * repeat;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3503,        switch (inputLength) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3505,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3506,                char[] output1 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3507,                for (int i = repeat - 1; i >= 0; i--) {,4,2,0,1,3,2,0,0,1,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3508,                    output1[i] = ch;,1,0,1,0,2,0,0,0,1,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3510,                return new String(output1);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3512,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3513,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3514,                char[] output2 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3515,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",5,3,0,0,3,2,0,0,2,5,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3516,                    output2[i] = ch0;,1,0,1,0,2,0,0,0,1,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3517,                    output2[i + 1] = ch1;,2,1,1,0,2,0,0,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3519,                return new String(output2);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3521,                StringBuffer buf = new StringBuffer(outputLength);,2,0,0,1,2,1,0,2,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3522,                for (int i = 0; i < repeat; i++) {,4,1,0,1,3,2,0,0,1,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3523,                    buf.append(str);,0,0,0,1,2,0,3,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3525,                return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3553,        if (repeat < 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3554,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",1,1,0,1,2,2,0,1,2,7,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3556,        final char[] buf = new char[repeat];,1,0,1,0,4,4,0,0,1,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3557,        for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3558,            buf[i] = padChar;,1,0,1,0,2,0,0,0,1,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3560,        return new String(buf);,1,0,0,1,2,2,0,1,1,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3583,"        return rightPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3608,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3609,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3611,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3612,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3613,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3615,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3616,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3618,"        return str.concat(padding(pads, padChar));",0,0,0,0,4,1,5,0,1,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3645,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3646,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3648,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3649,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3651,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3652,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3653,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3654,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3655,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3657,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3658,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3661,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3662,            return str.concat(padStr);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3663,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3664,"            return str.concat(padStr.substring(0, pads));",0,0,0,0,4,1,5,0,0,3,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3666,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3667,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3668,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3669,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3671,            return str.concat(new String(padding));,1,0,0,2,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3695,"        return leftPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3720,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3721,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3723,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3724,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3725,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3727,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3728,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3730,"        return padding(pads, padChar).concat(str);",0,0,0,1,4,1,5,0,1,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3757,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3758,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3760,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3761,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3763,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3764,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3765,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3766,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3767,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3769,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3770,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3773,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3774,            return padStr.concat(str);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3775,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3776,"            return padStr.substring(0, pads).concat(str);",0,0,0,1,4,1,5,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3778,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3779,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3780,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3781,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3783,            return new String(padding).concat(str);,1,0,0,1,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3813,"        return center(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3841,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3842,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3844,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3845,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3846,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3847,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3849,"        str = leftPad(str, strLen + pads / 2, padChar);",3,2,0,0,2,0,3,0,2,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3850,"        str = rightPad(str, size, padChar);",1,0,0,0,2,0,4,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3851,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3881,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3882,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3884,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3885,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3887,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3888,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3889,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3890,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3892,"        str = leftPad(str, strLen + pads / 2, padStr);",3,2,0,0,2,0,3,0,2,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3893,"        str = rightPad(str, size, padStr);",1,0,0,0,2,0,4,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3894,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3914,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3915,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3917,        return str.toUpperCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3935,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3936,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3938,        return str.toLowerCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3963,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3964,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3966,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,3982,        return capitalize(str);,0,0,0,1,2,1,2,0,1,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4007,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4008,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4010,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4026,        return uncapitalize(str);,0,0,0,1,2,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4058,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4059,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4061,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4063,        char ch = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4064,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4065,            ch = str.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4066,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4067,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4068,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4069,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4070,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4071,                ch = Character.toUpperCase(ch);,1,0,0,1,2,0,3,0,1,5,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4073,            buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4075,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4091,        return WordUtils.capitalize(str);,0,0,0,1,2,1,3,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4116,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,2,7,1,4,0,2,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4117,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4119,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4120,        int idx = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4121,"        while ((idx = str.indexOf(sub, idx)) != -1) {",1,1,0,0,7,1,4,0,2,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4122,            count++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4123,            idx += sub.length();,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4125,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4149,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4150,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4152,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4153,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4154,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4155,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4158,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4183,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4184,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4186,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4187,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4188,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4189,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4192,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4216,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4217,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4219,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4220,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4221,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4222,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4225,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4250,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4251,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4253,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4254,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4255,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4256,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4259,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4288,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4289,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4291,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4292,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4293,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4294,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4297,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4322,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4323,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4325,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4326,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4327,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4328,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4331,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4358,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4359,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4361,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4362,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4363,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4364,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4367,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4390,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4391,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4393,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4394,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4395,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4396,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4399,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4421,        return str == null ? EMPTY : str;,3,1,0,0,0,1,0,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4442,        return str == null ? defaultStr : str;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4462,        return StringUtils.isEmpty(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4482,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4483,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4485,        return new StringBuffer(str).reverse().toString();,1,0,0,1,6,2,2,1,1,7,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4508,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4509,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4513,"        String[] strs = split(str, separatorChar);",1,0,0,0,4,0,3,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4514,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4515,"        return join(strs, separatorChar);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4541,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4542,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4546,"        String[] strs = split(str, separatorChars);",1,0,0,0,4,0,3,1,1,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4547,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4548,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4549,"            return join(strs, ' ');",0,0,0,0,2,1,2,0,2,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4551,"        return join(strs, separatorChars);",0,0,0,0,2,1,3,0,1,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4589,"        return abbreviate(str, 0, maxWidth);",0,0,0,0,2,1,3,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4628,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4629,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4631,        if (maxWidth < 4) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4632,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4634,        if (str.length() <= maxWidth) {,1,1,0,2,5,1,2,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4635,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4637,        if (offset > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4638,            offset = str.length();,1,0,0,1,2,0,2,0,1,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4640,        if ((str.length() - offset) < (maxWidth - 3)) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4641,            offset = str.length() - (maxWidth - 3);,2,2,0,1,4,0,2,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4643,        if (offset <= 4) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4644,"            return str.substring(0, maxWidth - 3) + ""..."";",1,2,0,0,2,1,2,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4646,        if (maxWidth < 7) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4647,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,2,0,1,2,5,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4649,        if ((offset + (maxWidth - 3)) < str.length()) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4650,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",1,2,0,1,4,1,4,0,2,7,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4652,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",1,3,0,2,6,1,4,0,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4683,        if (str1 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4684,            return str2;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4686,        if (str2 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4687,            return str1;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4689,"        int at = indexOfDifference(str1, str2);",1,0,0,0,2,1,3,0,1,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4690,        if (at == -1) {,1,1,0,1,3,1,0,0,1,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4691,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4693,        return str2.substring(at);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4720,        if (str1 == str2) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4721,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4723,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4724,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4727,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,4,3,0,2,7,1,4,0,2,7,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4728,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,2,7,1,6,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4729,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4732,        if (i < str2.length() || i < str1.length()) {,2,3,0,2,7,1,4,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4733,            return i;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4735,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4775,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4796,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4797,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4799,        if (n == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4800,            return m;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4801,        } else if (m == 0) {,1,1,0,1,4,2,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4802,            return n;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4805,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",2,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4806,"        int d[] = new int[n+1]; // cost array, horizontally",2,1,0,0,4,3,0,0,0,4,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4817,        for (i = 0; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4818,            p[i] = i;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4821,        for (j = 1; j<=m; j++) {,4,1,0,1,3,1,0,0,2,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4822,            t_j = t.charAt(j-1);,2,1,0,1,2,0,2,0,1,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4823,            d[0] = j;,1,0,1,0,2,0,0,0,1,4,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4825,            for (i=1; i<=n; i++) {,4,1,0,1,3,1,0,0,2,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4826,                cost = s.charAt(i-1)==t_j ? 0 : 1;,3,2,0,1,2,0,2,0,1,6,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4828,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);  ",3,5,1,0,12,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4832,            _d = p;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4833,            p = d;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4834,            d = _d;,2,0,0,0,0,0,0,0,1,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,64,4839,        return p[n];,0,0,1,0,2,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NullArgumentException,64,60,"        super((argName == null ? ""Argument"" : argName) + "" must not be null."");",2,2,0,2,4,1,0,0,3,6,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NullArgumentException,64,61,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,102,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,103,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,50,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,60,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,94,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,65,    private static Map  primitiveWrapperMap = new HashMap();,1,0,0,1,2,3,0,2,3,6,56,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,67,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,68,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,69,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,0,2,1,2,1,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,70,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,71,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,72,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,73,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,0,2,1,2,1,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,74,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,75,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,0,2,0,2,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,81,    private static Map abbreviationMap = new HashMap();,1,0,0,1,2,3,0,2,3,6,51,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,83,"        abbreviationMap.put( ""int"", ""I"" );",0,0,0,0,2,1,2,0,2,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,84,"        abbreviationMap.put( ""boolean"", ""Z"" );",0,0,0,0,2,1,2,0,2,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,85,"        abbreviationMap.put( ""float"", ""F"" );",0,0,0,0,2,1,2,0,2,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,86,"        abbreviationMap.put( ""long"", ""J"" );",0,0,0,0,2,1,2,0,2,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,87,"        abbreviationMap.put( ""short"", ""S"" );",0,0,0,0,2,1,2,0,2,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,88,"        abbreviationMap.put( ""byte"", ""B"" );",0,0,0,0,2,1,2,0,2,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,89,"        abbreviationMap.put( ""double"", ""D"" );",0,0,0,0,2,1,2,0,2,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,90,"        abbreviationMap.put( ""char"", ""C"" );",0,0,0,0,2,1,2,0,2,4,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,91,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,115,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,116,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,118,        return getShortClassName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,128,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,129,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,131,        return getShortClassName(cls.getName());,0,0,0,2,4,1,3,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,143,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,144,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,146,        if (className.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,147,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,149,        char[] chars = className.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,150,        int lastDot = 0;,1,0,0,0,0,1,0,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,151,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,152,            if (chars[i] == PACKAGE_SEPARATOR_CHAR) {,1,1,1,1,5,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,153,                lastDot = i + 1;,2,1,0,0,0,0,0,0,1,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,154,            } else if (chars[i] == INNER_CLASS_SEPARATOR_CHAR) {  // handle inner classes,1,1,1,1,6,2,0,0,0,6,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,155,                chars[i] = PACKAGE_SEPARATOR_CHAR;,1,0,1,0,2,0,0,0,1,4,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,158,"        return new String(chars, lastDot, chars.length - lastDot);",5,1,0,0,2,2,0,1,1,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,171,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,172,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,174,        return getPackageName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,184,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,185,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,187,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,200,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,201,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,203,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,204,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,205,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,207,"        return className.substring(0, i);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,220,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,221,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,223,        List classes = new ArrayList();,1,0,0,1,2,1,0,2,1,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,224,        Class superclass = cls.getSuperclass();,1,0,0,1,2,0,2,1,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,225,        while (superclass != null) {,1,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,226,            classes.add(superclass);,0,0,0,1,2,0,3,0,0,3,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,227,            superclass = superclass.getSuperclass();,1,0,0,1,2,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,229,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,246,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,247,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,249,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,250,        while (cls != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,251,            Class[] interfaces = cls.getInterfaces();,1,0,0,1,4,0,2,1,0,5,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,252,            for (int i = 0; i < interfaces.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,253,                if (list.contains(interfaces[i]) == false) {,0,1,1,2,7,1,2,0,1,7,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,254,                    list.add(interfaces[i]);,0,0,1,1,4,0,2,0,0,4,24,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,256,                List superInterfaces = getAllInterfaces(interfaces[i]);,1,0,1,1,4,0,1,1,1,7,55,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,257,                for (Iterator it = superInterfaces.iterator(); it.hasNext();) {,1,0,0,2,7,1,4,1,0,6,63,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,258,                    Class intface = (Class) it.next();,1,0,0,1,4,0,2,2,0,5,34,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,259,                    if (list.contains(intface) == false) {,0,1,0,2,5,1,3,0,1,6,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,260,                        list.add(intface);,0,0,0,1,2,0,3,0,0,3,18,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,262,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,264,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,265,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,266,        return list;,1,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,284,        if (classNames == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,285,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,287,        List classes = new ArrayList(classNames.size());,1,0,0,2,4,1,2,2,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,288,        for (Iterator it = classNames.iterator(); it.hasNext();) {,1,0,0,2,7,1,4,1,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,289,            String className = (String) it.next();,1,0,0,1,4,0,2,2,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,291,                classes.add(Class.forName(className));,0,0,0,2,4,0,5,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,294,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,292,            } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,293,                classes.add(null);,0,0,0,1,2,0,2,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,295,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,296,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,312,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,313,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,315,        List classNames = new ArrayList(classes.size());,1,0,0,2,4,1,2,2,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,316,        for (Iterator it = classes.iterator(); it.hasNext();) {,1,0,0,2,7,1,4,1,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,317,            Class cls = (Class) it.next();,1,0,0,1,4,0,2,2,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,318,            if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,319,                classNames.add(null);,0,0,0,1,2,0,2,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,321,                classNames.add(cls.getName());,0,0,0,2,4,0,4,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,323,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,324,        return classNames;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,361,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,0,5,1,4,0,1,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,362,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,364,        if (classArray == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,365,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,367,        if (toClassArray == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,368,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,370,        for (int i = 0; i < classArray.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,371,"            if (isAssignable(classArray[i], toClassArray[i]) == false) {",0,1,1,0,9,1,1,0,2,6,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,372,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,375,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,405,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,406,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,409,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,410,            return !(toClass.isPrimitive());,0,0,0,2,4,1,2,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,412,        if (cls.equals(toClass)) {,0,0,0,2,5,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,413,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,415,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,416,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,1,2,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,417,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,419,            if (Integer.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,420,                return Long.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,424,            if (Long.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,425,                return Float.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,428,            if (Boolean.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,429,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,431,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,432,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,434,            if (Float.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,435,                return Double.TYPE.equals(toClass);,2,0,0,1,2,1,2,0,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,437,            if (Character.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,438,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,443,            if (Short.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,444,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,449,            if (Byte.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,450,                return Short.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,457,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,459,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,3,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,475,        Class convertedClass = cls;,2,0,0,0,0,0,0,1,0,2,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,476,        if (cls != null && cls.isPrimitive()) {,1,2,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,477,            convertedClass = (Class) primitiveWrapperMap.get(cls);,1,0,0,1,4,0,3,1,1,6,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,479,        return convertedClass;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,493,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,494,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,497,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,498,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,501,        Class[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,502,        for (int i=0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,503,            convertedClasses[i] = primitiveToWrapper( classes[i] );,0,0,1,1,6,0,1,0,2,5,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,505,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,518,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,519,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,521,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,0,1,0,1,4,1,4,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,540,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,541,"            String clsName = ""["" + abbreviationMap.get(className);",1,1,0,1,3,0,3,1,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,542,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",1,0,0,1,4,0,6,0,1,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,543,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,544,"            clazz = Class.forName(toProperClassName(className), initialize, classLoader);",1,0,0,1,4,0,6,0,2,5,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,546,        return clazz;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,561,"        return getClass(classLoader, className, true);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,575,"        return getClass(className, true);",0,0,0,0,2,1,2,0,2,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,590,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,1,0,0,1,4,0,3,1,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,591,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,3,1,0,1,2,1,1,2,0,7,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,592,"        return getClass(loader, className, initialize );",0,0,0,0,2,1,4,0,1,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,621,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,1,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,622,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,623,            return declaredMethod;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,626,        List candidateClasses = new ArrayList();,1,0,0,1,2,1,0,2,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,627,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,4,0,1,4,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,628,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,4,0,1,4,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,630,        for (Iterator it = candidateClasses.iterator(); it.hasNext(); ) {,1,0,0,2,7,1,4,1,0,6,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,631,            Class candidateClass = (Class) it.next();,1,0,0,1,4,0,2,2,0,5,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,632,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,1,4,0,1,5,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,633,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,637,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,0,1,4,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,640,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,638,            } catch (NoSuchMethodException ex) {,1,0,0,1,4,1,0,1,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,639,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,641,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,642,                return candidateMethod;,1,0,0,0,0,1,0,0,0,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,644,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,646,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,4,0,1,2,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,658,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,659,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,660,"            throw new NullArgumentException(""className"");",0,0,0,1,2,2,0,1,2,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,661,"        } else if (className.endsWith(""[]"")) {",0,0,0,2,8,2,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,662,            StringBuffer classNameBuffer = new StringBuffer();,1,0,0,1,2,1,0,2,1,6,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,663,"            while (className.endsWith(""[]"")) {",0,0,0,2,7,1,2,0,1,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,664,"                className = className.substring(0, className.length() - 2);",1,1,0,1,4,0,4,0,1,6,59,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,665,"                classNameBuffer.append(""["");",0,0,0,1,3,0,2,0,1,4,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,667,            String abbreviation = (String) abbreviationMap.get(className);,1,0,0,1,4,0,3,2,0,5,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,668,            if (abbreviation != null) {,1,1,0,1,3,1,0,0,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,669,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,3,0,0,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,671,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,1,6,0,5,0,2,4,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,673,            className = classNameBuffer.toString();,1,0,0,1,2,0,2,0,1,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,64,675,        return className;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,328,"            throw new IllegalArgumentException(""The Enum name must not be empty or null"");",0,0,0,1,2,2,0,1,2,5,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,333,"            throw new IllegalArgumentException(""getEnumClass() must not be null"");",0,0,0,2,4,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,342,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,345,"            throw new IllegalArgumentException(""getEnumClass() must return a superclass of this class"");",0,0,0,2,4,5,0,1,2,5,92,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,355,"            throw new IllegalArgumentException(""The Enum name must be unique, '"" + name + ""' has already been added"");",1,1,0,0,2,2,0,1,3,6,106,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,368,        Entry entry = (Entry) cEnumClasses.get(getEnumClass());,1,0,0,2,6,0,3,2,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,369,        if (entry == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,370,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,372,        return entry.map.get(getName());,2,0,0,2,4,1,2,0,1,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,389,        Entry entry = getEntry(enumClass);,1,0,0,1,2,0,2,1,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,390,        if (entry == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,391,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,393,        return (Enum) entry.map.get(name);,2,0,0,1,4,1,2,1,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,410,        Entry entry = getEntry(enumClass);,1,0,0,1,2,0,2,1,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,411,        if (entry == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,412,            return EMPTY_MAP;,1,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,414,        return entry.unmodifiableMap;,2,0,0,0,0,1,0,0,0,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,432,        Entry entry = getEntry(enumClass);,1,0,0,1,2,0,2,1,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,433,        if (entry == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,434,            return Collections.EMPTY_LIST;,2,0,0,0,0,1,0,0,0,2,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,436,        return entry.unmodifiableList;,2,0,0,0,0,1,0,0,0,2,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,454,        return Enum.getEnumList(enumClass).iterator();,0,0,0,1,4,1,4,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,465,        if (enumClass == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,466,"            throw new IllegalArgumentException(""The Enum Class must not be null"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,468,        if (Enum.class.isAssignableFrom(enumClass) == false) {,0,1,0,2,5,2,2,1,1,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,469,"            throw new IllegalArgumentException(""The Class must be a subclass of Enum"");",0,0,0,1,2,2,0,1,2,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,471,        Entry entry = (Entry) cEnumClasses.get(enumClass);,1,0,0,1,4,0,3,2,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,472,        return entry;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,487,            Entry loopEntry = (Entry) cEnumClasses.get(cls);,1,0,0,1,4,0,3,2,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,488,            if (loopEntry != null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,489,                entry.list.addAll(loopEntry.list);,4,0,0,1,2,0,1,0,0,4,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,490,                entry.map.putAll(loopEntry.map);,4,0,0,1,2,0,1,0,0,4,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,491,"                break;  // stop here, as this will already have had superclasses added",0,0,0,0,0,2,0,0,0,1,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,493,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,494,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,505,        return iName;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,536,        if (other == this) {,1,1,0,1,3,2,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,537,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,538,        } else if (other == null) {,1,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,539,            return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,540,        } else if (other.getClass() == this.getClass()) {,0,1,0,2,8,3,3,0,0,5,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,544,            return iName.equals(((Enum) other).iName);,2,0,0,3,6,1,2,1,0,6,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,547,            if (other.getClass().getName().equals(this.getClass().getName()) == false) {,0,1,0,3,13,2,6,0,1,6,76,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,548,                return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,550,            return iName.equals( getNameInOtherClassLoader(other) );,0,0,0,2,4,1,4,0,1,5,56,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,560,        return iHashCode;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,580,        if (other == this) {,1,1,0,1,3,2,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,581,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,583,        if (other.getClass() != this.getClass()) {,0,1,0,2,7,2,3,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,584,            if (other.getClass().getName().equals(this.getClass().getName())) {,0,0,0,3,13,2,6,0,0,4,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,585,                return iName.compareTo( getNameInOtherClassLoader(other) );,0,0,0,2,4,1,4,0,1,5,59,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,587,            throw new ClassCastException(,0,0,0,0,1,2,0,1,1,4,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,590,        return iName.compareTo(((Enum) other).iName);,2,0,0,3,6,1,2,1,0,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,601,"            Method mth = other.getClass().getMethod(""getName"", null);",1,0,0,1,4,0,3,1,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,602,"            String name = (String) mth.invoke(other, null);",1,0,0,1,4,0,3,2,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,603,            return name;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,604,        } catch (NoSuchMethodException e) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,610,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,606,        } catch (IllegalAccessException e) {,1,0,0,1,4,1,0,1,0,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,608,        } catch (InvocationTargetException e) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,611,"        throw new IllegalStateException(""This should not happen"");",0,0,0,1,2,2,0,1,2,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,622,        if (iToString == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,623,            String shortName = ClassUtils.getShortClassName(getEnumClass());,1,0,0,2,4,0,3,1,1,6,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,624,"            iToString = shortName + ""["" + getName() + ""]"";",2,1,0,1,4,0,1,0,4,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,626,        return iToString;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,143,        if (enumClass == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,144,"            throw new IllegalArgumentException(""The Enum Class must not be null"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,146,        List list = Enum.getEnumList(enumClass);,1,0,0,1,2,0,3,1,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,147,        for (Iterator it = list.iterator(); it.hasNext();) {,1,0,0,2,7,1,4,1,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,148,            ValuedEnum enumeration = (ValuedEnum) it.next();,1,0,0,1,4,0,2,2,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,149,            if (enumeration.getValue() == value) {,1,1,0,2,5,1,2,0,0,6,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,150,                return enumeration;,1,0,0,0,0,1,0,0,0,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,152,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,153,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,162,        return iValue;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,204,        if (iToString == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,1,0,0,2,4,0,3,1,1,6,64,6,0.0,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",2,1,0,1,6,0,2,0,6,6,65,6,0.0,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,208,        return iToString;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,1,1
