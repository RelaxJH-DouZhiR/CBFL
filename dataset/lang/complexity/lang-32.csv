dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,0,2,1,2,0,2,4,61,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,2,0,2,1,5,28,8,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,2,0,0,4,22,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,1,0,0,2,6,2,2,1,2,7,48,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,0,0,0,2,5,1,2,0,1,5,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,2,0,1,4,17,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,1,0,0,1,4,0,2,1,0,5,43,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,0,2,0,3,0,1,3,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,2,0,0,1,3,1,0,1,0,5,28,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,1,0,1,5,1,5,0,1,6,56,8,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,1,0,0,1,2,0,3,1,0,5,38,12,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,3,0,0,3,27,13,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,0,0,0,1,2,0,2,0,1,4,19,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,1,0,0,1,2,0,2,1,0,5,35,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,0,2,0,6,0,1,3,72,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,2,3,0,2,5,1,2,0,0,6,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,1,0,0,1,2,0,2,0,1,5,30,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,0,2,0,6,0,1,3,72,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,0,0,0,1,2,1,2,0,0,4,28,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,36,5,0.14286,1,1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,2,0,0,1,3,1,0,1,1,6,29,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,1,0,0,1,2,0,3,0,1,5,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,2,0,0,0,0,0,0,0,1,2,15,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,1,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,1,0,0,2,5,2,0,1,1,6,32,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,2,0,0,1,2,0,0,2,0,4,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,3,1,0,1,3,1,0,0,0,5,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,3,1,0,0,0,1,0,0,0,3,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",3,0,0,0,2,1,0,2,1,5,99,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,3,2,0,1,2,0,2,0,1,6,48,8,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,0,0,0,2,7,1,3,0,0,4,33,7,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,886,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,585,        if (multiplierNonZeroOddNumber == 0) {,1,1,0,1,3,1,0,0,0,5,38,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,588,        if (multiplierNonZeroOddNumber % 2 == 0) {,1,2,0,1,3,1,0,0,0,5,42,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,591,        iConstant = multiplierNonZeroOddNumber;,2,0,0,0,0,0,0,0,1,2,39,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,592,        iTotal = initialNonZeroOddNumber;,2,0,0,0,0,0,0,0,1,2,33,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,593,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,966,        return iTotal;,1,0,0,0,0,1,0,0,0,2,14,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,582,        if (initialNonZeroOddNumber % 2 == 0) {,1,2,0,1,3,1,0,0,0,5,39,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,549,    private int iTotal = 0;,1,0,0,0,0,2,0,0,1,3,23,2,0.02326,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,578,"    public HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {",3,0,0,0,3,3,0,0,1,4,85,2,0.02326,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,579,        if (initialNonZeroOddNumber == 0) {,1,1,0,1,3,1,0,0,0,5,35,4,0.02326,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,1,0,0,1,3,4,0,6,4,6,87,2,0.02273,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,1,0,0,1,3,4,0,6,4,6,87,2,0.02273,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,556,    public HashCodeBuilder() {,1,0,0,1,3,1,0,0,1,5,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,557,        iConstant = 37;,1,0,0,0,0,0,0,0,1,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,558,        iTotal = 17;,1,0,0,0,0,0,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,559,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,580,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero initial value"");",0,0,0,1,2,2,0,1,2,5,88,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,583,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd initial value"");",0,0,0,1,2,2,0,1,2,5,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,586,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero multiplier"");",0,0,0,1,2,2,0,1,2,5,85,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,589,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd multiplier"");",0,0,0,1,2,2,0,1,2,5,81,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,174,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,188,                    } catch (IllegalAccessException e) {,1,0,0,1,4,1,0,1,0,5,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,191,"                        throw new InternalError(""Unexpected IllegalAccessException"");",0,0,0,1,2,2,0,1,2,5,61,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,238,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null, null);",0,0,0,0,2,1,4,0,2,4,106,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,282,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null,",0,0,0,0,1,1,5,0,1,4,108,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,304,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients,",0,0,0,0,1,1,5,0,1,4,102,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,357,"            throw new IllegalArgumentException(""The object to build a hash code for must not be null"");",0,0,0,1,2,3,0,1,2,5,91,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,436,"        return reflectionHashCode(17, 37, object, testTransients, null, null);",0,0,0,0,2,1,3,0,1,4,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,472,"        return reflectionHashCode(object, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,1,4,1,5,0,1,5,96,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,510,"        return reflectionHashCode(17, 37, object, false, null, excludeFields);",0,0,0,0,2,1,3,0,2,4,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,610,        iTotal = iTotal * iConstant + (value ? 0 : 1);,4,2,0,1,2,0,0,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,611,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,624,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,625,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,627,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,628,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,631,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,646,        iTotal = iTotal * iConstant + value;,4,2,0,0,0,0,0,0,1,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,647,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,662,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,663,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,665,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,666,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,669,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,682,        iTotal = iTotal * iConstant + value;,4,2,0,0,0,0,0,0,1,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,683,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,696,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,697,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,699,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,700,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,703,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,716,        return append(Double.doubleToLongBits(value));,0,0,0,2,4,1,4,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,729,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,730,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,732,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,733,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,736,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,749,        iTotal = iTotal * iConstant + Float.floatToIntBits(value);,3,2,0,1,2,0,3,0,1,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,750,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,763,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,764,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,766,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,767,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,770,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,783,        iTotal = iTotal * iConstant + value;,4,2,0,0,0,0,0,0,1,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,784,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,797,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,798,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,800,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,801,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,804,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,821,        iTotal = iTotal * iConstant + ((int) (value ^ (value >> 32)));,5,4,0,3,8,1,0,0,1,6,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,822,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,835,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,836,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,838,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,839,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,842,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,856,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,862,                if (object instanceof long[]) {,1,0,0,1,5,3,0,0,0,4,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,863,                    append((long[]) object);,1,0,0,2,6,1,1,0,1,6,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,864,                } else if (object instanceof int[]) {,1,0,0,1,6,4,0,0,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,865,                    append((int[]) object);,1,0,0,2,6,1,1,0,1,6,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,866,                } else if (object instanceof short[]) {,1,0,0,1,6,4,0,0,0,4,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,867,                    append((short[]) object);,1,0,0,2,6,1,1,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,868,                } else if (object instanceof char[]) {,1,0,0,1,6,4,0,0,0,4,38,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,869,                    append((char[]) object);,1,0,0,2,6,1,1,0,1,6,24,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,870,                } else if (object instanceof byte[]) {,1,0,0,1,6,4,0,0,0,4,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,871,                    append((byte[]) object);,1,0,0,2,6,1,1,0,1,6,24,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,872,                } else if (object instanceof double[]) {,1,0,0,1,6,4,0,0,0,4,40,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,873,                    append((double[]) object);,1,0,0,2,6,1,1,0,1,6,26,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,874,                } else if (object instanceof float[]) {,1,0,0,1,6,4,0,0,0,4,39,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,875,                    append((float[]) object);,1,0,0,2,6,1,1,0,1,6,25,16,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,876,                } else if (object instanceof boolean[]) {,1,0,0,1,6,4,0,0,0,4,41,16,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,877,                    append((boolean[]) object);,1,0,0,2,6,1,1,0,1,6,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,880,                    append((Object[]) object);,1,0,0,2,6,0,1,1,1,6,26,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,899,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,900,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,902,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,903,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,906,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,919,        iTotal = iTotal * iConstant + value;,4,2,0,0,0,0,0,0,1,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,920,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,933,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,934,            iTotal = iTotal * iConstant;,3,1,0,0,0,0,0,0,1,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,936,            for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,937,                append(array[i]);,0,0,1,1,4,0,1,0,1,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,940,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,954,        iTotal = iTotal * iConstant + superHashCode;,4,2,0,0,0,0,0,0,1,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,955,        return this;,0,0,0,0,0,2,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,979,        return toHashCode();,0,0,0,1,2,1,1,0,1,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,66,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,70,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,144,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,145,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,161,"        return toString(array, ""{}"");",0,0,0,0,4,1,2,0,2,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,177,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,178,            return stringIfNull;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",3,0,0,1,6,2,3,1,1,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,1,6,2,4,1,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,225,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,226,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",3,1,0,2,6,3,0,6,2,7,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,229,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,230,            Object object = array[i];,1,0,1,0,2,0,0,1,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,231,"            if (object instanceof Map.Entry<?, ?>) {",3,0,0,0,3,2,0,0,0,3,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",6,0,0,0,2,0,0,0,0,2,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,1,6,0,6,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,234,            } else if (object instanceof Object[]) {,1,0,0,1,6,3,0,1,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,235,                Object[] entry = (Object[]) object;,2,0,0,1,6,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,236,                if (entry.length < 2) {,2,1,0,1,3,1,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,241,"                map.put(entry[0], entry[1]);",0,0,1,0,6,0,2,0,0,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,242,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,248,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,293,        return items;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,311,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,312,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,314,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,327,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,330,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,343,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,346,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,359,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,362,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,375,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,378,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,391,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,394,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,407,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,410,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,423,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,424,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,426,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,439,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,440,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,442,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,460,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,461,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,462,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,463,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,465,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,482,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,483,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,484,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,486,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,502,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,503,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,505,        if (array.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,506,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,508,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,524,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,525,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,526,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,527,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,529,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,545,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,546,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,547,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,548,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,550,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,566,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,567,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,568,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,569,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,571,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,587,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,588,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,589,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,590,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,592,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,608,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,609,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,610,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,611,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,613,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,629,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,630,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,631,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,632,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,634,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,650,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,651,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,652,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,653,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,655,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,671,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,672,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,673,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,674,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,676,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,692,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,694,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,697,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,713,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,714,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,715,        }else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,716,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,718,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,734,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,736,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,739,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,755,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,756,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,757,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,758,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,760,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,776,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,778,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,781,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,797,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,799,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,802,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,818,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,820,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,823,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,856,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,859,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,860,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,862,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,863,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,865,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,866,        Class<?> type = array.getClass().getComponentType();,1,0,0,1,4,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,867,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",1,0,0,1,8,1,3,2,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,870,            return emptyArray;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",1,0,0,1,8,0,4,2,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,875,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,898,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,899,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,901,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,902,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,904,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,905,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,907,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,908,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,909,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,912,        long[] subarray = new long[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,914,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,937,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,938,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,940,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,941,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,943,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,944,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,946,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,947,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,948,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,951,        int[] subarray = new int[newSize];,1,0,1,0,4,3,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,953,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,976,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,979,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,980,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,982,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,983,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,985,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,986,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,987,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,990,        short[] subarray = new short[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,992,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1015,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1018,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1019,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1021,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1022,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1024,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1025,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1026,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1029,        char[] subarray = new char[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1031,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1054,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1055,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1057,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1058,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1060,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1061,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1063,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1064,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1065,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1068,        byte[] subarray = new byte[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1070,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1093,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1094,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1096,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1097,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1099,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1100,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1102,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1103,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1104,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1107,        double[] subarray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1109,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1132,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1135,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1136,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1138,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1139,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1141,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1142,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1143,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1146,        float[] subarray = new float[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1148,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1171,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1174,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1175,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1177,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1178,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1180,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1181,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1182,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1185,        boolean[] subarray = new boolean[newSize];,1,0,1,0,4,3,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1187,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1207,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1209,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1225,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1227,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1243,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1245,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1261,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1263,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1279,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1281,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1297,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1299,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1315,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1317,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1333,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1335,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1351,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1353,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1378,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1381,        return Array.getLength(array);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1394,        if (array1 == null || array2 == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,2,10,1,7,0,0,4,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1412,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1413,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1415,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1416,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1418,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1419,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1420,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1421,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1422,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1423,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1425,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1435,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1436,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1438,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1439,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1441,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1442,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1443,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1444,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1445,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1446,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1448,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1458,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1459,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1461,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1462,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1464,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1465,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1466,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1467,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1468,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1469,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1471,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1482,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1484,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1485,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1487,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1488,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1489,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1490,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1491,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1492,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1494,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1504,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1505,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1507,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1508,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1510,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1511,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1512,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1513,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1514,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1515,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1517,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1527,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1528,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1530,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1531,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1533,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1534,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1535,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1536,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1537,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1538,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1540,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1550,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1551,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1553,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1554,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1556,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1557,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1558,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1559,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1560,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1561,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1563,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1573,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1574,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1576,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1577,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1579,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1580,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1581,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1582,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1583,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1584,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1586,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1596,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1597,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1599,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1600,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1602,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1603,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1604,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1605,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1606,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1607,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1609,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1648,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1649,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1651,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1652,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1653,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1654,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1658,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1659,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1660,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1664,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1696,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1697,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1699,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1700,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1701,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1702,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1704,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1705,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1706,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1707,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1711,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1712,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1713,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1717,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1746,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1764,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1765,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1767,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1768,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1770,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1771,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1772,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1775,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1807,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1808,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1810,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1811,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1812,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1813,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1815,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1816,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1817,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1820,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1867,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1868,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1870,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1871,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1873,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1874,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1875,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1878,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1910,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1911,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1913,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1914,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1915,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1916,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1918,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1919,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1920,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1923,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1970,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1971,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1973,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1974,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1976,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1977,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1978,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1981,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2013,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2014,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2016,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2017,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2018,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2019,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2021,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2022,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2023,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2026,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2056,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2075,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2076,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2078,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2079,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2081,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2082,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2083,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2086,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2120,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2121,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2123,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2124,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2125,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2126,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2128,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2129,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2130,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2133,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2181,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2182,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2184,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2185,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2187,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2188,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2189,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2192,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2224,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2225,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2227,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2228,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2229,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2230,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2232,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2233,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2234,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2237,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2266,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2283,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,0,2,1,4,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2301,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2302,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2304,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2305,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2307,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2308,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2309,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2312,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2334,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2336,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2337,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2339,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2340,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2341,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2342,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2343,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2346,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",2,0,0,0,2,1,4,0,1,5,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2395,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2396,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2398,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2399,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2400,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2401,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2403,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2404,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2405,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2408,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2429,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2430,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2432,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2433,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2434,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2435,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2437,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2438,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2439,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2440,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2441,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2444,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",1,1,0,0,2,1,4,0,1,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2508,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2509,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2511,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2512,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2514,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2515,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2516,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2519,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2552,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2554,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2555,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2556,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2557,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2559,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2560,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2561,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2564,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2613,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2615,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2616,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2618,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2619,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2620,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2623,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2656,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2657,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2659,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2660,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2661,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2662,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2664,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2665,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2666,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2669,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2700,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2701,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2702,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2703,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2705,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2706,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2707,            result[i] = array[i].charValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2709,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2722,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2724,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2725,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2727,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2728,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2729,            Character b = array[i];,1,0,1,0,2,0,0,1,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2730,            result[i] = (b == null ? valueForNull : b.charValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2732,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2744,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2746,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2749,        final Character[] result = new Character[array.length];,3,0,0,0,4,2,0,2,1,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2750,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2753,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2768,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2769,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2770,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2771,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2773,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2774,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2775,            result[i] = array[i].longValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2777,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2790,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2791,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2792,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2793,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2795,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2796,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2797,            Long b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2798,            result[i] = (b == null ? valueForNull : b.longValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2800,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2812,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2813,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2814,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2815,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2817,        final Long[] result = new Long[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2818,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2821,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2836,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2837,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2838,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2839,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2841,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2842,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2843,            result[i] = array[i].intValue();,0,0,1,1,6,0,1,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2845,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2858,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2860,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2861,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2863,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2864,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2865,            Integer b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2866,            result[i] = (b == null ? valueForNull : b.intValue());,2,1,1,2,6,0,2,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2868,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2880,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2882,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2885,        final Integer[] result = new Integer[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2886,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2887,            result[i] = Integer.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2889,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2904,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2905,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2906,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2907,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2909,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2910,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2911,            result[i] = array[i].shortValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2913,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2926,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2927,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2928,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2929,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2931,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2932,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2933,            Short b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2936,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2948,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2950,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2953,        final Short[] result = new Short[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2954,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2955,            result[i] = Short.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2957,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2972,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2973,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2974,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2975,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2977,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2978,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2979,            result[i] = array[i].byteValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2981,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2994,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2995,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2996,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2997,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,2999,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3000,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3001,            Byte b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3004,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3016,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3017,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3018,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3021,        final Byte[] result = new Byte[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3022,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3023,            result[i] = Byte.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3025,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3040,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3042,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3043,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3045,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3046,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3047,            result[i] = array[i].doubleValue();,0,0,1,1,6,0,1,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3049,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3062,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3063,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3064,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3065,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3067,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3068,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3069,            Double b = array[i];,1,0,1,0,2,0,0,1,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,2,1,1,2,6,0,2,0,1,7,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3072,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3084,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3085,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3086,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3089,        final Double[] result = new Double[array.length];,3,0,0,0,4,2,0,2,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3090,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3093,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3108,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3109,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3110,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3111,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3113,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3114,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3115,            result[i] = array[i].floatValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3117,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3130,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3131,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3132,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3133,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3135,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3136,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3137,            Float b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3140,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3152,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3154,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3157,        final Float[] result = new Float[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3158,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3161,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3176,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3177,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3178,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3179,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3181,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3182,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3183,            result[i] = array[i].booleanValue();,0,0,1,1,6,0,1,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3185,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3198,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3199,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3200,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3201,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3203,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3204,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3205,            Boolean b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,2,1,1,2,6,0,2,0,1,7,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3208,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3220,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3222,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3225,        final Boolean[] result = new Boolean[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3226,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,4,0,1,1,6,0,0,0,1,5,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3229,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3241,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3242,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3244,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3255,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3256,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3258,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3269,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3270,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3272,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3283,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3284,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3286,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3297,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3298,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3300,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3311,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3312,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3314,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3325,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3326,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3328,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3339,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3340,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3342,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3353,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3354,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3356,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3368,         return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3379,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3390,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3401,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3412,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3423,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3434,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3445,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3456,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3483,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3484,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3485,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3486,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3488,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3506,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3494,        } catch (ArrayStoreException ase) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3501,            final Class<?> type2 = array2.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,1,3,0,1,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",1,1,0,1,6,2,4,1,3,8,108,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3505,"            throw ase; // No, so rethrow original",1,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3507,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3528,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3529,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3530,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3531,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3536,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3557,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3558,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3559,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3560,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3562,        char[] joinedArray = new char[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3565,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3586,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3587,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3588,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3589,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3594,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3615,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3616,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3617,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3618,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3620,        short[] joinedArray = new short[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3623,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3644,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3645,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3646,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3647,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3649,        int[] joinedArray = new int[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3652,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3673,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3674,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3675,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3676,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3678,        long[] joinedArray = new long[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3681,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3702,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3703,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3704,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3705,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3707,        float[] joinedArray = new float[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3710,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3731,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3732,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3733,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3734,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3736,        double[] joinedArray = new double[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3739,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3772,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3773,            type = array.getClass();,1,0,0,1,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3774,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3775,            type = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3781,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3782,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",3,0,0,1,8,2,2,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3808,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3809,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3835,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3836,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",3,0,0,1,8,2,2,0,1,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3862,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3863,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",3,0,0,1,8,2,2,0,1,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3889,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3890,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3916,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3917,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",3,0,0,1,8,2,2,0,1,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3943,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3944,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3970,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3971,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3997,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,3998,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4011,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4012,            int arrayLength = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",2,1,0,1,6,0,5,1,0,6,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,0,2,0,5,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4015,            return newArray;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4050,        Class<?> clss = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4051,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4052,            clss = array.getClass().getComponentType();,1,0,0,1,4,0,3,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4053,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4054,            clss = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",1,0,0,1,8,1,5,2,2,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4060,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",2,0,0,1,8,2,6,0,1,6,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",2,0,0,1,8,2,6,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,0,0,1,8,2,6,0,1,6,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",2,0,0,1,8,2,6,0,1,6,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4324,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4325,            if (index != 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",1,1,0,0,2,2,0,1,3,6,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4328,"            Object joinedArray = Array.newInstance(clss, 1);",1,0,0,0,2,0,3,1,0,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4329,"            Array.set(joinedArray, 0, element);",0,0,0,0,2,0,4,0,0,2,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4330,            return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4332,        int length = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4333,        if (index > length || index < 0) {,3,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4336,"        Object result = Array.newInstance(clss, length + 1);",2,1,0,0,2,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4338,"        Array.set(result, index, element);",0,0,0,0,2,0,5,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4339,        if (index < length) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",3,2,0,0,2,0,5,0,0,4,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4342,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4375,"        return (T[]) remove((Object) array, index);",1,0,0,1,8,1,2,2,1,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4404,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4405,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4406,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4408,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4440,"        return (boolean[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4469,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4470,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4471,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4473,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4505,"        return (byte[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4534,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4535,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4536,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4538,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4570,"        return (char[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4599,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4600,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4601,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4603,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4635,"        return (double[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4664,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4665,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4666,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4668,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4700,"        return (float[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4729,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4730,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4731,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4733,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4765,"        return (int[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4794,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4795,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4796,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4798,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4830,"        return (long[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4859,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4860,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4861,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4863,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4895,"        return (short[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4924,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4925,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4926,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4928,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4953,        int length = getLength(array);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4954,        if (index < 0 || index >= length) {,3,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",2,1,0,1,6,0,5,1,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4959,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4960,        if (index < length - 1) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",3,2,0,0,2,0,5,0,0,4,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,4964,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
