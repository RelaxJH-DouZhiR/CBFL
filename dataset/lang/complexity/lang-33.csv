dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,3,7,94,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,0,2,1,2,1,0,5,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,0,2,1,2,1,0,5,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,0,2,1,2,1,0,5,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,0,2,1,2,1,0,5,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,0,2,1,2,1,0,5,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,0,2,0,2,0,0,3,46,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,4,0,6,4,6,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,1,2,1,0,6,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,1,3,0,1,5,43,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,0,2,0,4,0,0,2,54,9,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,4,0,6,4,6,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,0,2,1,1,0,3,4,28,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,0,2,1,1,0,3,4,32,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,0,2,1,1,0,3,4,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,0,2,1,1,0,3,4,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,0,2,1,1,0,3,4,31,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,0,2,1,1,0,3,4,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,0,2,0,4,0,0,2,45,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,0,2,0,4,0,0,2,52,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,3,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,1,2,0,1,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,1,2,0,1,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,1,4,0,2,0,1,4,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,3,9,1,6,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",1,1,0,1,4,0,4,0,1,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,1,0,0,1,2,0,3,0,1,5,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,1,0,0,0,1,1,2,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,2,1,0,1,2,0,2,1,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,1,1,0,1,3,1,0,0,1,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,2,1,0,0,0,1,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,3,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,1,3,0,2,5,1,2,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,0,1,0,2,6,1,2,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,3,9,1,6,0,2,6,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,1,0,0,1,2,0,2,1,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,1,1,0,1,3,1,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,3,0,0,3,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,1,0,0,1,2,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,1,0,0,1,2,1,0,4,1,6,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,0,2,0,3,0,1,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,1,0,0,1,2,2,0,2,1,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,1,0,0,1,4,0,2,1,0,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,2,0,0,1,3,1,0,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,0,0,0,2,5,1,3,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,336,"                    getAllInterfaces(i, interfacesFound);",0,0,0,0,2,0,3,0,1,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,1,0,0,1,2,0,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,342,     },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,362,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,1,0,0,2,4,1,2,4,1,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,363,        for (String className : classNames) {,2,0,0,1,3,1,0,1,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,0,0,0,2,4,0,5,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,368,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,1,0,0,1,4,1,0,1,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,0,0,0,1,2,0,2,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,387,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,1,0,0,2,4,1,2,4,1,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,2,0,0,1,3,1,0,1,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,2,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,0,0,0,2,4,0,4,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,396,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,1,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,439,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,1,4,1,5,0,1,5,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,0,5,1,4,0,1,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,476,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,482,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,3,0,0,0,0,0,0,0,1,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",0,1,1,0,9,1,2,0,2,6,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,524,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,1,4,1,5,0,1,5,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,556,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,2,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,1,0,0,1,3,1,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,567,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,570,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,2,7,1,4,0,1,6,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,571,                cls = wrapperToPrimitive(cls);,1,0,0,1,2,0,2,0,2,5,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,577,        if (cls.equals(toClass)) {,0,0,0,2,5,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,578,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,580,        if (cls.isPrimitive()) {,0,0,0,2,5,1,2,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,1,2,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,584,            if (Integer.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,594,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,2,0,0,1,2,1,2,0,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,609,                return Integer.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,2,0,0,2,5,1,2,0,0,5,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),2,1,0,1,2,1,2,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,622,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,624,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,3,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,2,0,0,0,0,0,0,1,0,2,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,1,2,0,2,5,1,2,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,642,            convertedClass = primitiveWrapperMap.get(cls);,1,0,0,1,2,0,3,0,1,5,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,1,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,658,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,659,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,662,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,690,        return wrapperPrimitiveMap.get(cls);,0,0,0,1,2,1,3,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,709,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,1,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,3,0,0,0,4,1,0,2,0,4,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,718,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,1,1,6,0,1,0,2,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,1,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,734,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,736,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,0,1,0,1,4,1,4,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,1,3,0,0,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",1,1,0,1,3,0,3,1,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",1,0,0,1,4,0,6,0,1,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",1,0,0,1,4,0,6,0,2,5,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,761,        return clazz;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,776,"        return getClass(classLoader, className, true);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,790,"        return getClass(className, true);",0,0,0,0,2,1,2,0,2,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,805,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,1,0,0,1,4,0,3,1,0,5,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,3,1,0,1,2,1,1,2,0,7,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,807,"        return getClass(loader, className, initialize );",0,0,0,0,2,1,4,0,1,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,836,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,1,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,1,0,0,1,2,1,0,4,1,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,4,0,1,4,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,4,0,1,4,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,2,0,0,1,3,1,0,1,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,1,4,0,1,5,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,847,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,851,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",1,0,0,0,2,0,4,0,1,4,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,854,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,1,0,0,1,4,1,0,1,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,853,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,3,9,1,5,0,0,4,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,856,                return candidateMethod;,1,0,0,0,0,1,0,0,0,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,860,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,4,0,1,2,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,874,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,2,0,1,2,5,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,2,8,2,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,1,0,0,1,2,1,0,2,1,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",0,0,0,2,7,1,2,0,1,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,878,"                className = className.substring(0, className.length() - 2);",1,1,0,1,4,0,4,0,1,6,59,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,2,0,1,4,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,1,0,0,1,2,0,3,1,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,1,1,0,1,3,1,0,0,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,3,0,0,3,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,885,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,1,6,0,5,0,2,4,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,1,0,0,1,2,0,2,0,1,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,0,4,1,0,2,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,943,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,956,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,0,0,0,2,6,1,4,0,1,5,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,987,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,3,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1001,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,4,0,1,5,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,1,0,0,1,2,0,3,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1023,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,1,0,0,0,0,1,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,0,0,2,6,1,2,0,1,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1027,                dim++;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,1,0,0,1,2,0,2,0,1,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1030,            if (dim < 1) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,1,0,0,0,0,1,0,0,0,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,1,2,0,1,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,1,0,0,0,1,0,2,0,1,4,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1040,                    if (className.length() > 0) {,0,1,0,2,5,1,2,0,0,5,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",1,0,0,0,4,0,4,0,1,4,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,2,0,0,1,2,1,0,2,1,6,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,4,1,0,1,3,2,0,0,1,6,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,1,4,0,2,0,1,4,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1048,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,2,0,0,4,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,144,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",0,0,0,0,4,1,2,0,2,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,178,            return stringIfNull;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",3,0,0,1,6,2,3,1,1,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,1,6,2,4,1,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,225,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",3,1,0,2,6,3,0,6,2,7,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,1,0,1,0,2,0,0,1,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",3,0,0,0,3,2,0,0,0,3,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",6,0,0,0,2,0,0,0,0,2,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,1,6,0,6,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,1,0,0,1,6,3,0,1,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,235,                Object[] entry = (Object[]) object;,2,0,0,1,6,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,236,                if (entry.length < 2) {,2,1,0,1,3,1,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,241,"                map.put(entry[0], entry[1]);",0,0,1,0,6,0,2,0,0,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,242,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,293,        return items;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,312,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,330,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,375,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,378,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,391,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,410,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,440,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,442,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,462,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,463,            return EMPTY_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,465,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,486,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,502,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,503,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,524,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,526,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,546,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,548,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,567,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,569,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,587,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,588,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,589,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,609,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,632,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,651,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,653,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,655,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,692,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,714,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,715,        }else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,718,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,734,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,755,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,756,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,758,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,776,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,778,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,781,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,802,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,820,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,860,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,1,0,0,1,4,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",1,0,0,1,8,1,3,2,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,1,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",1,0,0,1,8,0,4,2,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,875,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,901,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,902,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,908,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,909,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,914,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,937,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,943,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,944,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,946,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,948,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,951,        int[] subarray = new int[newSize];,1,0,1,0,4,3,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,979,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,980,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,983,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,985,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,986,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1018,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1019,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1055,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1058,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1060,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1061,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1063,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1064,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1070,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1093,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1100,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1132,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1138,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1141,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1146,        float[] subarray = new float[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1148,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1175,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1178,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,1,0,1,0,4,3,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1187,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1209,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1225,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1227,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1243,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1245,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1279,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1281,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1297,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1315,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1333,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1335,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1351,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1381,        return Array.getLength(array);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1394,        if (array1 == null || array2 == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,2,10,1,7,0,0,4,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1413,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1418,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1421,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1439,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1442,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1443,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1448,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1459,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1464,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1465,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1466,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1467,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1468,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1482,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1485,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1488,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1489,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1494,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1505,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1507,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1512,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1528,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1536,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1550,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1553,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1558,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1559,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1560,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1561,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1573,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1574,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1580,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1581,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1583,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1597,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1599,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1600,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1603,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1604,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1605,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1606,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1609,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1651,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1652,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1658,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1660,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1697,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1699,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1702,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1704,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1712,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1713,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1717,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1764,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1768,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1770,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1771,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1807,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1808,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1810,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1811,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1871,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1873,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1911,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1913,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1914,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1918,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1970,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1973,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1974,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1977,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2016,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2018,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2026,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2056,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2076,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2078,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2083,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2128,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2130,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2133,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2192,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2229,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2233,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2283,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,0,2,1,4,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2301,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2304,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2305,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2309,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2312,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2340,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",2,0,0,0,2,1,4,0,1,5,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2395,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2396,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2398,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2400,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2401,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2403,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2405,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2408,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2437,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2440,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",1,1,0,0,2,1,4,0,1,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2514,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2519,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2555,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2556,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2560,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2564,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2616,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2618,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2620,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2623,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2662,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2664,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2700,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2707,            result[i] = array[i].charValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2709,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2727,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2728,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2729,            Character b = array[i];,1,0,1,0,2,0,0,1,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,3,0,0,0,4,2,0,2,1,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2750,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2769,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2775,            result[i] = array[i].longValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2793,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2798,            result[i] = (b == null ? valueForNull : b.longValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2821,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2841,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2842,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2843,            result[i] = array[i].intValue();,0,0,1,1,6,0,1,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2845,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2858,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2860,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2865,            Integer b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,2,1,1,2,6,0,2,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2880,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2904,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2906,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2909,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2910,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2911,            result[i] = array[i].shortValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2926,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2927,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2936,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2948,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2950,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2955,            result[i] = Short.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2957,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2972,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2978,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2979,            result[i] = array[i].byteValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2994,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2995,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2997,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3000,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3021,        final Byte[] result = new Byte[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3023,            result[i] = Byte.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3025,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3045,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3046,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,0,0,1,1,6,0,1,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3064,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3065,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,3,0,0,0,4,4,0,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,1,0,1,0,2,0,0,1,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,2,1,1,2,6,0,2,0,1,7,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3085,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,3,0,0,0,4,2,0,2,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3093,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3109,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3115,            result[i] = array[i].floatValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3117,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3131,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3132,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3137,            Float b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,2,1,1,2,6,0,2,0,1,7,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3152,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,3,0,0,0,4,2,0,2,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3161,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3182,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3183,            result[i] = array[i].booleanValue();,0,0,1,1,6,0,1,0,1,5,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3200,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,3,0,0,0,4,4,0,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3204,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3205,            Boolean b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,2,1,1,2,6,0,2,0,1,7,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3225,        final Boolean[] result = new Boolean[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3226,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,4,0,1,1,6,0,0,0,1,5,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3241,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3244,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3255,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3256,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3258,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3269,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3270,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3272,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3284,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3286,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3298,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3300,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3312,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3314,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3325,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3328,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3339,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3340,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3342,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3379,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3434,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3445,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,3,3,0,1,2,1,0,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3483,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3506,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3494,        } catch (ArrayStoreException ase) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,1,3,0,1,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",1,1,0,1,6,2,4,1,3,8,108,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3505,"            throw ase; // No, so rethrow original",1,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3529,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3531,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3558,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3586,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3587,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3589,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3618,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3620,        short[] joinedArray = new short[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,1,0,0,1,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",3,0,0,1,8,2,2,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",3,0,0,1,8,2,2,0,1,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",3,0,0,1,8,2,2,0,1,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",3,0,0,1,8,2,2,0,1,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",2,1,0,1,6,0,5,1,0,6,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,0,2,0,5,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,1,0,0,1,4,0,3,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",1,0,0,1,8,1,5,2,2,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",2,0,0,1,8,2,6,0,1,6,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",2,0,0,1,8,2,6,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,0,0,1,8,2,6,0,1,6,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",2,0,0,1,8,2,6,0,1,6,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",1,1,0,0,2,2,0,1,3,6,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",1,0,0,0,2,0,3,1,0,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",0,0,0,0,2,0,4,0,0,2,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,3,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",2,1,0,0,2,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,0,2,0,5,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",3,2,0,0,2,0,5,0,0,4,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",1,0,0,1,8,1,2,2,1,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,3,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",2,1,0,1,6,0,5,1,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",3,2,0,0,2,0,5,0,0,4,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
