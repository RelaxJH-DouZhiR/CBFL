dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,1,1,0,1,3,1,0,0,0,5,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",0,0,0,0,2,1,2,0,1,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,3,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,1,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,2,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,2,1,0,1,3,1,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",2,1,0,1,4,0,4,0,1,6,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,2,0,1,5,26,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,2,0,1,5,23,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,0,0,0,1,2,1,2,0,1,5,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,1,0,0,1,2,0,2,1,1,6,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,1,0,0,1,2,0,2,1,1,6,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,0,0,1,2,1,2,0,1,5,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,2,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,0,0,0,1,2,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,3,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,2,0,0,1,2,1,0,2,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,2,0,0,1,2,1,0,2,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,1,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,2,1,0,1,3,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,0,0,0,1,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,1,0,0,1,2,1,3,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,1,0,0,1,2,1,3,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,1,0,0,1,2,1,3,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,1,0,0,1,2,1,3,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,2,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,1,3,0,3,9,1,2,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,3,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,1,0,0,0,0,1,0,0,1,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,1,0,0,0,0,1,0,0,1,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,1,0,0,0,0,1,0,0,1,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,1,0,0,0,0,1,0,0,1,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,1,4,1,0,0,1,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,2,2,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,1,7,1,0,0,2,7,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,2,1,0,0,0,1,0,0,0,3,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,2,1,0,1,3,1,0,0,0,5,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,1,2,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,4,1,0,1,3,1,0,0,1,6,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),0,4,1,1,7,1,0,0,2,6,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,1,0,0,1,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,2,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,1,0,0,1,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,1,6,2,0,0,1,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,2,1,0,1,3,1,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,1,0,0,0,0,0,0,0,2,2,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,8,2,0,0,2,6,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,1,0,0,1,3,1,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,1,0,0,1,3,1,0,0,1,5,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,1,0,0,0,0,0,0,0,2,2,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,1,8,2,0,0,2,6,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,1,0,0,1,3,1,0,0,1,5,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,1,2,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,2,2,50,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,0,0,0,0,0,1,0,0,1,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,3,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,7,1,0,0,2,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,1,1,0,0,1,1,0,0,1,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,1,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,2,1,0,3,1,0,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,2,1,0,0,0,1,0,0,1,4,33,4,0.0,0,0
