dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,1,2,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,1,2,0,0,5,36,14,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,1,0,0,2,6,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,1,5,56,17,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,1,0,0,2,6,1,2,0,0,5,33,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,1,0,0,2,4,1,2,2,1,7,50,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,0,4,0,5,0,0,2,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,4,1,0,2,5,2,2,0,1,7,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,1,1,0,1,3,1,0,0,1,6,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",2,1,0,0,2,1,2,0,1,6,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,1,1,0,1,3,1,0,0,1,6,17,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",2,1,0,0,2,1,2,0,1,6,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,3,3,0,1,3,1,0,0,1,6,33,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,1,0,0,2,0,3,1,0,5,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,1,2,0,0,5,31,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,2,2,0,1,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,1,1,0,1,3,1,0,0,1,6,24,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,2,0,0,0,0,0,0,0,1,2,9,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,1,0,0,1,2,1,2,0,1,6,32,5,0.03704,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.03704,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",5,0,0,0,3,3,0,2,1,5,62,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,2,0,0,0,0,1,0,0,1,3,17,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,2,0,0,0,0,1,0,0,1,3,15,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,2,0,0,0,0,1,0,0,1,3,19,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,2,0,0,0,0,1,0,0,1,3,17,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,88,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,1,0,0,0,1,3,0,1,1,5,57,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,1,0,0,0,0,2,0,0,1,3,36,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,1,0,0,0,1,3,0,1,1,5,54,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,1,0,0,1,2,2,0,2,2,6,43,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,1,0,0,1,2,2,0,2,2,6,53,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",1,0,0,1,4,1,3,1,1,7,45,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",0,0,0,0,2,0,4,0,0,2,32,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,429,        },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,1,0,0,0,1,1,0,0,0,3,16,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,3,0,0,1,2,1,0,1,1,6,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,1,0,0,0,5,3,0,1,3,5,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,1,0,0,0,5,3,0,1,3,5,46,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,1,0,0,0,5,2,0,1,2,5,43,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,1,0,0,0,5,2,0,1,2,5,40,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,1,0,0,1,2,1,0,1,2,6,21,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,367,        XML.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,29,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,368,        XML.addEntities(APOS_ARRAY);,0,0,0,1,2,0,3,0,0,3,28,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,1,0,0,1,2,1,0,1,2,6,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,373,        HTML32.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,32,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,374,        HTML32.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,36,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,378,        HTML40 = new Entities();,1,0,0,1,2,1,0,1,2,6,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,379,        fillWithHtml40Entities(HTML40);,0,0,0,1,2,0,2,0,1,4,31,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,380,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,388,        entities.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,34,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,389,        entities.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,38,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,390,        entities.addEntities(HTML40_ARRAY);,0,0,0,1,2,0,3,0,0,3,35,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,391,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,5,1,0,1,3,2,0,0,1,6,46,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,1,1,12,0,3,0,1,5,66,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,704,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,713,"        map.add(name, value);",0,0,0,0,2,0,4,0,0,2,21,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,714,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,96,"        this(20, 0.75f);",0,0,0,0,2,1,0,0,0,2,16,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,97,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,121,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,125,        if (loadFactor <= 0) {,1,1,0,1,3,1,0,0,0,5,22,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,1,1,0,1,3,1,0,0,0,5,27,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,2,0,0,0,0,1,0,0,1,3,29,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,1,0,1,0,2,1,0,1,1,6,35,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,3,1,0,1,4,1,0,0,1,6,49,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,135,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,3,0,0,0,0,1,0,0,0,2,31,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,259,        Entry oldMap[] = table;,2,0,0,0,2,0,0,1,0,3,23,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,2,2,0,0,0,1,0,0,0,3,38,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,1,0,1,0,4,1,0,2,0,5,40,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,3,1,0,1,4,1,0,0,1,6,45,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,2,0,0,0,0,0,0,0,1,2,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,3,1,0,1,3,2,0,0,1,6,37,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,2,1,1,1,5,1,0,1,0,7,43,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,2,0,0,0,0,0,0,1,0,2,14,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,3,0,0,0,0,0,0,0,1,2,15,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,4,2,0,1,2,1,0,0,0,5,48,9,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,2,0,1,0,2,0,0,0,1,4,23,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,1,0,1,0,2,0,0,0,1,4,18,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,275,            },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,277,    },0,0,0,0,1,0,0,0,0,1,1,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,2,0,0,0,0,1,0,0,0,2,15,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,1,0,0,0,5,45,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,1,5,1,0,1,1,8,51,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,3,1,0,1,3,1,0,0,0,5,21,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,307,        if (count >= threshold) {,2,1,0,1,3,1,0,0,0,5,25,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,1,0,1,4,9,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,2,0,0,0,0,0,0,0,1,2,12,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,1,5,41,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",4,0,1,0,4,1,0,2,1,6,50,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,1,0,1,0,2,0,0,0,1,4,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,318,        count++;,1,0,0,0,0,0,0,0,1,2,8,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,319,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,510,            if (value < LOOKUP_TABLE_SIZE) {,2,1,0,1,3,1,0,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,511,                return lookupTable()[value];,0,0,1,1,4,1,1,0,1,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,513,            return super.name(value);,2,0,0,1,2,2,0,0,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,523,            if (lookupTable == null) {,1,1,0,1,3,1,0,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,524,                createLookupTable();,0,0,0,1,2,0,1,0,1,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,526,            return lookupTable;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,533,            lookupTable = new String[LOOKUP_TABLE_SIZE];,1,0,1,0,2,1,0,1,1,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,534,            for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {,4,1,0,1,3,2,0,0,1,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,535,                lookupTable[i] = super.name(i);,2,0,1,1,4,1,0,0,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,537,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,435,            return (String) mapValueToName.get(value);,0,0,0,1,4,1,3,1,0,5,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,442,            Object value = mapNameToValue.get(name);,1,0,0,1,2,0,3,1,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,443,            if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,444,                return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,446,            return ((Integer) value).intValue();,1,0,0,2,6,1,1,1,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,723,        return map.name(value);,0,0,0,1,2,1,3,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,733,        return map.value(name);,0,0,0,1,2,1,3,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,747,        StringBuffer buf = new StringBuffer(str.length() * 2);,1,1,0,2,4,1,2,2,1,8,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,749,        for (i = 0; i < str.length(); ++i) {,3,1,0,2,5,1,2,0,2,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,750,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,751,            String entityName = this.entityName(ch);,1,0,0,1,2,1,2,1,0,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,752,            if (entityName == null) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,753,                if (ch > 0x7F) {,1,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,754,                    int intValue = ch;,2,0,0,0,0,1,0,0,0,2,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,755,"                    buf.append(""&#"");",0,0,0,1,2,0,2,0,1,4,17,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,756,                    buf.append(intValue);,0,0,0,1,2,0,3,0,0,3,21,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,757,                    buf.append(';');,0,0,0,1,2,0,2,0,1,4,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,758,                } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,759,                    buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,762,                buf.append('&');,0,0,0,1,2,0,2,0,1,4,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,763,                buf.append(entityName);,0,0,0,1,2,0,3,0,0,3,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,764,                buf.append(';');,0,0,0,1,2,0,2,0,1,4,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,767,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,784,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,785,        for (int i = 0; i < len; i++) {,4,1,0,1,3,2,0,0,1,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,786,            char c = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,787,            String entityName = this.entityName(c);,1,0,0,1,2,1,2,1,0,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,788,            if (entityName == null) {,1,1,0,1,3,1,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,789,                if (c > 0x7F) {,1,1,0,1,3,1,0,0,0,5,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,790,"                    writer.write(""&#"");",0,0,0,1,2,0,2,0,1,4,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,791,"                    writer.write(Integer.toString(c, 10));",0,0,0,0,4,0,5,0,0,2,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,792,                    writer.write(';');,0,0,0,1,2,0,2,0,1,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,794,                    writer.write(c);,0,0,0,1,2,0,3,0,0,3,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,797,                writer.write('&');,0,0,0,1,2,0,2,0,1,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,798,                writer.write(entityName);,0,0,0,1,2,0,3,0,0,3,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,799,                writer.write(';');,0,0,0,1,2,0,2,0,1,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,802,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,816,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,826,                    buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,827,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,832,                    buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,833,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,838,                    entityValue = -1;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,841,                        entityValue = -1;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,846,"                                entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();",1,0,0,1,6,0,5,0,1,5,70,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,850,                        } catch (NumberFormatException ex) {,1,0,0,1,4,1,0,1,0,5,36,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,851,                            entityValue = -1;,1,0,0,0,0,0,0,0,2,2,17,16,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,855,                    entityValue = this.entityValue(entityName);,1,0,0,1,2,1,2,0,1,6,43,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,858,                    buf.append('&');,0,0,0,1,2,0,2,0,1,4,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,859,                    buf.append(entityName);,0,0,0,1,2,0,3,0,0,3,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,860,                    buf.append(';');,0,0,0,1,2,0,2,0,1,4,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,866,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,885,        int firstAmp = string.indexOf('&');,1,0,0,1,2,1,2,0,1,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,886,        if (firstAmp < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,887,            writer.write(string);,0,0,0,1,2,0,3,0,0,3,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,888,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,891,"        writer.write(string, 0, firstAmp);",0,0,0,0,2,0,4,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,892,        int len = string.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,893,        for (int i = firstAmp; i < len; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,894,            char c = string.charAt(i);,1,0,0,1,2,1,3,0,0,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,895,            if (c == '&') {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,896,                int nextIdx = i+1;,2,1,0,0,0,1,0,0,0,3,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,897,"                int semiColonIdx = string.indexOf(';', nextIdx);",1,0,0,0,2,1,3,0,1,5,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,898,                if (semiColonIdx == -1) {,1,1,0,1,3,1,0,0,1,6,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,899,                    writer.write(c);,0,0,0,1,2,0,3,0,0,3,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,900,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,902,"                int amphersandIdx = string.indexOf('&', i + 1);",2,1,0,0,2,1,2,0,1,6,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,903,                if( amphersandIdx != -1 && amphersandIdx < semiColonIdx ) {,3,3,0,1,3,1,0,0,1,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,905,                    writer.write(c);,0,0,0,1,2,0,3,0,0,3,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,906,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,908,"                String entityContent = string.substring(nextIdx, semiColonIdx);",1,0,0,0,2,0,4,1,0,4,63,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,909,                int entityValue = -1;,1,0,0,0,0,1,0,0,1,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,910,                int entityContentLen = entityContent.length();,1,0,0,1,2,1,2,0,0,5,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,911,                if (entityContentLen > 0) {,1,1,0,1,3,1,0,0,0,5,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,912,                    if (entityContent.charAt(0) == '#') { //escaped value content is an integer (decimal or hexidecimal),0,1,0,2,7,1,2,0,1,6,100,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,913,                        if (entityContentLen > 1) {  ,1,1,0,1,3,1,0,0,0,5,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,914,                            char isHexChar = entityContent.charAt(1);,1,0,0,1,2,1,2,0,0,5,41,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,916,                                switch (isHexChar) {,1,0,0,1,3,1,0,0,0,4,20,16,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,919,"                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);",1,0,0,1,4,0,4,0,1,5,63,18,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,922,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",1,0,0,1,4,0,4,0,1,5,63,18,0.0,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,926,                            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,925,                            } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,16,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,927,                        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,929,                        entityValue = this.entityValue(entityContent);,1,0,0,1,2,1,2,0,1,6,46,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,933,                if (entityValue == -1) {,1,1,0,1,3,1,0,0,1,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,934,                    writer.write('&');,0,0,0,1,2,0,2,0,1,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,935,                    writer.write(entityContent);,0,0,0,1,2,0,3,0,0,3,28,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,936,                    writer.write(';');,0,0,0,1,2,0,2,0,1,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,938,                    writer.write(entityValue);,0,0,0,1,2,0,3,0,0,3,26,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,940,                i = semiColonIdx; //move index up to the semi-colon                ,2,0,0,0,0,0,0,0,1,2,51,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,941,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,942,                writer.write(c);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,945,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,624,          super();,0,0,0,1,2,1,0,0,1,4,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,625,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,634,            super(growBy);,1,0,0,1,2,1,0,0,1,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,635,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,645,            int low = 0;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,646,            int high = size - 1;,2,1,0,0,0,1,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,648,            while (low <= high) {,2,1,0,1,3,1,0,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,649,                int mid = (low + high) >> 1;,3,2,0,1,2,1,0,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,650,                int midVal = values[mid];,1,0,1,0,2,1,0,0,0,4,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,652,                if (midVal < key) {,2,1,0,1,3,1,0,0,0,5,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,653,                    low = mid + 1;,2,1,0,0,0,0,0,0,1,3,14,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,654,                } else if (midVal > key) {,2,1,0,1,4,2,0,0,0,5,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,655,                    high = mid - 1;,2,1,0,0,0,0,0,0,1,3,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,657,                    return mid; // key found,1,0,0,0,0,1,0,0,0,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,659,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,660,            return -(low + 1);  // key not found.,1,1,0,1,2,1,0,0,1,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,667,            ensureCapacity(size + 1);,1,1,0,1,2,0,1,0,1,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,668,            int insertAt = binarySearch(value);,1,0,0,1,2,1,2,0,1,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,669,            if (insertAt > 0) {,1,1,0,1,3,1,0,0,0,5,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,670,                return;    // note: this means you can't insert the same value twice,0,0,0,0,0,2,0,0,1,2,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,672,            insertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one,2,1,0,1,2,0,0,0,2,5,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,673,"            System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);",3,2,0,0,2,0,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,674,            values[insertAt] = value;,1,0,1,0,2,0,0,0,1,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,675,"            System.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);",3,2,0,0,2,0,5,0,0,4,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,676,            names[insertAt] = name;,1,0,1,0,2,0,0,0,1,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,677,            size++;,1,0,0,0,0,0,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,678,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,684,            int index = binarySearch(value);,1,0,0,1,2,1,2,0,1,6,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,685,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,686,                return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,688,            return names[index];,0,0,1,0,2,1,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,549,        public ArrayEntityMap() {,1,0,0,1,3,1,0,0,1,5,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,541,        protected int growBy = 100;,1,0,0,0,0,2,0,0,1,3,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,542,        protected int size = 0;,1,0,0,0,0,2,0,0,1,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,550,            names = new String[growBy];,1,0,1,0,2,1,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,551,            values = new int[growBy];,1,0,1,0,2,2,0,0,1,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,552,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,560,        public ArrayEntityMap(int growBy) {,2,0,0,1,3,2,0,0,1,5,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,561,            this.growBy = growBy;,2,0,0,0,0,1,0,0,1,3,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,562,            names = new String[growBy];,1,0,1,0,2,1,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,563,            values = new int[growBy];,1,0,1,0,2,2,0,0,1,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,564,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,570,            ensureCapacity(size + 1);,1,1,0,1,2,0,1,0,1,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,571,            names[size] = name;,1,0,1,0,2,0,0,0,1,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,572,            values[size] = value;,1,0,1,0,2,0,0,0,1,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,573,            size++;,1,0,0,0,0,0,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,574,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,582,            if (capacity > names.length) {,3,1,0,1,3,1,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,583,"                int newSize = Math.max(capacity, size + growBy);",3,1,0,0,2,1,3,0,0,5,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,584,                String[] newNames = new String[newSize];,1,0,1,0,4,1,0,2,0,5,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,585,"                System.arraycopy(names, 0, newNames, 0, size);",0,0,0,0,2,0,5,0,0,2,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,586,                names = newNames;,2,0,0,0,0,0,0,0,1,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,587,                int[] newValues = new int[newSize];,1,0,1,0,4,3,0,0,0,4,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,588,"                System.arraycopy(values, 0, newValues, 0, size);",0,0,0,0,2,0,5,0,0,2,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,589,                values = newValues;,2,0,0,0,0,0,0,0,1,2,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,591,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,597,            for (int i = 0; i < size; ++i) {,4,1,0,1,3,2,0,0,1,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,598,                if (values[i] == value) {,1,1,1,1,5,1,0,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,599,                    return names[i];,0,0,1,0,2,1,0,0,0,3,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,602,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,609,            for (int i = 0; i < size; ++i) {,4,1,0,1,3,2,0,0,1,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,610,                if (names[i].equals(name)) {,0,0,1,2,7,1,2,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,611,                    return values[i];,0,0,1,0,2,1,0,0,0,3,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,614,            return -1;,0,0,0,0,0,1,0,0,1,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,108,"        this(initialCapacity, 0.75f);",1,0,0,0,2,1,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,109,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,123,"            throw new IllegalArgumentException(""Illegal Capacity: "" + initialCapacity);",1,1,0,1,2,2,0,1,2,7,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,126,"            throw new IllegalArgumentException(""Illegal Load: "" + loadFactor);",1,1,0,1,2,2,0,1,2,7,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,129,            initialCapacity = 1;,1,0,0,0,0,0,0,0,1,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,143,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,153,        return count == 0;,1,1,0,0,0,1,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,175,        if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,176,            throw new NullPointerException();,0,0,0,1,2,2,0,1,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,179,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,180,        for (int i = tab.length; i-- > 0;) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,181,            for (Entry e = tab[i]; e != null; e = e.next) {,5,1,1,1,5,1,0,1,1,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,182,                if (e.value.equals(value)) {,2,0,0,2,5,1,2,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,183,                    return true;,0,0,0,0,0,1,0,0,1,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,187,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,203,        return contains(value);,0,0,0,1,2,1,2,0,1,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,216,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,217,        int hash = key;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,218,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,1,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,219,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,1,5,1,0,1,1,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,220,            if (e.hash == hash) {,3,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,221,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,224,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,237,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,238,        int hash = key;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,239,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,1,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,240,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,1,5,1,0,1,1,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,241,            if (e.hash == hash) {,3,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,242,                return e.value;,2,0,0,0,0,1,0,0,0,2,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,245,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,301,                Object old = e.value;,3,0,0,0,0,0,0,1,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,302,                e.value = value;,3,0,0,0,0,0,0,0,1,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,303,                return old;,1,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,334,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,335,        int hash = key;,2,0,0,0,0,1,0,0,0,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,336,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,1,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,337,"        for (Entry e = tab[index], prev = null; e != null; prev = e, e = e.next) {",8,1,1,0,5,1,0,1,2,7,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,338,            if (e.hash == hash) {,3,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,339,                if (prev != null) {,1,1,0,1,3,1,0,0,0,5,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,340,                    prev.next = e.next;,4,0,0,0,0,0,0,0,1,2,19,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,342,                    tab[index] = e.next;,2,0,1,0,2,0,0,0,1,4,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,344,                count--;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,345,                Object oldValue = e.value;,3,0,0,0,0,0,0,1,0,2,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,346,                e.value = null;,2,0,0,0,0,0,0,0,1,2,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,347,                return oldValue;,1,0,0,0,0,1,0,0,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,350,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,357,        Entry tab[] = table;,2,0,0,0,2,0,0,1,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,358,        for (int index = tab.length; --index >= 0;) {,4,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,359,            tab[index] = null;,0,0,1,0,2,0,0,0,1,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,361,        count = 0;,1,0,0,0,0,0,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,362,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,486,        public HashEntityMap() {,1,0,0,1,3,1,0,0,1,5,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,487,            mapNameToValue = new HashMap();,1,0,0,1,2,1,0,1,2,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,488,            mapValueToName = new HashMap();,1,0,0,1,2,1,0,1,2,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,489,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,451,    static abstract class MapIntMap implements Entities.EntityMap {,3,0,0,0,1,4,0,0,2,4,63,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,459,"            mapNameToValue.put(name, new Integer(value));",1,0,0,1,4,1,3,1,1,7,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,460,"            mapValueToName.put(new Integer(value), name);",1,0,0,1,4,1,3,1,1,7,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,461,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,467,            return (String) mapValueToName.get(new Integer(value));,1,0,0,2,6,2,2,2,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,474,            Object value = mapNameToValue.get(name);,1,0,0,1,2,0,3,1,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,475,            if (value == null) {,1,1,0,1,3,1,0,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,476,                return -1;,0,0,0,0,0,1,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,478,            return ((Integer) value).intValue();,1,0,0,2,6,1,1,1,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,496,        public TreeEntityMap() {,1,0,0,1,3,1,0,0,1,5,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,497,            mapNameToValue = new TreeMap();,1,0,0,1,2,1,0,1,2,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,498,            mapValueToName = new TreeMap();,1,0,0,1,2,1,0,1,2,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,499,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
