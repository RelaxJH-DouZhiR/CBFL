dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,43,    public static final Long LONG_ONE = new Long(1L);,2,0,0,1,2,3,0,4,0,9,49,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,0,0,0,1,2,0,0,0,0,3,64,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,0,4,0,9,58,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,0,0,0,1,2,0,0,0,0,3,55,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.07273,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,6,1,0,1,3,0,0,0,0,7,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,4,0,0,2,4,6,0,4,0,15,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,1,58,8,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,4,3,1,1,2,0,8,4,0,28,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,6,1,0,1,3,0,4,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",6,0,0,3,6,1,6,2,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,6,0,0,2,6,0,0,2,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",4,0,1,3,6,0,4,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,2,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,2,0,0,0,0,4,2,0,0,8,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,4,3,0,1,2,1,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,2,1,0,1,3,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,8,0,0,0,0,0,0,4,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,2,0,0,2,4,0,12,2,0,16,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,3,6,1,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",2,0,0,4,8,0,8,4,0,14,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,470,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,4,2,0,1,3,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,473,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,476,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,479,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,4,0,0,0,0,4,0,4,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,2,0,1,2,4,0,8,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,484,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,508,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,512,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,515,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,0,0,0,1,3,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,519,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,8,5,1,2,4,0,4,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,523,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,4,0,0,0,0,4,0,4,0,11,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,0,1,0,0,0,1,10,0,0,12,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,8,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,556,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,2,1,0,1,3,0,6,0,0,9,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,5,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,562,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,10,0,0,0,0,1,4,4,0,20,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,592,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,596,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,2,1,0,2,4,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,601,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,10,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,14,4,0,1,3,0,0,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,8,1,1,0,0,0,2,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,634,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,635,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,636,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,639,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,18,0,0,18,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,641,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,665,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,2,0,0,1,3,0,4,0,0,6,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,668,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,671,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,673,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,675,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,4,0,1,2,4,0,0,0,0,6,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,679,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,704,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,8,1,0,1,3,1,6,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,8,2,0,1,3,0,0,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,12,4,1,0,0,0,0,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,2,1,1,2,4,0,10,0,0,16,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,718,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,6,3,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,743,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,745,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,746,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,752,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,753,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,757,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,10,6,0,0,0,1,0,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,775,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,778,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,796,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,798,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,814,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,0,1,3,0,0,4,0,20,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,832,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,834,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,2,1,0,0,0,1,4,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,852,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,865,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,2,0,3,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,4,1,0,0,0,2,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,904,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,2,0,0,0,0,1,8,2,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,919,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,2,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,924,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,2,2,0,1,3,0,4,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,0,1,0,0,0,1,10,0,0,11,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,2,0,0,1,2,1,6,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,966,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,983,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,2,0,0,0,0,4,0,0,0,5,7,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,10,1,0,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,989,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,990,            tmp = array[j];,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,991,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,992,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,993,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,996,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1007,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1009,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,8,1,1,0,0,0,0,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1013,            tmp = array[j];,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1014,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,10,1,0,1,2,0,0,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,6,3,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1019,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1029,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1030,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1033,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,10,5,0,1,3,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,4,0,1,2,4,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,6,0,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1040,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1042,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1052,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1053,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,0,1,0,0,0,0,3,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1058,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1059,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1060,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1061,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1062,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1065,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1075,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1076,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1078,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1079,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1081,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1082,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,2,0,1,2,4,0,4,0,0,16,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1084,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,4,1,0,0,0,0,0,0,0,5,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,4,0,1,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1088,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1098,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1099,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,2,0,0,0,0,0,0,8,0,10,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1106,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1107,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1109,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,0,0,0,1,3,0,0,0,0,1,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1122,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1124,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,4,1,1,1,2,0,18,0,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,2,4,0,8,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,2,0,1,1,2,0,4,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1131,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1132,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1134,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1144,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,8,3,0,0,0,1,0,0,0,11,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1148,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1150,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1152,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1153,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,4,0,1,0,0,0,0,0,0,7,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,8,0,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,8,0,0,9,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,6,0,0,0,0,1,0,0,0,7,7,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,6,1,0,0,0,0,4,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,4,1,1,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,2,4,1,2,4,0,12,0,0,27,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1177,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1180,    },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1198,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1216,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1217,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,4,0,1,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1223,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1224,                if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,6,4,0,12,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,2,1,1,1,3,0,0,0,0,7,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,8,0,1,3,7,0,14,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1231,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1235,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1268,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1270,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1271,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,4,2,0,18,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,14,2,0,0,0,0,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,2,0,0,1,3,0,8,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,4,0,0,0,0,1,0,4,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1281,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,16,3,0,1,3,0,0,0,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,1,3,7,0,14,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1301,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1317,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,6,1,0,0,0,0,4,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1341,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1342,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1383,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,10,1,0,0,0,0,4,0,0,19,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1386,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,10,2,1,2,5,0,0,0,0,17,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1404,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1420,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1438,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1439,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1441,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,2,0,0,0,0,0,0,2,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,2,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,8,2,1,2,5,0,2,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1463,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1481,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1484,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1485,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1486,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,2,0,4,0,19,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1491,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1494,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",6,2,0,1,2,1,6,0,0,14,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1541,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1544,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1547,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1548,            if (valueToFind == array[i]) {,0,0,0,2,5,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1549,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1552,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1566,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1584,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1587,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1588,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,4,0,0,12,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1594,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1597,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1610,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1627,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,6,3,0,0,0,1,0,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,10,3,1,2,5,0,0,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1654,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1691,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,4,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1697,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1699,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1700,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1704,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1718,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1734,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1755,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,22,2,0,1,3,0,0,0,0,26,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,2,1,0,1,3,0,8,2,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1800,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1804,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1805,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,10,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1837,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1854,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1872,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1880,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1904,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,8,0,0,0,0,1,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1907,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,10,2,0,0,0,0,10,0,0,23,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1911,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1913,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1914,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,16,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1948,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",0,0,0,1,2,1,0,0,0,4,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1966,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,8,1,0,0,0,1,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1969,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,2,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,0,1,0,1,4,0,14,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1972,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1975,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2000,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,4,0,0,11,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2003,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2009,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,2,1,0,1,3,0,8,0,0,11,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,6,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2012,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,2,0,1,2,1,6,2,0,13,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2045,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,1,0,1,2,1,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,12,0,0,12,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2082,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,8,8,0,32,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2086,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2090,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2123,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2125,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2126,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2131,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2148,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2164,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,2,0,0,1,3,0,0,0,0,3,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,6,0,0,30,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,8,1,1,2,5,1,0,4,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2194,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2209,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2227,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2231,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,8,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2235,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,8,0,0,2,5,0,0,4,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,14,0,0,17,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2272,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,6,1,0,3,6,0,0,0,0,7,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2294,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2295,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2298,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2299,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,4,0,1,1,2,0,0,2,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,6,1,1,3,6,0,10,0,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2303,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2317,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2318,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2321,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,4,1,0,1,3,0,4,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2340,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,4,0,0,1,4,0,0,0,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2345,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2346,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2363,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2366,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,10,2,0,1,3,0,12,0,0,25,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2369,            result[i] = (b == null ? valueForNull : b.longValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,8,1,0,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,4,1,1,0,0,1,0,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,8,2,0,1,4,0,4,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2386,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2390,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2392,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2407,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2408,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,8,1,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2410,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,8,0,0,2,4,1,0,0,0,9,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,6,0,1,3,6,0,14,0,0,30,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,2,1,0,0,0,1,0,2,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2431,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2432,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,2,0,1,1,2,0,4,2,0,21,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,2,0,1,0,0,1,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2476,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2481,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,0,0,1,3,6,0,28,0,0,39,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2484,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2497,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2498,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2499,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2500,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,6,1,1,1,2,0,12,2,0,25,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2505,            result[i] = (b == null ? valueForNull : b.shortValue());,6,2,1,3,6,0,14,0,0,27,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2507,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2519,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2520,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2521,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2522,            return EMPTY_SHORT_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2524,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2525,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2526,            result[i] = Short.valueOf(array[i]);,4,0,1,3,6,0,4,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2528,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2543,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2544,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2545,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2546,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2548,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2549,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,4,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2550,            result[i] = array[i].byteValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2552,        return result;,4,1,0,0,0,1,4,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2565,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2566,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2567,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2568,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2570,        final byte[] result = new byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2571,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2572,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2573,            result[i] = (b == null ? valueForNull : b.byteValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2575,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2587,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2588,            return null;,8,4,0,0,0,1,6,0,0,18,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2589,        } else if (array.length == 0) {,4,1,0,1,4,0,14,0,0,19,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2590,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2592,        final Byte[] result = new Byte[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2593,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2594,            result[i] = Byte.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2596,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2611,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2612,            return null;,14,3,0,0,0,1,0,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2613,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2614,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2616,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2617,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2618,            result[i] = array[i].doubleValue();,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2620,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2633,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2634,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2635,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2636,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2638,        final double[] result = new double[array.length];,6,0,0,2,4,1,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2639,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2640,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2641,            result[i] = (b == null ? valueForNull : b.doubleValue());,0,0,0,3,6,0,0,0,0,9,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2643,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2655,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2656,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2657,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,4,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2658,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2660,        final Double[] result = new Double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2661,        for (int i = 0; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2662,            result[i] = Double.valueOf(array[i]);,4,1,1,3,6,0,8,0,0,22,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2664,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2679,        if (array == null) {,2,1,1,1,3,0,0,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2680,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2681,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2682,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2684,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2685,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2686,            result[i] = array[i].floatValue();,2,1,1,3,6,0,2,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2688,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2701,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2702,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2703,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2704,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2706,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2707,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2708,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2709,            result[i] = (b == null ? valueForNull : b.floatValue());,16,2,1,3,6,1,14,0,0,38,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2711,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2723,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2724,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2725,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2726,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2728,        final Float[] result = new Float[array.length];,4,1,0,2,4,0,0,0,0,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2729,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2730,            result[i] = Float.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2732,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2747,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2748,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2749,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2750,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2752,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2753,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2754,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2756,        return result;,2,1,0,0,0,1,8,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2769,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2770,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2771,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2772,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2774,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2775,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2776,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2777,            result[i] = (b == null ? valueForNull : b.booleanValue());,6,1,1,3,6,0,8,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2779,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2791,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2792,            return null;,2,0,0,0,0,1,14,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2793,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2794,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2796,        final Boolean[] result = new Boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2797,        for (int i = 0; i < array.length; i++) {,24,5,0,1,3,0,0,0,0,31,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2798,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,8,0,1,3,6,0,0,0,0,17,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2800,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2812,        if (array == null || array.length == 0) {,14,5,0,1,3,0,0,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2813,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2815,        return false;,2,1,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2826,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2827,            return true;,0,0,0,0,0,1,10,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2829,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2840,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2841,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2843,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2854,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2855,            return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2857,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2868,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2869,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2871,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2882,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2883,            return true;,4,1,1,0,0,1,4,0,0,14,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2885,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2896,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2897,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2899,        return false;,0,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2910,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2911,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2913,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2924,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2925,            return true;,2,1,0,0,0,1,8,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2927,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2955,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2957,            return clone(array1);,0,0,1,1,2,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2985,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2986,            return clone(array2);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2987,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2988,            return clone(array1);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2990,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2991,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2992,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2993,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3014,        if (array1 == null) {,0,1,0,1,3,0,12,0,0,13,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3015,            return clone(array2);,0,0,0,1,2,1,0,0,0,1,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3016,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3017,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3019,        char[] joinedArray = new char[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3020,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,1,1,2,0,2,0,0,11,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3021,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3022,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3043,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3044,            return clone(array2);,2,0,1,1,2,1,4,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3045,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3046,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3048,        byte[] joinedArray = new byte[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3049,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3050,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3051,        return joinedArray;,4,0,0,0,0,1,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3072,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3073,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3074,        } else if (array2 == null) {,10,2,0,1,4,0,10,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3075,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3077,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3078,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3079,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3080,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3101,        if (array1 == null) {,2,1,0,1,3,0,10,0,0,14,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3102,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3103,        } else if (array2 == null) {,4,1,0,1,4,0,8,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3104,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3106,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3107,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",10,0,0,1,2,0,8,0,0,19,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3108,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,0,1,2,0,8,0,0,19,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3109,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3130,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3131,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3132,        } else if (array2 == null) {,4,1,0,1,4,0,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3133,            return clone(array1);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3135,        long[] joinedArray = new long[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3136,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3137,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3138,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3159,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3160,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3161,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3162,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3164,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3165,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3166,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3167,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3188,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3189,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3190,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3191,            return clone(array1);,12,0,0,1,2,1,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3193,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3194,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3195,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3196,        return joinedArray;,4,1,0,0,0,1,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3225,        Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);,0,0,0,3,6,0,0,0,0,9,105,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3226,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3227,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3228,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3253,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3254,        newArray[newArray.length - 1] = element;,8,1,1,1,2,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3255,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3280,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3281,        newArray[newArray.length - 1] = element;,12,2,1,1,2,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3282,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3307,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,2,0,4,8,0,8,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3308,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3309,        return newArray;,2,0,0,0,0,1,8,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3334,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",14,1,0,4,8,0,4,0,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3335,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,4,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3336,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3361,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3362,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3363,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3388,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",8,0,0,4,8,0,4,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3389,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3390,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3415,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,1,4,8,0,0,0,0,7,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3416,        newArray[newArray.length - 1] = element;,10,2,1,1,2,0,2,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3417,        return newArray;,4,0,1,0,0,1,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3442,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3443,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3444,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3457,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3458,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,6,8,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3459,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3460,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,10,0,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3461,            return newArray;,8,2,0,0,0,1,4,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3463,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3496,        Class<?> clss = null;,10,1,0,0,0,0,0,2,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3497,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3498,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3499,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3500,            clss = element.getClass();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3502,            return (T[]) new Object[] { null };,8,6,0,4,8,1,0,4,0,18,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3504,"        return (T[]) add(array, index, element, clss);",0,1,0,3,6,1,10,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3535,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",8,0,0,4,8,1,12,0,0,21,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3567,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",4,0,0,4,8,1,12,0,0,16,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3598,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3629,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3660,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0,0,0,4,8,1,0,0,0,13,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3691,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3722,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3753,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",0,0,0,4,8,1,0,0,0,13,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3768,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3769,            if (index != 0) {,6,1,0,1,3,0,0,0,0,8,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3770,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3772,"            Object joinedArray = Array.newInstance(clss, 1);",0,0,0,1,2,0,6,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3773,"            Array.set(joinedArray, 0, element);",2,0,0,1,2,0,12,2,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3774,            return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3776,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3777,        if (index > length || index < 0) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3778,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3780,"        Object result = Array.newInstance(clss, length + 1);",0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3781,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3782,"        Array.set(result, index, element);",0,1,0,1,2,0,20,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3783,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3784,"            System.arraycopy(array, index, result, index + 1, length - index);",6,2,0,1,2,0,10,0,0,18,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3786,        return result;,4,0,0,0,0,1,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3819,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,4,4,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3848,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3849,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3850,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3852,"        return remove(array, index);",2,0,0,1,2,1,10,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3884,"        return (boolean[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3913,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3914,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3915,            return clone(array);,4,0,0,1,2,1,4,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3917,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3949,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3978,"        int index = indexOf(array, element);",6,1,1,1,2,0,10,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3979,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3980,            return clone(array);,0,0,0,1,2,1,8,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3982,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4014,"        return (char[]) remove((Object) array, index);",0,0,0,4,8,1,10,0,0,10,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4043,"        int index = indexOf(array, element);",4,3,1,1,2,0,20,0,0,33,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4044,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4045,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4047,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4079,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4108,"        int index = indexOf(array, element);",4,1,0,1,2,0,14,2,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4109,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4110,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4112,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4144,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4173,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4174,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4175,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4177,"        return remove(array, index);",4,1,0,1,2,1,6,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4209,"        return (int[]) remove((Object) array, index);",6,0,0,4,8,1,16,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4238,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4239,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4240,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4242,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4274,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4303,"        int index = indexOf(array, element);",4,2,0,1,2,0,12,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4304,        if (index == INDEX_NOT_FOUND) {,6,2,0,1,3,0,0,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4305,            return clone(array);,2,0,0,1,2,1,8,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4307,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4339,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4368,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4369,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4370,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4372,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4397,        int length = getLength(array);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4398,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4399,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4402,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",4,1,0,3,6,0,10,2,0,17,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4403,"        System.arraycopy(array, 0, result, 0, index);",4,1,0,1,2,0,10,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4404,        if (index < length - 1) {,8,4,0,1,3,0,2,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4405,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",10,3,0,1,2,0,10,0,0,23,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4408,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,1,0,1,2,1,4,0,0,5,44,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,6,5,0,3,6,0,4,0,0,16,40,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",2,1,0,1,2,0,6,0,0,11,77,10,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,2,0,0,2,4,0,8,0,0,11,42,9,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/Validate,38,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1348,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1360,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",6,0,0,1,2,0,4,0,0,11,56,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,634,                break;,2,0,0,0,0,3,2,2,0,10,6,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,8,2,0,12,6,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,0,0,0,0,0,0,0,0,0,0,23,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",10,1,0,3,6,1,6,2,0,20,73,3,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,2,0,0,1,3,0,0,0,0,2,22,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,6,0,0,6,33,5,0.0303,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1293,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,8,1,0,1,3,0,6,0,0,16,38,1,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1318,        },2,0,0,0,1,2,0,0,0,5,1,2,0.0303,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,6,9,0,1,3,0,4,0,0,19,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,2,0,0,0,0,1,4,0,0,7,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,6,0,0,0,0,0,0,0,0,6,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,6,1,0,1,3,3,0,2,0,12,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,0,0,0,2,4,0,0,0,0,6,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,13,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,8,0,0,12,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,8,3,0,1,3,0,6,2,0,20,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,0,0,0,4,8,0,0,0,0,12,67,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,4,1,0,1,3,0,0,0,0,5,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",2,1,0,2,4,0,10,0,0,14,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,14,2,0,2,4,0,4,4,0,24,64,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,0,0,0,2,4,0,0,0,0,6,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,0,0,0,2,4,0,0,0,0,6,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",4,0,1,2,4,0,10,0,0,20,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,8,1,1,1,2,0,0,0,0,16,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,3,0,0,1,3,0,12,0,0,15,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,2,1,0,2,4,0,10,0,0,13,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,4,0,0,1,3,3,2,2,0,13,14,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,2,1,0,0,0,1,0,2,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",6,6,0,1,2,1,8,0,0,21,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,6,1,0,0,0,1,10,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,10,2,0,4,9,0,10,2,0,24,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,8,3,0,3,7,0,4,4,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,4,1,0,1,3,0,4,2,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,2,2,0,2,6,0,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,541,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,8,3,0,0,0,0,14,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",2,0,0,1,2,1,6,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,1,2,1,8,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,8,3,0,0,0,1,4,2,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,603,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,605,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,3,6,0,4,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,4,0,0,0,0,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,627,        if(input == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,628,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,630,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,637,"                Class normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",0,0,0,1,2,0,0,0,0,3,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,640,"                Class normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",2,0,0,1,2,0,0,2,0,4,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,643,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0,0,0,1,2,0,0,0,0,3,115,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,646,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,649,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",2,0,0,3,6,0,10,4,0,16,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,652,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0,0,0,2,4,0,0,0,0,6,109,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,653,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,654,            } catch(ClassNotFoundException cnfe) {,0,0,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,655,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",2,0,0,1,2,0,0,2,0,5,95,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,656,            } catch(NoSuchMethodException nsme) {,4,0,0,1,4,2,0,4,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,657,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",2,0,0,1,2,0,0,2,0,5,94,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,658,            } catch(NoSuchFieldException nsfe) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,659,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",2,0,0,1,2,0,0,2,0,5,93,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,660,            } catch(IllegalAccessException iae) {,2,0,0,1,4,0,0,2,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,661,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",4,0,0,1,2,0,0,2,0,7,94,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,662,            } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,663,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",10,1,0,1,2,0,0,4,0,18,96,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,664,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,0,0,1,4,3,10,4,0,21,58,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,665,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",2,0,0,1,2,0,0,2,0,5,97,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,666,            } catch(SecurityException se) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,667,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",4,1,0,1,2,0,0,2,0,8,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,670,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,2,0,3,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,697,        return str1 == null ? str2 == null : str1.equals(str2);,2,0,0,1,2,2,0,2,0,5,55,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,722,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,747,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,748,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,750,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,779,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,780,            return -1;,2,0,0,0,0,4,0,4,0,9,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,782,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,808,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,809,            return -1;,0,0,0,0,0,1,12,0,0,12,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,811,        return str.indexOf(searchStr);,2,0,1,1,2,1,6,2,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,842,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,843,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,845,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,846,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,848,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,849,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,851,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,3,2,2,0,11,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,852,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,853,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,855,            found++;,2,0,0,0,0,0,0,4,0,6,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,856,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,857,        return index;,6,0,0,0,0,1,0,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,892,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,893,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,896,        if (searchStr.length() == 0 && startPos >= str.length()) {,8,3,0,3,7,0,14,0,0,26,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,897,            return str.length();,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,899,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,924,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,925,            return -1;,0,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,927,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,958,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,959,            return -1;,6,0,0,0,0,1,0,0,0,7,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,961,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,987,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,988,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,990,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1022,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1023,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1025,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1050,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1051,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1053,        return str.indexOf(searchChar) >= 0;,4,2,0,1,2,1,10,2,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1078,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1079,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1081,        return str.indexOf(searchStr) >= 0;,8,7,0,1,2,1,0,0,0,19,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1108,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1109,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1111,        int len = searchStr.length();,8,3,0,1,2,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1112,        int max = str.length() - len;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1113,        for (int i = 0; i <= max; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1114,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",10,1,0,2,5,0,10,0,0,23,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1115,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1118,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1146,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1147,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1149,        for (int i = 0; i < str.length(); i++) {,2,3,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1150,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1151,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1152,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1153,                    return i;,2,0,0,0,0,1,0,0,0,3,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1157,        return -1;,2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1183,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,12,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1184,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1186,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1215,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1216,            return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1218,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1219,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1220,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1221,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1222,                    return true;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1226,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1257,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1258,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1260,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1288,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1289,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1291,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1292,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1293,            for (int j = 0; j < searchChars.length; j++) {,2,1,0,1,3,0,0,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1294,                if (searchChars[j] == ch) {,12,2,1,2,5,0,0,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1295,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1298,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1300,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1326,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1327,            return -1;,4,0,0,0,0,1,0,0,0,5,10,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1329,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1330,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1331,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1334,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1362,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1363,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1365,        if (str.length() == 0) {,2,0,0,2,5,0,6,0,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1366,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1368,        if (valid.length == 0) {,0,1,0,1,3,0,8,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1369,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1371,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1397,        if (str == null || validChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1398,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1400,"        return containsOnly(str, validChars.toCharArray());",0,0,1,2,4,1,0,0,0,4,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1428,        if (str == null || invalidChars == null) {,2,0,0,1,3,1,0,2,0,7,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1429,            return true;,2,0,0,0,0,1,4,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1431,        int strSize = str.length();,2,0,0,1,2,1,0,0,0,4,27,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1432,        int validSize = invalidChars.length;,2,1,0,0,0,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1433,        for (int i = 0; i < strSize; i++) {,2,0,0,1,3,0,0,0,0,3,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1434,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1435,            for (int j = 0; j < validSize; j++) {,10,1,0,1,3,0,12,0,0,24,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1436,                if (invalidChars[j] == ch) {,10,2,1,2,5,0,6,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1437,                    return false;,2,1,1,0,0,1,0,0,0,7,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1441,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1467,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1468,            return true;,0,0,0,0,0,1,12,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1470,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1502,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1503,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1505,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1508,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1510,        int tmp = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1511,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1512,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1513,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1514,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1516,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1517,            if (tmp == -1) {,4,1,0,1,3,0,0,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1518,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1521,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1522,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1526,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,8,1,0,1,2,1,0,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1555,        if ((str == null) || (searchStrs == null)) {,2,0,0,3,7,0,0,0,0,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1556,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1558,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1559,        int ret = -1;,10,1,0,0,0,0,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1560,        int tmp = 0;,2,0,0,0,0,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1561,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1562,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1563,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1564,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1566,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1567,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1568,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1571,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1601,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1602,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1606,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1607,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1610,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1611,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1613,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1614,            return EMPTY;,12,1,0,0,0,1,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1617,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1656,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1657,            return null;,0,0,0,0,0,1,12,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1661,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1662,            end = str.length() + end; // remember end is negative,0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1664,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1665,            start = str.length() + start; // remember start is negative,14,2,0,1,2,0,4,2,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1669,        if (end > str.length()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1670,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1674,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1675,            return EMPTY;,2,0,0,0,0,1,6,0,0,9,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1678,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1679,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1681,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1682,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1685,"        return str.substring(start, end);",2,1,0,1,2,1,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1711,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1712,            return null;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1714,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1715,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1717,        if (str.length() <= len) {,6,2,0,2,5,0,8,0,0,17,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1718,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1720,"        return str.substring(0, len);",2,0,0,1,2,1,0,0,0,2,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1744,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1747,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1748,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1750,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1751,            return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1753,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1781,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1782,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1784,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,2,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1785,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1787,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1788,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1790,        if (str.length() <= (pos + len)) {,6,2,0,3,7,0,4,2,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1791,            return str.substring(pos);,2,0,0,1,2,1,10,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1793,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1826,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1827,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1829,        if (separator.length() == 0) {,0,2,0,2,5,0,8,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1830,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1832,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1833,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1834,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1836,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1868,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1869,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1871,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1872,            return EMPTY;,2,0,0,0,0,1,8,0,0,11,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1874,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1875,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1876,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1878,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1909,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1910,            return str;,0,0,0,0,0,1,6,0,0,6,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1912,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1913,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1914,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1916,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1949,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1950,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1952,        if (isEmpty(separator)) {,0,0,0,2,5,0,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1953,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1955,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1956,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,0,0,4,9,0,0,0,0,3,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1957,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1959,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1986,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2017,        if (str == null || open == null || close == null) {,8,6,0,1,3,0,0,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2018,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2020,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2021,        if (start != -1) {,6,1,0,1,3,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2022,"            int end = str.indexOf(close, start + open.length());",8,1,0,2,4,0,10,0,0,19,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2023,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2024,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2027,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2053,        if (str == null || isEmpty(open) || isEmpty(close)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2054,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2056,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2057,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2058,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,1,0,0,1,0,0,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2060,        int closeLen = close.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2061,        int openLen = open.length();,2,1,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2062,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2063,        int pos = 0;,0,0,0,0,0,0,0,2,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2064,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2065,"            int start = str.indexOf(open, pos);",6,0,0,1,2,0,8,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2066,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2067,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2069,            start += openLen;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2070,"            int end = str.indexOf(close, start);",6,0,1,1,2,0,0,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2071,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2072,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2074,"            list.add(str.substring(start, end));",2,0,0,2,4,0,14,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2075,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2076,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2077,        if (list.isEmpty()) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2078,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2080,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,8,2,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2111,"        return split(str, null, -1);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2139,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2168,"        return splitWorker(str, separatorChars, -1, false);",4,1,0,1,2,1,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2202,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2229,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2260,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2289,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2322,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2342,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2343,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2346,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2348,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2349,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,6,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2352,        if ((separator == null) || (EMPTY.equals(separator))) {,2,2,0,4,9,0,6,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2354,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,8,0,0,9,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2357,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2359,        ArrayList<String> substrings = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2360,        int numberOfSubstrings = 0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2361,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2362,        int end = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2363,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2364,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2366,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2367,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2368,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2370,                    if (numberOfSubstrings == max) {,6,1,0,1,3,0,0,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2371,                        end = len;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2372,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2376,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2381,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2385,                    if (preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2386,                        numberOfSubstrings += 1;,4,1,0,0,0,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2387,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2388,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2389,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2391,                            substrings.add(EMPTY);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2394,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2398,                substrings.add(str.substring(beg));,4,0,0,2,4,0,10,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2399,                end = len;,6,0,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2403,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2432,"        return splitWorker(str, null, -1, true);",8,1,0,1,2,1,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2468,"        return splitWorker(str, separatorChar, true);",2,0,1,1,2,1,6,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2486,        if (str == null) {,4,1,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2489,        int len = str.length();,6,1,0,1,2,0,0,0,0,7,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2490,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2491,            return ArrayUtils.EMPTY_STRING_ARRAY;,10,1,0,0,0,1,8,0,0,19,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2493,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2494,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2495,        boolean match = false;,0,0,0,0,0,0,8,0,0,8,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2496,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2497,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2498,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2499,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2500,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2501,                    match = false;,2,0,0,0,0,0,8,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2502,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2504,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2505,                continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2507,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2508,            match = true;,16,4,0,0,0,0,10,0,0,32,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2509,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2511,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2512,"            list.add(str.substring(start, i));",0,0,0,2,4,0,22,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2514,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2551,"        return splitWorker(str, separatorChars, -1, true);",16,1,1,1,2,1,14,2,0,40,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2591,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,8,0,0,9,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2613,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2616,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2617,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2618,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2620,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2621,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2622,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2623,        boolean match = false;,2,0,0,0,0,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2624,        boolean lastMatch = false;,4,3,0,0,0,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2625,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2627,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2628,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2629,                    if (match || preserveAllTokens) {,4,1,1,1,3,0,8,0,0,22,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2630,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2631,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2632,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2633,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2635,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2636,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2638,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2639,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2641,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2642,                match = true;,2,0,0,0,0,0,2,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2643,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2645,        } else if (separatorChars.length() == 1) {,4,3,0,2,6,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2647,            char sep = separatorChars.charAt(0);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2648,            while (i < len) {,6,1,0,1,3,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2649,                if (str.charAt(i) == sep) {,2,1,0,2,5,0,6,0,0,9,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2650,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,14,0,0,20,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2651,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2652,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2653,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2654,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2656,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2657,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2659,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2660,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2662,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2663,                match = true;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2664,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2666,        } else {,0,0,1,0,2,0,4,0,0,8,8,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2668,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2669,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2670,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2671,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2672,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2673,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2674,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2676,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2677,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2679,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2680,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2682,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2683,                match = true;,2,0,0,0,0,0,6,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2684,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2687,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2688,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2690,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2713,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2741,"        return splitByCharacterType(str, true);",2,1,0,1,2,1,14,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2759,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2760,            return null;,2,3,0,0,0,1,4,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2762,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2763,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2765,        char[] c = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2766,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2767,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2768,        int currentType = Character.getType(c[tokenStart]);,6,0,1,2,4,0,12,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2769,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,12,2,0,1,3,0,0,0,0,15,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2770,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2771,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2772,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2774,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2775,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2776,                if (newTokenStart != tokenStart) {,16,4,0,1,3,0,0,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2777,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",10,1,0,2,4,0,4,2,0,17,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2778,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2780,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2781,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,4,2,0,15,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2782,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2784,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2786,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2787,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,0,0,0,4,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2813,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2839,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2840,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2843,"        return join(array, separator, 0, array.length);",2,0,0,1,2,1,0,0,0,3,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2873,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2874,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2876,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2877,        if (bufSize <= 0) {,10,1,0,1,3,0,0,0,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2878,            return EMPTY;,10,1,0,0,0,1,14,0,0,28,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2881,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2882,        StringBuilder buf = new StringBuilder(bufSize);,6,1,0,1,2,0,0,6,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2884,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2885,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2886,                buf.append(separator);,4,3,1,1,2,0,10,0,0,19,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2888,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2889,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2892,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2920,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2921,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2923,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2954,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2957,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2958,            separator = EMPTY;,6,0,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2963,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2964,        if (bufSize <= 0) {,12,2,0,1,3,0,0,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2965,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2968,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2971,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,4,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2973,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,6,0,0,18,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2974,            if (i > startIndex) {,18,2,0,1,3,0,0,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2975,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2977,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2978,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2981,        return buf.toString();,2,1,0,1,2,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3001,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3002,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3004,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3005,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3007,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3008,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3009,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3013,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,1,0,1,2,0,0,4,0,9,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3014,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3015,            buf.append(first);,2,0,0,1,2,0,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3018,        while (iterator.hasNext()) {,0,0,0,2,5,0,14,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3019,            buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3020,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3021,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3022,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3024,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3026,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3045,        if (iterator == null) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3046,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3048,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3049,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3051,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3052,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3053,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3057,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3058,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3059,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3062,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3063,            if (separator != null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3064,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3066,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3067,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3068,                buf.append(obj);,2,1,0,1,2,0,6,0,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3070,        },2,0,0,0,1,0,0,0,0,4,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3071,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3089,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3092,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,8,0,0,10,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3110,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3113,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3133,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3134,            return str;,4,2,0,0,0,1,8,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3136,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3137,        char[] chs = new char[sz];,4,1,1,2,4,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3138,        int count = 0;,6,1,0,0,0,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3139,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3140,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3141,                chs[count++] = str.charAt(i);,6,1,1,2,4,0,6,0,0,17,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3144,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3145,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3147,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3177,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,8,0,0,11,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3178,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3180,        if (str.startsWith(remove)){,0,0,0,2,5,0,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3181,            return str.substring(remove.length());,2,0,0,2,4,1,16,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3183,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3212,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3213,            return str;,6,1,0,0,0,1,0,0,0,7,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3215,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3216,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3218,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3246,        if (isEmpty(str) || isEmpty(remove)) {,4,1,1,3,7,0,26,0,0,37,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3247,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3249,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3250,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3252,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3280,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3281,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3283,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3284,"            return str.substring(0, str.length() - remove.length());",0,2,0,3,6,1,24,0,0,26,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3286,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3313,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3314,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3316,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,8,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3339,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,3,7,0,10,0,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3340,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3342,        char[] chars = str.toCharArray();,0,0,0,2,4,0,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3343,        int pos = 0;,4,0,0,0,0,0,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3344,        for (int i = 0; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3345,            if (chars[i] != remove) {,2,0,0,2,5,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3346,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3349,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3378,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3405,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3437,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3438,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3440,        int start = 0;,6,3,0,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3441,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3442,        if (end == -1) {,4,1,0,1,3,0,0,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3443,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3445,        int replLength = searchString.length();,2,0,0,1,2,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3446,        int increase = replacement.length() - replLength;,4,2,0,1,2,0,8,0,0,16,49,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3447,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3448,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3449,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3450,        while (end != -1) {,2,0,0,1,3,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3451,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3452,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3453,            if (--max == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3454,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3456,"            end = text.indexOf(searchString, start);",2,1,0,1,2,0,16,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3458,        buf.append(text.substring(start));,0,0,0,2,4,0,20,0,0,20,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3459,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3502,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3553,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3554,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3620,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",4,0,0,1,2,0,0,0,0,5,92,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3628,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,2,1,0,0,1,0,8,2,0,14,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3648,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3678,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,10,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3704,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3727,            return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3730,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3756,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3757,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3759,"        return str.replace(searchChar, replaceChar);",2,1,0,1,2,1,8,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3799,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3800,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3802,        if (replaceChars == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3803,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3805,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3806,        int replaceCharsLength = replaceChars.length();,4,0,0,1,2,0,4,0,0,10,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3807,        int strLength = str.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3808,        StringBuilder buf = new StringBuilder(strLength);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3809,        for (int i = 0; i < strLength; i++) {,10,2,0,1,3,0,0,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3810,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3811,            int index = searchChars.indexOf(ch);,4,0,0,1,2,0,12,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3812,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3813,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3814,                if (index < replaceCharsLength) {,8,0,0,1,3,0,0,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3815,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3818,                buf.append(ch);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3821,        if (modified) {,6,0,0,1,3,0,4,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3822,            return buf.toString();,4,2,0,1,2,1,18,0,0,24,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3824,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3859,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3860,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3862,        if (overlay == null) {,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3863,            overlay = EMPTY;,8,1,0,0,0,0,4,0,0,14,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3865,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3866,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3867,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3869,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3870,            start = len;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3872,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3873,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3875,        if (end > len) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3876,            end = len;,6,0,0,0,0,0,0,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3878,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3879,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3880,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3881,            end = temp;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3883,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3918,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3919,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3922,        if (str.length() == 1) {,2,2,0,2,5,0,4,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3923,            char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3924,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3925,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3927,            return str;,14,2,1,0,0,1,4,0,0,26,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3930,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3931,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3933,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3934,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3935,                lastIdx--;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3937,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3938,            lastIdx++;,6,0,0,0,0,0,6,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3940,"        return str.substring(0, lastIdx);",4,1,0,1,2,1,6,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3970,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3971,            return str;,8,1,0,0,0,1,0,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3973,        if (str.endsWith(separator)) {,8,4,0,2,5,0,12,0,0,24,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3974,"            return str.substring(0, str.length() - separator.length());",4,2,0,3,6,1,22,0,0,28,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3976,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4005,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4006,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4008,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4009,        if (strLen < 2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4010,            return EMPTY;,12,1,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4012,        int lastIdx = strLen - 1;,14,3,1,0,0,0,12,0,0,34,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4013,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4014,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4015,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4016,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4017,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4020,        return ret;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4049,        if (str == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4050,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4052,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4053,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4055,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4056,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4057,            return str;,4,3,0,0,0,1,8,0,0,17,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4059,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4060,"            return padding(repeat, str.charAt(0));",4,0,0,2,4,2,16,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4063,        int outputLength = inputLength * repeat;,8,1,0,0,0,1,4,0,0,14,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4064,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4066,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4067,                char[] output1 = new char[outputLength];,4,1,0,2,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4068,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4069,                    output1[i] = ch;,4,1,1,1,2,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4071,                return new String(output1);,4,1,0,1,2,1,0,0,0,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4073,                char ch0 = str.charAt(0);,2,0,0,1,2,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4074,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4075,                char[] output2 = new char[outputLength];,2,0,0,2,4,0,8,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4076,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4077,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4078,                    output2[i + 1] = ch1;,6,1,1,1,2,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4080,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4082,                StringBuilder buf = new StringBuilder(outputLength);,6,1,0,1,2,0,6,4,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4083,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4084,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4086,                return buf.toString();,6,0,0,1,2,1,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4110,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4111,"            return repeat(str, repeat);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4114,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4115,"            return removeEnd(result, separator);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4143,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4144,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4146,        final char[] buf = new char[repeat];,10,1,1,2,4,1,0,2,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4147,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4148,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4150,        return new String(buf);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4173,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4198,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4199,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4201,        int pads = size - str.length();,6,2,0,1,2,0,4,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4202,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4203,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4205,        if (pads > PAD_LIMIT) {,6,1,0,1,3,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4206,"            return rightPad(str, size, String.valueOf(padChar));",4,0,0,2,4,1,12,0,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4208,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4235,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4236,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4238,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4239,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4241,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4242,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4243,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4244,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4245,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4247,        if (padLen == 1 && pads <= PAD_LIMIT) {,8,3,0,1,3,0,4,0,0,15,39,3,0.0,0,0
