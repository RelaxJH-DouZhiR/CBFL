dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,1,0,0,1,2,0,2,0,1,5,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,2,1,0,1,2,2,2,0,1,7,44,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,1,1,0,1,3,2,0,0,0,5,42,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,1,1,0,1,3,2,0,0,0,5,43,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",1,0,0,0,4,1,0,1,7,5,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,2,0,0,1,3,2,0,1,1,6,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,1,3,0,0,4,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,1,1,0,1,3,1,0,0,0,5,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,1,0,0,0,0,1,0,0,0,2,9,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,1,0,0,1,2,1,2,0,1,6,128,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,2,3,0,1,3,1,0,0,0,5,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,2,4,0,3,7,61,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,1,0,0,1,2,1,2,1,2,7,33,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,0,2,1,3,1,1,7,64,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,1,7,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,2,0,0,0,0,1,0,0,0,2,18,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,2,2,0,2,5,1,2,0,0,6,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,5,1,0,1,3,2,0,0,1,6,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,1,0,0,0,1,3,0,0,2,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,2,0,0,1,5,2,0,1,2,6,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",1,0,0,1,2,1,0,3,2,6,54,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,49,        if (lookup != null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,50,            for (final CharSequence[] seq : lookup) {,2,0,0,1,5,2,0,1,1,6,41,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",1,0,1,0,6,1,1,0,0,5,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,1,0,1,1,4,2,1,0,1,7,31,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,2,1,0,1,3,1,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,2,0,0,0,0,0,0,0,1,2,15,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,2,1,0,1,3,1,0,0,0,5,20,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,2,0,0,0,0,0,0,0,1,2,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,2,0,0,0,0,0,0,0,1,2,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,62,        longest = _longest;,2,0,0,0,0,0,0,0,1,2,19,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,1,0,0,1,2,2,2,0,1,6,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,1,1,0,1,3,1,0,0,0,5,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,1,0,0,1,2,2,2,0,1,6,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,1,0,0,1,2,2,2,0,1,6,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,2,7,1,6,0,2,6,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,1,0,0,0,1,2,0,0,1,4,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,1,0,0,3,6,1,4,4,1,7,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,1,5,59,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,297,            AVAILABLE_LOCALE_SET = Collections.unmodifiableSet(new HashSet<Locale>(list));,2,0,0,2,4,1,2,2,2,7,78,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,298,        },0,0,0,0,1,0,0,0,0,1,1,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",1,0,0,0,0,3,0,4,3,4,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",1,0,0,0,0,3,0,4,3,4,79,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,2,0,0,0,0,1,0,0,0,2,39,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,0,0,0,1,4,1,3,0,1,5,46,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,3,0,0,4,35,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,1,1,0,1,3,1,0,0,0,5,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,1,7,1,5,0,0,4,67,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,4,0,0,3,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,0,0,0,1,2,1,2,0,0,4,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,3,1,0,0,4,1,0,2,0,5,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,0,2,1,0,0,1,4,19,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",2,0,0,0,2,0,4,0,0,3,66,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,1,0,0,1,2,2,0,1,1,6,41,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,1,0,0,0,0,3,0,1,3,4,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,1,0,0,1,2,4,0,2,4,6,73,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,1,0,0,0,0,3,0,1,3,4,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,2,0,0,0,0,3,0,1,3,4,79,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,1,0,0,0,0,3,0,1,3,4,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,1,0,0,0,0,3,0,1,3,4,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,1,0,0,0,0,3,0,1,3,4,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,1,0,0,1,2,4,0,2,4,6,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,2,0,0,1,3,1,0,1,1,6,67,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,1,0,0,1,2,1,3,0,1,6,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,    },0,0,0,0,1,0,0,0,0,1,1,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,1,0,0,0,1,3,0,1,1,5,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,1,0,0,1,2,3,3,1,3,7,70,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,1,0,0,0,2,4,0,0,3,4,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,1,0,0,1,6,3,2,1,4,7,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,1,0,0,1,6,3,2,1,4,7,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,68,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,1,0,0,0,5,3,0,1,3,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,1,0,0,1,6,3,2,1,4,7,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,80,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,84,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,3,0,0,0,8,1,0,2,0,4,50,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,5,1,0,1,3,2,0,0,1,6,37,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,0,0,1,0,8,0,0,0,1,3,29,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,1,0,8,0,0,0,1,3,29,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",1,0,0,1,2,3,1,1,5,7,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",1,0,0,1,2,4,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",1,0,0,1,2,4,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",1,0,0,1,2,3,1,1,5,7,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,1,0,0,1,2,3,2,1,4,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",1,0,0,1,2,3,1,1,5,7,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",1,0,0,1,2,3,1,1,5,7,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",1,0,0,1,2,3,1,1,5,7,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,1,0,0,1,2,3,3,1,3,7,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,1,0,0,0,0,3,0,1,3,4,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",1,0,0,1,2,3,1,1,5,7,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",1,0,0,1,2,3,1,1,5,7,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",1,0,0,1,2,3,1,1,5,7,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",1,0,0,1,2,3,1,1,5,7,108,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",1,0,0,1,2,3,1,1,5,7,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",1,0,0,1,2,3,1,1,5,7,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",1,0,0,1,2,3,1,1,5,7,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",1,0,0,1,2,3,1,1,5,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",1,0,0,1,2,3,1,1,5,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",1,1,0,1,2,3,1,1,5,8,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,1,0,0,1,2,3,2,1,4,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,1,0,0,1,2,3,2,1,4,7,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",1,0,0,1,2,3,1,1,5,7,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",1,0,0,1,2,3,1,1,5,7,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",1,0,0,1,2,4,1,0,5,6,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",1,0,0,1,2,4,1,0,5,6,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",1,1,0,1,4,4,2,0,7,7,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",1,0,0,1,2,4,1,0,5,6,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",1,0,0,1,2,4,1,0,5,6,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",1,0,0,1,2,4,1,0,5,6,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",1,0,0,1,2,4,1,0,5,6,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",1,0,0,1,2,4,1,0,5,6,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",1,0,0,1,2,4,1,0,5,6,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,6,1,0,0,0,4,0,0,3,4,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,1,0,0,1,2,4,2,0,4,6,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",1,0,0,0,2,4,2,0,5,5,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",2,1,0,0,2,4,1,0,6,6,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,1,0,0,2,4,1,0,6,6,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",2,1,0,1,2,4,1,0,5,7,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",1,0,0,0,2,4,2,0,5,5,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",1,0,0,0,2,4,2,0,5,5,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",1,0,0,0,2,4,2,0,5,5,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",1,0,0,0,2,4,2,0,5,5,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,0,2,1,3,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,0,2,1,5,0,1,4,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,0,2,1,3,0,1,4,44,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,0,0,0,1,2,1,3,0,0,4,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,3,0,0,4,67,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,        if (version == null) {,1,1,0,1,3,1,0,0,0,5,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,3,0,0,4,41,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,2,3,0,1,3,1,0,0,0,5,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,1,4,1,6,0,0,5,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,3,0,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",3,0,0,0,3,3,0,1,2,5,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,2,0,0,0,0,1,0,0,1,3,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,1,0,0,0,1,2,0,0,1,4,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,3,1,0,0,0,2,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,1,2,0,1,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,1,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,1,1,0,1,2,1,2,0,0,6,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,1,2,0,1,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,1,1,0,1,3,2,0,0,0,5,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,1,2,0,0,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,1,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,2,0,1,5,23,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,1,6,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,455,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {",0,1,0,2,11,1,8,0,4,6,101,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,469,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,490,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,492,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,494,        if (!Character.isDigit(lastChar) && lastChar != '.') {,1,2,0,2,5,1,3,0,2,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,495,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,502,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,506,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,510,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,609,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,631,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,634,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,650,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,664,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,668,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,698,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,714,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,195,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,235,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,238,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,240,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,685,        return Long.decode(str);,0,0,0,1,2,1,3,0,0,4,24,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1296,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1299,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1304,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,1,0,1,3,1,2,0,0,5,26,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,0,4,0,6,0,2,3,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,        },0,0,0,0,1,0,0,0,0,1,1,2,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,            if (this == obj) {,1,1,0,1,3,2,0,0,0,5,18,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,1,0,0,1,3,2,0,1,0,5,40,6,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,2,0,0,1,2,0,0,2,0,4,51,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,                return,0,0,0,0,0,0,0,0,0,0,6,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,1,1,0,1,4,2,0,0,0,5,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,1,0,0,0,0,1,0,0,0,2,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,2,6,0,7,0,1,4,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,1,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",1,0,0,0,2,0,4,1,0,4,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,2,0,0,3,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,4,1,0,1,3,2,0,0,0,5,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,2,0,1,0,2,0,0,1,1,5,35,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,1,4,1,6,0,0,4,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,        },0,0,0,0,1,0,0,0,0,1,1,2,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,1,1,0,2,4,0,4,0,0,5,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,2,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,1,0,0,1,4,0,3,1,0,5,56,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",2,0,0,0,4,2,4,1,2,6,93,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,1,1,0,1,3,1,0,0,0,5,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",1,0,1,0,4,0,3,0,0,4,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,1,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,2,1,0,2,6,1,3,0,1,7,42,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,0,2,1,7,0,1,4,65,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,2,3,0,1,3,1,0,0,0,5,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,1,0,1,0,4,3,0,0,0,4,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,3,1,0,0,0,1,0,0,0,3,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,1,1,0,1,3,1,0,0,1,6,22,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,1,1,0,1,4,2,0,0,0,5,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,3,3,0,1,3,1,0,0,0,5,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,2,1,1,1,4,0,3,0,1,7,40,8,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,        if (count == 0) {,1,1,0,1,3,1,0,0,0,5,17,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,1,1,0,1,4,2,0,0,0,5,23,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,2,3,0,1,3,1,0,0,0,5,29,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,2,1,0,1,3,1,0,0,2,6,27,6,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,1,2,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,1,0,1,0,4,3,0,0,0,4,32,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,3,1,0,0,0,1,0,0,0,3,22,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,1,1,0,1,3,1,0,0,1,6,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,            if (chars == null) {,1,1,0,1,3,1,0,0,0,5,20,6,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,1,0,0,1,2,4,0,2,4,6,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",2,0,0,0,2,1,0,0,1,4,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,1,0,2,1,6,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,1,6,1,3,1,2,7,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,1,0,0,1,4,0,2,2,0,5,35,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,1,0,0,1,2,1,0,0,1,5,10,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,2,0,0,0,0,1,0,0,1,3,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,252,        },0,0,0,0,1,0,0,0,0,1,1,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,            String name = desc.getName();,1,0,0,1,2,0,2,1,0,5,29,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",0,0,0,0,2,1,4,0,1,4,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,1,0,0,1,4,1,2,0,1,6,38,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,2,3,0,1,3,1,0,0,0,5,33,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,0,0,0,1,2,1,3,0,0,4,23,5,0.0625,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",1,0,0,1,2,3,2,1,4,7,72,2,0.00321,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,    private static class InitStripAccents {,1,0,0,0,1,3,0,0,2,4,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",1,0,0,1,4,3,2,1,4,7,108,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,2,0,0,0,0,3,0,1,3,4,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,1,0,0,0,0,0,0,1,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,1,0,0,0,0,0,0,1,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,1,0,0,0,0,0,0,1,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,            Throwable _java6Exception = null;,1,0,0,0,0,0,0,1,0,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,            Throwable _sunException = null;,1,0,0,0,0,0,0,1,0,2,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",1,0,0,1,4,0,3,0,2,5,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,73,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",1,0,0,0,1,0,2,0,2,4,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,            },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,1,0,0,1,4,1,0,1,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,2,0,0,0,0,0,0,0,1,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),1,0,0,1,4,0,3,1,0,5,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",1,0,0,0,1,0,2,0,2,4,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,                },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,1,0,0,1,4,1,0,1,0,5,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,                    _sunException = e2;,2,0,0,0,0,0,0,0,1,2,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,2,0,0,0,0,0,0,0,1,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,2,0,0,0,0,0,0,0,1,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,2,0,0,0,0,0,0,0,1,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,2,0,0,0,0,0,0,0,1,2,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,2,0,0,0,0,0,0,0,1,2,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,38,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",1,1,0,1,4,1,5,0,0,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",1,0,0,2,6,1,3,1,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,5,1,0,1,3,2,0,0,1,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,1,1,0,2,5,1,3,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,1,6,1,6,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",1,0,0,2,6,1,3,1,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,120,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,2,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,2,1,0,0,0,0,0,0,1,3,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,4,1,0,1,3,2,0,0,1,6,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,1,1,0,2,5,1,3,0,0,6,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",0,0,0,1,6,1,6,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,1,0,0,1,3,2,0,1,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,1,0,0,2,6,1,1,1,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,1,0,0,1,2,1,2,0,0,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,1,0,0,1,6,3,2,0,0,5,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,0,0,1,1,4,0,3,0,1,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,2,1,0,1,3,3,0,2,0,6,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",2,0,0,2,8,1,5,2,0,6,93,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,1,6,1,9,0,0,4,95,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,159,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,160,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,229,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,253,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,1,1,0,1,2,1,2,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,1,0,0,1,2,0,2,1,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,1,0,0,1,2,1,2,0,1,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,2,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,362,"        return strip(str, null);",0,0,0,0,2,1,2,0,1,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",1,0,0,0,2,0,2,0,2,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,419,"        return str == null ? EMPTY : strip(str, null);",2,1,0,0,2,1,2,0,1,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",1,0,0,0,2,0,3,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,2,2,0,3,7,1,5,0,0,6,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,1,0,0,0,0,0,0,0,1,2,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,491,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,493,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,3,3,0,3,7,1,5,0,0,6,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,1,0,0,0,0,0,0,0,1,2,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,527,        if (str == null || (end = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,532,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,2,3,0,3,7,1,4,0,0,6,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,533,                end--;,1,0,0,0,0,0,0,0,1,2,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,535,        } else if (stripChars.length() == 0) {,0,1,0,2,6,2,2,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,1,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,3,4,0,3,7,1,4,0,0,6,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,1,0,0,0,0,0,0,0,1,2,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,542,"        return str.substring(0, end);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",0,0,0,0,2,1,2,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,597,        if (strs == null || (strsLen = strs.length) == 0) {,4,3,0,2,5,1,0,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,598,            return strs;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,600,        String[] newArr = new String[strsLen];,1,0,1,0,4,1,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,601,        for (int i = 0; i < strsLen; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",0,0,1,0,6,0,2,0,2,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,629,        if(input == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,630,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,1,0,0,0,0,0,0,1,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,2,1,0,1,3,1,0,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,1,0,0,1,2,0,2,0,2,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,636,            } else if (InitStripAccents.sunDecomposeMethod != null) {,2,1,0,1,4,2,0,0,0,5,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,637,                result = removeAccentsSUN(input);,1,0,0,1,2,0,2,0,2,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,639,                throw new UnsupportedOperationException(,0,0,0,0,1,2,0,1,1,4,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,645,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,1,0,0,1,4,1,0,1,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,647,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);",1,0,0,0,2,2,0,1,2,5,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,648,        } catch(IllegalAccessException iae) {,1,0,0,1,4,1,0,1,0,5,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,649,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);",1,0,0,0,2,2,0,1,2,5,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,1,0,0,1,4,1,0,1,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,651,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);",1,0,0,0,2,2,0,1,2,5,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,1,0,0,1,4,1,0,1,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,653,"            throw new RuntimeException(""SecurityException occurred"", se);",1,0,0,0,2,2,0,1,2,5,61,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,4,3,0,1,3,1,0,0,0,5,103,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,674,"            throw new IllegalStateException(""java.text.Normalizer is not available"", InitStripAccents.java6Exception);",2,0,0,0,2,2,0,1,2,5,106,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,677,"        result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] {text, InitStripAccents.java6NormalizerFormNFD});",6,0,0,1,8,1,1,2,1,7,131,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,678,"        result = InitStripAccents.java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$",3,0,0,1,4,0,3,0,2,5,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,697,        if (InitStripAccents.sunDecomposeMethod == null) {,2,1,0,1,3,1,0,0,0,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,698,"            throw new IllegalStateException(""sun.text.Normalizer is not available"", InitStripAccents.sunException);",2,0,0,0,2,2,0,1,2,5,103,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",6,0,0,1,10,1,3,2,1,7,123,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,702,"        result = InitStripAccents.sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$",3,0,0,1,4,0,3,0,2,5,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,703,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,786,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,814,            return str1 == str2;,2,1,0,0,0,1,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,816,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",0,0,0,1,8,1,10,0,1,5,103,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,843,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,846,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",0,0,0,0,2,1,4,0,0,3,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,876,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,877,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,879,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);",0,0,0,0,2,1,5,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,907,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,908,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,910,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,0,2,1,4,0,0,3,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,947,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,948,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,950,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,0,2,1,5,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,0,2,1,4,0,2,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,3,5,0,1,3,1,0,0,0,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1007,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1010,            return lastIndex ? str.length() : 0;,1,0,0,1,2,1,2,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1012,        int found = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1013,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,3,0,0,1,2,1,2,0,0,5,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1015,            if (lastIndex) {,1,0,0,1,3,1,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",2,1,0,0,2,0,4,0,1,5,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1018,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",2,1,0,0,2,0,4,0,1,5,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1023,            found++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1054,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,0,2,1,3,0,1,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1091,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1093,        if (startPos < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1094,            startPos = 0;,1,0,0,0,0,0,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1096,        int endLimit = str.length() - searchStr.length() + 1;,1,2,0,1,4,1,4,0,0,6,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,2,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1100,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1101,            return startPos;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1103,        for (int i = startPos; i < endLimit; i++) {,5,1,0,1,3,2,0,0,1,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,1,7,1,7,0,1,5,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1134,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",0,0,0,1,4,1,6,0,0,4,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1169,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1170,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1172,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",0,0,0,0,2,1,5,0,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1200,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,1,4,1,6,0,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1240,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0,0,0,0,2,1,4,0,2,4,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1274,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1276,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",0,0,0,0,2,1,5,0,0,3,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1304,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1306,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,1,4,1,5,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1340,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1342,        if (startPos > str.length() - searchStr.length()) {,1,2,0,2,7,1,4,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1343,            startPos = str.length() - searchStr.length();,1,1,0,1,4,0,4,0,1,6,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1345,        if (startPos < 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1348,        if (searchStr.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1349,            return startPos;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1352,        for (int i = startPos; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1353,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,1,7,1,7,0,1,5,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1357,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1383,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1384,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",0,1,0,0,2,1,4,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1412,        if (seq == null || searchSeq == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1413,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1415,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",0,1,0,0,2,1,4,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1444,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1447,        int max = str.length() - len;,2,1,0,1,2,1,2,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1448,        for (int i = 0; i <= max; i++) {,4,1,0,1,3,2,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,0,5,1,6,0,1,4,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1450,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1453,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1466,        if (isEmpty(seq)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1467,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1469,        int strLen = seq.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1470,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1472,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1475,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1504,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1505,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1508,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1509,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1510,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1511,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1512,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1513,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1514,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1515,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,4,0,2,5,1,3,0,0,6,68,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1517,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1518,                            return i;,1,0,0,0,0,1,0,0,0,2,9,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1521,                        return i;,1,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1526,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1587,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1589,        int csLength = cs.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1590,        int searchLength = searchChars.length;,3,0,0,0,0,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1591,        int csLast = csLength - 1;,2,1,0,0,0,1,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1592,        int searchLast = searchLength - 1;,2,1,0,0,0,1,0,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1593,        for (int i = 0; i < csLength; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1595,            for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,1,3,0,0,4,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1598,                        if (j == searchLast) {,2,1,0,1,3,1,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,1,2,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1602,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,4,5,1,2,7,1,2,0,0,7,59,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1603,                            return true;,0,0,0,0,0,1,0,0,1,2,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1607,                        return true;,0,0,0,0,0,1,0,0,1,2,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1612,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1644,        if (searchChars == null) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1645,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1647,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",0,0,0,1,4,1,5,0,1,5,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1677,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1678,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1680,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1681,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1683,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1685,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1686,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1688,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,4,0,2,5,1,3,0,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1690,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,1,0,0,0,0,1,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1698,            return i;,1,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1727,        if (isEmpty(seq) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1728,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1731,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1732,            char ch = seq.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1733,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",1,1,0,0,2,1,4,0,0,5,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,2,3,0,2,5,1,3,0,0,6,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1735,                char ch2 = seq.charAt(i + 1);,2,1,0,1,2,1,2,0,0,6,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",1,2,0,0,5,1,4,0,0,5,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1737,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1740,                if (!chFound) {,1,0,0,1,3,1,0,0,1,5,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1745,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1774,        if (valid == null || cs == null) {,2,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1775,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,0,1,0,2,5,1,2,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1778,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1780,        if (valid.length == 0) {,2,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1781,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1783,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1810,        if (cs == null || validChars == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1811,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1813,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1842,        if (cs == null || searchChars == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1845,        int csLen = cs.length();,1,0,0,1,2,1,2,0,0,5,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1846,        int csLast = csLen - 1;,2,1,0,0,0,1,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1847,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1848,        int searchLast = searchLen - 1;,2,1,0,0,0,1,0,0,0,3,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,1,0,0,1,2,1,3,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1853,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,1,3,0,0,4,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,2,1,0,1,3,1,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1856,                            return false;,0,0,0,0,0,1,0,0,1,2,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1858,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,4,5,1,2,7,1,2,0,0,7,59,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1859,                            return false;,0,0,0,0,0,1,0,0,1,2,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1863,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1868,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1896,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1898,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1932,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1940,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1942,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1943,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1945,"            tmp = CharSequenceUtils.indexOf(str, search, 0);",1,0,0,0,2,0,4,0,1,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1946,            if (tmp == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1947,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1951,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,5,1,0,0,0,1,0,0,0,3,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1985,        if (str == null || searchStrs == null) {,2,3,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1986,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1988,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1989,        int ret = INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1990,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1993,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1994,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",1,0,0,1,4,0,6,0,1,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1997,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2001,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2031,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2036,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2037,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2040,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2041,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2044,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2047,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2086,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2087,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2092,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2095,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2099,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2104,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2108,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2111,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2112,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2115,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2142,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2144,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2145,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2147,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2148,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2150,"        return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2174,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2175,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2177,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2178,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2180,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2181,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2183,        return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2212,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2213,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2216,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2218,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2219,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2221,        if (str.length() <= pos + len) {,2,2,0,2,5,1,2,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2222,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2224,"        return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2257,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2260,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2261,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2264,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2265,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2267,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2299,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2300,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2303,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2309,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2344,        if (pos == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2345,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2347,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2380,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2381,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2384,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2386,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,3,4,0,2,7,1,4,0,0,6,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2388,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2390,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2417,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2448,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2449,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2451,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2453,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2458,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2484,        if (str == null || isEmpty(open) || isEmpty(close)) {,1,3,0,2,7,1,4,0,2,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2485,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2487,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2488,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2491,        int closeLen = close.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2492,        int openLen = open.length();,1,0,0,1,2,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2493,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2494,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,3,2,0,1,3,1,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2496,"            int start = str.indexOf(open, pos);",1,0,0,0,2,1,4,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2498,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,2,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2501,"            int end = str.indexOf(close, start);",1,0,0,0,2,1,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2503,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2505,"            list.add(str.substring(start, end));",0,0,0,0,4,0,6,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,3,1,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2507,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2508,        if (list.isEmpty()) {,0,0,0,2,5,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2509,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,0,0,2,6,2,4,1,0,5,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2599,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2633,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2660,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,0,2,1,3,0,3,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2691,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,0,2,1,4,0,2,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,0,2,1,3,0,3,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2753,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2772,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2773,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2778,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2779,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,1,2,0,2,5,1,3,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2784,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,0,2,1,4,0,1,4,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,1,0,0,1,2,1,2,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2789,        ArrayList<String> substrings = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,1,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2791,        int beg = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2792,        int end = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",1,0,0,0,2,0,4,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2796,            if (end > -1) {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2797,                if (end > beg) {,2,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2800,                    if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2801,                        end = len;,2,0,0,0,0,0,0,0,1,2,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2806,"                        substrings.add(str.substring(beg, end));",0,0,0,0,4,0,6,0,0,2,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2811,                        beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2815,                    if (preserveAllTokens) {,1,0,0,1,3,1,0,0,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2817,                        if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,2,0,0,0,0,0,0,0,1,2,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2819,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2821,                            substrings.add(EMPTY);,0,0,0,1,2,0,3,0,0,3,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2824,                    beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2828,                substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2829,                end = len;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,0,0,0,2,6,2,4,1,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2862,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2898,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2916,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2921,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,1,0,0,1,2,1,0,4,1,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2925,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2926,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2927,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2928,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2929,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2930,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2931,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2932,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
