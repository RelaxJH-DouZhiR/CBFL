dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,10,2,0,1,2,1,4,0,0,17,44,3,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,0,0,0,1,3,0,0,0,0,4,42,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,0,0,0,1,3,0,0,0,0,4,43,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,4,0,0,6,31,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",0,0,0,2,4,0,0,0,0,6,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,                return false;,2,0,0,0,0,4,0,4,0,9,13,2,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",0,0,0,4,8,0,0,0,0,12,94,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,8,1,0,1,2,0,0,0,0,10,32,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",6,1,0,1,2,0,12,2,0,22,40,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,6,0,0,7,32,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,2,0,0,1,2,0,4,0,0,7,128,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,4,0,0,5,47,11,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,4,3,0,1,3,0,0,0,0,7,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,61,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,33,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,488,            if (expPos > -1) { // there is an exponent,2,0,0,1,3,0,8,0,0,11,42,18,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,489,                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE,0,0,0,2,5,0,0,0,0,7,89,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,509,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,2,1,0,2,5,3,8,2,0,18,27,1,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,626,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,643,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,646,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",10,3,0,1,2,1,16,4,0,36,64,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,4,1,0,1,3,3,2,2,0,13,21,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,4,0,0,0,0,0,4,0,0,8,18,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,4,0,0,2,5,2,0,2,0,8,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,49,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,50,            for (final CharSequence[] seq : lookup) {,0,0,0,2,5,0,0,0,0,7,41,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,4,0,1,2,4,1,6,0,0,13,31,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,6,0,0,0,0,1,0,2,0,10,15,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,6,2,1,1,3,0,4,0,0,20,20,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,0,0,0,0,0,0,0,0,0,0,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,62,        longest = _longest;,4,0,0,0,0,0,0,0,0,5,19,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,40,    public AggregateTranslator(final CharSequenceTranslator... translators) {,4,0,0,1,3,2,0,2,0,8,73,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,41,        this.translators = ArrayUtils.clone(translators);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,42,    },8,1,0,0,1,0,0,0,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,51,        for (final CharSequenceTranslator translator : translators) {,4,0,0,1,3,1,0,2,0,7,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,52,"            final int consumed = translator.translate(input, index, out);",2,0,0,1,2,1,10,0,0,13,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,54,                return consumed;,2,0,0,0,0,1,0,0,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,54,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,55,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,58,            final StringWriter writer = new StringWriter(input.length() * 2);,2,1,0,2,4,1,4,4,0,12,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,59,"            translate(input, writer);",0,0,0,1,2,0,6,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,60,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,61,        } catch (final IOException ioe) {,2,0,0,1,4,1,0,2,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,63,            throw new RuntimeException(ioe);,2,0,0,1,2,0,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,76,        if (out == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,77,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,79,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,80,            return;,2,1,0,0,0,1,0,0,0,3,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,82,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,83,        final int len = input.length();,2,0,0,1,2,1,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,84,        while (pos < len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,85,"            final int consumed = translate(input, pos, out);",2,0,0,1,2,1,8,0,0,11,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,86,            if (consumed == 0) {,4,1,0,1,3,3,4,2,0,14,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,87,"                final char[] c = Character.toChars(Character.codePointAt(input, pos));",2,0,0,3,6,1,16,0,0,19,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,88,                out.write(c);,0,0,0,1,2,0,6,0,0,6,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,89,                pos+= c.length;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,90,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,94,            for (int pt = 0; pt < consumed; pt++) {,8,1,0,1,3,0,0,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,95,"                pos += Character.charCount(Character.codePointAt(input, pt));",2,0,0,2,4,0,12,0,0,15,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,97,        },2,0,0,0,1,3,4,2,0,11,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,98,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,108,        final CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,1,0,4,0,12,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,122,        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);,4,0,0,2,4,1,8,0,0,12,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,72,            max = input.length() - index;,4,1,0,1,2,0,4,0,0,10,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,79,                out.write(result.toString());,0,0,0,2,4,0,8,0,0,8,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,80,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,4,0,0,10,68,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,3,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,2,0,0,1,2,1,4,0,0,7,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,3,7,0,12,0,0,15,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,2,0,0,0,1,1,0,0,0,3,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,2,0,0,3,6,0,8,8,0,18,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,8,1,0,1,2,0,6,0,0,16,59,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,297,            AVAILABLE_LOCALE_SET = Collections.unmodifiableSet(new HashSet<Locale>(list));,4,0,0,2,4,0,4,4,0,13,78,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,298,        },0,0,0,0,1,0,4,0,0,6,1,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",2,0,0,0,0,3,0,8,0,13,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",6,1,0,0,0,3,4,10,0,24,79,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,6,1,0,0,0,1,0,0,0,7,39,3,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,0,0,0,2,4,1,6,0,0,6,46,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,57,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,58,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,90,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,94,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,101,            if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,102,                return new Locale(str);,2,0,0,1,2,1,0,2,0,4,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,104,            if (len < 5) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,105,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,107,            if (str.charAt(2) != '_') {,0,1,0,2,5,0,4,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,108,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",6,4,0,1,2,0,0,2,0,13,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,110,            final char ch3 = str.charAt(3);,2,0,0,1,2,1,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,111,            if (ch3 == '_') {,2,1,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,112,"                return new Locale(str.substring(0, 2), """", str.substring(4));",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,114,            final char ch4 = str.charAt(4);,4,0,0,1,2,1,14,4,0,26,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,115,            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {,0,0,0,3,7,0,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,118,            if (len == 5) {,4,1,0,1,3,3,0,2,0,10,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,121,            if (len < 7) {,4,1,0,1,3,3,0,4,0,12,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,122,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,0,6,0,12,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,124,            if (str.charAt(5) != '_') {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,125,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,127,"            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,12,2,0,14,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,144,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,166,        List<Locale> list = new ArrayList<Locale>(4);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,167,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,168,            list.add(locale);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,169,            if (locale.getVariant().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,170,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,172,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,173,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,8,2,0,11,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,175,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,176,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,179,        return Collections.unmodifiableList(list);,0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,207,        return SyncAvoid.AVAILABLE_LOCALE_SET;,4,0,0,0,0,1,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,232,        if (countryCode == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,233,            return Collections.emptyList();,0,0,0,1,2,1,10,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,235,        List<Locale> langs = cLanguagesByCountry.get(countryCode);,0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,236,        if (langs == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,237,            langs = new ArrayList<Locale>();,2,0,0,1,2,0,0,4,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,238,            List<Locale> locales = availableLocaleList();,2,0,0,1,2,0,2,4,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,239,            for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,240,                Locale locale = locales.get(i);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,241,                if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,0,8,0,0,9,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,243,                    langs.add(locale);,0,0,0,1,2,0,6,0,0,6,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,246,            langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,247,"            cLanguagesByCountry.putIfAbsent(countryCode, langs);",0,0,0,1,2,0,8,0,0,8,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,248,            langs = cLanguagesByCountry.get(countryCode);,2,0,0,1,2,0,6,0,0,9,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,250,        return langs;,2,0,0,0,0,1,8,0,0,10,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,264,        if (languageCode == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,265,            return Collections.emptyList();,0,0,0,1,2,1,8,0,0,9,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,267,        List<Locale> countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,6,4,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,268,        if (countries == null) {,8,1,0,1,3,0,6,2,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,269,            countries = new ArrayList<Locale>();,2,0,0,1,2,0,0,4,0,7,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,270,            List<Locale> locales = availableLocaleList();,2,0,0,1,2,0,2,4,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,271,            for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,272,                Locale locale = locales.get(i);,2,0,0,1,2,0,6,2,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,273,                if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,8,0,0,10,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,276,                    countries.add(locale);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,279,            countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,280,"            cCountriesByLanguage.putIfAbsent(languageCode, countries);",0,0,0,1,2,0,8,0,0,8,58,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,281,            countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,6,0,0,9,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,283,        return countries;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,0,0,0,4,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,2,1,0,1,3,0,0,0,0,3,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,3,7,0,16,0,0,17,67,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,2,1,0,1,2,1,4,0,0,7,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,0,1,0,0,0,0,10,0,0,12,31,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,4,0,0,1,2,3,8,2,0,18,23,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,4,0,0,1,2,3,4,0,0,11,46,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,4,3,0,1,2,0,4,0,0,12,73,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,10,79,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,8,0,0,1,3,1,0,2,0,12,67,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,1,0,1,2,3,14,2,0,24,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,2,0,0,1,2,1,8,2,0,12,21,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,12,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,10,2,0,17,68,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,0,0,5,10,3,4,4,0,14,96,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,8,2,0,14,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },6,0,0,5,10,3,4,4,0,16,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,0,0,0,4,8,0,0,0,0,12,50,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,12,1,0,1,3,0,0,2,0,16,37,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,4,3,1,4,8,0,4,0,0,21,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,4,0,0,13,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,40,    public LookupTranslator(CharSequence[]... lookup) {,4,0,0,2,5,1,0,2,0,7,51,2,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,0,0,3,54,8,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,42,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,43,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,44,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,45,            for (CharSequence[] seq : lookup) {,0,0,0,2,5,0,0,0,0,7,35,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,46,"                this.lookupMap.put(seq[0], seq[1]);",0,0,0,3,6,0,0,0,0,9,35,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,47,                int sz = seq[0].length();,2,0,1,2,4,0,2,0,0,6,25,9,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,48,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,49,                    _shortest = sz;,0,0,0,0,0,0,0,0,0,0,15,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,51,                if (sz > _longest) {,6,2,0,1,3,0,0,0,0,9,20,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,56,        shortest = _shortest;,4,0,0,0,0,0,0,0,0,5,21,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,57,        longest = _longest;,8,0,0,0,0,0,0,2,0,11,19,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,58,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,34,public class OctalUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,60,1,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,36,    private static int OCTAL_MAX = 377;,2,0,0,0,0,2,0,0,0,4,35,2,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",4,0,0,1,2,1,6,2,0,13,62,1,0.03846,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",0,0,0,1,2,0,0,0,0,3,92,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",4,0,0,1,2,6,2,6,0,20,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,6,0,0,1,2,3,4,2,0,16,82,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",4,1,0,1,2,0,8,0,0,14,102,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",4,0,0,1,2,6,4,4,0,20,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,8,0,0,0,0,3,0,4,0,16,64,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",0,0,0,1,2,0,0,0,0,3,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",6,0,0,1,2,3,6,4,0,20,104,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,4,0,0,4,108,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,8,2,0,16,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",4,0,0,1,2,6,4,4,0,20,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",0,0,0,1,2,0,0,0,0,3,85,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,0,0,1,2,3,4,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",10,0,0,1,2,3,2,2,0,19,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",0,0,0,1,2,0,0,0,0,3,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",0,0,0,1,2,0,0,0,0,3,73,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",6,0,0,1,2,3,6,0,0,16,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",0,0,0,1,2,0,0,0,0,3,73,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",2,0,0,1,2,3,2,0,0,8,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",4,1,0,1,2,3,2,0,0,11,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,14,1,0,0,0,3,0,2,0,20,111,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",4,1,0,1,2,3,2,0,0,12,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,8,0,0,18,98,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,1,2,1,6,0,0,6,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,4,0,0,1,2,1,10,0,0,14,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,0,0,0,4,67,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,8,5,0,1,3,0,10,0,0,23,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",6,0,0,1,2,0,0,2,0,9,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",4,0,0,1,2,0,8,2,0,15,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",4,0,0,1,2,0,4,0,0,10,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,6,1,0,0,0,1,0,0,0,7,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,0,4,0,0,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,2,1,0,1,2,0,4,0,0,7,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,0,4,0,0,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,2,1,0,1,3,0,0,0,0,3,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,6,1,0,1,2,0,4,0,0,12,32,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,4,0,0,1,2,0,10,2,0,18,43,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,0,8,2,0,19,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,2,0,0,0,0,0,4,2,0,9,11,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,0,2,0,4,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,4,0,0,6,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,455,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {",0,0,0,5,11,0,0,0,0,16,101,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,490,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,492,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,494,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,495,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,502,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,3,10,2,0,21,55,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,506,                    if (dec == null,8,1,0,0,1,0,4,0,0,14,15,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,510,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,609,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,0,2,0,4,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,4,0,0,0,0,1,0,0,0,4,13,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,631,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,634,        return Float.valueOf(str);,4,3,0,1,2,1,6,0,0,13,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,650,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,664,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,668,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,4,0,0,1,2,1,0,2,0,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,718,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,4,0,0,1,2,4,10,2,0,21,27,1,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,195,        return cs == null || cs.length() == 0;,2,0,0,1,2,4,4,0,0,10,38,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,235,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,238,        for (int i = 0; i < strLen; i++) {,4,0,0,1,3,0,0,0,0,5,34,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,240,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,2,1,0,1,3,0,4,0,0,8,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,685,        return Long.decode(str);,0,0,0,1,2,1,6,0,0,6,24,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1296,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1299,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1304,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,159,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",10,2,0,4,8,3,4,2,0,22,94,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,0,0,0,1,2,0,0,0,0,3,54,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,35,    public static final Long LONG_ONE = Long.valueOf(1L);,2,0,0,1,2,3,8,2,0,16,53,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,37,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,2,0,0,1,2,3,4,2,0,12,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,41,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,2,0,0,1,2,3,4,2,0,11,61,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,43,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,2,0,0,1,2,3,4,2,0,12,68,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,45,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,47,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,0,0,0,2,4,0,0,0,0,6,63,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,6,2,0,14,70,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,53,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,6,2,0,15,59,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,6,1,0,1,2,4,8,2,0,21,62,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,10,1,0,1,2,3,4,2,0,21,61,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,0,0,0,1,2,0,0,0,0,3,68,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,0,0,0,1,2,0,0,0,0,3,59,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,2,0,0,1,2,3,4,2,0,11,58,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,67,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,0,0,0,1,2,0,0,0,0,3,65,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,0,0,1,3,0,0,0,0,4,26,4,2.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,2,4,0,12,0,0,13,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,        },0,0,0,0,1,0,0,0,0,1,1,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,            if (this == obj) {,0,0,0,1,3,0,0,0,0,4,18,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,4,0,0,1,3,2,0,2,0,8,40,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,4,0,0,1,2,0,0,4,0,8,51,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,                return,0,0,0,0,0,0,0,0,0,0,6,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,2,1,0,1,4,0,0,0,0,3,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,14,0,0,19,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1216,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1217,            mTimeZone = timeZone;,4,0,0,0,0,0,0,0,0,5,21,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1218,            if (daylight) {,8,4,0,1,3,0,4,0,0,17,15,1,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1219,                style |= 0x80000000;,2,0,0,0,0,0,0,0,0,3,20,7,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1221,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1222,            mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1223,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1230,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,2,4,0,3,6,1,8,0,0,14,71,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,259,                if (tokenLen >= 4) {,0,0,0,1,3,0,0,0,0,4,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,262,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",0,0,0,1,2,0,0,0,0,3,64,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,264,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1079,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",12,0,0,1,2,0,4,6,0,22,77,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1080,        String value = cTimeZoneDisplayCache.get(key);,0,0,0,1,2,0,0,0,0,3,46,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1081,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1083,"            value = tz.getDisplayName(daylight, style, locale);",2,0,0,1,2,0,16,0,0,19,51,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1084,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",4,1,0,1,2,0,8,2,0,15,61,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1085,            if (prior != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1089,        return value;,0,0,0,0,0,1,0,0,0,1,13,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,692,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,693,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1109,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",0,0,0,1,3,0,0,0,0,4,63,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1110,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1111,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1112,            zone = timeZone;,0,0,0,0,0,0,0,0,0,0,16,4,0.8,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1114,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",2,0,0,1,2,0,8,0,0,12,63,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1115,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",0,0,0,1,2,0,0,0,0,3,62,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1116,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1126,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,732,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.66667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,740,        },0,0,0,0,1,0,0,0,0,1,1,4,0.66667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,8,2,1,0,0,1,12,0,0,26,20,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,0,0,0,0,0,1,0,0,0,1,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,4,0,0,4,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,8,0,1,1,2,0,4,6,0,22,35,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",2,1,0,2,4,0,12,0,0,15,50,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,0,0,0,2,4,0,0,0,0,6,35,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,250,"        Date date= parse(source, new ParsePosition(0));",2,0,0,2,4,0,4,4,0,10,47,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,251,        if(date==null) {,0,0,0,1,3,0,0,0,0,4,16,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,276,        int offset= pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,2,0,0,2,4,0,10,2,0,14,64,4,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,278,        if(!matcher.lookingAt()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,0,0,0,0,0,1,0,0,0,1,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,2,1,0,2,4,0,0,0,0,3,56,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",8,0,0,2,4,0,8,2,0,21,93,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,2,1,0,1,3,0,0,0,0,3,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",2,0,1,2,4,0,6,0,0,12,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,250,"        Date date= parse(source, new ParsePosition(0));",0,0,0,2,4,0,0,0,0,6,47,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,        if(date==null) {,4,1,0,1,3,0,6,0,0,11,16,9,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,260,        return date;,2,0,0,0,0,1,0,0,0,2,12,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,741,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,0,0,0,9,48,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,742,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,276,        int offset= pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,6,0,0,2,4,1,10,4,0,21,64,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,278,        if(!matcher.lookingAt()) {,0,1,0,2,5,0,4,0,0,6,26,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,283,        cal.clear();,0,0,0,1,2,0,0,0,0,3,12,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,285,        for(int i=0; i<strategies.length;) {,10,2,0,1,3,0,0,0,0,12,36,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,286,            Strategy strategy= strategies[i++];,4,0,1,1,2,0,0,2,0,9,35,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,2,4,0,12,0,0,12,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,288,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,290,        return cal.getTime();,0,0,0,1,2,1,8,0,0,8,21,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,0,0,0,3,6,0,0,0,0,9,42,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,1,2,1,14,0,0,15,65,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,4,2,0,1,3,0,0,0,0,7,22,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,4,2,0,1,3,1,8,0,0,15,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,43,    private static final Random RANDOM = new Random();,4,1,0,1,2,3,0,4,0,13,50,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,54,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,55,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,69,"        return random(count, false, false);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,83,"        return random(count, 32, 127, false, false);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,97,"        return random(count, true, false);",0,0,0,1,2,1,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,111,"        return random(count, true, true);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,125,"        return random(count, false, true);",0,0,0,1,2,1,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,143,"        return random(count, 0, 0, letters, numbers);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,187,"        return random(count, start, end, letters, numbers, chars, RANDOM);",0,0,0,1,2,1,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,226,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");",0,0,0,1,2,0,0,0,0,3,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,231,"            throw new IllegalArgumentException(""The chars array must not be empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,235,            if (chars != null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,236,                end = chars.length;,6,0,0,0,0,0,0,0,0,7,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,238,                if (!letters && !numbers) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,239,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,241,                    end = 'z' + 1;,2,1,0,0,0,0,0,0,0,5,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,242,                    start = ' ';                ,10,1,0,0,0,0,0,0,0,14,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,255,                ch = chars[random.nextInt(gap) + start];,4,1,1,2,4,0,6,0,0,14,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,257,            if (letters && Character.isLetter(ch),2,1,0,1,3,0,6,0,0,9,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,260,                if(ch >= 56320 && ch <= 57343) {,4,3,0,1,3,0,0,2,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,261,                    if(count == 0) {,2,1,0,1,3,0,0,0,0,3,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,262,                        count++;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,265,                        buffer[count] = ch;,8,1,0,1,2,0,0,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,266,                        count--;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,267,                        buffer[count] = (char) (55296 + random.nextInt(128));,0,1,1,4,8,0,4,0,0,10,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,269,                } else if(ch >= 55296 && ch <= 56191) {,4,3,0,1,4,0,0,0,0,7,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,270,                    if(count == 0) {,2,1,0,1,3,0,0,0,0,3,16,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,271,                        count++;,2,0,0,0,0,0,0,0,0,3,8,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,274,                        buffer[count] = (char) (56320 + random.nextInt(128));,0,1,1,4,8,0,4,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,275,                        count--;,2,0,0,0,0,0,0,0,0,3,8,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,276,                        buffer[count] = ch;,4,0,1,1,2,0,0,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,278,                } else if(ch >= 56192 && ch <= 56319) {,0,0,0,1,4,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,280,                    count++;,2,0,0,0,0,0,0,0,0,3,8,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,282,                    buffer[count] = ch;,2,0,1,1,2,0,4,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,285,                count++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,288,        return new String(buffer);,2,0,0,1,2,1,0,2,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,306,        if (chars == null) {,4,1,0,1,3,3,0,4,0,12,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,307,"            return random(count, 0, 0, false, false, null, RANDOM);",4,0,0,1,2,1,6,0,0,13,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,309,"        return random(count, chars.toCharArray());",0,0,0,2,4,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,325,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,326,"            return random(count, 0, 0, false, false, null, RANDOM);",0,0,0,1,2,1,6,0,0,9,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,328,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",4,0,0,1,2,1,8,0,0,14,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,0,0,0,2,4,0,0,0,0,6,40,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,        if (count == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,8,4,0,1,4,3,2,2,0,20,23,1,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,4,3,0,1,3,0,6,0,0,14,29,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,8,0,0,15,27,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,4,1,1,2,4,0,0,0,0,7,32,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,2,0,1,1,3,0,0,0,0,5,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,2,0,0,1,2,3,0,4,0,9,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");",2,1,0,1,2,0,0,2,0,7,99,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,318,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,321,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",0,0,0,1,2,1,0,0,0,4,67,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",4,0,0,1,2,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,0,0,0,1,2,0,0,0,0,3,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,2,0,0,2,4,0,4,4,0,10,35,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,2,0,0,1,2,0,0,0,0,2,10,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,4,0,0,0,0,0,0,0,0,5,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,252,        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,            String name = desc.getName();,2,0,0,1,2,0,4,2,0,8,29,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",0,0,0,1,2,1,8,0,0,9,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,4,0,0,2,4,1,4,0,0,10,38,1,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,79,        if (object == null) {,2,1,0,1,3,0,8,0,0,13,21,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,164,        return baos.toByteArray();,0,0,0,1,2,1,4,0,0,4,26,5,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,2,0,0,1,2,1,6,4,0,12,23,3,0.0625,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.00321,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,    private static class InitStripAccents {,0,0,0,0,1,0,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,108,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,0,2,0,9,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,2,0,0,0,0,0,0,2,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,2,0,0,0,0,0,0,2,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,2,0,0,0,0,0,0,2,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,            Throwable _java6Exception = null;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,            Throwable _sunException = null;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",2,0,0,2,4,0,6,0,0,10,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,2,0,0,1,4,0,0,2,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,2,0,0,1,4,0,0,2,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,                    _sunException = e2;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,2,1,0,0,0,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,0,0,0,0,0,0,0,0,0,0,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,4,0,0,0,0,0,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,4,0,0,0,0,0,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,4,0,0,0,0,0,0,0,0,6,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },2,1,0,0,1,0,0,2,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,2,0,0,1,2,3,2,2,0,10,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,38,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",2,1,0,2,4,1,10,0,0,13,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",6,0,0,3,6,1,6,2,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",2,0,0,3,6,1,0,0,0,2,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,120,            int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,0,1,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,4,1,0,1,3,0,0,0,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,4,1,0,0,0,0,0,0,0,6,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,10,1,0,1,3,0,4,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,2,0,0,1,3,0,6,2,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,2,0,0,3,6,1,2,2,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,2,0,0,3,6,0,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,4,1,0,1,3,0,0,4,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",4,0,0,4,8,1,10,4,0,18,93,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,3,6,1,18,0,0,18,95,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,159,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,160,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,4,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,229,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,253,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,10,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,362,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",2,0,0,1,2,0,4,2,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,4,1,0,1,2,3,8,2,0,17,38,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,419,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,4,2,0,3,7,0,10,0,0,16,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,491,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,493,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,8,1,0,0,0,0,0,0,0,10,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,0,0,0,1,2,1,10,0,0,11,28,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,527,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,2,1,1,0,0,1,0,0,0,8,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,4,2,0,1,3,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,532,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,6,4,0,3,7,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,533,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,535,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,6,4,0,3,7,0,8,0,0,18,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,2,0,0,0,0,0,0,0,0,3,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,542,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",10,0,0,1,2,1,10,2,0,24,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,597,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,13,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,598,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,600,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,601,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,629,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,630,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,4,0,0,0,0,0,4,2,0,11,21,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,4,1,0,1,3,0,0,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,4,0,0,1,2,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,636,            } else if (InitStripAccents.sunDecomposeMethod != null) {,8,1,0,1,4,0,0,0,0,9,57,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,637,                result = removeAccentsSUN(input);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,639,                throw new UnsupportedOperationException(,8,0,0,0,1,0,0,2,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,645,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,647,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,648,        } catch(IllegalAccessException iae) {,2,0,0,1,4,3,0,4,0,9,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,649,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);",2,0,0,1,2,0,0,2,0,5,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,2,0,0,1,4,0,0,2,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,651,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);",2,0,0,1,2,0,0,2,0,5,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,653,"            throw new RuntimeException(""SecurityException occurred"", se);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,10,4,1,1,3,0,0,0,0,18,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,674,"            throw new IllegalStateException(""java.text.Normalizer is not available"", InitStripAccents.java6Exception);",0,0,0,1,2,0,0,0,0,3,106,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,677,"        result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] {text, InitStripAccents.java6NormalizerFormNFD});",12,0,0,4,8,0,2,4,0,19,131,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,678,"        result = InitStripAccents.java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,2,0,0,0,0,1,0,2,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,697,        if (InitStripAccents.sunDecomposeMethod == null) {,0,0,0,1,3,0,0,0,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,698,"            throw new IllegalStateException(""sun.text.Normalizer is not available"", InitStripAccents.sunException);",10,4,0,1,2,0,0,0,0,14,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",12,0,0,5,10,0,6,4,0,23,123,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,702,"        result = InitStripAccents.sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,703,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,786,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,814,            return str1 == str2;,4,1,0,0,0,1,0,0,0,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,816,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",0,0,0,4,8,1,20,0,0,21,103,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,843,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,4,2,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,846,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",2,0,0,1,2,1,14,0,0,18,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,876,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,877,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,879,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,907,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,908,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,910,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,1,2,1,8,0,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,947,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,948,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,950,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,18,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,8,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1007,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1010,            return lastIndex ? str.length() : 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1012,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1013,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1015,            if (lastIndex) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",6,1,0,1,2,0,8,2,0,18,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1018,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",6,1,0,1,2,0,8,0,0,16,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,14,2,0,1,3,0,0,0,0,18,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1023,            found++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1054,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1091,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1093,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1094,            startPos = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1096,        int endLimit = str.length() - searchStr.length() + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1100,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1101,            return startPos;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1103,        for (int i = startPos; i < endLimit; i++) {,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,14,0,0,15,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1134,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",4,0,0,2,4,1,12,2,0,18,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1169,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1170,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1172,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,6,3,0,1,3,0,0,2,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1200,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,2,4,1,0,0,0,7,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1240,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0,0,0,1,2,1,8,0,0,9,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1274,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1276,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1304,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1306,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,2,4,1,0,0,0,7,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1340,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1342,        if (startPos > str.length() - searchStr.length()) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1343,            startPos = str.length() - searchStr.length();,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1345,        if (startPos < 0) {,4,1,0,1,3,0,4,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1348,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1349,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1352,        for (int i = startPos; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1353,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",2,1,0,3,7,0,14,0,0,18,86,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1357,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1383,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1384,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",2,1,0,1,2,1,14,2,0,19,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1412,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1413,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1415,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",0,0,0,1,2,1,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1444,            return false;,6,3,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1447,        int max = str.length() - len;,8,1,0,1,2,0,4,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1448,        for (int i = 0; i <= max; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,2,5,0,12,0,0,13,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1450,                return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1453,        return false;,2,0,1,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1466,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1467,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1469,        int strLen = seq.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1470,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,8,1,0,3,7,0,10,0,0,20,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1472,                return true;,2,1,0,0,0,1,8,0,0,12,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1475,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1504,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1505,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1508,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1509,        int searchLen = searchChars.length;,0,1,0,0,0,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1510,        int searchLast = searchLen - 1;,6,1,0,0,0,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1511,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1512,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1513,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1514,                if (searchChars[j] == ch) {,2,2,1,2,5,0,4,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1515,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1517,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,4,3,1,3,7,0,4,0,0,13,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1518,                            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1521,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1526,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,4,4,0,3,7,0,8,0,0,16,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",2,1,1,2,4,1,8,0,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1587,            return false;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1589,        int csLength = cs.length();,6,1,0,1,2,0,0,0,0,7,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1590,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1591,        int csLast = csLength - 1;,12,4,0,0,0,0,10,0,0,26,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1592,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1593,        for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,2,1,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1595,            for (int j = 0; j < searchLength; j++) {,10,1,0,1,3,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,15,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1598,                        if (j == searchLast) {,6,2,0,1,3,0,0,0,0,8,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1602,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1603,                            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1607,                        return true;,0,0,0,0,0,1,0,0,0,1,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1612,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1644,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1645,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1647,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",0,0,0,2,4,1,10,0,0,10,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1677,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1678,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1680,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1681,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1683,        int searchLast = searchLen - 1;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1685,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1686,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,6,0,0,21,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1688,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,1,0,2,5,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1690,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,2,0,0,0,0,0,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1698,            return i;,6,2,0,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1727,        if (isEmpty(seq) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1728,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,4,3,0,1,2,0,12,0,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1731,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1732,            char ch = seq.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1733,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",2,1,1,1,2,0,16,0,0,28,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,4,3,0,2,5,0,6,0,0,13,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1735,                char ch2 = seq.charAt(i + 1);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",2,1,0,2,5,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1737,                    return i;,0,0,0,0,0,1,4,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,2,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1740,                if (!chFound) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1745,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1774,        if (valid == null || cs == null) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1775,            return false;,8,1,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,0,1,0,2,5,0,4,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1778,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1780,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1781,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1783,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1810,        if (cs == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1811,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1813,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1842,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,8,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1845,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1846,        int csLast = csLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1847,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1848,        int searchLast = searchLen - 1;,12,1,0,0,0,0,4,2,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1853,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,8,2,0,1,3,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1856,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1858,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1859,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1863,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1868,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,10,3,1,1,3,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1896,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1898,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,8,4,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1932,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,4,0,0,0,0,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,2,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1940,        for (int i = 0; i < sz; i++) {,8,2,1,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,4,0,0,1,2,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1942,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1943,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1945,"            tmp = CharSequenceUtils.indexOf(str, search, 0);",2,0,0,1,2,0,8,0,0,11,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1946,            if (tmp == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1947,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1951,                ret = tmp;,2,1,0,0,0,0,0,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,12,1,0,0,0,1,0,2,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1985,        if (str == null || searchStrs == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1986,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1988,        int sz = searchStrs.length;,2,1,0,0,0,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1989,        int ret = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1990,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,2,1,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1993,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1994,                continue;,2,0,0,0,0,0,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",2,0,0,2,4,0,12,0,0,15,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1997,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,8,1,0,0,0,0,14,0,0,25,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2001,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2031,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,6,2,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2036,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2037,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2040,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2041,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2044,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2047,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2086,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2087,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,6,2,0,1,3,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2092,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2095,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2099,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2104,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2108,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2111,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2112,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2115,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,10,1,1,1,3,0,12,6,0,39,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2142,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2144,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2145,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2147,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2148,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2150,"        return str.substring(0, len);",0,0,0,1,2,1,14,0,0,14,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2174,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2175,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2177,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2178,            return EMPTY;,2,0,0,0,0,1,6,6,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2180,        if (str.length() <= len) {,6,4,0,2,5,0,12,0,0,22,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2181,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2183,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2212,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2213,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,0,0,13,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2216,            return EMPTY;,0,0,0,0,0,1,8,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2218,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2219,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2221,        if (str.length() <= pos + len) {,8,2,0,2,5,0,4,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2222,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2224,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2257,        if (isEmpty(str) || separator == null) {,8,3,0,2,5,0,4,0,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2260,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2261,            return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2264,        if (pos == INDEX_NOT_FOUND) {,8,4,0,1,3,0,0,0,0,12,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2265,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2267,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2299,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2300,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2303,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,2,0,0,1,2,0,12,0,0,14,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2309,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,6,3,0,3,7,0,16,0,0,26,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2344,        if (pos == INDEX_NOT_FOUND) {,2,0,0,1,3,0,0,0,0,2,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2345,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2347,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2380,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2381,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2384,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2386,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,6,4,0,3,7,0,8,0,0,18,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2388,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2390,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2417,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2448,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2449,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2451,        int start = str.indexOf(open);,2,0,0,1,2,0,6,0,0,8,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2453,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,6,1,1,1,3,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2458,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2484,        if (str == null || isEmpty(open) || isEmpty(close)) {,2,3,0,3,7,0,8,0,0,15,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2485,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2487,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2488,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2491,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2492,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2493,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2494,        int pos = 0;,4,1,0,0,0,0,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,0,0,0,1,3,0,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2496,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2498,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,12,1,0,0,0,0,0,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2501,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2503,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2505,"            list.add(str.substring(start, end));",2,1,0,2,4,0,12,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2507,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2508,        if (list.isEmpty()) {,0,0,0,2,5,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2509,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,4,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",2,1,0,1,2,1,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2599,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2633,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2660,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2691,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2753,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2772,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2773,            return null;,8,1,0,0,0,1,0,0,0,10,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,4,0,0,1,2,0,8,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2778,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2779,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,6,0,0,10,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,2,2,0,2,5,0,12,0,0,16,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2784,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,10,1,0,1,2,0,4,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2789,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,12,8,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,2,0,0,0,0,0,6,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2791,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2792,        int end = 0;,8,2,0,0,0,0,0,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,6,1,0,1,3,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",6,1,0,1,2,0,12,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2796,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2797,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,6,1,0,0,0,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2800,                    if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2801,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,22,0,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2806,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2811,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2815,                    if (preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,4,1,0,0,0,0,6,0,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2817,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,2,0,0,0,0,0,0,0,0,4,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2819,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2821,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2824,                    beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2828,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2829,                end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2862,"        return splitWorker(str, null, -1, true);",4,3,0,1,2,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2898,"        return splitWorker(str, separatorChar, true);",2,0,0,1,2,1,6,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2916,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2921,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2925,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2926,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2927,        while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2928,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2929,                if (match || preserveAllTokens) {,22,4,0,1,3,0,0,0,0,28,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2930,"                    list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2931,                    match = false;,2,1,1,0,0,0,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2932,                    lastMatch = true;,0,0,0,0,0,0,6,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2934,                start = ++i;,8,0,0,0,0,0,0,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2935,                continue;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2938,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2939,            i++;,2,0,0,0,0,0,8,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2941,        if (match || preserveAllTokens && lastMatch) {,12,3,0,1,3,0,0,0,0,17,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2942,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2944,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",2,0,0,1,2,1,6,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3021,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3043,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3044,            return null;,4,0,0,0,0,1,0,0,0,5,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3047,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3048,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,12,1,0,0,0,0,4,2,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3052,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3053,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3054,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,0,0,0,1,3,0,4,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3057,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,10,1,0,3,7,0,0,0,0,12,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3059,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3060,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3061,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3062,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,14,3,0,0,0,0,6,0,0,25,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3065,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3066,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3069,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3071,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,16,1,0,0,0,0,4,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,4,1,1,2,6,0,4,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3077,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3078,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3079,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,4,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,0,1,0,0,0,0,8,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3082,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3083,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3087,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3089,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3090,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3094,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3096,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3098,            while (i < len) {,2,0,0,1,3,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3099,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3100,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3103,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3104,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3106,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3110,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,6,0,0,0,0,0,0,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3114,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,6,2,0,1,3,0,0,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3118,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3120,        return list.toArray(new String[list.size()]);,6,0,0,3,6,1,8,2,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3143,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3171,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3189,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3190,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3192,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,2,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3195,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3196,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3197,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3198,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3199,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,14,2,0,1,3,0,0,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3202,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3204,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,8,4,0,0,0,0,0,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3207,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3208,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3210,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3211,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,10,2,0,23,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,0,1,0,0,0,0,4,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,10,4,0,0,0,0,2,4,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,4,3,0,3,6,1,8,2,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3271,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3305,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3306,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,8,1,1,0,0,0,0,0,0,11,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3309,        if (noOfItems <= 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,2,0,0,0,0,1,0,8,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3313,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3315,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,8,1,0,1,3,0,0,2,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3317,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3319,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3320,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3323,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3350,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3351,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3353,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3384,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3385,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,12,2,0,1,3,1,4,4,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3393,        int noOfItems = endIndex - startIndex;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,0,0,0,1,3,0,10,0,0,10,21,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3395,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3398,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3400,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,4,1,0,1,3,0,12,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3405,                buf.append(array[i]);,2,0,0,2,4,0,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3408,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3428,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3429,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3431,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,2,0,0,0,0,1,6,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,2,0,0,1,2,0,20,2,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3435,        if (!iterator.hasNext()) {,0,0,0,2,5,0,8,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3436,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3441,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3445,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3446,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3447,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3449,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3451,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3453,        return buf.toString();,0,0,0,1,2,1,4,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,0,0,0,1,3,0,4,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3473,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3475,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3476,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3478,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3479,        if (!iterator.hasNext()) {,0,0,0,2,5,0,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3480,            return ObjectUtils.toString(first);,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",12,2,0,1,2,0,0,0,0,15,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3485,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3486,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3489,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,0,0,0,1,2,0,14,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3493,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3494,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3495,                buf.append(obj);,0,0,0,1,2,0,14,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3497,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3498,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,4,2,0,1,3,0,0,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3517,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,8,4,0,1,3,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,5,2,0,0,0,1,8,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3540,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,12,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3560,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3561,            return str;,10,1,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3563,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3565,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3566,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3567,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3568,                chs[count++] = str.charAt(i);,6,3,1,2,4,0,6,0,0,27,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3572,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3605,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3607,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,2,0,0,2,4,1,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3640,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3642,"        if (startsWithIgnoreCase(str, remove)) {",4,0,0,2,5,0,6,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,2,1,1,2,4,1,8,0,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3673,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3676,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3677,"            return str.substring(0, str.length() - remove.length());",12,2,1,3,6,1,12,0,0,34,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3679,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3710,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",4,3,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3715,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3742,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,1,14,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3743,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3745,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3768,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,2,2,0,3,7,0,10,0,0,14,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3769,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3771,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3772,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3773,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3774,            if (chars[i] != remove) {,6,2,1,2,5,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3775,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3778,"        return new String(chars, 0, pos);",4,3,0,1,2,1,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3807,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3834,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3866,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3867,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3871,        if (end == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3874,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3875,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,8,1,0,0,0,1,0,8,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3877,        increase *= max < 0 ? 16 : max > 64 ? 64 : max;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3878,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3880,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,0,0,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,6,1,1,0,0,0,2,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3882,            if (--max == 0) {,2,0,1,1,3,0,4,0,0,10,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3883,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",16,1,0,1,2,1,8,4,0,32,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3887,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3888,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3931,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,0,0,0,9,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3982,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",2,0,0,1,2,1,10,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,6,8,0,1,3,0,8,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,2,2,0,0,0,1,6,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4045,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4046,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +",2,1,0,0,1,0,0,2,0,6,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4050,        int searchLength = searchList.length;,0,0,0,0,0,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,6,1,0,0,0,0,0,0,0,7,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4054,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,4,1,1,2,4,0,0,0,0,7,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,4,1,0,0,0,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4066,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4071,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4072,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4074,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4076,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,4,1,1,1,3,0,0,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4080,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,12,3,0,1,3,1,4,4,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4083,                    textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4092,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4098,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4101,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4102,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,3,7,0,0,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4103,                continue;,0,0,0,0,0,0,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4106,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4107,                increase += 3 * greater; // assume 3 matches,6,1,0,0,0,0,6,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4111,"        increase = Math.min(increase, text.length() / 5);",10,1,0,2,4,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4115,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4118,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,2,0,1,2,4,0,10,2,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4126,            tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,2,4,1,2,5,0,0,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4132,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4134,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4137,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4138,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4141,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,10,2,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4149,        int textLength = text.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,2,0,0,1,3,0,0,0,0,3,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4151,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,4,0,0,1,2,0,12,2,0,18,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4154,        if (!repeat) {,2,0,0,1,3,0,4,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4155,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",4,1,0,1,2,2,14,0,0,20,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4184,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4185,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4187,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4227,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,4,0,0,4,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4228,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,6,2,0,1,3,0,2,0,0,10,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4231,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,8,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4234,        int replaceCharsLength = replaceChars.length();,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4236,        StringBuilder buf = new StringBuilder(strLength);,8,1,0,1,2,0,0,4,0,13,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4237,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,6,1,0,1,2,0,6,4,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4239,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,1,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4241,                modified = true;,12,1,0,0,0,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4242,                if (index < replaceCharsLength) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4243,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4246,                buf.append(ch);,2,0,0,1,2,0,6,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4249,        if (modified) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4250,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4252,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,2,0,0,1,3,0,4,2,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,10,1,0,0,0,1,0,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4290,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4293,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4294,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,10,1,0,0,0,0,0,0,0,14,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,2,0,0,1,3,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,6,1,0,0,0,0,0,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4303,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4304,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4306,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4307,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,8,1,0,0,0,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4309,            end = temp;,0,0,0,0,0,0,6,0,0,6,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4311,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4346,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4347,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4350,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4352,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4358,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4359,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4361,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,6,0,0,0,0,0,0,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4366,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4368,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",8,0,1,1,2,1,18,0,0,35,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4430,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4432,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4433,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4434,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4436,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4437,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4438,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4439,        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4442,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4471,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4472,            return null;,0,0,0,0,0,1,10,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4474,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,10,0,0,0,0,1,8,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,14,1,0,1,2,0,12,2,0,29,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4478,        if (repeat == 1 || inputLength == 0) {,2,0,0,1,3,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4481,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4482,"            return repeat(str.charAt(0), repeat);",2,0,0,2,4,2,8,8,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4486,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4488,"                return repeat(str.charAt(0), repeat);",0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4490,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,1,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4491,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4492,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4493,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4494,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4495,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,6,1,1,1,2,1,0,2,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,4,0,0,1,2,0,0,4,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4500,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4503,                return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4528,        if(str == null || separator == null) {,6,3,0,1,3,0,0,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4529,"            return repeat(str, repeat);",8,1,0,1,2,1,18,2,0,29,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",10,1,0,1,2,0,4,2,0,18,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4533,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4560,        char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,2,0,1,1,2,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,2,1,0,1,2,1,2,2,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4587,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,16,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4612,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,4,2,1,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4617,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4622,"        return str.concat(repeat(padChar, pads));",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4649,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4652,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4653,"            padStr = "" "";",0,0,0,0,0,0,6,0,0,6,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4655,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4656,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4658,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4661,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4662,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4665,        if (pads == padLen) {,12,1,0,1,3,0,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4666,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4668,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,6,2,0,2,4,0,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,8,1,0,2,4,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4672,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,2,0,0,2,4,0,0,4,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4675,            return str.concat(new String(padding));,2,0,0,2,4,1,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4699,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4725,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4727,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4728,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4731,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4732,"            return leftPad(str, size, String.valueOf(padChar));",8,0,0,2,4,2,12,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4734,"        return repeat(padChar, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4761,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4762,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4764,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4767,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4769,        int pads = size - strLen;,6,2,0,0,0,0,12,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4770,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4771,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4773,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",2,0,1,2,4,1,10,0,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4777,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4778,            return padStr.concat(str);,2,0,0,1,2,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4779,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4780,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4783,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4784,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,8,0,0,18,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4785,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4787,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4803,        return cs == null ? 0 : cs.length();,8,4,0,1,2,1,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4832,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,10,6,0,1,3,0,0,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4861,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4863,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4864,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4865,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4866,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4869,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4900,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,12,4,0,0,0,1,0,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4903,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4904,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4906,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4908,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4909,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",8,3,0,1,2,0,6,0,0,18,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4912,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,4,1,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4938,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4939,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4941,        return str.toUpperCase();,0,0,1,1,2,1,8,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4962,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4964,        return str.toUpperCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4988,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,6,3,0,1,2,1,0,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5010,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5011,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5013,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5039,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),4,1,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5069,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5070,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5072,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5106,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,2,0,1,1,2,0,0,0,0,6,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5114,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,2,4,0,6,0,0,11,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,2,0,0,2,4,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,2,4,0,6,0,0,11,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5122,        return new String(buffer);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5148,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5152,        int idx = 0;,6,1,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5153,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {",10,2,0,3,7,0,10,0,0,23,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5154,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5155,            idx += sub.length();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,2,0,0,0,0,1,6,2,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5186,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,4,0,0,3,7,0,0,0,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5189,                return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5192,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5219,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,2,1,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,4,9,0,16,0,0,21,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5224,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5254,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5257,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5258,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,2,0,3,7,0,18,0,0,21,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5259,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5262,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5288,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5289,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5291,        int sz = cs.length();,4,0,0,1,2,0,12,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,4,1,0,4,9,0,10,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5294,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5297,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5327,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5328,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5330,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5331,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5332,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5333,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5364,            return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5368,            if (Character.isDigit(cs.charAt(i)) == false) {,2,3,1,3,7,0,0,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5369,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5372,        return true;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,2,0,0,1,3,0,4,0,0,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5401,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,4,1,0,1,2,0,24,0,0,29,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,0,0,4,9,0,0,0,0,13,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5406,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5409,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,4,1,0,1,3,0,0,2,0,9,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,10,1,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5436,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5437,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,4,1,0,3,7,0,4,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5439,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5442,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,6,2,0,2,5,0,4,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5466,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5468,        int sz = cs.length();,4,1,0,1,2,0,14,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5469,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5470,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5471,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5474,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5497,        if (cs == null || isEmpty(cs)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5498,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5500,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5501,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5503,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5506,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,10,1,1,0,0,1,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5549,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5593,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5616,        return new StringBuilder(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,6,2,0,1,3,0,10,0,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,2,0,0,0,0,1,10,4,0,16,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5645,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,12,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5646,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5684,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5723,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,2,0,0,0,0,1,0,2,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5729,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,10,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5730,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,4,0,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5735,        if (str.length() - offset < maxWidth - 3) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5736,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",2,0,0,0,0,1,0,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5739,        if (offset <= 4) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5740,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5743,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5745,        if (offset + maxWidth - 3 < str.length()) {,4,3,0,2,5,0,10,2,0,19,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5746,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,4,3,0,3,6,1,8,0,0,15,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,3,7,0,16,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5782,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5785,        if (length >= str.length() || length < middle.length()+2) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,4,1,0,1,2,0,4,0,0,9,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5790,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,0,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5791,        int endOffset = str.length()-targetSting/2;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5794,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5795,        builder.append(middle);,0,0,0,1,2,0,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5796,        builder.append(str.substring(endOffset));,0,0,0,2,4,0,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5798,        return builder.toString();,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5829,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5830,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5832,        if (str2 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5836,        if (at == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5837,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5839,        return str2.substring(at);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5869,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5871,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5872,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5875,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5877,                break;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5880,        if (i < cs2.length() || i < cs1.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,4,0,1,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,0,4,1,0,0,1,0,0,0,12,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5919,        if (css == null || css.length <= 1) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5920,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5922,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
