dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,10,2,0,1,2,1,4,0,0,17,44,3,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,0,0,0,1,3,0,0,0,0,4,42,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,4,0,0,6,31,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",0,0,0,2,4,0,0,0,0,6,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,8,1,0,1,2,0,0,0,0,10,32,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,6,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",6,1,0,1,2,0,12,2,0,22,40,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,6,0,0,7,32,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,2,0,0,1,2,0,4,0,0,7,128,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,4,0,0,5,47,11,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,4,3,0,1,3,0,0,0,0,7,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",10,3,0,1,2,1,16,4,0,36,64,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,4,1,0,1,3,3,2,2,0,13,21,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,4,0,0,0,0,0,4,0,0,8,18,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,4,0,0,2,5,2,0,2,0,8,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,49,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,50,            for (final CharSequence[] seq : lookup) {,0,0,0,2,5,0,0,0,0,7,41,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,4,0,1,2,4,1,6,0,0,13,31,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,6,0,0,0,0,1,0,2,0,10,15,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,6,2,1,1,3,0,4,0,0,20,20,3,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,0,0,0,0,0,0,0,0,0,0,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,62,        longest = _longest;,4,0,0,0,0,0,0,0,0,5,19,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,4,0,0,10,68,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,3,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,2,0,0,1,2,1,4,0,0,7,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,3,7,0,12,0,0,15,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,2,0,0,0,1,1,0,0,0,3,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,2,0,0,3,6,0,8,8,0,18,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,8,1,0,1,2,0,6,0,0,16,59,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,297,            AVAILABLE_LOCALE_SET = Collections.unmodifiableSet(new HashSet<Locale>(list));,4,0,0,2,4,0,4,4,0,13,78,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,298,        },0,0,0,0,1,0,4,0,0,6,1,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",2,0,0,0,0,3,0,8,0,13,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",6,1,0,0,0,3,4,10,0,24,79,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,6,1,0,0,0,1,0,0,0,7,39,3,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,0,0,0,2,4,1,6,0,0,6,46,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,0,0,0,4,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,2,1,0,1,3,0,0,0,0,3,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,3,7,0,16,0,0,17,67,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,2,1,0,1,2,1,4,0,0,7,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,0,1,0,0,0,0,10,0,0,12,31,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,4,0,0,1,2,3,8,2,0,18,23,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,4,0,0,1,2,3,4,0,0,11,46,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,55,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,4,3,0,1,2,0,4,0,0,12,73,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,10,79,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,8,0,0,1,3,1,0,2,0,12,67,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,1,0,1,2,3,14,2,0,24,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,2,0,0,1,2,1,8,2,0,12,21,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,12,70,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,10,2,0,17,68,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,0,0,5,10,3,4,4,0,14,96,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,8,2,0,14,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },6,0,0,5,10,3,4,4,0,16,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,0,0,0,4,8,0,0,0,0,12,50,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,12,1,0,1,3,0,0,2,0,16,37,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,4,3,1,4,8,0,4,0,0,21,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,4,0,0,13,29,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",4,0,0,1,2,6,2,6,0,20,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,6,0,0,1,2,3,4,2,0,16,82,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",4,1,0,1,2,0,8,0,0,14,102,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",4,0,0,1,2,6,4,4,0,20,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,8,0,0,0,0,3,0,4,0,16,64,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",6,0,0,1,2,3,6,4,0,20,104,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,4,0,0,4,108,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,8,2,0,16,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",4,0,0,1,2,6,4,4,0,20,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,0,0,1,2,3,4,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",10,0,0,1,2,3,2,2,0,19,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",6,0,0,1,2,3,6,0,0,16,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",2,0,0,1,2,3,2,0,0,8,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",4,1,0,1,2,3,2,0,0,11,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,14,1,0,0,0,3,0,2,0,20,111,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",4,1,0,1,2,3,2,0,0,12,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,8,0,0,18,98,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,4,0,0,1,2,1,10,0,0,14,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,8,5,0,1,3,0,10,0,0,23,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",6,0,0,1,2,0,0,2,0,9,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",4,0,0,1,2,0,8,2,0,15,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",4,0,0,1,2,0,4,0,0,10,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,6,1,0,0,0,1,0,0,0,7,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,0,4,0,0,5,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,2,1,0,1,2,0,4,0,0,7,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,0,4,0,0,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,2,1,0,1,3,0,0,0,0,3,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,6,1,0,1,2,0,4,0,0,12,32,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,4,0,0,1,2,0,10,2,0,18,43,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,0,8,2,0,19,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,2,0,0,0,0,0,4,2,0,9,11,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,0,2,0,4,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,4,0,0,6,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,490,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,492,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,4,0,0,0,0,0,0,0,0,5,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,502,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,3,10,2,0,21,55,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,506,                    if (dec == null,8,1,0,0,1,0,4,0,0,14,15,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,609,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,0,2,0,4,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,4,0,0,0,0,1,0,0,0,4,13,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,631,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,634,        return Float.valueOf(str);,4,3,0,1,2,1,6,0,0,13,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,664,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,4,0,0,1,2,1,0,2,0,6,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,4,0,0,1,2,4,10,2,0,21,27,1,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,195,        return cs == null || cs.length() == 0;,2,0,0,1,2,4,4,0,0,10,38,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,235,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,238,        for (int i = 0; i < strLen; i++) {,4,0,0,1,3,0,0,0,0,5,34,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,2,1,0,1,3,0,4,0,0,8,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,2,4,0,12,0,0,13,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,4,0,0,1,3,2,0,2,0,8,40,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,4,0,0,1,2,0,0,4,0,8,51,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,2,1,0,1,4,0,0,0,0,3,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,14,0,0,19,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,8,2,1,0,0,1,12,0,0,26,20,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,8,0,1,1,2,0,4,6,0,22,35,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",2,1,0,2,4,0,12,0,0,15,50,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,2,1,0,2,4,0,0,0,0,3,56,4,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",8,0,0,2,4,0,8,2,0,21,93,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,2,1,0,1,3,0,0,0,0,3,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",2,0,1,2,4,0,6,0,0,12,41,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,0,0,0,3,6,0,0,0,0,9,42,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,1,2,1,14,0,0,15,65,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,4,2,0,1,3,0,0,0,0,7,22,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,4,2,0,1,3,1,8,0,0,15,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,0,0,0,2,4,0,0,0,0,6,40,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,8,4,0,1,4,3,2,2,0,20,23,1,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,4,3,0,1,3,0,6,0,0,14,29,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,8,0,0,15,27,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,4,1,1,2,4,0,0,0,0,7,32,3,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,2,0,1,1,3,0,0,0,0,5,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,2,0,0,1,2,3,0,4,0,9,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",4,0,0,1,2,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,0,0,0,1,2,0,0,0,0,3,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,2,0,0,2,4,0,4,4,0,10,35,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,2,0,0,1,2,0,0,0,0,2,10,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,4,0,0,0,0,0,0,0,0,5,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,            String name = desc.getName();,2,0,0,1,2,0,4,2,0,8,29,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",0,0,0,1,2,1,8,0,0,9,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,4,0,0,2,4,1,4,0,0,10,38,1,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,2,0,0,1,2,1,6,4,0,12,23,3,0.0625,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.00321,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,0,2,0,9,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,2,0,0,0,0,0,0,2,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,2,0,0,0,0,0,0,2,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,2,0,0,0,0,0,0,2,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",2,0,0,2,4,0,6,0,0,10,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,2,0,0,1,4,0,0,2,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,2,0,0,1,4,0,0,2,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,2,1,0,0,0,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,4,0,0,0,0,0,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,4,0,0,0,0,0,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,4,0,0,0,0,0,0,0,0,6,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },2,1,0,0,1,0,0,2,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,2,0,0,1,2,3,2,2,0,10,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",2,1,0,2,4,1,10,0,0,13,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",6,0,0,3,6,1,6,2,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",2,0,0,3,6,1,0,0,0,2,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,0,1,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,4,1,0,1,3,0,0,0,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,4,1,0,0,0,0,0,0,0,6,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,10,1,0,1,3,0,4,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,2,0,0,1,3,0,6,2,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,2,0,0,3,6,1,2,2,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,2,0,0,3,6,0,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,4,1,0,1,3,0,0,4,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",4,0,0,4,8,1,10,4,0,18,93,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,3,6,1,18,0,0,18,95,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,4,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,10,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",2,0,0,1,2,0,4,2,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,4,1,0,1,2,3,8,2,0,17,38,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,4,2,0,3,7,0,10,0,0,16,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,8,1,0,0,0,0,0,0,0,10,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,0,0,0,1,2,1,10,0,0,11,28,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,2,1,1,0,0,1,0,0,0,8,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,4,2,0,1,3,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,532,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,6,4,0,3,7,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,533,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,535,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,6,4,0,3,7,0,8,0,0,18,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,2,0,0,0,0,0,0,0,0,3,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",10,0,0,1,2,1,10,2,0,24,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,597,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,13,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,4,0,0,0,0,0,4,2,0,11,21,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,4,1,0,1,3,0,0,0,0,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,4,0,0,1,2,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,636,            } else if (InitStripAccents.sunDecomposeMethod != null) {,8,1,0,1,4,0,0,0,0,9,57,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,639,                throw new UnsupportedOperationException(,8,0,0,0,1,0,0,2,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,645,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,648,        } catch(IllegalAccessException iae) {,2,0,0,1,4,3,0,4,0,9,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,649,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);",2,0,0,1,2,0,0,2,0,5,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,2,0,0,1,4,0,0,2,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,651,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);",2,0,0,1,2,0,0,2,0,5,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,10,4,1,1,3,0,0,0,0,18,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,677,"        result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] {text, InitStripAccents.java6NormalizerFormNFD});",12,0,0,4,8,0,2,4,0,19,131,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,2,0,0,0,0,1,0,2,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,698,"            throw new IllegalStateException(""sun.text.Normalizer is not available"", InitStripAccents.sunException);",10,4,0,1,2,0,0,0,0,14,103,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",12,0,0,5,10,0,6,4,0,23,123,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,814,            return str1 == str2;,4,1,0,0,0,1,0,0,0,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,816,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",0,0,0,4,8,1,20,0,0,21,103,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,843,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,4,2,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,846,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",2,0,0,1,2,1,14,0,0,18,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,877,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,908,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,910,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,1,2,1,8,0,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,950,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,18,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,8,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1007,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",6,1,0,1,2,0,8,2,0,18,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1018,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",6,1,0,1,2,0,8,0,0,16,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,14,2,0,1,3,0,0,0,0,18,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1101,            return startPos;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,14,0,0,15,86,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",4,0,0,2,4,1,12,2,0,18,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,6,3,0,1,3,0,0,2,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,2,4,1,0,0,0,7,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1345,        if (startPos < 0) {,4,1,0,1,3,0,4,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1353,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",2,1,0,3,7,0,14,0,0,18,86,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",2,1,0,1,2,1,14,2,0,19,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1412,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1444,            return false;,6,3,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1447,        int max = str.length() - len;,8,1,0,1,2,0,4,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1448,        for (int i = 0; i <= max; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,2,5,0,12,0,0,13,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1450,                return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1453,        return false;,2,0,1,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,8,1,0,3,7,0,10,0,0,20,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1472,                return true;,2,1,0,0,0,1,8,0,0,12,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1504,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1509,        int searchLen = searchChars.length;,0,1,0,0,0,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1510,        int searchLast = searchLen - 1;,6,1,0,0,0,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1513,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1514,                if (searchChars[j] == ch) {,2,2,1,2,5,0,4,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1517,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,4,3,1,3,7,0,4,0,0,13,45,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,4,4,0,3,7,0,8,0,0,16,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",2,1,1,2,4,1,8,0,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1587,            return false;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1589,        int csLength = cs.length();,6,1,0,1,2,0,0,0,0,7,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1591,        int csLast = csLength - 1;,12,4,0,0,0,0,10,0,0,26,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1592,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,2,1,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1595,            for (int j = 0; j < searchLength; j++) {,10,1,0,1,3,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,15,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1598,                        if (j == searchLast) {,6,2,0,1,3,0,0,0,0,8,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1607,                        return true;,0,0,0,0,0,1,0,0,0,1,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1647,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",0,0,0,2,4,1,10,0,0,10,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1678,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1680,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1681,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,6,0,0,21,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,4,1,0,2,5,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,2,0,0,0,0,0,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1698,            return i;,6,2,0,0,0,1,0,0,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,4,3,0,1,2,0,12,0,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1732,            char ch = seq.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1733,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",2,1,1,1,2,0,16,0,0,28,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,4,3,0,2,5,0,6,0,0,13,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",2,1,0,2,5,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,2,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1745,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1775,            return false;,8,1,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,0,1,0,2,5,0,4,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1810,        if (cs == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,8,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1848,        int searchLast = searchLen - 1;,12,1,0,0,0,0,4,2,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,12,2,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1853,                    if (Character.isHighSurrogate(ch)) {,2,0,0,2,5,0,12,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,8,2,0,1,3,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,10,3,1,1,3,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,8,4,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,4,0,0,0,0,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,2,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1940,        for (int i = 0; i < sz; i++) {,8,2,1,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,4,0,0,1,2,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1945,"            tmp = CharSequenceUtils.indexOf(str, search, 0);",2,0,0,1,2,0,8,0,0,11,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1951,                ret = tmp;,2,1,0,0,0,0,0,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,12,1,0,0,0,1,0,2,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1988,        int sz = searchStrs.length;,2,1,0,0,0,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,2,1,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1994,                continue;,2,0,0,0,0,0,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",2,0,0,2,4,0,12,0,0,15,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1997,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,8,1,0,0,0,0,14,0,0,25,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2001,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2031,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,6,2,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2037,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2040,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2044,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2086,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,6,2,0,1,3,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2092,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2095,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2099,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,10,1,1,1,3,0,12,6,0,39,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2145,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2150,"        return str.substring(0, len);",0,0,0,1,2,1,14,0,0,14,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2177,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2178,            return EMPTY;,2,0,0,0,0,1,6,6,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2180,        if (str.length() <= len) {,6,4,0,2,5,0,12,0,0,22,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2181,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,0,0,13,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2216,            return EMPTY;,0,0,0,0,0,1,8,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2218,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2221,        if (str.length() <= pos + len) {,8,2,0,2,5,0,4,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2257,        if (isEmpty(str) || separator == null) {,8,3,0,2,5,0,4,0,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2261,            return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2264,        if (pos == INDEX_NOT_FOUND) {,8,4,0,1,3,0,0,0,0,12,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2300,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,2,0,0,1,2,0,12,0,0,14,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2309,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,6,3,0,3,7,0,16,0,0,26,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2344,        if (pos == INDEX_NOT_FOUND) {,2,0,0,1,3,0,0,0,0,2,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2380,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2381,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2386,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,6,4,0,3,7,0,8,0,0,18,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2448,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2449,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2451,        int start = str.indexOf(open);,2,0,0,1,2,0,6,0,0,8,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2453,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,6,1,1,1,3,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2484,        if (str == null || isEmpty(open) || isEmpty(close)) {,2,3,0,3,7,0,8,0,0,15,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2492,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2494,        int pos = 0;,4,1,0,0,0,0,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,0,0,0,1,3,0,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,12,1,0,0,0,0,0,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2505,"            list.add(str.substring(start, end));",2,1,0,2,4,0,12,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,4,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",2,1,0,1,2,1,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2773,            return null;,8,1,0,0,0,1,0,0,0,10,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,4,0,0,1,2,0,8,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2778,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2779,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,6,0,0,10,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,2,2,0,2,5,0,12,0,0,16,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2784,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,10,1,0,1,2,0,4,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2789,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,12,8,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,2,0,0,0,0,0,6,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2792,        int end = 0;,8,2,0,0,0,0,0,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,6,1,0,1,3,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",6,1,0,1,2,0,12,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,6,1,0,0,0,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,22,0,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2811,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,4,1,0,0,0,0,6,0,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,2,0,0,0,0,0,0,0,0,4,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2821,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2862,"        return splitWorker(str, null, -1, true);",4,3,0,1,2,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2898,"        return splitWorker(str, separatorChar, true);",2,0,0,1,2,1,6,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2916,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2926,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2929,                if (match || preserveAllTokens) {,22,4,0,1,3,0,0,0,0,28,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2930,"                    list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2931,                    match = false;,2,1,1,0,0,0,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2932,                    lastMatch = true;,0,0,0,0,0,0,6,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2934,                start = ++i;,8,0,0,0,0,0,0,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2935,                continue;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2939,            i++;,2,0,0,0,0,0,8,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2941,        if (match || preserveAllTokens && lastMatch) {,12,3,0,1,3,0,0,0,0,17,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",2,0,0,1,2,1,6,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3044,            return null;,4,0,0,0,0,1,0,0,0,5,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,12,1,0,0,0,0,4,2,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,0,0,0,1,3,0,4,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,10,1,0,3,7,0,0,0,0,12,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,14,3,0,0,0,0,6,0,0,25,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3065,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,16,1,0,0,0,0,4,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,4,1,1,2,6,0,4,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3077,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,4,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,0,1,0,0,0,0,8,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3098,            while (i < len) {,2,0,0,1,3,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,6,0,0,0,0,0,0,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,6,2,0,1,3,0,0,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3120,        return list.toArray(new String[list.size()]);,6,0,0,3,6,1,8,2,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3143,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3192,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,2,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3195,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3199,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,14,2,0,1,3,0,0,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,8,4,0,0,0,0,0,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3211,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,10,2,0,23,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,0,1,0,0,0,0,4,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,10,4,0,0,0,0,2,4,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,4,3,0,3,6,1,8,2,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,8,1,1,0,0,0,0,0,0,11,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,2,0,0,0,0,1,0,8,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,8,1,0,1,3,0,0,2,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3353,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3384,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,12,2,0,1,3,1,4,4,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,0,0,0,1,3,0,10,0,0,10,21,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3395,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,4,1,0,1,3,0,12,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3405,                buf.append(array[i]);,2,0,0,2,4,0,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3431,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,2,0,0,0,0,1,6,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,2,0,0,1,2,0,20,2,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3435,        if (!iterator.hasNext()) {,0,0,0,2,5,0,8,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3436,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3441,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3447,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3449,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3453,        return buf.toString();,0,0,0,1,2,1,4,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,0,0,0,1,3,0,4,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3475,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3476,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3480,            return ObjectUtils.toString(first);,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",12,2,0,1,2,0,0,0,0,15,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,0,0,0,1,2,0,14,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3494,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3495,                buf.append(obj);,0,0,0,1,2,0,14,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,4,2,0,1,3,0,0,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,8,4,0,1,3,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,5,2,0,0,0,1,8,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3540,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,12,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3561,            return str;,10,1,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3563,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3566,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3567,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3568,                chs[count++] = str.charAt(i);,6,3,1,2,4,0,6,0,0,27,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3572,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,2,0,0,2,4,1,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3642,"        if (startsWithIgnoreCase(str, remove)) {",4,0,0,2,5,0,6,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,2,1,1,2,4,1,8,0,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3677,"            return str.substring(0, str.length() - remove.length());",12,2,1,3,6,1,12,0,0,34,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",4,3,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3742,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,1,14,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3768,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,2,2,0,3,7,0,10,0,0,14,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3774,            if (chars[i] != remove) {,6,2,1,2,5,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3778,"        return new String(chars, 0, pos);",4,3,0,1,2,1,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3875,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,8,1,0,0,0,1,0,8,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,6,1,1,0,0,0,2,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3882,            if (--max == 0) {,2,0,1,1,3,0,4,0,0,10,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",16,1,0,1,2,1,8,4,0,32,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3887,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,0,0,0,9,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3982,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",2,0,0,1,2,1,10,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,6,8,0,1,3,0,8,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,2,2,0,0,0,1,6,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4046,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +",2,1,0,0,1,0,0,2,0,6,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4050,        int searchLength = searchList.length;,0,0,0,0,0,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,6,1,0,0,0,0,0,0,0,7,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,4,1,1,2,4,0,0,0,0,7,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,4,1,0,0,0,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4066,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4072,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,4,1,1,1,3,0,0,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4080,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,12,3,0,1,3,1,4,4,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4102,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,3,7,0,0,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4103,                continue;,0,0,0,0,0,0,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4106,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4107,                increase += 3 * greater; // assume 3 matches,6,1,0,0,0,0,6,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4111,"        increase = Math.min(increase, text.length() / 5);",10,1,0,2,4,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,2,0,1,2,4,0,10,2,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,2,4,1,2,5,0,0,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4134,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4138,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,10,2,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,2,0,0,1,3,0,0,0,0,3,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4151,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,4,0,0,1,2,0,12,2,0,18,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4154,        if (!repeat) {,2,0,0,1,3,0,4,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4155,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",4,1,0,1,2,2,14,0,0,20,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4227,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,4,0,0,4,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,6,2,0,1,3,0,2,0,0,10,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4231,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,8,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4236,        StringBuilder buf = new StringBuilder(strLength);,8,1,0,1,2,0,0,4,0,13,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,6,1,0,1,2,0,6,4,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4239,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,1,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4241,                modified = true;,12,1,0,0,0,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4243,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4246,                buf.append(ch);,2,0,0,1,2,0,6,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,2,0,0,1,3,0,4,2,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,10,1,0,0,0,1,0,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,10,1,0,0,0,0,0,0,0,14,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,2,0,0,1,3,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,6,1,0,0,0,0,0,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,8,1,0,0,0,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4309,            end = temp;,0,0,0,0,0,0,6,0,0,6,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4347,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,6,0,0,0,0,0,0,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",8,0,1,1,2,1,18,0,0,35,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4432,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4472,            return null;,0,0,0,0,0,1,10,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4474,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,10,0,0,0,0,1,8,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,14,1,0,1,2,0,12,2,0,29,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4478,        if (repeat == 1 || inputLength == 0) {,2,0,0,1,3,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4482,"            return repeat(str.charAt(0), repeat);",2,0,0,2,4,2,8,8,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4494,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,6,1,1,1,2,1,0,2,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,4,0,0,1,2,0,0,4,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4528,        if(str == null || separator == null) {,6,3,0,1,3,0,0,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4529,"            return repeat(str, repeat);",8,1,0,1,2,1,18,2,0,29,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",10,1,0,1,2,0,4,2,0,18,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,2,0,1,1,2,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,2,1,0,1,2,1,2,2,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4587,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,16,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4612,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,4,2,1,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4649,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4658,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4661,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4665,        if (pads == padLen) {,12,1,0,1,3,0,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,6,2,0,2,4,0,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,8,1,0,2,4,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,2,0,0,2,4,0,0,4,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4675,            return str.concat(new String(padding));,2,0,0,2,4,1,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4728,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4731,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4732,"            return leftPad(str, size, String.valueOf(padChar));",8,0,0,2,4,2,12,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4769,        int pads = size - strLen;,6,2,0,0,0,0,12,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",2,0,1,2,4,1,10,0,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4778,            return padStr.concat(str);,2,0,0,1,2,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4783,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4784,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,8,0,0,18,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4803,        return cs == null ? 0 : cs.length();,8,4,0,1,2,1,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,10,6,0,1,3,0,0,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4863,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4864,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4866,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,12,4,0,0,0,1,0,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",8,3,0,1,2,0,6,0,0,18,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4912,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,4,1,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4938,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4941,        return str.toUpperCase();,0,0,1,1,2,1,8,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4988,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,6,3,0,1,2,1,0,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5013,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),4,1,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5072,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,2,0,1,1,2,0,0,0,0,6,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,2,4,0,6,0,0,11,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,2,0,0,2,4,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,2,4,0,6,0,0,11,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5152,        int idx = 0;,6,1,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5153,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {",10,2,0,3,7,0,10,0,0,23,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,2,0,0,0,0,1,6,2,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,4,0,0,3,7,0,0,0,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5189,                return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5219,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,2,1,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,4,9,0,16,0,0,21,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5258,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,2,0,3,7,0,18,0,0,21,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5291,        int sz = cs.length();,4,0,0,1,2,0,12,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,4,1,0,4,9,0,10,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5294,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5327,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5331,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5332,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5364,            return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5368,            if (Character.isDigit(cs.charAt(i)) == false) {,2,3,1,3,7,0,0,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5372,        return true;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,2,0,0,1,3,0,4,0,0,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,4,1,0,1,2,0,24,0,0,29,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,0,0,4,9,0,0,0,0,13,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5409,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,4,1,0,1,3,0,0,2,0,9,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,10,1,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5437,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,4,1,0,3,7,0,4,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,6,2,0,2,5,0,4,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5468,        int sz = cs.length();,4,1,0,1,2,0,14,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5500,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,10,1,1,0,0,1,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5549,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,6,2,0,1,3,0,10,0,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,2,0,0,0,0,1,10,4,0,16,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5645,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,12,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,2,0,0,0,0,1,0,2,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5729,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,10,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,4,0,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5735,        if (str.length() - offset < maxWidth - 3) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5736,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",2,0,0,0,0,1,0,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5740,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5745,        if (offset + maxWidth - 3 < str.length()) {,4,3,0,2,5,0,10,2,0,19,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,4,3,0,3,6,1,8,0,0,15,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,3,7,0,16,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5782,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,4,1,0,1,2,0,4,0,0,9,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5790,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,0,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5829,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5837,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5877,                break;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,4,0,1,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,0,4,1,0,0,1,0,0,0,12,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5923,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5924,        int arrayLen = css.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5926,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5931,        for (int i = 0; i < arrayLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5932,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5933,                anyStringNull = true;,4,0,1,0,0,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5934,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5936,                allStringsNull = false;,4,0,0,0,0,0,8,0,0,12,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5937,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5938,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",2,1,1,3,6,0,22,0,0,31,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5944,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5948,        if (shortestStrLen == 0) {,4,2,0,1,3,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5953,        int firstDiff = -1;,2,0,0,0,0,0,4,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5955,            char comparisonChar = css[0].charAt(stringPos);,0,1,0,2,4,0,8,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5956,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5957,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,4,1,1,3,7,0,12,0,0,22,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5959,                    break;,4,1,0,0,0,0,0,0,0,5,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5962,            if (firstDiff != -1) {,2,1,0,1,3,0,6,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5963,                break;,12,2,0,0,0,0,4,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5973,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6010,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6011,            return EMPTY;,2,0,0,0,0,1,14,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6013,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6014,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6016,            if (strs[0] == null) {,6,2,1,2,5,0,4,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6019,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6020,        } else if (smallestIndexOfDiff == 0) {,4,1,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6022,            return EMPTY;,0,0,0,0,0,1,10,0,0,10,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6025,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6068,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6069,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6089,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6092,        if (n == 0) {,2,0,0,1,3,0,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6093,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6094,        } else if (m == 0) {,2,1,0,1,4,0,10,0,0,13,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6095,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6098,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6101,            s = t;,10,1,1,0,0,0,0,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6102,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6107,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6120,            p[i] = i;,2,1,0,1,2,0,6,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6123,        for (j = 1; j <= m; j++) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6127,            for (i = 1; i <= n; i++) {,8,1,0,1,3,0,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6130,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",6,5,1,6,12,0,8,0,0,32,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6134,            _d = p;,6,0,0,0,0,0,0,0,0,7,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6135,            p = d;,10,0,0,0,0,0,4,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6141,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6228,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6229,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6232,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6233,            return m <= threshold ? m : -1;,6,1,0,0,0,1,0,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6235,            return n <= threshold ? n : -1;,8,1,0,0,0,1,0,0,0,11,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6238,        if (n > m) {,8,3,0,1,3,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6241,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6242,            t = tmp;,6,0,0,0,0,0,0,0,0,7,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6244,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6247,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally",10,5,0,2,4,0,4,2,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6248,"        int d[] = new int[n + 1]; // cost array, horizontally",16,2,0,2,4,0,0,0,0,20,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6252,"        int boundary = Math.min(n, threshold) + 1;",2,1,0,1,2,0,8,0,0,11,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6263,            char t_j = t.charAt(j - 1); // jth character of t,8,3,1,1,2,0,8,0,0,27,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6268,"            int max = Math.min(n, j + threshold);",6,1,0,1,2,0,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6271,            if (min > max) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6272,                return -1;,10,1,0,0,0,1,0,0,0,13,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6276,            if (min > 1) {,2,1,0,1,3,0,6,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6287,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",4,3,1,6,12,0,8,0,0,28,56,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6292,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6293,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6294,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6299,        if (p[n] <= threshold) {,2,1,1,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6300,            return p[n];,14,1,1,1,2,2,16,2,0,44,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6373,        if (str == null || prefix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6374,            return str == null && prefix == null;,4,3,0,0,0,1,0,0,0,7,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6376,        if (prefix.length() > str.length()) {,2,1,0,3,7,0,16,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6379,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,14,0,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6406,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6440,"        return endsWith(str, suffix, false);",4,3,0,1,2,1,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6467,"        return endsWith(str, suffix, true);",6,3,0,1,2,1,8,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6482,        if (str == null || suffix == null) {,6,4,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6488,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6489,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,16,0,0,16,95,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6535,            return null;,14,1,1,0,0,1,4,0,0,25,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6537,"        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll("" "");",0,0,0,3,6,1,10,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6559,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,2,0,0,3,7,0,0,0,0,2,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6562,        for (CharSequence searchString : searchStrings) {,4,0,0,1,3,0,0,2,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6563,"            if (StringUtils.endsWith(string, searchString)) {",8,1,0,2,5,0,8,0,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6585,"        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);",8,1,0,2,4,1,0,4,0,15,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,6,1,0,0,0,1,0,0,0,7,22,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,        if (type instanceof Class<?>) {,4,1,0,1,3,0,0,2,0,8,31,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,2,2,0,3,7,0,10,0,0,14,64,4,1.33333,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,11,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",6,1,0,1,2,0,6,2,0,15,78,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,0,2,0,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,2,0,0,0,0,3,0,2,0,7,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,1,0,1,2,6,4,4,0,22,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,4,0,14,76,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,16,2,0,24,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",4,0,0,1,2,3,2,2,0,12,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,4,0,0,1,2,3,8,2,0,18,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,8,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",6,0,0,1,2,3,2,4,0,16,78,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,0,0,1,2,3,2,0,0,10,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,3,2,0,0,8,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,4,0,0,5,72,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,12,1,0,0,0,3,0,0,0,16,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",2,0,0,1,2,1,10,0,0,12,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,2,0,1,2,4,1,0,4,0,8,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },6,1,0,0,1,0,0,0,0,7,1,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,4,0,0,8,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",4,0,0,1,2,0,0,0,0,6,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,8,2,0,0,0,1,0,0,0,10,43,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",6,0,0,2,5,0,4,0,0,12,24,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {",2,0,0,2,6,0,8,0,0,12,31,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,8,0,0,0,0,6,0,4,0,18,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,6,0,0,0,0,3,0,2,0,11,59,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,        if (input == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,8,6,0,2,4,0,4,4,0,22,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);",0,0,0,1,2,0,12,0,0,12,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,            return writer.toString();,0,0,0,1,2,1,8,0,0,8,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,        if (input == null) {,4,1,0,1,3,0,0,2,0,8,20,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,        int len = input.length();,2,0,0,1,2,0,4,0,0,6,25,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,        while (pos < len) {,4,1,0,1,3,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,            if (consumed == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,                pos+= c.length;,6,0,0,0,0,0,0,0,0,7,15,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,                continue;,2,0,0,0,0,0,4,0,0,6,9,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,            for (int pt = 0; pt < consumed; pt++) {,8,1,0,1,3,0,0,0,0,10,39,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,        },4,0,0,0,1,0,0,2,0,8,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,    },4,1,0,0,1,3,2,0,0,12,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,        this.translators = ArrayUtils.clone(translators);,8,0,0,1,2,0,10,0,0,19,49,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,    },2,0,0,0,1,0,4,0,0,6,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);",14,3,0,1,2,0,10,0,0,28,55,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,4,2,0,9,58,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,74,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",4,0,0,1,2,0,4,2,0,10,53,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,77,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,78,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,84,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,0,0,0,0,2,101,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,0,0,2,5,0,4,2,0,8,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,6,2,0,11,43,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,89,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,2,0,0,4,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");",6,0,0,1,2,0,0,0,0,6,29,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");",2,0,0,1,2,0,2,0,0,6,31,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,    },4,1,0,0,1,0,0,0,0,5,1,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));",4,0,0,2,4,1,10,0,0,14,90,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,        if (toClass == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,4,1,0,3,7,0,8,4,0,18,50,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,0,1,0,3,7,0,8,0,0,10,50,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,        if (cls.equals(toClass)) {,6,1,0,2,5,0,14,0,0,22,26,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,        if (cls != null && cls.isPrimitive()) {,2,2,0,2,5,0,4,0,0,8,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,    public static final int[] EMPTY_INT_ARRAY = new int[0];,8,1,0,2,4,3,0,0,0,12,55,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,1,0,2,4,3,0,4,0,12,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,2,0,0,2,71,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,4,0,0,2,4,0,0,0,0,5,61,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,6,1,0,2,4,4,0,0,0,11,67,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,        return array.clone();,4,1,0,1,2,1,12,0,0,17,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);",2,0,0,2,4,1,4,2,0,8,45,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);",2,2,0,2,4,1,4,0,0,9,69,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,            return toClass == null || !toClass.isPrimitive();,4,2,0,1,2,1,4,0,0,11,49,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,            return true;,0,0,0,0,0,1,12,0,0,12,12,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,        if (type instanceof Class<?>) {,2,0,0,1,3,0,0,2,0,4,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);",2,0,0,2,4,1,6,2,0,10,57,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,        if (type instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,40,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);",2,0,0,3,6,1,6,2,0,10,67,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,        if (type instanceof TypeVariable<?>) {,2,0,0,1,3,0,0,2,0,4,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,            return true;,6,4,0,0,0,1,4,0,0,14,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,        if (type == null) {,2,1,0,1,3,0,4,0,0,7,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,        if (toGenericArrayType == null) {,4,1,0,1,3,0,12,0,0,18,33,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,        if (toGenericArrayType.equals(type)) {,2,0,0,2,5,0,6,0,0,8,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,            return true;,6,0,0,0,0,1,0,0,0,7,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,        Type toComponentType = toGenericArrayType.getGenericComponentType();,2,0,0,1,2,0,4,2,0,8,68,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,        if (type instanceof Class<?>) {,0,0,0,1,3,0,6,0,0,7,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,            return cls.isArray(),0,0,0,1,2,1,4,0,0,5,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,        if (type instanceof GenericArrayType) {,2,0,0,1,3,0,0,2,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),",0,0,0,3,7,1,0,0,0,11,72,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,            WildcardType wildcardType = (WildcardType) type;,8,0,0,1,2,0,6,4,0,18,48,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,            Type[] upperBounds = getImplicitUpperBounds(wildcardType);,2,0,0,2,4,0,4,2,0,8,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);,2,0,0,2,4,0,4,2,0,8,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,            for (Type toBound : toUpperBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",2,2,0,1,2,0,4,0,0,9,59,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,                for (Type bound : upperBounds) {,10,0,0,1,3,0,0,4,0,15,32,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {",0,0,0,2,5,0,8,0,0,9,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,            for (Type toBound : toLowerBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",4,0,0,1,2,0,12,2,0,19,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,                for (Type bound : lowerBounds) {,4,0,0,1,3,0,0,2,0,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,        Class<?> cls = getRawType(parameterizedType);,14,2,0,1,2,0,10,4,0,30,45,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {",0,0,0,2,5,0,6,0,0,7,34,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,        Type ownerType = parameterizedType.getOwnerType();,10,4,0,1,2,0,10,2,0,26,50,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,        if (ownerType instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,45,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,        Type[] typeArgs = parameterizedType.getActualTypeArguments();,6,3,0,2,4,0,4,4,0,19,61,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,        TypeVariable<?>[] typeParams = cls.getTypeParameters();,2,0,0,2,4,0,4,2,0,8,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,        for (int i = 0; i < typeParams.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,            Type typeArg = typeArgs[i];,2,0,1,1,2,0,0,2,0,8,27,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns",0,0,1,2,5,0,12,0,0,16,86,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,            cls = ClassUtils.primitiveToWrapper(cls);,8,1,0,1,2,0,0,0,0,10,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,        if (superClass.isInterface()) {,2,0,0,2,5,0,4,0,0,6,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,            Type[] interfaceTypes = cls.getGenericInterfaces();,2,0,0,2,4,0,4,2,0,8,51,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,            Type genericInterface = null;,4,0,0,0,0,0,4,2,0,11,29,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,            for (Type midType : interfaceTypes) {,4,0,0,1,3,0,0,2,0,6,37,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,                Class<?> midClass = null;,2,0,0,0,0,0,0,2,0,4,25,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,                if (midType instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,                    midClass = getRawType((ParameterizedType) midType);,4,0,0,2,4,0,2,2,0,9,51,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,                    genericInterface = midType;,8,3,0,0,0,0,0,0,0,12,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,            if (genericInterface != null) {,2,1,0,1,3,0,0,0,0,3,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,                return genericInterface;,2,0,0,0,0,1,0,0,0,2,24,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,        if (!(rawType instanceof Class<?>)) {,2,0,0,2,5,0,0,2,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,        return (Class<?>) rawType;,2,0,0,1,2,1,8,2,0,12,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,    public LookupTranslator(CharSequence[]... lookup) {,4,0,0,2,5,1,0,2,0,7,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,        int _longest = 0;,8,1,0,0,0,0,8,0,0,19,17,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,        if (lookup != null) {,6,4,0,1,3,0,8,0,0,18,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,            for (CharSequence[] seq : lookup) {,4,0,0,2,5,0,0,2,0,6,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,                    _shortest = sz;,4,0,0,0,0,0,0,0,0,5,15,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,    },2,0,1,0,1,0,0,0,0,4,1,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,0,6,2,0,15,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,            CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,0,6,2,0,10,44,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,                out.write(result.toString());,2,0,0,2,4,0,8,0,0,11,29,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,    public NumericEntityUnescaper(OPTION... options) {,6,1,0,1,3,1,0,2,0,10,50,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,        if(options.length > 0) {,4,1,0,1,3,0,0,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));,8,0,0,4,8,0,14,4,0,27,88,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,    },0,0,0,0,1,0,0,0,0,1,1,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,        this.below = below;,12,0,0,0,0,0,0,4,0,17,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,        this.above = above;,2,0,0,0,0,0,0,0,0,2,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,        this.between = between;,4,0,0,0,0,0,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",4,0,0,1,2,1,0,2,0,7,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,public class OctalUnescaper extends CharSequenceTranslator {,6,0,0,0,1,1,0,2,0,9,60,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,    private static final String[][] BASIC_ESCAPE = {,4,0,0,2,5,3,0,2,0,9,48,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,        String[][] newarray = new String[array.length][2];,6,0,0,4,8,0,0,4,0,10,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,        for(int i = 0; i<array.length; i++) {,12,1,0,1,3,0,8,0,0,23,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,            return createInteger(str);,2,0,0,1,2,1,8,2,0,12,26,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);",4,0,0,1,2,3,6,4,0,18,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,0,12,2,0,23,65,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,            if (dec == null && exp == null) {,6,3,0,1,3,0,0,0,0,10,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,                } catch (NumberFormatException nfe) { // NOPMD,4,1,0,1,4,0,0,2,0,7,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,                    Float f = createFloat(str);,4,0,0,1,2,0,4,2,0,10,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,                        return f;,6,0,0,0,0,7,0,4,0,16,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,        if (str == null) {,2,0,0,1,3,3,0,4,0,9,18,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,        char lastChar = str.charAt(str.length() - 1);,4,1,0,2,4,2,8,4,0,19,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,            dec = null;,4,0,0,0,0,0,4,0,0,9,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,                exp = null;,2,1,0,0,0,0,4,0,0,8,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,3,10,0,0,19,55,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,            switch (lastChar) {,12,1,0,1,3,3,2,2,0,22,19,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,                    if (dec == null,4,2,1,0,1,0,4,0,0,12,15,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,        for (int i = str.length() - 1; i >= 0; i--) {,14,2,0,2,5,0,4,2,0,24,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1291,            if (!Character.isDigit(str.charAt(i))) {,4,0,0,3,7,0,10,0,0,16,40,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,        return cs == null || cs.length() == 0;,4,6,0,1,2,1,12,0,0,24,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,227,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,54,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,        return ESCAPE_XML.translate(input);,0,0,0,1,2,1,14,0,0,14,35,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,        return 0;,2,0,0,0,0,4,0,4,0,9,9,2,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,8,0,0,1,2,0,6,2,0,18,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",8,3,0,1,2,0,12,2,0,25,61,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,            if (prior != null) {,2,1,0,1,3,0,0,0,0,3,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,        return value;,2,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,4,2,0,1,3,0,0,0,0,6,20,3,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",10,0,0,1,2,0,0,2,0,13,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",4,1,0,2,4,0,8,0,0,13,52,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,4,0,0,0,0,0,0,0,0,5,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,            if (daylight) {,2,0,0,1,3,0,16,0,0,18,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,4,0,0,0,0,0,6,0,0,12,20,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,            mStyle = style;,6,1,0,0,0,0,0,0,0,8,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,            mTimeZone = timeZone;,4,0,1,0,0,0,4,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",4,1,0,1,2,0,8,0,0,15,63,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",2,0,0,1,2,0,8,0,0,12,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,12,0,0,12,56,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,503,"                    rule = new TextField(Calendar.MONTH, months);",8,0,0,1,2,0,0,2,0,11,45,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",10,0,0,1,2,3,2,2,0,19,50,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1064,                buffer.append((char)(value % 10 + '0'));,8,2,0,3,6,0,18,0,0,30,40,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1220,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,4,1,0,1,2,2,0,4,0,11,66,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1153,                for (int i = mSize; --i >= 2; ) {,6,1,0,1,3,0,0,0,0,8,33,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1154,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1156,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1053,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1060,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1096,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",6,2,0,2,4,0,8,0,0,16,51,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1097,        },2,0,0,0,1,0,6,4,0,12,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1103,            if (value < 10) {,4,1,0,1,3,3,0,4,0,12,17,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1104,                buffer.append((char)(value + '0'));,2,1,0,3,6,0,4,0,0,8,35,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,                isHex = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,14,2,0,22,12,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,8,0,0,1,2,0,8,0,0,16,40,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,4,1,0,1,3,0,0,0,0,5,21,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,            return EMPTY;,2,1,0,0,0,1,0,0,0,4,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,116,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,        for (int i = startIndex; i < endIndex; i++) {,2,2,0,1,3,0,6,0,0,12,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,0,6,0,0,8,22,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,2,1,1,2,5,1,0,2,0,16,23,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,            return EMPTY;,4,0,0,0,0,4,0,0,0,7,13,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,            if (spot.equals(endFinal)) {,2,0,0,2,5,0,12,2,0,16,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,    static class DateIterator implements Iterator<Calendar> {,2,0,0,0,1,1,0,4,0,7,57,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,    },2,1,0,0,1,0,0,0,0,3,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,1,0,1,3,0,0,0,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,        cal1.setTime(date1);,2,0,0,1,2,3,6,4,0,15,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,4,0,0,1,2,3,4,6,0,17,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,182,        cal2.setTime(date2);,2,0,0,1,2,0,12,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,203,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,8,3,0,2,5,1,8,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,221,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,224,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,242,        return cal1.getTime().getTime() == cal2.getTime().getTime();,2,1,0,4,8,4,14,2,0,23,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,0,0,0,2,5,1,0,0,0,8,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,328,        if (str == null || parsePatterns == null) {,4,3,0,1,3,0,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,329,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",2,0,0,1,2,3,0,4,0,9,73,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,335,        for (int i = 0; i < parsePatterns.length; i++) {,10,1,0,1,3,0,0,0,0,12,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,337,            String pattern = parsePatterns[i];,2,0,1,1,2,0,0,2,0,8,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,340,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,3,7,0,2,0,0,7,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,341,"                pattern = pattern.substring(0, pattern.length() - 1);",2,1,0,2,4,0,8,0,0,12,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,345,            pos.setIndex(0);,0,0,0,1,2,0,4,0,0,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,347,            String str2 = str;,10,1,0,0,0,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,349,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,3,7,0,10,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,350,"                str2 = str.replaceAll(""([-+][0-9][0-9]):([0-9][0-9])$"", ""$1$2""); ",2,0,0,8,16,0,4,0,0,9,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,353,"            Date date = parser.parse(str2, pos);",2,0,0,1,2,0,20,2,0,24,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,354,            if (date != null && pos.getIndex() == str2.length()) {,2,3,0,3,7,0,8,0,0,13,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,355,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,358,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,372,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,14,0,0,18,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,386,"        return add(date, Calendar.MONTH, amount);",4,0,0,1,2,1,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,400,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",6,1,0,1,2,1,16,0,0,23,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,414,"        return add(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,442,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,456,"        return add(date, Calendar.SECOND, amount);",4,0,0,1,2,1,6,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,470,"        return add(date, Calendar.MILLISECOND, amount);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,485,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,488,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,10,2,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,506,"        return set(date, Calendar.YEAR, amount);",6,1,0,1,2,1,6,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,521,"        return set(date, Calendar.MONTH, amount);",4,0,0,1,2,1,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,536,"        return set(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,552,"        return set(date, Calendar.HOUR_OF_DAY, amount);",6,0,0,1,2,1,6,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,567,"        return set(date, Calendar.MINUTE, amount);",6,1,0,1,2,1,6,0,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,582,"        return set(date, Calendar.SECOND, amount);",6,0,0,1,2,1,6,0,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,597,"        return set(date, Calendar.MILLISECOND, amount);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,614,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,619,        c.setLenient(false);,0,0,0,1,2,0,4,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,620,        c.setTime(date);,0,0,1,1,2,0,6,2,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,621,"        c.set(calendarField, amount);",18,0,0,1,2,0,18,0,0,36,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,635,        Calendar c = Calendar.getInstance();,6,0,0,1,2,1,0,0,0,9,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,637,        return c;,4,0,0,0,0,1,2,4,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,670,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,673,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,4,2,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,676,        return gval.getTime();,6,0,0,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,708,        if (date == null) {,2,2,0,1,3,0,4,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,709,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,0,0,2,0,9,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,711,        Calendar rounded = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,713,        return rounded;,4,0,0,0,0,1,4,2,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,747,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,751,"            return round((Date) date, field);",4,0,0,2,4,4,8,4,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,752,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,753,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,755,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,780,        Calendar gval = Calendar.getInstance();,8,1,0,1,2,0,8,2,0,21,39,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,808,        return truncated;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,832,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,835,        if (date instanceof Date) {,4,0,0,1,3,1,4,2,0,12,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,836,"            return truncate((Date) date, field);",2,0,0,2,4,1,4,2,0,8,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,838,"            return truncate((Calendar) date, field).getTime();",4,0,0,3,6,4,6,6,0,19,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,840,"            throw new ClassCastException(""Could not truncate "" + date);",2,1,0,1,2,0,0,2,0,6,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,863,        if (date == null) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,866,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,4,2,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,890,        if (date == null) {,2,1,0,1,3,0,0,2,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,893,        Calendar ceiled = (Calendar) date.clone();,2,1,0,2,4,0,0,0,0,3,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,895,        return ceiled;,2,1,0,0,0,1,4,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,920,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,923,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,925,        } else if (date instanceof Calendar) {,2,1,0,1,4,0,6,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,926,"            return ceiling((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,928,"            throw new ClassCastException(""Could not find ceiling of for type: "" + date.getClass());",0,1,0,2,4,0,4,2,0,8,87,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,942,        if (val.get(Calendar.YEAR) > 280000000) {,16,1,0,2,5,0,4,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,946,        if (field == Calendar.MILLISECOND) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,956,        Date date = val.getTime();,4,0,0,1,2,0,4,2,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,957,        long time = date.getTime();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,958,        boolean done = false;,6,1,0,0,0,0,0,0,0,8,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,962,        if (MODIFY_TRUNCATE == modType || millisecs < 500) {,6,3,0,1,3,0,0,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,963,            time = time - millisecs;,8,1,0,0,0,0,0,0,0,10,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,965,        if (field == Calendar.SECOND) {,6,1,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,966,            done = true;,2,0,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,972,            time = time - (seconds * 1000L);,8,4,0,1,2,0,4,0,0,18,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,974,        if (field == Calendar.MINUTE) {,6,1,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,975,            done = true;,2,0,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,979,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,980,        if (!done && (MODIFY_TRUNCATE == modType || minutes < 30)) {,8,4,0,2,5,0,0,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,981,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,987,            val.setTime(date);,2,0,0,1,2,3,12,2,0,19,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,993,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,994,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,996,                    if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {,12,4,0,2,5,3,0,12,0,31,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,997,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1001,                            if (val.get(Calendar.DATE) == 1) {,2,0,0,2,5,0,4,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1002,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1004,"                                val.add(Calendar.DATE, -15);",4,0,0,1,2,0,4,0,0,9,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1005,"                                val.add(Calendar.MONTH, 1);",4,0,0,1,2,0,8,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1008,                        } else if (field == Calendar.AM_PM) {,6,1,0,1,4,0,4,0,0,12,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1013,"                                val.add(Calendar.HOUR_OF_DAY, 12);",6,0,0,1,2,0,4,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1015,"                                val.add(Calendar.HOUR_OF_DAY, -12);",4,0,0,1,2,0,4,0,0,9,35,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1016,"                                val.add(Calendar.DATE, 1);",8,0,0,1,2,0,4,0,0,13,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1022,"                            val.add(fields[i][0], 1);",0,0,1,3,6,0,4,0,0,8,25,16,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1025,                    return;,0,0,1,0,0,1,0,0,0,4,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1029,            int offset = 0;,2,0,0,0,0,0,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1030,            boolean offsetSet = false;,2,0,0,0,0,0,6,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1032,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1034,                    if (fields[i][0] == Calendar.DATE) {,4,1,1,3,7,0,8,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1038,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,12,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1041,                        if (offset >= 15) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1045,                        roundUp = offset > 7;,8,4,0,0,0,0,0,0,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1046,                        offsetSet = true;,2,0,0,0,0,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1053,                        offset = val.get(Calendar.HOUR_OF_DAY);,6,0,0,1,2,0,4,0,0,11,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1054,                        if (offset >= 12) {,4,2,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1058,                        offsetSet = true;,4,1,0,0,0,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1062,            if (!offsetSet) {,2,0,0,1,3,0,0,2,0,6,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1064,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1066,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1068,                roundUp = offset > ((max - min) / 2);,10,3,0,2,4,0,0,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1071,            if (offset != 0) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1072,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,20,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1075,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1105,        if (focus == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1138,        if (focus == null) {,6,4,0,1,3,0,0,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1141,        Calendar start = null;,2,0,0,0,0,0,0,2,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1143,        int startCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1152,"                end.add(Calendar.MONTH, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1153,"                end.add(Calendar.DATE, -1);",6,0,0,1,2,0,4,0,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1155,                if (rangeStyle == RANGE_MONTH_MONDAY) {,4,1,0,1,3,0,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1156,                    startCutoff = Calendar.MONDAY;,8,0,0,0,0,0,0,0,0,9,30,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1157,                    endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1165,"                start = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1166,"                end = truncate(focus, Calendar.DATE);",8,0,0,1,2,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1167,                switch (rangeStyle) {,2,0,0,1,3,0,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1170,                        break;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1172,                        startCutoff = Calendar.MONDAY;,12,3,0,0,0,0,0,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1173,                        endCutoff = Calendar.SUNDAY;,2,0,0,0,0,1,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1176,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,6,0,0,13,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1180,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,6,1,0,1,2,0,4,0,0,12,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1181,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,6,1,0,1,2,0,4,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1184,                break;,4,3,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1188,        if (startCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1189,            startCutoff += 7;,2,0,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1191,        if (startCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1192,            startCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1194,        if (endCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1195,            endCutoff += 7;,6,1,0,0,0,0,0,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1197,        if (endCutoff > Calendar.SATURDAY) {,2,0,0,1,3,1,0,2,0,6,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1198,            endCutoff -= 7;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1200,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,6,1,0,2,5,0,4,0,0,11,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1201,"            start.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1203,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,11,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1204,"            end.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1229,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1232,        if (focus instanceof Date) {,2,0,0,1,3,0,0,2,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1233,"            return iterator((Date) focus, rangeStyle);",6,0,0,2,4,1,4,2,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1234,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1237,"            throw new ClassCastException(""Could not iterate based on "" + focus);",4,4,0,1,2,0,4,2,0,15,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1275,"        return getFragment(date, fragment, Calendar.MILLISECOND);    ",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1315,"        return getFragment(date, fragment, Calendar.SECOND);",4,0,0,1,2,1,6,0,0,10,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1355,"        return getFragment(date, fragment, Calendar.MINUTE);",4,0,0,1,2,1,6,0,0,10,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1395,"        return getFragment(date, fragment, Calendar.HOUR_OF_DAY);",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1435,"        return getFragment(date, fragment, Calendar.DAY_OF_YEAR);",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1514,"        return getFragment(calendar, fragment, Calendar.SECOND);",6,0,0,1,2,1,6,0,0,12,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1554,"        return getFragment(calendar, fragment, Calendar.MINUTE);",4,0,0,1,2,1,6,0,0,10,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1594,"        return getFragment(calendar, fragment, Calendar.HOUR_OF_DAY);",2,0,0,1,2,1,0,0,0,2,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1636,"        return getFragment(calendar, fragment, Calendar.DAY_OF_YEAR);",4,0,0,1,2,1,6,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1651,        if(date == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1654,        Calendar calendar = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1656,"        return getFragment(calendar, fragment, unit);",2,1,0,1,2,1,8,0,0,11,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1671,        if(calendar == null) {,2,1,0,1,3,0,8,0,0,11,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1672,"            throw  new IllegalArgumentException(""The date must not be null""); ",8,1,0,1,2,0,8,4,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1674,        long millisPerUnit = getMillisPerUnit(unit);,2,0,0,1,2,0,4,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1675,        long result = 0;,4,2,0,0,0,0,4,0,0,10,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1678,        switch (fragment) {,4,1,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1680,                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1695,                result += (calendar.get(Calendar.HOUR_OF_DAY) * MILLIS_PER_HOUR) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1698,                result += (calendar.get(Calendar.MINUTE) * MILLIS_PER_MINUTE) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1701,                result += (calendar.get(Calendar.SECOND) * MILLIS_PER_SECOND) / millisPerUnit;,12,2,0,2,4,0,10,0,0,26,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1704,                result += (calendar.get(Calendar.MILLISECOND) * 1) / millisPerUnit;,8,2,0,2,4,0,4,0,0,15,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1706,            case Calendar.MILLISECOND: break;//never useful,6,0,0,0,0,0,4,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1707,"                default: throw new IllegalArgumentException(""The fragment "" + fragment + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,94,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1709,        return result;,2,0,0,0,0,1,8,4,0,14,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1743,"        return truncatedCompareTo(date1, date2, field) == 0;",0,1,0,1,2,1,8,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1762,"        Calendar truncatedCal2 = truncate(cal2, field);",2,0,0,1,2,0,6,2,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1781,"        Date truncatedDate1 = truncate(date1, field);",2,0,0,1,2,0,6,2,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1795,        long result = Long.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1799,                result = MILLIS_PER_DAY;,4,0,0,0,0,0,8,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1800,                break;,2,0,1,0,0,0,0,0,0,7,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1802,                result = MILLIS_PER_HOUR;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1805,                result = MILLIS_PER_MINUTE;,4,0,0,0,0,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1806,                break;,2,1,0,0,0,0,6,2,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1809,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1811,                result = 1;,2,0,0,0,0,0,0,0,0,3,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1812,                break;,10,3,0,0,0,0,6,0,0,20,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1813,"            default: throw new IllegalArgumentException(""The unit "" + unit + "" cannot be represented is milleseconds"");",2,1,0,1,2,0,0,2,0,7,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1815,        return result;,2,1,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",4,0,0,1,2,0,12,6,0,24,66,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,6,0,1,0,0,0,0,0,0,10,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",4,0,0,2,4,3,16,2,0,25,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,        if (gcd == 1) {,2,1,0,1,3,0,0,0,0,3,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",8,2,0,1,2,1,4,0,0,14,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,598,        if (k==31) {,2,0,0,1,3,0,0,0,0,2,12,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,4,0,0,8,39,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,613,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,614,                u = -t;,6,0,0,0,0,2,0,0,0,10,7,1,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,616,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,619,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,622,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",4,0,0,1,2,3,10,4,0,23,69,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,6,1,0,1,2,3,6,6,0,24,68,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,0,0,1,2,3,0,6,0,16,69,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",4,1,0,1,2,0,0,0,0,5,76,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,        return SPLIT_MATCHER;,4,0,0,0,0,1,4,2,0,10,21,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",4,0,0,1,2,1,6,0,0,10,46,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,            super();,2,0,0,1,2,0,6,2,0,10,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,            super();,0,0,0,1,2,0,4,0,0,5,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,4,0,0,0,0,0,0,0,0,5,13,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,2,0,0,1,2,0,4,0,0,7,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,            Arrays.sort(this.chars);,2,0,0,1,2,0,4,0,0,6,24,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,6,0,0,1,2,1,0,10,0,17,57,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,62,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,2,0,0,2,4,0,4,4,0,10,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,0,1,1,2,4,0,0,0,0,5,33,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,8,1,0,0,0,0,4,0,0,14,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,            switch (c[pos.getIndex()]) {,2,0,1,3,7,3,4,0,0,11,28,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,                fmtCount++;,16,0,0,0,0,3,2,2,0,25,11,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,                int start = pos.getIndex();,2,0,0,1,2,0,6,0,0,10,27,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,167,"                int index = readArgumentIndex(pattern, next(pos));",2,0,0,2,4,0,8,0,0,10,50,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,10,0,0,10,43,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,                Format format = null;,2,0,0,0,0,0,0,2,0,4,21,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,171,                String formatDescription = null;,4,0,0,0,0,3,2,4,0,14,32,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,173,"                    formatDescription = parseFormatDescription(pattern,",2,0,0,0,1,0,4,0,0,7,51,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,                foundDescriptions.add(format == null ? null : formatDescription);,4,1,0,1,2,0,4,0,0,9,65,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,                Validate.isTrue(foundFormats.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,49,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,183,                Validate.isTrue(foundDescriptions.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,54,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,184,                if (c[pos.getIndex()] != END_FE) {,2,1,1,3,7,0,4,0,0,9,34,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,190,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,194,        super.applyPattern(stripCustom.toString());,2,0,0,2,4,0,4,0,0,6,43,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,        if (containsElements(foundFormats)) {,6,4,0,2,5,0,4,0,0,14,37,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,18,4,0,28,72,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,                Format f = it.next();,2,0,0,1,2,0,4,2,0,8,21,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,                if (f != null) {,2,1,0,1,3,0,8,0,0,11,16,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,204,                    origFormats[i] = f;,2,0,1,1,2,0,0,0,0,7,19,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,            super.setFormats(origFormats);,4,0,0,1,2,0,0,0,0,4,30,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,6,3,0,1,3,0,10,0,0,19,23,4,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,279,            String args = null;,2,0,0,0,0,0,0,2,0,4,19,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,280,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,281,            if (i > 0) {,4,4,0,1,3,0,8,0,0,16,12,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,            FormatFactory factory = registry.get(name);,2,0,0,1,2,0,6,2,0,10,43,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,286,            if (factory != null) {,2,1,0,1,3,0,6,0,0,10,22,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());",0,0,0,2,4,1,10,0,0,10,50,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,301,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,303,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,        boolean error = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,305,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,2,2,0,4,9,0,12,0,0,17,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,8,5,0,3,7,0,4,0,0,17,61,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,343,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,346,        int depth = 1;,8,0,0,0,0,3,0,4,0,15,14,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,347,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,4,9,0,12,0,0,13,54,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,12,0,0,12,41,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,353,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,354,                if (depth == 0) {,2,1,0,1,3,0,0,0,0,3,17,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,355,"                    return pattern.substring(text, pos.getIndex());",0,0,0,2,4,1,10,0,0,10,47,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,        StringBuilder sb = new StringBuilder(pattern.length() * 2);,2,1,0,2,4,0,4,4,0,11,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,379,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,380,        int fe = -1;,2,0,0,0,0,0,0,0,0,3,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,381,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,383,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,            switch (c) {,2,0,0,1,3,0,0,0,0,2,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,389,                depth++;,4,0,0,0,0,0,4,2,0,13,8,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,390,                if (depth == 1) {,6,1,0,1,3,0,0,0,0,8,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,                    sb.append(START_FE).append(,0,0,0,1,3,0,8,0,0,8,27,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,394,                    String customPattern = customPatterns.get(fe);,2,0,0,1,2,0,12,2,0,16,46,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,395,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,                        sb.append(START_FMT).append(customPattern);,10,0,0,2,4,0,14,0,0,25,43,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,419,        char[] buffer = pattern.toCharArray();,8,3,0,2,4,0,4,0,0,15,38,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",2,0,0,3,6,0,12,0,0,15,64,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,8,0,0,11,35,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,        } while (len > 0 && pos.getIndex() < pattern.length());,4,3,0,3,7,3,8,0,0,18,55,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,        return pos;,8,0,0,0,0,1,0,2,0,10,11,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,            if (iter.next() != null) {,0,1,0,2,5,0,4,0,0,5,26,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,126,        setLocale(locale);,0,0,0,1,2,0,4,0,0,5,18,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,146,        if (registry == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,147,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,148,            toPattern = super.toPattern();,4,1,0,1,2,0,0,0,0,5,30,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,352,            chars = str.toCharArray();,2,0,0,1,2,0,4,0,0,7,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,353,        },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,366,            int len = chars.length;,8,1,0,0,0,0,0,0,0,9,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,367,            if (pos + len > bufferEnd) {,6,2,0,1,3,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,368,                return 0;,2,0,0,0,0,1,8,0,0,11,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,370,"            for (int i = 0; i < chars.length; i++, pos++) {",12,1,0,1,3,0,0,0,0,15,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,371,                if (chars[i] != buffer[pos]) {,0,1,1,3,7,0,0,0,0,9,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,372,                    return 0;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,375,            return len;,4,0,0,0,0,1,0,0,0,4,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,144,        return QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,173,        if (chars == null || chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,177,            return new CharMatcher(chars[0]);,10,1,1,2,4,1,0,2,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,189,        if (chars == null || chars.length() == 0) {,4,3,0,2,5,2,4,4,0,17,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,4,2,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,205,        if (str == null || str.length() == 0) {,4,4,0,2,5,0,8,4,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,206,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,208,        return new StringMatcher(str);,8,1,0,1,2,1,4,2,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,431,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,333,            return ch == buffer[pos] ? 1 : 0;,2,1,1,1,2,1,0,0,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,113,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,161,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,1,2,0,8,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,177,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,185,                    throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,220,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,243,        throw new UnsupportedOperationException();,2,0,0,1,2,0,0,4,0,6,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,282,"                name = desc.substring(0, i).trim();",2,0,0,2,4,0,8,0,0,11,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,283,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,310,                if (c != START_FMT && c != END_FE) {,8,3,0,1,3,0,0,0,0,11,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,311,                    error = true;,2,0,0,0,0,0,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,318,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,327,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,331,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,350,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,359,"                getQuotedString(pattern, pos, false);",2,0,0,1,2,0,14,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,376,            return pattern;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,386,"                appendQuotedString(pattern, pos, sb, false);",0,0,1,1,2,0,10,0,0,20,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,449,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,450,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,453,            return appendTo == null ? null : appendTo.append(QUOTE);,6,2,0,1,2,1,10,0,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,455,        int lastHold = start;,4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,457,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,458,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",2,1,0,2,5,0,14,0,0,17,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,466,                next(pos);,2,0,0,1,2,0,8,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,467,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,1,0,0,1,1,8,0,0,11,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,103,"            throw new IllegalArgumentException(String.format(message, Long.valueOf(value)));",0,0,0,3,6,0,12,2,0,14,80,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,127,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,128,"            throw new IllegalArgumentException(String.format(message, new Double(value)));",2,0,0,3,6,0,6,4,0,12,78,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,130,    },4,1,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,151,        if (expression == false) {,6,2,0,1,3,0,0,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,177,            throw new IllegalArgumentException(DEFAULT_IS_TRUE_EX_MESSAGE);,6,1,0,1,2,0,8,2,0,17,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,218,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,219,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,221,        return object;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,243,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,246,        if (array.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,249,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,291,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,292,"            throw new NullPointerException(String.format(message, values));",2,0,0,2,4,0,8,2,0,12,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,297,        return collection;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,317,"        return notEmpty(collection, DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE);",4,0,0,1,2,1,0,0,0,4,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,339,        if (map == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,342,        if (map.size() == 0) {,2,1,0,2,5,0,4,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,343,"            throw new IllegalArgumentException(String.format(message, values));",4,0,0,2,4,0,8,2,0,14,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,345,        return map;,4,0,0,0,0,1,0,2,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,387,        if (chars == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,390,        if (chars.length() == 0) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,393,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,437,        if (chars == null) {,4,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,443,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,493,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,494,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,495,"                Object[] values2 = ArrayUtils.add(values, Integer.valueOf(i));",2,0,0,3,6,0,12,2,0,16,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,499,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,524,"        return noNullElements(array, DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE);",0,0,0,1,2,1,12,0,0,12,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,553,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,554,        for (Iterator<?> it = iterable.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,556,"                Object[] values2 = ArrayUtils.addAll(values, Integer.valueOf(i));",4,0,0,3,6,0,16,4,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,557,"                throw new IllegalArgumentException(String.format(message, values2));",4,1,0,2,4,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,560,        return iterable;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,611,        if (index < 0 || index >= array.length) {,8,0,0,1,3,0,0,0,0,9,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,614,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,665,        if (index < 0 || index >= collection.size()) {,4,3,0,2,5,0,4,0,0,11,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,668,        return collection;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,717,        if (index < 0 || index >= chars.length()) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,767,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,768,            throw new IllegalStateException(DEFAULT_VALID_STATE_EX_MESSAGE);,2,0,0,1,2,0,0,2,0,4,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,787,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,788,"            throw new IllegalStateException(String.format(message, values));",4,3,0,2,4,0,0,0,0,7,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,807,"        if (Pattern.matches(pattern, input) == false)",0,1,0,2,4,0,8,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,809,"            throw new IllegalArgumentException(String.format(DEFAULT_MATCHES_PATTERN_EX, input, pattern));",0,0,0,2,4,0,16,2,0,19,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,830,"        if (Pattern.matches(pattern, input) == false)",0,1,0,2,4,0,8,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,832,"            throw new IllegalArgumentException(String.format(message, values));",2,0,1,2,4,0,8,2,0,17,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,850,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),2,3,0,3,6,0,12,0,0,17,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,852,"            throw new IllegalArgumentException(String.format(DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,2,4,0,12,2,0,14,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,873,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),2,3,0,3,6,0,12,0,0,18,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,875,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,3,0,0,3,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,916,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,3,6,0,12,0,0,15,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,939,        if (type.isInstance(o) == false),0,1,0,2,4,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,941,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));",0,0,0,3,6,0,10,2,0,12,101,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,961,        if (type.isInstance(o) == false),0,1,0,2,4,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,984,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,0,6,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1009,        if (superType.isAssignableFrom(type) == false),0,1,0,2,4,0,6,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,50,        super(cause);,2,0,0,1,2,0,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,61,"        super(message, cause);",4,0,0,1,2,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,63,    public static final Null NULL = new Null();,2,0,0,1,2,3,0,4,0,9,43,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,96,        return object != null ? object : defaultValue;,6,1,0,0,0,1,0,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,120,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,121,            for (T val : values) {,4,0,0,1,3,0,0,2,0,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,122,                if (val != null) {,2,1,0,1,3,0,10,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,152,        if (object1 == object2) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,153,            return true;,8,1,0,0,0,1,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,155,        if ((object1 == null) || (object2 == null)) {,4,3,0,3,7,0,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,181,"        return ObjectUtils.equals(object1, object2) == false;",0,1,0,1,2,1,8,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,198,        return (obj == null) ? 0 : obj.hashCode();,2,1,0,2,4,1,4,0,0,7,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,247,        buffer.append(object.getClass().getName()),2,1,0,3,6,0,14,0,0,17,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,272,"        return obj == null ? """" : obj.toString();",2,1,0,1,2,1,12,0,0,16,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,295,        return obj == null ? nullStr : obj.toString();,4,1,0,1,2,1,4,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,313,        T result = null;,4,0,0,0,0,0,0,2,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,314,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,315,            for (T value : values) {,4,0,0,1,3,0,0,2,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,316,"                if (compare(value, result, true) < 0) {",0,1,0,2,5,0,6,0,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,321,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,337,        T result = null;,2,0,0,0,0,0,0,2,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,338,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,339,            for (T value : values) {,4,0,0,1,3,0,0,2,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,340,"                if (compare(value, result, false) > 0) {",0,1,0,2,5,0,6,0,0,8,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,345,        return result;,2,0,0,0,0,1,12,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,375,            return 0;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,376,        } else if (c1 == null) {,2,1,0,1,4,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,377,            return (nullGreater ? 1 : -1);,2,0,0,1,2,1,0,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,379,            return (nullGreater ? -1 : 1);,2,0,0,1,2,1,0,0,0,3,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,394,        if (o instanceof Cloneable) {,4,0,0,1,3,0,0,2,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,397,                final Class<?> componentType = o.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,63,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,399,                    result = ((Object[])o).clone();,4,0,0,4,8,0,2,2,0,9,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,401,                    int length = Array.getLength(o);,2,0,0,1,2,0,6,0,0,8,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,402,"                    result = Array.newInstance(componentType, length);",2,0,0,1,2,0,8,0,0,11,50,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,403,                    while (length-- > 0) {,0,0,0,1,3,0,12,0,0,12,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,404,"                        Array.set(result, length, Array.get(o, length));",0,0,0,2,4,0,16,0,0,16,48,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,407,            } else {,0,0,0,0,2,0,4,0,0,5,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,409,"                    final Method clone = o.getClass().getMethod(""clone"");",2,0,0,2,4,1,6,2,0,12,53,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,410,                    result = clone.invoke(o);,2,0,0,1,2,0,6,0,0,9,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,411,                } catch (final NoSuchMethodException e) {,2,0,0,1,4,1,0,2,0,5,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,416,"                    throw new CloneFailedException(""Cannot clone Cloneable type """,0,0,0,0,1,0,0,2,0,3,61,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,418,                } catch (final InvocationTargetException e) {,2,0,0,1,4,1,0,2,0,5,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,424,            final T checked = (T)result;,4,0,0,1,2,1,0,4,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,425,            return checked;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,428,        return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,446,        final T clone = clone(o);,2,0,0,1,2,1,4,2,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,447,        return clone == null ? o : clone;,6,1,0,0,0,1,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,478,            super();,4,1,0,1,2,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,479,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",6,2,0,1,2,0,6,0,0,15,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,4,0,0,0,0,4,0,4,0,11,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,2,0,0,1,2,4,4,4,0,13,33,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,1,0,1,2,0,4,2,0,13,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,0,4,2,0,13,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,453,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,469,        char lastChar = str.charAt(str.length() - 1);,4,2,0,2,4,0,8,2,0,17,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,4,1,0,1,3,3,0,4,0,14,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,10,4,0,2,5,0,4,0,0,19,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,502,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,505,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,506,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,4,1,0,2,4,0,8,0,0,13,55,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,0,0,0,1,3,0,4,0,0,5,19,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,616,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,1,0,2,5,0,6,2,0,12,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,618,                return false;,2,0,0,0,0,1,0,2,0,4,13,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,638,        return Float.valueOf(str);,2,0,0,1,2,1,6,0,0,8,26,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,704,        return new BigInteger(str);,4,1,0,1,2,1,0,2,0,7,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,688,        return Long.valueOf(str);,2,0,0,1,2,1,6,0,0,10,25,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },4,0,0,5,10,4,10,4,0,21,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,131,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,6,1,0,3,6,3,10,4,0,25,78,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,333,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,336,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,344,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,11,70,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,347,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,352,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,372,        String[][] newarray = new String[array.length][2];,16,1,0,4,8,0,0,4,0,22,50,3,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,373,        for(int i = 0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,375,            newarray[i][1] = array[i][0];,4,0,1,4,8,0,4,2,0,19,29,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,377,        return newarray;,4,2,0,0,0,1,4,0,0,11,16,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,28,public class EntityArrays {,2,0,0,0,1,1,4,0,0,9,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,134,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },4,0,0,5,10,4,8,4,0,19,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,332,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },6,0,0,5,10,3,4,2,0,15,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,335,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,343,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,346,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,351,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },4,0,0,5,10,4,10,4,0,21,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,354,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,363,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,6,0,0,1,2,0,0,6,0,12,46,3,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,4,1,0,1,2,0,0,0,0,5,16,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,4,0,0,1,3,0,0,2,0,6,29,3,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,4,0,0,0,0,0,4,0,0,10,15,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,2,0,0,1,2,4,0,4,0,9,23,2,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },2,0,0,0,1,0,0,0,0,2,1,11,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",12,1,0,1,2,0,0,2,0,16,84,7,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,4,0,0,0,0,0,0,0,0,6,23,12,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,1,0,0,1,10,0,0,12,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,4,1,0,1,3,0,6,0,0,11,22,1,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,8,1,0,1,2,0,4,0,0,14,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,1.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,1,0,0,0,1,10,0,0,13,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,6,0,5,11,0,16,0,0,30,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,2,0,0,1,2,4,6,2,0,14,26,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,3,2,4,0,14,37,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,2,0,0,1,2,4,4,0,0,9,23,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,2,0,0,1,2,0,4,2,0,8,29,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,2,0,2,4,0,20,0,0,28,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,8,0,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,2,0,0,1,2,4,4,4,0,13,27,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,3,4,2,0,11,45,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,4,1,0,1,3,3,2,0,0,11,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,4,0,0,1,2,4,0,6,0,13,27,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,8,0,0,17,48,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,2,4,0,3,7,0,10,0,0,18,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,0,0,0,0,4,64,5,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,6,0,12,64,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,6,1,0,2,4,3,4,4,0,18,65,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,12,1,0,2,4,3,0,6,0,23,68,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,8,4,0,17,68,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,1,0,2,4,0,0,0,0,3,74,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,2,0,16,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",4,1,1,1,2,3,10,2,0,29,86,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",2,0,0,1,2,3,2,2,0,10,92,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",4,0,0,1,2,6,2,2,0,15,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",2,0,0,1,2,3,2,2,0,10,121,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,1,0,1,2,0,2,0,0,7,76,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,1,1,2,0,4,0,0,8,82,10,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",4,1,0,1,2,3,2,4,0,17,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",6,4,0,1,2,3,10,2,0,27,78,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,4,0,0,1,2,3,2,4,0,13,74,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,1,0,1,2,0,4,0,0,7,71,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,6,0,0,12,68,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,0,0,1,2,3,2,0,0,10,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,1,0,0,0,3,0,0,0,18,128,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,2,0,14,96,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,1,0,1,2,0,0,0,0,3,91,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,0,4,0,9,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",4,0,0,1,2,3,4,0,0,12,90,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,95,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1410,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1462,            return System.getProperty(property);,8,0,0,1,2,3,0,0,0,10,36,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1577,        return version.startsWith(versionPrefix);,4,0,0,1,2,1,12,2,0,18,41,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",6,0,0,3,6,0,6,0,0,12,54,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1721,        int j = 0;,2,1,0,0,0,0,8,0,0,11,10,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1724,            if (s.length() > 0) {,0,1,0,2,5,0,4,0,0,5,21,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,2,0,1,2,4,0,6,0,0,12,32,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1728,        return ints;,2,0,0,0,0,1,0,0,0,2,12,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,12,4,0,1,3,0,0,0,0,17,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,12,2,0,1,3,0,0,0,0,15,27,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,6,0,0,0,0,0,0,0,0,6,30,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,0,0,0,1,3,0,4,0,0,5,15,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,2,1,1,1,2,0,0,0,0,6,35,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1803,        if (len >= 3) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1804,            intVersion += javaVersions[2];,2,0,1,1,2,0,0,0,0,5,30,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,8,1,0,0,0,1,0,0,0,9,18,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,4,0,0,14,37,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,3,0,0,0,1,4,0,0,13,13,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,22,0,0,22,52,1,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,6,0,0,0,0,0,0,0,0,6,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,2,0,0,1,3,3,0,12,0,17,26,2,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,0,0,0,3,6,1,0,0,0,10,48,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,2,0,0,2,4,0,4,2,0,8,43,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,2,0,0,1,2,0,6,2,0,10,38,12,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,2,0,0,1,2,3,8,2,0,16,27,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,8,3,0,1,2,0,12,0,0,24,19,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,2,0,0,1,2,0,4,2,0,8,35,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",4,0,0,1,2,0,20,0,0,26,72,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,6,3,0,2,5,3,4,4,0,20,68,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,2,0,0,1,2,0,4,0,0,7,30,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",2,0,0,1,2,0,12,0,0,15,72,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,4,2,0,13,36,1,0.14286,1,1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,0,0,0,1,3,2,2,0,10,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,2,0,0,1,2,0,6,0,0,9,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,2,0,0,2,5,0,0,2,0,5,32,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,8,1,0,1,3,3,2,0,0,15,21,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,1,0,2,4,3,0,6,0,15,65,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,3,0,4,0,11,68,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,0,0,0,0,2,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",2,3,0,1,2,1,14,0,0,21,39,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",8,1,0,1,2,0,0,4,0,13,99,3,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,10,64,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,4,1,0,2,4,0,4,0,0,10,64,8,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,6,1,0,2,4,3,0,0,0,11,58,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,1,0,2,4,3,8,4,0,22,74,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,16,3,0,2,4,3,2,0,0,26,61,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,0,0,0,0,2,68,6,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,1,2,4,3,4,4,0,26,58,1,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,1,0,1,2,0,0,0,0,3,53,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",6,0,0,1,2,2,4,4,0,16,49,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,0,0,2,5,0,4,2,0,8,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",2,0,0,1,2,3,12,2,0,20,54,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",2,0,0,1,2,1,2,4,0,11,32,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",2,1,0,1,2,3,6,2,0,20,29,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,8,3,0,0,0,1,8,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,2,3,0,2,6,0,8,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,4,0,0,5,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,4,9,0,12,0,0,18,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",2,1,0,2,4,0,8,0,0,12,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,12,0,0,12,52,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,0,0,1,2,0,6,0,0,14,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,0,0,0,1,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,4,1,0,1,2,0,4,2,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,6,0,0,0,0,2,0,2,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,2,3,0,2,5,0,10,0,0,15,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,12,2,0,0,0,1,0,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,2,2,0,2,6,0,4,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,4,0,4,9,0,12,0,0,18,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",2,0,0,1,2,1,6,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,2,0,0,1,2,0,8,8,0,18,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,2,0,0,1,2,0,4,2,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,2,1,0,1,3,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,2,0,0,1,2,0,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,10,6,0,0,0,1,0,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,1,0,0,0,1,10,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,4,1,0,1,2,0,6,8,0,21,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,2,0,0,1,2,1,0,4,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,2,0,0,2,4,0,4,2,0,9,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,4,0,0,1,3,0,0,2,0,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,2,0,0,2,5,3,8,2,0,16,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,2,0,0,1,2,0,4,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,1,0,0,1,0,8,0,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,8,2,0,2,4,0,10,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,6,1,0,1,4,0,0,4,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,0,0,0,1,2,0,4,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,1,0,0,1,0,4,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,4,0,0,0,0,1,0,0,0,4,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,2,1,0,2,4,0,20,8,0,35,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,4,0,0,1,3,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,4,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,4,3,0,2,4,0,8,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",2,0,0,2,5,0,0,0,0,2,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,0,0,0,0,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",8,6,1,4,9,0,4,0,0,27,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,2,0,0,0,0,1,0,2,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,4,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,2,0,0,1,3,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,0,1,0,3,7,0,8,0,0,10,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,2,0,0,1,2,0,4,0,0,7,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,8,0,0,0,0,1,10,0,0,21,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,1,0,2,5,0,4,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,4,1,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,12,3,0,2,5,0,4,0,0,20,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,4,0,0,0,0,1,4,2,0,11,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,4,0,0,1,2,1,4,0,0,8,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),6,0,0,1,2,1,4,2,0,12,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,33,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,8,3,0,2,5,0,14,0,0,25,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,0,0,1,3,6,0,2,0,0,11,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,2,1,0,1,3,0,2,0,0,7,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,0,0,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,4,2,0,2,5,0,18,0,0,25,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",2,1,0,1,3,0,6,2,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,0,0,2,0,4,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,6,1,0,1,2,0,2,4,0,13,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,8,6,0,4,9,0,10,0,0,24,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,2,0,0,1,2,0,0,8,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,2,0,0,2,4,0,8,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,0,0,0,2,4,0,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,4,0,0,1,3,0,0,2,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,0,8,0,0,9,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,3,8,0,4,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,8,1,0,1,2,1,0,6,0,17,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",4,1,0,3,7,0,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,4,0,0,5,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,2,0,0,1,2,0,6,2,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,2,1,0,1,3,0,0,0,0,3,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,6,0,0,6,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,2,0,0,1,2,0,4,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,6,1,0,0,0,1,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,4,0,0,0,0,1,0,0,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,6,0,0,2,4,0,0,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,2,1,1,3,6,0,2,0,0,14,33,3,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,2,1,0,1,3,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,2,1,0,3,6,1,8,0,0,11,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,2,0,0,1,3,0,2,4,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,10,1,0,0,0,1,0,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,2,1,0,3,6,1,0,0,0,3,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,6,0,0,0,0,1,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,4,1,0,1,2,0,6,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,2,0,0,0,0,0,0,0,0,2,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,1,0,2,6,0,20,0,0,22,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,2,0,1,0,0,1,4,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,0,4,0,0,5,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,6,1,1,0,1,0,4,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",2,0,0,2,4,0,8,0,0,11,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,6,0,0,1,2,0,0,4,0,11,70,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,2,4,0,4,0,0,5,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",4,1,0,2,4,1,0,0,0,5,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,4,0,1,1,2,0,0,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",8,0,0,1,3,0,0,0,0,8,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,2,0,0,2,6,0,0,2,0,4,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,4,0,1,0,0,1,6,2,0,17,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,4,0,0,1,2,1,0,0,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,12,0,0,12,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,0,0,0,1,3,0,12,0,0,12,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,6,0,0,1,2,1,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,2,3,0,1,2,1,4,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,10,1,0,1,3,2,0,2,0,17,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,6,1,0,1,3,0,2,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,6,0,0,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,8,0,0,1,2,2,4,0,0,13,21,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,2,1,0,0,0,1,4,2,0,11,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,4,1,0,0,0,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,5,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,12,0,0,0,0,1,10,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,2,0,1,0,0,1,6,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,4,1,1,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,10,1,0,1,3,0,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,4,3,0,1,4,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,10,1,1,0,0,1,0,8,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,10,2,0,0,0,1,0,2,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,2,0,0,0,0,1,10,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,8,3,0,1,4,0,10,0,0,21,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,8,1,0,0,0,1,0,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,2,1,0,1,3,0,12,0,0,15,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,4,1,0,1,4,0,10,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,10,2,0,1,4,0,8,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,4,0,0,1,3,0,4,0,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,3,0,4,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,2,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,6,2,0,0,0,1,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,1,0,0,1,0,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,6,0,0,0,0,1,0,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,6,1,0,1,4,0,6,2,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,8,2,0,12,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,2,1,0,1,4,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,4,0,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,4,2,0,15,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,8,0,0,0,0,0,6,0,0,16,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,2,0,0,2,4,0,6,2,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,10,1,0,1,3,0,0,0,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",6,2,0,4,8,1,16,4,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",4,0,0,4,8,0,12,4,0,21,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,16,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,11,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,4,0,1,2,4,0,0,0,0,6,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,0,0,0,0,0,1,6,0,0,6,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,4,2,0,0,0,0,12,0,0,21,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,2,0,17,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,4,0,0,0,0,1,0,0,0,4,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,22,2,0,1,3,0,6,0,0,32,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,8,0,0,0,0,0,6,0,0,17,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,4,1,0,0,0,1,8,0,0,13,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,4,0,1,2,4,0,4,0,0,10,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,2,1,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,6,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,10,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,2,0,1,2,4,0,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,16,4,0,0,0,0,0,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,2,0,0,0,0,0,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,4,2,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,2,2,0,1,3,0,10,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,10,1,0,0,0,0,0,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,8,1,0,0,0,1,0,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,0,4,0,0,0,1,12,0,0,16,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,1,0,1,3,0,0,0,0,5,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,2,0,0,1,3,0,4,0,0,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,6,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,1,0,0,0,1,10,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,2,0,0,1,3,0,0,0,0,2,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",2,1,0,1,2,0,0,2,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,2,1,0,5,10,1,30,0,0,34,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,8,4,0,0,0,0,8,0,0,20,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,8,1,0,0,0,0,4,0,0,13,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,4,0,1,1,2,0,0,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,10,2,0,2,4,0,4,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,4,3,0,0,0,0,8,2,0,17,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },4,1,0,0,1,0,0,0,0,5,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,10,2,0,1,3,0,4,2,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,2,0,0,0,0,1,0,0,0,3,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,8,0,0,0,0,1,0,4,0,13,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,8,2,0,1,3,0,10,0,0,20,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,4,0,0,0,0,0,10,0,0,15,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,8,1,0,0,0,0,0,2,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,4,1,1,0,0,0,6,0,0,16,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },4,1,0,0,1,0,0,0,0,5,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,2,1,1,1,3,0,2,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,8,2,0,0,0,0,6,0,0,16,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,4,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,2,0,0,0,0,0,6,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,12,1,0,0,0,0,8,0,0,23,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,4,1,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,2,1,1,0,0,0,0,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,10,1,1,1,2,0,0,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },2,0,0,0,1,0,6,0,0,9,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,2,0,0,0,0,1,0,0,0,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,6,1,0,0,0,0,10,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,8,1,0,1,3,0,12,2,0,23,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,4,0,1,1,2,0,0,0,0,10,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,1,0,1,0,4,0,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,8,2,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,4,0,1,0,0,0,0,0,0,7,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,4,2,1,3,7,0,8,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,12,3,0,1,3,0,4,0,0,20,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,10,2,1,2,5,0,0,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,14,0,0,16,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,2,0,0,1,3,0,0,0,0,2,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,3,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,6,2,1,2,5,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,2,0,0,0,0,1,4,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,4,1,0,1,3,0,6,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,4,1,0,0,0,1,4,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,8,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",10,2,0,1,2,1,6,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,18,1,0,1,3,1,0,4,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,2,0,0,1,3,0,12,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,2,0,1,0,0,1,4,0,0,10,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,4,0,0,0,0,1,4,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,0,0,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",8,0,1,1,2,1,6,0,0,22,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,8,1,1,1,3,0,4,4,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,12,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,2,1,1,2,5,0,8,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,1,0,1,2,1,6,0,0,11,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,4,1,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,4,1,0,0,0,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,4,0,1,0,0,1,4,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,16,1,0,1,3,0,0,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,17,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,1,0,1,2,1,12,0,0,17,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,2,1,1,2,5,0,4,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,6,0,0,2,5,0,10,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,14,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,8,1,0,0,0,0,0,0,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,2,3,0,0,0,1,8,0,0,14,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",8,2,0,1,2,1,14,2,0,26,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,2,0,0,0,0,0,4,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",10,1,0,1,2,1,0,0,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,8,1,1,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,2,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,8,2,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,6,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,12,4,0,0,0,1,0,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,4,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,12,7,1,0,0,1,0,0,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,12,1,0,2,4,1,2,0,0,17,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,4,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,10,6,0,0,0,1,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,3,6,0,20,0,0,38,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,4,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,16,1,0,2,4,1,0,2,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,2,0,0,0,0,1,4,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,14,1,0,1,3,0,0,2,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,4,1,0,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,0,1,0,0,0,1,10,0,0,12,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,4,4,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,2,0,0,0,0,1,6,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,8,1,0,2,4,1,10,0,0,20,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,6,2,0,0,0,1,4,0,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,12,1,0,1,4,0,8,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,2,0,0,0,0,1,6,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,8,0,0,2,4,1,0,4,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,10,1,1,1,3,0,4,0,0,20,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,8,1,0,0,0,1,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,6,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,4,0,1,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,8,0,1,2,4,1,0,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,8,3,1,1,2,0,0,2,0,18,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,6,1,0,1,3,0,0,2,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,10,4,0,0,0,1,4,0,0,18,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,2,0,1,3,6,0,2,0,0,14,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,4,0,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,2,2,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,8,2,0,0,0,1,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,4,0,0,2,4,0,0,0,0,5,49,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,8,4,1,3,6,0,4,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,1,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,8,2,0,0,0,2,0,4,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,8,4,0,19,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,4,1,0,1,3,0,0,0,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,4,40,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,2,4,1,0,0,1,0,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,12,1,0,2,4,1,12,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,14,4,0,1,3,0,16,0,0,40,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,6,1,1,3,6,0,4,0,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,12,2,0,0,0,1,0,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,6,0,0,2,4,0,4,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,4,3,0,1,3,0,0,0,0,7,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,3,6,0,16,0,0,25,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,14,2,0,1,4,0,0,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,8,1,0,0,0,1,10,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,2,0,0,2,4,0,4,2,0,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,4,0,0,0,0,1,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,2,1,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,8,0,0,2,4,1,4,2,0,15,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,4,1,0,3,6,0,4,0,0,9,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,8,4,0,1,3,0,8,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,6,0,0,0,0,1,0,0,0,7,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,16,3,1,3,6,0,8,0,0,38,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,4,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,10,4,0,1,3,1,4,0,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,6,4,0,0,0,1,4,2,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,1,0,0,1,2,1,0,0,0,1,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,10,3,0,1,2,1,0,4,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,14,2,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,1,0,1,2,0,0,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,10,7,0,2,4,1,22,2,0,44,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,0,6,0,0,7,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,8,2,0,15,108,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,4,1,0,1,4,0,10,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,14,1,0,2,4,0,2,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,4,0,0,0,0,1,0,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,2,0,0,1,2,1,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,14,1,1,2,4,0,0,0,0,18,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",12,1,0,1,2,0,8,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,4,0,0,0,0,1,12,2,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,12,2,0,2,4,0,0,0,0,14,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,6,2,0,1,3,0,16,0,0,25,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,6,4,0,1,4,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,1,1,2,0,8,0,0,24,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,6,3,0,0,0,1,8,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,12,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,4,0,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,4,2,0,1,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,0,1,2,0,8,0,0,14,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,2,1,0,1,3,0,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,4,0,0,1,4,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,8,0,0,1,2,0,4,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,6,2,0,1,4,0,4,0,0,12,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",4,0,0,1,2,0,0,4,0,10,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,4,0,1,0,0,1,0,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,0,0,4,8,0,10,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,4,1,0,0,0,1,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,16,3,1,1,2,0,6,0,0,30,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,4,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,0,4,8,0,6,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,16,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",4,1,0,3,6,0,10,2,0,17,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",8,1,0,1,2,0,6,0,0,15,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,2,0,0,0,0,0,0,2,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,8,3,0,1,3,0,6,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,2,0,0,1,2,0,8,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",2,1,0,1,2,0,0,2,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",4,1,0,4,8,1,10,4,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,4,1,0,0,0,1,6,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0,0,0,4,8,1,0,0,0,13,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",8,1,0,4,8,1,6,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",4,0,0,4,8,1,12,0,0,16,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,0,0,16,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",8,5,0,1,2,0,4,4,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",8,1,0,1,2,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",10,1,0,1,2,0,0,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,6,3,0,1,3,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",16,6,0,1,2,0,4,2,0,31,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",10,4,0,1,2,0,6,2,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",8,3,0,1,2,0,14,0,0,25,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",6,0,0,4,8,1,4,4,0,14,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",4,1,0,4,8,1,4,2,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,6,3,0,1,2,1,4,0,0,14,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",2,1,0,1,2,1,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,10,4,0,1,3,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",4,0,0,4,8,1,4,2,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,1,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,4,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",6,0,0,1,2,0,10,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,12,2,0,1,3,0,0,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",4,0,0,1,2,1,0,4,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",4,1,0,1,2,1,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,2,0,0,1,2,0,8,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",2,1,0,1,2,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,1,0,1,2,1,0,2,0,16,108,3,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,4,0,0,0,0,0,0,0,0,5,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,4,0,0,0,0,0,0,0,0,5,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,8,3,0,1,3,0,0,0,0,11,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,6,3,0,0,0,1,4,0,0,13,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,0,0,1,2,1,10,0,0,12,51,3,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,6,0,0,10,18,3,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,0,2,0,4,30,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,14,1,0,0,0,3,0,4,0,24,11,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",4,2,0,2,4,0,8,2,0,16,52,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,8,2,0,2,5,3,8,4,0,26,45,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,2,1,0,0,0,1,0,0,0,4,13,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,4,4,0,1,3,0,4,0,0,12,18,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,1,4,4,0,12,27,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,0,2,0,4,31,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",2,0,0,1,2,3,4,4,0,14,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",4,0,0,1,2,3,6,0,0,14,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,8,3,0,5,11,0,8,2,0,24,66,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,4,1,0,0,0,1,4,0,0,9,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,8,4,1,3,7,0,0,4,0,25,53,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,4,0,0,0,0,1,0,2,0,9,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,4,1,0,1,3,0,0,0,0,5,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,2,0,4,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,8,2,0,0,0,0,6,0,0,18,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,0,0,2,0,7,4,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,4,3,1,3,7,0,0,0,0,17,41,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,2,1,0,0,1,0,0,0,0,3,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,6,1,0,1,3,0,0,0,0,7,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,4,0,0,2,4,6,0,4,0,15,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,1,58,8,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,4,3,1,1,2,0,8,4,0,28,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,6,1,0,1,3,0,4,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",6,0,0,3,6,1,6,2,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,6,0,0,2,6,0,0,2,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",4,0,1,3,6,0,4,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,2,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,2,0,0,0,0,4,2,0,0,8,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,4,3,0,1,2,1,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,2,1,0,1,3,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,8,0,0,0,0,0,0,4,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,2,0,0,2,4,0,12,2,0,16,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",2,0,0,4,8,0,8,4,0,14,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,12,0,0,15,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,4,2,0,1,3,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,4,0,0,0,0,4,0,4,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,2,0,1,2,4,0,8,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,0,0,0,1,3,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,8,5,1,2,4,0,4,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,4,0,0,0,0,4,0,4,0,11,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,0,1,0,0,0,1,10,0,0,12,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,8,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,2,1,0,1,3,0,6,0,0,9,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,5,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,10,0,0,0,0,1,4,4,0,20,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,2,1,0,2,4,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,10,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,14,4,0,1,3,0,0,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,8,1,1,0,0,0,2,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,18,0,0,18,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,2,0,0,1,3,0,4,0,0,6,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,4,0,1,2,4,0,0,0,0,6,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,8,1,0,1,3,1,6,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,8,2,0,1,3,0,0,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,12,4,1,0,0,0,0,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,2,1,1,2,4,0,10,0,0,16,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,6,3,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,10,6,0,0,0,1,0,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,0,1,3,0,0,4,0,20,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,2,1,0,0,0,1,4,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,2,0,3,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,4,1,0,0,0,2,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,2,0,0,0,0,1,8,2,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,2,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,2,2,0,1,3,0,4,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,0,1,0,0,0,1,10,0,0,11,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,2,0,0,1,2,1,6,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,2,0,0,0,0,4,0,0,0,5,7,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,10,1,0,0,0,0,0,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,8,1,1,0,0,0,0,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,10,1,0,1,2,0,0,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,6,3,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,10,5,0,1,3,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,4,0,1,2,4,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,6,0,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,0,1,0,0,0,0,3,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,2,0,1,2,4,0,4,0,0,16,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,4,1,0,0,0,0,0,0,0,5,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,4,0,1,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,2,0,0,0,0,0,0,8,0,10,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,0,0,0,1,3,0,0,0,0,1,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,4,1,1,1,2,0,18,0,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,2,4,0,8,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,2,0,1,1,2,0,4,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,8,3,0,0,0,1,0,0,0,11,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,4,0,1,0,0,0,0,0,0,7,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,8,0,0,0,0,0,0,0,0,10,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,8,0,0,9,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,6,0,0,0,0,1,0,0,0,7,7,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,6,1,0,0,0,0,4,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,4,1,1,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,2,4,1,2,4,0,12,0,0,27,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,4,0,1,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,6,4,0,12,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,2,1,1,1,3,0,0,0,0,7,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,8,0,1,3,7,0,14,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,4,2,0,18,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,14,2,0,0,0,0,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,2,0,0,1,3,0,8,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,4,0,0,0,0,1,0,4,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,16,3,0,1,3,0,0,0,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,1,3,7,0,14,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,6,1,0,0,0,0,4,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,10,1,0,0,0,0,4,0,0,19,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,10,2,1,2,5,0,0,0,0,17,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,12,1,0,0,0,1,0,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,2,0,0,0,0,0,0,2,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,2,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,8,2,1,2,5,0,2,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,2,0,4,0,19,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",6,2,0,1,2,1,6,0,0,14,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,4,0,0,12,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,6,3,0,0,0,1,0,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,10,3,1,2,5,0,0,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,4,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,22,2,0,1,3,0,0,0,0,26,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,2,1,0,1,3,0,8,2,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,10,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,8,0,0,0,0,1,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,10,2,0,0,0,0,10,0,0,23,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,16,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,8,1,0,0,0,1,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,2,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,0,1,0,1,4,0,14,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,4,0,0,11,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,2,1,0,1,3,0,8,0,0,11,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,6,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,2,0,1,2,1,6,2,0,13,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,1,0,1,2,1,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,12,0,0,12,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,8,8,0,32,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,2,0,0,1,3,0,0,0,0,3,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,6,0,0,30,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,8,1,1,2,5,1,0,4,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,8,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,8,0,0,2,5,0,0,4,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,14,0,0,17,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,6,1,0,3,6,0,0,0,0,7,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,4,0,1,1,2,0,0,2,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,6,1,1,3,6,0,10,0,0,22,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,6,0,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,4,1,0,1,3,0,4,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,4,0,0,1,4,0,0,0,0,5,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,10,2,0,1,3,0,12,0,0,25,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,8,1,0,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,4,1,1,0,0,1,0,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,8,2,0,1,4,0,4,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,8,1,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,8,0,0,2,4,1,0,0,0,9,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,6,0,1,3,6,0,14,0,0,30,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,2,1,0,0,0,1,0,2,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,2,0,1,1,2,0,4,2,0,21,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,2,0,1,0,0,1,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,0,0,1,3,6,0,28,0,0,39,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,6,1,1,1,2,0,12,2,0,25,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2505,            result[i] = (b == null ? valueForNull : b.shortValue());,6,2,1,3,6,0,14,0,0,27,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2507,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2519,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2522,            return EMPTY_SHORT_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2525,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2526,            result[i] = Short.valueOf(array[i]);,4,0,1,3,6,0,4,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2546,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2548,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2549,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,4,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2552,        return result;,4,1,0,0,0,1,4,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2565,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2568,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2571,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2572,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2573,            result[i] = (b == null ? valueForNull : b.byteValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2587,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2588,            return null;,8,4,0,0,0,1,6,0,0,18,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2589,        } else if (array.length == 0) {,4,1,0,1,4,0,14,0,0,19,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2590,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2592,        final Byte[] result = new Byte[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2593,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2596,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2611,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2612,            return null;,14,3,0,0,0,1,0,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2616,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2635,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2636,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2638,        final double[] result = new double[array.length];,6,0,0,2,4,1,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2639,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2640,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2643,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2655,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2656,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2657,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,4,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2658,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2661,        for (int i = 0; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2662,            result[i] = Double.valueOf(array[i]);,4,1,1,3,6,0,8,0,0,22,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2664,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2679,        if (array == null) {,2,1,1,1,3,0,0,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2685,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2686,            result[i] = array[i].floatValue();,2,1,1,3,6,0,2,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2701,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2703,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2704,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2707,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2709,            result[i] = (b == null ? valueForNull : b.floatValue());,16,2,1,3,6,1,14,0,0,38,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2711,        return result;,4,0,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2725,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2728,        final Float[] result = new Float[array.length];,4,1,0,2,4,0,0,0,0,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2729,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2730,            result[i] = Float.valueOf(array[i]);,2,1,1,3,6,0,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2747,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2749,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2750,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2756,        return result;,2,1,0,0,0,1,8,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2769,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2770,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2771,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2772,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2774,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2776,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2777,            result[i] = (b == null ? valueForNull : b.booleanValue());,6,1,1,3,6,0,8,0,0,20,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2791,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2792,            return null;,2,0,0,0,0,1,14,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2797,        for (int i = 0; i < array.length; i++) {,24,5,0,1,3,0,0,0,0,31,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2798,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,8,0,1,3,6,0,0,0,0,17,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2800,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2812,        if (array == null || array.length == 0) {,14,5,0,1,3,0,0,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2815,        return false;,2,1,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2827,            return true;,0,0,0,0,0,1,10,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2840,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2854,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2855,            return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2857,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2868,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2882,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2883,            return true;,4,1,1,0,0,1,4,0,0,14,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2896,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2925,            return true;,2,1,0,0,0,1,8,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2986,            return clone(array2);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2988,            return clone(array1);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2990,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2991,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3014,        if (array1 == null) {,0,1,0,1,3,0,12,0,0,13,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3020,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,1,1,2,0,2,0,0,11,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3021,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3043,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3044,            return clone(array2);,2,0,1,1,2,1,4,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3048,        byte[] joinedArray = new byte[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3049,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3051,        return joinedArray;,4,0,0,0,0,1,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3072,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3074,        } else if (array2 == null) {,10,2,0,1,4,0,10,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3077,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3079,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3080,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3101,        if (array1 == null) {,2,1,0,1,3,0,10,0,0,14,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3103,        } else if (array2 == null) {,4,1,0,1,4,0,8,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3106,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3107,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",10,0,0,1,2,0,8,0,0,19,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3108,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,0,1,2,0,8,0,0,19,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3109,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3130,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3132,        } else if (array2 == null) {,4,1,0,1,4,0,4,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3133,            return clone(array1);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3135,        long[] joinedArray = new long[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3137,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3138,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3164,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3165,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3166,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3167,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3191,            return clone(array1);,12,0,0,1,2,1,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3193,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3194,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3196,        return joinedArray;,4,1,0,0,0,1,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3227,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3253,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3254,        newArray[newArray.length - 1] = element;,8,1,1,1,2,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3281,        newArray[newArray.length - 1] = element;,12,2,1,1,2,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3282,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3307,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,2,0,4,8,0,8,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3309,        return newArray;,2,0,0,0,0,1,8,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3334,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",14,1,0,4,8,0,4,0,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3335,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,4,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3336,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3362,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3388,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",8,0,0,4,8,0,4,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3415,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,1,4,8,0,0,0,0,7,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3416,        newArray[newArray.length - 1] = element;,10,2,1,1,2,0,2,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3417,        return newArray;,4,0,1,0,0,1,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3443,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3458,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,6,8,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3460,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,10,0,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3461,            return newArray;,8,2,0,0,0,1,4,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3496,        Class<?> clss = null;,10,1,0,0,0,0,0,2,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3502,            return (T[]) new Object[] { null };,8,6,0,4,8,1,0,4,0,18,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3504,"        return (T[]) add(array, index, element, clss);",0,1,0,3,6,1,10,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3535,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",8,0,0,4,8,1,12,0,0,21,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3567,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",4,0,0,4,8,1,12,0,0,16,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3598,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3629,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3691,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3769,            if (index != 0) {,6,1,0,1,3,0,0,0,0,8,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3770,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3773,"            Array.set(joinedArray, 0, element);",2,0,0,1,2,0,12,2,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3776,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3782,"        Array.set(result, index, element);",0,1,0,1,2,0,20,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3783,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3784,"            System.arraycopy(array, index, result, index + 1, length - index);",6,2,0,1,2,0,10,0,0,18,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3786,        return result;,4,0,0,0,0,1,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3819,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,4,4,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3849,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3852,"        return remove(array, index);",2,0,0,1,2,1,10,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3884,"        return (boolean[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3913,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3914,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3915,            return clone(array);,4,0,0,1,2,1,4,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3949,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3978,"        int index = indexOf(array, element);",6,1,1,1,2,0,10,0,0,26,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3979,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3980,            return clone(array);,0,0,0,1,2,1,8,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4014,"        return (char[]) remove((Object) array, index);",0,0,0,4,8,1,10,0,0,10,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4043,"        int index = indexOf(array, element);",4,3,1,1,2,0,20,0,0,33,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4044,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4047,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4079,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4108,"        int index = indexOf(array, element);",4,1,0,1,2,0,14,2,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4109,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4110,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4112,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4144,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4173,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4177,"        return remove(array, index);",4,1,0,1,2,1,6,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4209,"        return (int[]) remove((Object) array, index);",6,0,0,4,8,1,16,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4239,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4242,"        return remove(array, index);",0,0,0,1,2,1,10,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4274,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4303,"        int index = indexOf(array, element);",4,2,0,1,2,0,12,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4304,        if (index == INDEX_NOT_FOUND) {,6,2,0,1,3,0,0,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4305,            return clone(array);,2,0,0,1,2,1,8,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4339,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4368,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4369,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4370,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4399,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4402,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",4,1,0,3,6,0,10,2,0,17,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4403,"        System.arraycopy(array, 0, result, 0, index);",4,1,0,1,2,0,10,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4404,        if (index < length - 1) {,8,4,0,1,3,0,2,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4405,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",10,3,0,1,2,0,10,0,0,23,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,1,0,1,2,1,4,0,0,5,44,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,6,5,0,3,6,0,4,0,0,16,40,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,6,9,0,1,3,0,4,0,0,19,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,2,0,0,0,0,1,4,0,0,7,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,6,0,0,0,0,0,0,0,0,6,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,6,1,0,1,3,3,0,2,0,12,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,13,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,8,0,0,12,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,8,3,0,1,3,0,6,2,0,20,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,0,0,0,4,8,0,0,0,0,12,67,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,4,1,0,1,3,0,0,0,0,5,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",2,1,0,2,4,0,10,0,0,14,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,14,2,0,2,4,0,4,4,0,24,64,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",4,0,1,2,4,0,10,0,0,20,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,8,1,1,1,2,0,0,0,0,16,36,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,3,0,0,1,3,0,12,0,0,15,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,2,1,0,2,4,0,10,0,0,13,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,4,0,0,1,3,3,2,2,0,13,14,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,2,1,0,0,0,1,0,2,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",6,6,0,1,2,1,8,0,0,21,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,6,1,0,0,0,1,10,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,10,2,0,4,9,0,10,2,0,24,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,0,0,3,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,8,3,0,3,7,0,4,4,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,4,1,0,1,3,0,4,2,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,2,2,0,2,6,0,4,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,8,3,0,0,0,0,14,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",2,0,0,1,2,1,6,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,1,2,1,8,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,8,3,0,0,0,1,4,2,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,4,0,0,0,0,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,627,        if(input == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,640,"                Class normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",2,0,0,1,2,0,0,2,0,4,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,649,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",2,0,0,3,6,0,10,4,0,16,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,655,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",2,0,0,1,2,0,0,2,0,5,95,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,656,            } catch(NoSuchMethodException nsme) {,4,0,0,1,4,2,0,4,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,657,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",2,0,0,1,2,0,0,2,0,5,94,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,659,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",2,0,0,1,2,0,0,2,0,5,93,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,660,            } catch(IllegalAccessException iae) {,2,0,0,1,4,0,0,2,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,661,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",4,0,0,1,2,0,0,2,0,7,94,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,662,            } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,663,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",10,1,0,1,2,0,0,4,0,18,96,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,664,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,0,0,1,4,3,10,4,0,21,58,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,665,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",2,0,0,1,2,0,0,2,0,5,97,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,667,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",4,1,0,1,2,0,0,2,0,8,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,670,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,2,0,3,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,697,        return str1 == null ? str2 == null : str1.equals(str2);,2,0,0,1,2,2,0,2,0,5,55,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,748,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,780,            return -1;,2,0,0,0,0,4,0,4,0,9,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,808,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,809,            return -1;,0,0,0,0,0,1,12,0,0,12,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,811,        return str.indexOf(searchStr);,2,0,1,1,2,1,6,2,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,843,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,851,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,3,2,2,0,11,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,852,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,853,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,855,            found++;,2,0,0,0,0,0,0,4,0,6,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,857,        return index;,6,0,0,0,0,1,0,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,892,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,896,        if (searchStr.length() == 0 && startPos >= str.length()) {,8,3,0,3,7,0,14,0,0,26,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,959,            return -1;,6,0,0,0,0,1,0,0,0,7,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,987,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1022,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1050,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1053,        return str.indexOf(searchChar) >= 0;,4,2,0,1,2,1,10,2,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1081,        return str.indexOf(searchStr) >= 0;,8,7,0,1,2,1,0,0,0,19,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1108,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1111,        int len = searchStr.length();,8,3,0,1,2,0,4,0,0,16,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1114,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",10,1,0,2,5,0,10,0,0,23,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1146,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1149,        for (int i = 0; i < str.length(); i++) {,2,3,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1150,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1152,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1153,                    return i;,2,0,0,0,0,1,0,0,0,3,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1157,        return -1;,2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1183,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,12,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1216,            return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1218,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1219,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1222,                    return true;,0,0,0,0,0,1,0,0,0,1,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1288,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1293,            for (int j = 0; j < searchChars.length; j++) {,2,1,0,1,3,0,0,0,0,3,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1294,                if (searchChars[j] == ch) {,12,2,1,2,5,0,0,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1295,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1298,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1326,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1327,            return -1;,4,0,0,0,0,1,0,0,0,5,10,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1365,        if (str.length() == 0) {,2,0,0,2,5,0,6,0,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1368,        if (valid.length == 0) {,0,1,0,1,3,0,8,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1371,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1400,"        return containsOnly(str, validChars.toCharArray());",0,0,1,2,4,1,0,0,0,4,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1428,        if (str == null || invalidChars == null) {,2,0,0,1,3,1,0,2,0,7,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1429,            return true;,2,0,0,0,0,1,4,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1431,        int strSize = str.length();,2,0,0,1,2,1,0,0,0,4,27,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1432,        int validSize = invalidChars.length;,2,1,0,0,0,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1433,        for (int i = 0; i < strSize; i++) {,2,0,0,1,3,0,0,0,0,3,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1435,            for (int j = 0; j < validSize; j++) {,10,1,0,1,3,0,12,0,0,24,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1436,                if (invalidChars[j] == ch) {,10,2,1,2,5,0,6,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1437,                    return false;,2,1,1,0,0,1,0,0,0,7,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1502,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1505,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1508,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1510,        int tmp = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1511,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1513,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1516,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1517,            if (tmp == -1) {,4,1,0,1,3,0,0,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1521,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1522,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1526,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,8,1,0,1,2,1,0,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1555,        if ((str == null) || (searchStrs == null)) {,2,0,0,3,7,0,0,0,0,2,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1559,        int ret = -1;,10,1,0,0,0,0,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1560,        int tmp = 0;,2,0,0,0,0,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1561,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1562,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1567,            if (tmp > ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1568,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1607,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1611,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1614,            return EMPTY;,12,1,0,0,0,1,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1656,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1665,            start = str.length() + start; // remember start is negative,14,2,0,1,2,0,4,2,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1675,            return EMPTY;,2,0,0,0,0,1,6,0,0,9,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1678,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1679,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1681,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1685,"        return str.substring(start, end);",2,1,0,1,2,1,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1711,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1712,            return null;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1717,        if (str.length() <= len) {,6,2,0,2,5,0,8,0,0,17,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1718,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1720,"        return str.substring(0, len);",2,0,0,1,2,1,0,0,0,2,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1751,            return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1781,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1784,        if (len < 0 || pos > str.length()) {,6,3,0,2,5,0,4,2,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1785,            return EMPTY;,4,1,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1787,        if (pos < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1790,        if (str.length() <= (pos + len)) {,6,2,0,3,7,0,4,2,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1791,            return str.substring(pos);,2,0,0,1,2,1,10,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1827,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1829,        if (separator.length() == 0) {,0,2,0,2,5,0,8,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1833,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1834,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1871,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1872,            return EMPTY;,2,0,0,0,0,1,8,0,0,11,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1874,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1875,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1878,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1909,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1910,            return str;,0,0,0,0,0,1,6,0,0,6,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1913,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1950,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1953,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1956,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,0,0,4,9,0,0,0,0,3,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1957,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1959,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1986,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2017,        if (str == null || open == null || close == null) {,8,6,0,1,3,0,0,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2018,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2021,        if (start != -1) {,6,1,0,1,3,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2022,"            int end = str.indexOf(close, start + open.length());",8,1,0,2,4,0,10,0,0,19,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2024,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2056,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2058,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,1,0,0,1,0,0,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2060,        int closeLen = close.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2061,        int openLen = open.length();,2,1,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2062,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2063,        int pos = 0;,0,0,0,0,0,0,0,2,0,3,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2065,"            int start = str.indexOf(open, pos);",6,0,0,1,2,0,8,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2066,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2070,"            int end = str.indexOf(close, start);",6,0,1,1,2,0,0,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2071,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2072,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2074,"            list.add(str.substring(start, end));",2,0,0,2,4,0,14,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2075,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2168,"        return splitWorker(str, separatorChars, -1, false);",4,1,0,1,2,1,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2342,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2349,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,6,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2352,        if ((separator == null) || (EMPTY.equals(separator))) {,2,2,0,4,9,0,6,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2354,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,8,0,0,9,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2357,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2362,        int end = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2370,                    if (numberOfSubstrings == max) {,6,1,0,1,3,0,0,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2371,                        end = len;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2372,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2381,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2386,                        numberOfSubstrings += 1;,4,1,0,0,0,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2389,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2394,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2398,                substrings.add(str.substring(beg));,4,0,0,2,4,0,10,0,0,15,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2399,                end = len;,6,0,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2432,"        return splitWorker(str, null, -1, true);",8,1,0,1,2,1,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2468,"        return splitWorker(str, separatorChar, true);",2,0,1,1,2,1,6,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2486,        if (str == null) {,4,1,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2489,        int len = str.length();,6,1,0,1,2,0,0,0,0,7,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2491,            return ArrayUtils.EMPTY_STRING_ARRAY;,10,1,0,0,0,1,8,0,0,19,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2497,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2500,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2501,                    match = false;,2,0,0,0,0,0,8,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2502,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2504,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2505,                continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2507,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2508,            match = true;,16,4,0,0,0,0,10,0,0,32,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2509,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2512,"            list.add(str.substring(start, i));",0,0,0,2,4,0,22,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2551,"        return splitWorker(str, separatorChars, -1, true);",16,1,1,1,2,1,14,2,0,40,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2617,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2618,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2621,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2622,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2623,        boolean match = false;,2,0,0,0,0,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2624,        boolean lastMatch = false;,4,3,0,0,0,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2625,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2628,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2629,                    if (match || preserveAllTokens) {,4,1,1,1,3,0,8,0,0,22,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2630,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2631,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2636,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2638,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2641,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2642,                match = true;,2,0,0,0,0,0,2,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2643,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2645,        } else if (separatorChars.length() == 1) {,4,3,0,2,6,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2648,            while (i < len) {,6,1,0,1,3,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2649,                if (str.charAt(i) == sep) {,2,1,0,2,5,0,6,0,0,9,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2650,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,14,0,0,20,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2651,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2659,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2662,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2663,                match = true;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2664,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2666,        } else {,0,0,1,0,2,0,4,0,0,8,8,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2673,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2674,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2679,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2682,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2683,                match = true;,2,0,0,0,0,0,6,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2684,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2741,"        return splitByCharacterType(str, true);",2,1,0,1,2,1,14,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2759,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2760,            return null;,2,3,0,0,0,1,4,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2763,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2768,        int currentType = Character.getType(c[tokenStart]);,6,0,1,2,4,0,12,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2769,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,12,2,0,1,3,0,0,0,0,15,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2770,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2775,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2776,                if (newTokenStart != tokenStart) {,16,4,0,1,3,0,0,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2777,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",10,1,0,2,4,0,4,2,0,17,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2781,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,4,2,0,15,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2782,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2784,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2786,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2787,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,0,0,0,4,45,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2839,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2843,"        return join(array, separator, 0, array.length);",2,0,0,1,2,1,0,0,0,3,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2873,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2877,        if (bufSize <= 0) {,10,1,0,1,3,0,0,0,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2878,            return EMPTY;,10,1,0,0,0,1,14,0,0,28,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2881,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2882,        StringBuilder buf = new StringBuilder(bufSize);,6,1,0,1,2,0,0,6,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2884,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2886,                buf.append(separator);,4,3,1,1,2,0,10,0,0,19,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2920,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2954,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2958,            separator = EMPTY;,6,0,0,0,0,0,0,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2964,        if (bufSize <= 0) {,12,2,0,1,3,0,0,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2968,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2971,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,4,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2973,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,6,0,0,18,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2974,            if (i > startIndex) {,18,2,0,1,3,0,0,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2977,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2978,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2981,        return buf.toString();,2,1,0,1,2,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3005,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3007,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3013,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,1,0,1,2,0,0,4,0,9,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3014,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3015,            buf.append(first);,2,0,0,1,2,0,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3018,        while (iterator.hasNext()) {,0,0,0,2,5,0,14,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3024,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3045,        if (iterator == null) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3049,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3051,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3057,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3058,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3068,                buf.append(obj);,2,1,0,1,2,0,6,0,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3070,        },2,0,0,0,1,0,0,0,0,4,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3092,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,8,0,0,10,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3134,            return str;,4,2,0,0,0,1,8,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3136,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3137,        char[] chs = new char[sz];,4,1,1,2,4,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3138,        int count = 0;,6,1,0,0,0,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3141,                chs[count++] = str.charAt(i);,6,1,1,2,4,0,6,0,0,17,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3177,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,8,0,0,11,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3178,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3181,            return str.substring(remove.length());,2,0,0,2,4,1,16,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3212,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3213,            return str;,6,1,0,0,0,1,0,0,0,7,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3215,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3216,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3246,        if (isEmpty(str) || isEmpty(remove)) {,4,1,1,3,7,0,26,0,0,37,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3250,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3252,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3280,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3284,"            return str.substring(0, str.length() - remove.length());",0,2,0,3,6,1,24,0,0,26,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3286,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3313,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3339,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,3,7,0,10,0,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3343,        int pos = 0;,4,0,0,0,0,0,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3344,        for (int i = 0; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3345,            if (chars[i] != remove) {,2,0,0,2,5,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3440,        int start = 0;,6,3,0,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3441,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3442,        if (end == -1) {,4,1,0,1,3,0,0,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3443,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3445,        int replLength = searchString.length();,2,0,0,1,2,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3446,        int increase = replacement.length() - replLength;,4,2,0,1,2,0,8,0,0,16,49,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3450,        while (end != -1) {,2,0,0,1,3,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3451,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3452,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3456,"            end = text.indexOf(searchString, start);",2,1,0,1,2,0,16,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3458,        buf.append(text.substring(start));,0,0,0,2,4,0,20,0,0,20,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3620,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",4,0,0,1,2,0,0,0,0,5,92,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3628,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,2,1,0,0,1,0,8,2,0,14,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3678,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,10,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3757,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3759,"        return str.replace(searchChar, replaceChar);",2,1,0,1,2,1,8,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3799,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3803,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3805,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3806,        int replaceCharsLength = replaceChars.length();,4,0,0,1,2,0,4,0,0,10,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3809,        for (int i = 0; i < strLength; i++) {,10,2,0,1,3,0,0,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3811,            int index = searchChars.indexOf(ch);,4,0,0,1,2,0,12,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3812,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3814,                if (index < replaceCharsLength) {,8,0,0,1,3,0,0,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3821,        if (modified) {,6,0,0,1,3,0,4,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3822,            return buf.toString();,4,2,0,1,2,1,18,0,0,24,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3859,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3862,        if (overlay == null) {,4,2,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3863,            overlay = EMPTY;,8,1,0,0,0,0,4,0,0,14,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3865,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3866,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3867,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3870,            start = len;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3872,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3875,        if (end > len) {,2,0,0,1,3,0,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3876,            end = len;,6,0,0,0,0,0,0,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3878,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3879,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3880,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3922,        if (str.length() == 1) {,2,2,0,2,5,0,4,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3927,            return str;,14,2,1,0,0,1,4,0,0,26,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3930,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3933,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3934,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3935,                lastIdx--;,6,1,0,0,0,0,0,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3937,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3938,            lastIdx++;,6,0,0,0,0,0,6,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3940,"        return str.substring(0, lastIdx);",4,1,0,1,2,1,6,0,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3971,            return str;,8,1,0,0,0,1,0,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3973,        if (str.endsWith(separator)) {,8,4,0,2,5,0,12,0,0,24,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3974,"            return str.substring(0, str.length() - separator.length());",4,2,0,3,6,1,22,0,0,28,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3976,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4005,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4008,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4009,        if (strLen < 2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4010,            return EMPTY;,12,1,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4012,        int lastIdx = strLen - 1;,14,3,1,0,0,0,12,0,0,34,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4014,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4016,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4020,        return ret;,4,1,0,0,0,1,4,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4049,        if (str == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4052,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4053,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4055,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4056,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4057,            return str;,4,3,0,0,0,1,8,0,0,17,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4060,"            return padding(repeat, str.charAt(0));",4,0,0,2,4,2,16,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4063,        int outputLength = inputLength * repeat;,8,1,0,0,0,1,4,0,0,14,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4066,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4067,                char[] output1 = new char[outputLength];,4,1,0,2,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4069,                    output1[i] = ch;,4,1,1,1,2,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4071,                return new String(output1);,4,1,0,1,2,1,0,0,0,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4073,                char ch0 = str.charAt(0);,2,0,0,1,2,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4075,                char[] output2 = new char[outputLength];,2,0,0,2,4,0,8,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4077,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4078,                    output2[i + 1] = ch1;,6,1,1,1,2,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4080,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4082,                StringBuilder buf = new StringBuilder(outputLength);,6,1,0,1,2,0,6,4,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4086,                return buf.toString();,6,0,0,1,2,1,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4110,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4114,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4143,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4146,        final char[] buf = new char[repeat];,10,1,1,2,4,1,0,2,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4198,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4201,        int pads = size - str.length();,6,2,0,1,2,0,4,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4202,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4203,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4205,        if (pads > PAD_LIMIT) {,6,1,0,1,3,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4206,"            return rightPad(str, size, String.valueOf(padChar));",4,0,0,2,4,1,12,0,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4235,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4239,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4244,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4245,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4247,        if (padLen == 1 && pads <= PAD_LIMIT) {,8,3,0,1,3,0,4,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4248,"            return rightPad(str, size, padStr.charAt(0));",0,3,0,2,4,1,16,0,0,21,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4251,        if (pads == padLen) {,4,1,0,1,3,0,4,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",4,1,1,2,4,1,4,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,1,0,1,2,1,18,0,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,2,1,0,1,3,0,16,0,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",4,1,0,2,4,1,12,0,0,17,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,0,0,0,1,3,0,10,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,8,1,1,1,2,0,4,0,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,1,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,4,1,0,2,4,0,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",2,0,0,1,2,1,0,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",2,0,0,1,2,0,8,0,0,11,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",10,1,0,0,0,0,4,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,4,26,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",8,1,1,1,2,0,8,0,0,21,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,0,1,0,1,3,0,4,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,2,1,0,1,2,1,4,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,2,0,0,1,2,1,12,4,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,4,1,0,0,0,1,10,0,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),2,0,0,1,2,1,0,0,0,2,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,8,1,0,0,0,1,0,4,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,2,0,1,1,3,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,8,1,0,1,2,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,8,0,0,2,5,1,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,12,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,4,2,0,3,7,0,12,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",8,3,0,3,7,0,20,0,0,34,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,4,1,0,0,0,0,0,0,0,6,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,4,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,2,1,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,8,6,0,1,3,0,0,0,0,14,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,4,2,0,1,2,0,14,0,0,21,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,1,84,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,2,0,1,0,0,1,0,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,2,4,0,6,13,0,16,0,0,24,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,6,1,0,1,2,0,0,0,0,7,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,14,1,0,1,3,1,0,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,10,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,6,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,2,0,0,1,2,0,10,2,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,8,2,0,2,4,0,12,0,0,23,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,6,2,0,1,3,0,12,2,0,22,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",4,1,0,1,2,0,6,0,0,11,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,2,0,0,0,0,1,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,6,0,0,1,3,0,0,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,6,0,0,0,0,1,0,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,8,0,0,0,0,0,4,0,0,13,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,2,2,1,2,5,0,6,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,0,0,0,0,0,0,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,4,1,0,1,3,0,4,4,0,13,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,2,0,0,2,4,0,4,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,12,1,0,1,3,0,0,0,0,14,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,14,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,4,0,0,0,0,0,12,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,2,1,1,0,0,0,0,0,0,7,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,4,0,1,3,0,8,0,0,19,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,6,1,1,0,0,1,0,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,4,0,1,0,0,1,4,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,4,0,0,1,2,0,8,0,0,12,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,4,0,1,1,2,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,12,2,0,1,4,0,0,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,4,1,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,10,2,0,1,3,0,8,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,4,0,1,1,2,0,0,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,6,1,0,0,0,0,0,0,0,9,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,6,2,0,1,3,0,6,0,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,10,3,0,1,2,2,0,4,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,4,1,0,3,7,0,12,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,6,0,0,0,0,2,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,0,3,6,1,6,2,0,14,60,1,1.0,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,2,1,0,0,0,1,0,0,0,3,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,0,0,0,0,0,1,4,0,0,4,25,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,2,0,0,2,4,4,6,4,0,15,37,1,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,0,12,2,0,18,54,3,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,1,0,4,8,0,4,4,0,16,67,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,2,0,0,1,2,4,6,2,0,14,25,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,6,4,0,1,3,0,0,0,0,12,22,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",0,0,0,2,4,0,20,0,0,20,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,2,0,0,1,2,0,4,0,0,7,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",6,1,0,2,4,0,4,0,0,11,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,4,0,0,0,0,3,0,0,0,7,17,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,2,0,1,3,6,0,12,0,0,16,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,2,0,0,1,2,1,8,2,0,13,10,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,2,1,0,2,4,0,14,4,0,21,33,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,2,0,0,1,2,0,0,0,0,2,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,2,1,0,1,2,0,4,2,0,10,18,3,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,4,0,0,0,0,0,0,0,0,5,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,4,0,0,1,2,0,0,0,0,5,30,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,3,4,4,0,14,24,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,12,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,14,0,0,18,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,10,2,0,2,4,0,8,0,0,23,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,4,1,0,1,3,3,0,0,0,9,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,4,1,0,0,0,0,0,0,0,6,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",4,3,0,1,2,1,12,2,0,22,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",4,0,0,1,2,0,16,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,10,0,0,13,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,2,0,0,1,2,4,4,0,0,9,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,6,3,0,1,3,3,0,12,0,24,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,4,1,0,1,4,0,0,2,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,2,0,0,1,2,4,4,12,0,21,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,2,0,0,0,0,1,6,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,2,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,2,1,0,1,4,0,4,2,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,1,0,1,2,1,16,0,0,17,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,8,2,0,1,2,1,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,2,0,0,0,0,1,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,6,0,0,0,0,0,0,0,0,8,6,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,6,1,0,1,3,0,0,0,0,8,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,0,0,0,0,1,6,2,0,10,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,4,2,0,1,2,0,6,0,0,12,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,2,0,0,0,0,1,4,0,0,7,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,0,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,6,1,0,1,3,0,0,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,2,3,0,4,9,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,12,0,0,0,0,3,0,4,0,19,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,4,0,0,0,0,0,0,0,0,7,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,6,1,1,2,4,0,0,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,13,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,4,0,1,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,6,0,0,3,7,0,4,0,0,10,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,2,3,1,3,7,0,0,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,2,0,0,0,0,1,0,2,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,2,0,0,0,0,4,0,4,0,9,13,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,1,4,0,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,4,2,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,2,1,0,0,0,0,0,0,0,3,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,4,2,0,4,9,0,10,0,0,16,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,4,3,0,5,11,0,10,0,0,18,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,2,0,0,1,2,4,0,4,0,10,28,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,4,0,0,0,0,2,0,0,0,7,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,6,0,0,0,0,0,0,0,0,8,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,4,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,4,3,0,1,2,1,16,0,0,23,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,6,0,0,2,5,0,8,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,3,0,1,3,0,4,2,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,4,6,0,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,8,1,0,0,0,4,8,2,0,23,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,4,0,0,0,0,0,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,4,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,6,1,0,0,0,0,4,0,0,13,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,3,0,3,7,0,8,0,0,13,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,4,1,0,1,2,4,14,4,0,29,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,2,1,0,1,2,1,6,0,0,9,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",4,0,0,3,6,1,10,2,0,17,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,6,3,0,0,0,1,4,0,0,13,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,14,3,0,2,5,0,4,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,2,1,0,3,7,3,8,4,0,19,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,8,7,0,2,5,0,4,0,0,19,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,4,4,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,2,1,1,2,5,0,8,0,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",8,1,0,2,4,1,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,12,1,0,1,3,3,2,2,0,22,46,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,4,3,0,3,7,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,4,1,0,1,3,0,4,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,0,0,0,0,0,1,6,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,6,3,0,1,3,3,2,2,0,17,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,6,1,0,0,0,1,4,4,0,15,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,8,1,0,1,3,0,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,6,0,0,0,0,0,6,2,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,4,3,1,1,3,0,2,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",2,0,0,1,2,1,4,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,4,0,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,22,0,0,22,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,4,1,0,1,2,0,0,0,0,5,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,1,2,1,6,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,0,1,1,3,0,0,0,0,7,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,12,2,1,0,0,0,0,0,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,4,1,0,1,2,0,6,4,0,15,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,1,1,2,0,10,0,0,23,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,0,0,1,2,0,4,2,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,4,0,0,0,0,0,0,0,0,5,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,2,0,0,1,2,0,0,0,0,2,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,0,0,0,1,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,6,0,0,0,0,0,0,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",4,1,0,1,2,1,4,0,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,4,0,0,0,0,1,0,2,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,10,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,8,1,0,1,2,0,0,6,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",2,0,1,1,2,1,4,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,8,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,6,4,0,1,2,0,12,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",2,0,1,1,2,1,6,0,0,13,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,4,1,0,1,2,0,10,4,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,2,0,0,1,2,0,6,0,0,9,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,2,0,0,1,2,0,6,0,0,9,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,10,0,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,8,5,0,2,4,0,0,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,4,1,0,0,0,0,0,0,0,6,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,8,3,0,0,0,0,0,0,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,1,0,4,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,0,0,2,5,0,0,2,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,2,1,0,2,5,1,16,2,0,22,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,2,0,0,1,2,0,4,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",8,3,0,1,2,0,8,0,0,21,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,2,1,0,2,5,0,4,0,0,7,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,20,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,4,0,0,2,4,0,10,4,0,18,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,0,0,0,1,2,0,4,0,0,5,15,13,1.0,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,4,0,0,1,3,0,0,0,0,5,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,2,1,0,1,4,0,0,0,0,3,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,13,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,6,1,0,1,2,0,6,0,0,13,29,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,6,1,0,3,6,3,6,6,0,23,60,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,12,2,0,0,1,1,0,4,0,19,35,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,4,0,0,0,0,0,0,0,0,6,23,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,10,2,0,2,4,0,4,0,0,19,37,4,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,12,3,0,3,6,3,0,2,0,21,38,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,39,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,4,0,0,0,0,0,0,0,0,6,7,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,6,1,0,0,0,0,0,0,0,8,6,3,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,6,2,0,1,2,4,0,4,0,16,33,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,6,0,0,0,0,0,0,0,0,7,13,1,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,2,0,0,0,0,1,0,0,0,2,15,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,14,2,0,0,0,1,0,12,0,30,9,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",4,0,0,1,2,1,4,0,0,8,42,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",2,0,0,1,2,4,8,4,0,18,63,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",8,0,0,3,6,3,2,10,0,24,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,12,1,0,2,4,0,6,4,0,24,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,2,0,1,3,0,0,0,0,6,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,6,1,0,0,0,1,0,0,0,7,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,4,0,0,0,0,0,0,2,0,8,6,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,2,0,0,1,3,3,0,4,0,9,18,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,2,0,0,2,5,0,0,2,0,4,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,4,0,0,1,2,0,0,4,0,8,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,0,1,3,0,0,4,0,14,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,4,0,0,1,3,3,2,2,0,12,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,2,0,1,0,0,0,6,0,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,2,0,0,1,3,0,0,0,0,2,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,2,0,0,0,0,1,0,0,0,4,9,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,2,1,0,1,2,0,0,2,0,6,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },6,1,0,0,1,0,0,0,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,4,0,4,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,8,0,0,2,4,1,4,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,4,1,0,1,3,0,4,2,0,11,19,3,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,4,1,1,1,2,1,10,2,0,23,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,8,0,0,1,2,6,4,8,0,26,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,2,0,1,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,2,0,0,0,0,4,6,2,0,14,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,2,1,0,1,2,1,12,2,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,4,2,0,1,3,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,4,2,0,13,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,6,2,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,2,1,0,1,2,1,0,0,0,3,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,1,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,4,1,0,1,4,0,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,0,0,0,0,0,1,0,0,0,1,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,12,2,0,17,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,2,1,0,1,4,0,0,0,0,3,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,0,0,0,2,6,0,6,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",2,1,0,1,2,0,0,2,0,6,87,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,4,1,0,1,3,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,4,1,0,1,4,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,4,1,0,1,3,0,0,0,0,7,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,4,1,0,1,3,3,2,0,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,4,1,0,1,4,2,4,2,0,13,32,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,2,1,0,1,4,0,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,8,0,0,1,2,1,4,0,0,12,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,6,0,0,0,0,1,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,            return nullValue;,2,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,4,0,0,1,2,1,8,2,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,4,0,0,1,2,1,4,0,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,8,0,0,10,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,6,0,0,0,0,4,4,2,0,16,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,            } else if (falseString == null) {,2,1,0,1,4,0,0,0,0,3,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,            } else if (nullString == null) {,2,1,0,1,4,0,0,0,0,3,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,            return Boolean.TRUE;,4,0,0,0,0,1,4,0,0,8,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,2,0,0,0,0,1,0,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,6,0,0,1,2,0,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,4,1,0,1,3,0,0,2,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,            } else if (falseString == null) {,2,1,0,1,4,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,                return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,10,1,0,2,6,0,6,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",2,0,0,1,2,1,4,0,0,9,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",0,1,0,1,2,1,14,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",2,0,0,1,2,1,4,2,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,4,0,0,0,0,1,6,0,0,11,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,        return bool.booleanValue() ? trueString : falseString;,4,0,0,1,2,1,4,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",2,1,0,1,2,1,4,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,        return bool ? trueString : falseString;,6,0,0,0,0,1,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,2,0,3,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,12,2,0,14,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,                if (trueCount < 1) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,2,1,0,0,0,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,2,0,0,1,2,0,12,0,0,15,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");",10,4,0,1,2,0,12,2,0,31,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,8,0,0,1,2,1,4,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,5,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,2,0,0,1,3,0,0,0,0,2,24,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,4,1,0,1,2,0,4,0,0,10,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,6,1,0,1,3,0,0,2,0,9,18,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,            } else if (ch < 32) {,2,1,0,1,4,0,0,0,0,3,21,9,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,13,0.33333,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",6,3,1,3,6,0,8,0,0,22,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,4,0,0,1,2,0,10,4,0,18,39,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",2,1,0,1,2,0,6,0,0,10,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,8,1,0,1,3,0,6,0,0,15,36,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,6,0,0,1,2,0,4,0,0,10,46,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,4,0,0,11,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,6,3,0,2,5,0,0,0,0,11,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,12,3,0,2,5,3,0,4,0,24,40,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,6,2,0,1,2,0,0,0,0,9,33,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,2,1,0,2,5,0,4,0,0,7,29,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,        boolean roundUp = false;,2,0,0,0,0,0,0,0,0,3,24,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,                    if (round && roundUp) {,2,1,0,1,3,0,0,0,0,3,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,2,0,0,1,3,0,6,0,0,8,16,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,10,3,0,2,4,0,0,0,0,14,37,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,4,1,0,1,3,0,0,2,0,7,18,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,0,1,0,2,5,0,4,0,0,6,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,6,5,0,1,3,0,0,0,0,11,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,4,0,0,1,2,0,10,2,0,16,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,6,2,0,0,0,1,0,0,0,9,38,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",0,0,0,1,2,0,6,0,0,6,57,5,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,4,0,0,5,6,5,0.07692,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",2,1,0,1,2,1,4,0,0,8,40,3,0.06667,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,6,2,0,15,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,8,2,0,19,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,6,2,0,14,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,6,3,0,1,2,6,12,2,0,31,82,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,2,0,1,2,3,6,2,0,19,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,2,0,0,0,0,3,0,2,0,7,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",4,1,0,1,2,3,2,2,0,13,82,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",6,0,0,1,2,3,2,2,0,15,104,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,6,2,0,16,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,4,0,0,0,0,6,4,4,0,19,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,8,0,0,1,2,6,10,6,0,30,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,4,0,0,1,2,3,2,0,0,9,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",2,0,0,1,2,3,2,0,0,8,60,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",2,0,0,1,2,3,6,0,0,12,62,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",2,1,0,2,4,3,4,0,0,12,89,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",2,0,1,1,2,3,8,0,0,19,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");",2,0,0,1,2,3,2,0,0,8,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");",2,0,0,1,2,3,2,0,0,8,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",2,0,0,1,2,3,2,0,0,8,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,2,0,0,0,0,3,0,0,0,5,40,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",8,1,0,1,2,3,2,0,0,17,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,10,4,0,22,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",4,0,0,1,2,3,4,0,0,13,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,4,1,0,0,0,1,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",4,0,0,1,2,0,10,4,0,18,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,0,4,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,4,1,0,2,5,0,4,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",6,1,0,1,2,0,10,2,0,20,49,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",4,1,0,0,0,0,4,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,2,0,0,1,4,0,4,2,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,4,3,0,1,3,0,0,0,0,9,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,6,0,0,6,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,        if (OS_NAME == null || OS_VERSION == null) {,4,3,0,1,3,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,4,0,0,1,4,0,0,6,0,10,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,6,2,0,0,0,1,0,2,0,11,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,6,1,0,2,4,1,6,0,0,14,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,2,1,0,2,4,1,6,2,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,2,0,1,2,4,1,6,2,0,12,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,2,1,0,2,4,1,6,4,0,14,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,    },4,0,0,0,1,0,0,2,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,2,0,0,2,4,0,8,2,0,13,56,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,    },4,0,0,0,1,3,2,4,0,14,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,6,5,0,1,3,0,0,2,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,        char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,        char ch1 = str.charAt(1);,12,1,0,1,2,0,4,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",2,0,0,1,2,1,0,2,0,5,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,8,0,0,10,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,1,0,1,2,0,8,6,0,27,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,            if (len == 5) {,2,1,0,1,3,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,12,2,0,14,78,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,2,0,0,1,2,0,0,4,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",4,1,0,3,6,0,8,2,0,16,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,10,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,        return cAvailableLocaleList;,2,1,0,0,0,1,0,2,0,7,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,0,4,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,2,0,0,2,4,0,2,2,0,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,6,3,0,1,2,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,6,0,0,6,44,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,2,0,0,2,4,0,6,4,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,        if (langs == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,0,0,0,1,2,0,12,0,0,13,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,0,8,0,0,9,46,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,6,0,0,0,0,0,0,0,0,7,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",0,0,0,1,2,0,8,0,0,8,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,2,0,0,2,4,0,6,4,0,12,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,4,0,0,1,2,0,4,2,0,12,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,14,2,0,2,5,0,4,0,0,22,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,            } else {,6,0,0,0,2,0,0,0,0,6,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,10,0,0,0,0,1,0,4,0,14,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,8,0,0,10,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,4,2,0,2,4,0,8,0,0,14,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,6,1,0,1,2,0,4,0,0,12,30,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,14,0,0,18,55,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,2,0,0,1,0,0,0,0,6,15,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,4,2,0,1,3,3,6,4,0,20,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,10,2,0,2,5,0,8,0,0,23,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,2,1,0,2,5,0,6,0,0,10,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,10,0,0,18,50,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,1,0,1,3,3,4,2,0,22,34,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,4,1,0,2,5,0,6,0,0,11,31,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,8,2,0,2,5,0,4,0,0,15,40,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,8,1,0,1,3,3,2,2,0,18,16,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,2,0,1,2,0,10,0,0,18,29,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",2,1,0,1,2,0,0,0,0,3,38,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,4,0,0,0,0,4,4,2,0,13,9,1,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,12,2,0,1,2,0,0,0,0,15,47,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,1,0,1,3,0,14,0,0,17,40,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,6,0,0,1,2,0,0,0,0,6,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,2,0,0,1,3,0,0,0,0,2,18,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,6,0,0,16,34,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,6,2,0,0,0,1,0,0,0,9,9,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,4,1,0,1,3,3,0,0,0,8,20,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,3,0,4,0,9,28,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,4,1,0,1,3,3,0,0,0,8,17,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",6,2,0,1,2,0,6,0,0,16,36,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",8,1,0,1,2,0,4,0,0,13,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,4,0,0,0,0,0,10,0,0,15,12,3,0.30769,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,4,0,0,6,36,14,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,0,0,2,4,0,8,0,0,14,56,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,3,4,2,0,12,33,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,2,0,0,2,4,0,4,4,0,10,50,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,1,39,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",6,1,0,1,2,3,4,0,0,15,35,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",4,1,0,1,2,0,6,2,0,13,47,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,2,0,0,2,5,0,0,0,0,2,31,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,0,0,0,4,24,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,4,0,0,0,2,1,0,2,0,7,8,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",2,1,0,2,4,1,12,0,0,16,81,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,2,0,0,0,0,0,0,0,9,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,4,0,0,7,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,2,0,0,0,0,0,0,0,0,3,9,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,8,5,0,0,0,0,4,0,0,19,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,2,0,0,0,0,0,0,0,0,3,10,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,4,1,0,0,0,0,0,0,0,6,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,6,2,0,1,3,0,0,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,3,0,0,0,5,30,2,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,2,0,0,2,4,0,4,2,0,8,37,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,1,0,1,2,0,10,2,0,15,46,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,10,1,0,2,4,0,8,0,0,19,83,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,10,1,0,2,4,0,8,0,0,19,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,10,1,0,2,4,0,8,0,0,19,68,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,10,1,0,2,4,0,8,0,0,19,76,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,14,1,0,2,4,0,8,0,0,24,77,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,12,2,0,2,4,0,8,2,0,26,65,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,1,0,2,4,0,8,2,0,25,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,4,1,0,1,3,0,0,0,0,5,20,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",8,0,0,1,2,3,8,4,0,24,66,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",8,0,0,1,2,3,8,4,0,24,63,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",6,0,0,1,2,0,8,0,0,15,60,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",2,0,0,2,5,0,0,2,0,5,47,10,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,2,0,13,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",2,1,0,1,2,0,6,0,0,10,34,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,2,0,0,1,2,0,6,0,0,8,30,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,4,0,0,1,2,3,6,4,0,17,34,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,6,0,0,6,9,13,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,2,0,0,0,0,0,0,0,0,4,26,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,6,0,0,1,3,0,4,0,0,11,19,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,0,0,1,2,1,10,0,0,13,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,2,0,0,0,0,0,0,0,0,3,24,5,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,4,1,1,3,7,0,6,0,0,17,28,3,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,2,0,0,0,0,0,0,0,0,2,15,7,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,2,0,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,18,1,1,3,6,3,12,0,0,39,45,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,702,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,706,                roundUp = offset > ((max - min) / 2);,8,3,0,2,4,0,0,0,0,12,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",2,0,0,1,2,3,4,2,0,12,73,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,10,2,0,1,2,1,4,0,0,17,44,3,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,6,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,2,1,0,2,5,3,8,2,0,18,27,1,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,6,0,9,54,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,0,4,0,0,10,68,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,4,1,0,1,3,0,4,0,0,10,18,3,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",2,0,0,2,4,0,12,0,0,15,62,8,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,4,0,0,1,2,4,10,2,0,21,27,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,8,2,1,0,0,1,12,0,0,26,20,8,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,308,                if(!wasWhite) {,2,0,0,1,3,0,4,2,0,8,15,5,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,2,0,0,0,0,0,0,0,0,4,15,10,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,            wasWhite= false;,2,0,0,0,0,0,0,0,0,4,16,6,0.0381,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,307,            if(Character.isWhitespace(c)) {,0,0,0,2,5,0,6,0,0,6,31,7,0.03738,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,8,0,0,15,27,3,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,4,1,1,2,4,0,0,0,0,7,32,3,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,2,0,0,2,4,0,4,4,0,10,35,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,2,0,0,1,2,1,6,4,0,12,23,3,0.0625,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,813,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,2,0,0,1,2,0,4,2,0,8,34,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,83,"        int len = Character.codePointCount(input, 0, input.length());",2,0,0,2,4,0,10,0,0,12,61,5,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,102,            pos++;,2,0,0,0,0,0,0,0,0,3,6,6,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,94,                    if (pos < len - 2) {,4,2,0,1,3,0,0,0,0,6,20,10,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,97,                        pos++;,2,0,0,0,0,0,0,0,0,3,6,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,100,                pos--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,4,2,0,1,3,0,0,0,0,6,20,3,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,496,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",6,0,0,1,2,0,4,0,0,11,49,9,0.02222,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,6,7,0,3,7,0,10,0,0,25,88,4,0.44444,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,            while(input.charAt(end) != ';') ,0,1,0,2,4,0,6,0,0,8,31,6,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,80,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,8,5,0,2,4,1,4,0,0,17,47,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,0,0,0,7,14,0,0,0,0,21,133,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,6,3,0,1,3,0,10,0,0,19,23,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,6,0,0,1,2,0,0,6,0,12,46,3,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,4,1,0,1,3,0,6,0,0,11,22,1,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,4,0,0,14,37,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,3,0,0,0,1,4,0,0,13,13,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,20,7,0,1,3,0,0,0,0,27,111,10,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,0,6,0,0,7,34,6,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,171,    },6,3,0,0,1,0,8,2,0,19,1,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1457,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,2,0,0,1,3,3,0,12,0,17,26,2,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,4,2,0,13,36,1,0.14286,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,2,1,1,3,6,0,2,0,0,14,33,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();",0,1,0,3,6,1,12,4,0,17,88,5,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,8,0,0,4,8,1,8,4,0,20,35,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,6,0,0,10,18,3,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,0,3,6,1,6,2,0,14,60,1,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,2,0,0,2,4,4,6,4,0,15,37,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,0,12,2,0,18,54,3,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,203,        return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);",6,1,0,1,2,0,10,0,0,19,39,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);",0,0,0,1,2,0,6,0,0,7,38,5,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,10,2,0,2,4,0,4,0,0,19,37,4,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,2,0,0,0,0,1,0,0,0,2,15,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,2,0,1,3,0,0,0,0,6,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,8,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,4,1,0,1,3,0,4,2,0,11,19,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",6,3,1,3,6,0,8,0,0,22,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",2,1,0,1,2,0,0,0,0,3,38,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,16,2,0,1,3,0,0,0,0,19,51,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",8,0,0,1,2,3,8,4,0,24,66,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",8,0,0,1,2,3,8,4,0,24,63,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",6,0,0,1,2,0,8,0,0,15,60,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",2,1,0,1,2,0,6,0,0,10,34,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,2,0,0,1,2,0,6,0,0,8,30,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,4,0,0,1,2,3,6,4,0,17,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,10,1,0,0,0,0,0,0,0,14,11,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,8,2,0,0,0,0,0,0,0,10,36,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,438,"            end.add( field, newdiff );",12,7,0,1,2,0,28,2,0,50,26,3,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,204,        if (iToString == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,2,0,0,2,4,0,6,2,0,10,64,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",8,2,0,3,6,0,4,0,0,18,65,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,208,        return iToString;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,2,0,0,0,0,0,0,0,0,3,24,5,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,4,1,1,3,7,0,6,0,0,17,28,3,0.25,1,1,-1
