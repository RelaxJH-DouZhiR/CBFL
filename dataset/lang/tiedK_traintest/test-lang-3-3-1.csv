dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,347,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,352,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,4,0,0,3,6,6,6,4,0,21,68,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,355,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,364,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,372,        String[][] newarray = new String[array.length][2];,8,0,0,4,8,0,0,4,0,12,50,3,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,373,        for(int i = 0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,374,            newarray[i][0] = array[i][1];,0,0,0,4,8,0,0,0,0,12,29,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,375,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,0,0,0,9,29,6,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,377,        return newarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,28,public class EntityArrays {,2,0,0,0,1,1,0,0,0,3,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,130,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,134,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },4,0,0,5,10,3,10,2,0,19,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,332,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,1,0,5,10,1,6,0,0,11,96,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,335,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,343,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,346,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,351,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,354,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },4,0,0,5,10,3,8,4,0,18,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,363,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,6,0,0,1,3,3,2,4,0,16,29,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,10,0,0,0,0,0,4,0,0,15,15,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },2,2,1,0,1,0,4,4,0,21,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,0,0,0,1,2,1,4,0,0,4,23,6,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",2,0,0,2,4,0,14,0,0,16,39,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,6,0,0,7,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,0,0,0,1,3,0,0,0,0,4,18,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1357,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,196,"        return getInstance(pattern, null, locale);",0,0,0,1,2,1,0,0,0,4,42,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",2,0,0,1,2,0,4,0,0,6,84,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,689,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,0,0,0,2,5,0,0,0,0,7,54,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,0,0,0,0,0,0,6,0,0,6,23,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,8,0,0,8,45,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,0,0,0,3,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,4,2,0,12,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,2,8,4,0,23,65,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,4,0,0,0,0,3,0,4,0,10,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,2,4,0,3,7,0,10,0,0,18,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,1,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,0,0,2,0,4,71,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",6,1,0,1,2,6,4,0,0,20,68,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",0,0,0,2,4,0,0,0,0,6,97,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",0,0,0,1,2,0,0,0,0,3,64,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,3,6,2,0,17,73,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,13,65,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,2,0,0,0,3,4,0,0,23,128,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,6,0,0,1,2,3,0,4,0,13,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,0,0,1,2,0,4,4,0,10,98,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,0,0,0,3,98,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,4,0,0,12,91,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",10,4,0,1,2,3,12,0,0,30,96,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,95,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,1,2,1,0,0,0,4,63,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1410,        if (JAVA_VERSION != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,8,0,0,16,49,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,14,0,0,17,33,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1413,                if (ch >= '0' && ch <= '9') {,0,0,0,1,3,0,0,0,0,4,29,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1414,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,0,0,0,4,33,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,0,0,0,4,69,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1462,            return System.getProperty(property);,0,0,0,1,2,1,0,0,0,4,36,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1577,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1616,        if (osName == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1619,        return osName.startsWith(osNamePrefix);,2,0,0,1,2,4,6,2,0,15,39,0,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1716,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",0,0,0,3,6,0,0,0,0,9,54,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1721,        int j = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1723,            String s = strings[i];,0,0,0,1,2,0,4,0,0,5,22,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1724,            if (s.length() > 0) {,0,0,0,2,5,0,0,0,0,7,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,8,0,1,2,4,0,14,4,0,31,32,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1728,        return ints;,0,0,0,0,0,1,0,0,0,1,12,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,2,0,0,1,3,0,0,2,0,4,55,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1755,        if (javaVersions.length == 1) {,6,1,0,1,3,2,0,4,0,13,31,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1758,        StringBuilder builder = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1760,        builder.append('.');,0,0,0,1,2,0,4,0,0,5,20,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1761,        for (int i = 1; i < javaVersions.length; i++) {,0,0,0,1,3,0,0,0,0,4,47,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1765,            return Float.parseFloat(builder.toString());,2,1,0,2,4,1,8,0,0,11,44,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1795,        int intVersion = 0;,2,0,0,0,0,0,0,2,0,5,19,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,2,0,0,0,0,2,10,0,0,14,30,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,10,1,1,1,2,6,2,4,0,28,35,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,2,0,0,1,3,0,0,2,0,4,15,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1801,            intVersion += javaVersions[1] * 10;,0,0,0,1,2,0,0,0,0,3,35,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1803,        if (len >= 3) {,0,0,0,1,3,0,0,0,0,4,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1804,            intVersion += javaVersions[2];,0,0,0,1,2,0,0,0,0,3,30,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,2,18,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,0,0,0,4,22,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,0,0,0,2,4,0,0,0,0,6,43,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,0,0,0,1,2,0,0,0,0,3,38,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,0,0,0,3,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,0,0,0,1,2,0,0,0,0,3,30,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,0,0,0,1,2,0,0,0,0,3,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,2,0,2,5,0,6,0,0,12,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,1,0,1,2,0,10,0,0,19,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,1,0,0,1,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,8,1,1,1,3,0,0,6,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,0,0,0,0,0,1,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,0,0,0,2,6,0,0,0,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,0,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,1,0,0,0,1,0,2,0,10,25,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,2,0,0,0,0,1,8,0,0,11,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,2,1,0,1,3,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,2,0,0,1,2,0,0,0,0,2,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,1,2,0,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,4,0,0,1,2,1,0,4,0,8,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,6,2,0,1,3,0,0,0,0,8,21,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,0,0,0,2,4,0,0,0,0,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,2,0,0,1,3,3,2,2,0,10,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,0,0,0,2,5,0,6,0,0,6,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,336,"                    getAllInterfaces(i, interfacesFound);",0,0,0,1,2,0,6,0,0,6,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,2,0,0,1,2,0,8,0,0,12,26,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,342,     },0,0,0,0,1,0,4,0,0,5,1,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,362,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,4,2,0,2,4,0,8,0,0,15,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,363,        for (String className : classNames) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,0,0,0,2,4,0,10,0,0,10,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,368,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,2,1,0,1,2,0,4,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,6,5,0,0,0,1,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,387,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,0,0,0,2,4,0,10,0,0,10,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,4,0,0,1,3,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,396,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,4,1,0,0,0,1,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,439,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,2,4,1,4,0,0,5,86,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,2,5,0,4,0,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,476,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,0,0,0,1,3,0,12,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,0,0,0,0,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,8,1,0,1,3,0,4,0,0,14,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,482,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",2,0,0,4,9,3,2,0,0,8,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,2,2,0,0,0,2,8,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,2,4,0,0,0,1,12,0,0,18,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,524,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(1.5f));",2,0,0,2,4,4,14,2,0,21,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,12,0,0,1,3,0,0,0,0,12,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,556,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,4,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,4,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,2,0,1,3,7,0,0,0,0,4,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,2,0,1,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,567,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,570,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,2,1,0,3,7,0,10,0,0,14,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,571,                cls = wrapperToPrimitive(cls);,6,1,0,1,2,0,0,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,0,0,0,0,0,1,6,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,577,        if (cls.equals(toClass)) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,578,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,580,        if (cls.isPrimitive()) {,2,2,0,2,5,0,0,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,2,0,2,5,0,14,0,0,17,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,584,            if (Integer.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),4,2,0,1,2,1,8,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,594,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,0,4,0,0,6,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,4,0,0,1,2,1,4,0,0,8,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,0,0,0,2,5,0,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,35,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,609,                return Integer.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,9,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,33,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,622,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,624,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,6,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,2,2,0,2,5,0,4,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,642,            convertedClass = primitiveWrapperMap.get(cls);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,4,0,0,0,0,1,0,2,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,658,        if (classes == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,659,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,662,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,4,0,0,0,0,1,22,0,0,26,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,10,0,0,23,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,8,3,1,3,6,0,2,0,0,23,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,690,        return wrapperPrimitiveMap.get(cls);,4,0,0,1,2,4,14,0,0,26,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,2,1,0,1,3,0,2,0,0,7,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,709,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,8,1,0,1,3,0,0,0,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,718,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,1,3,6,0,2,0,0,11,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,6,3,0,0,0,1,0,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,734,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,736,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,6,3,0,2,4,1,16,0,0,26,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,0,6,0,0,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",2,1,0,1,3,0,6,2,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",6,3,0,2,4,0,12,0,0,22,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,761,        return clazz;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,776,"        return getClass(classLoader, className, true);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,790,"        return getClass(className, true);",0,0,0,1,2,1,8,0,0,10,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,805,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,2,0,0,2,4,0,6,2,0,10,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,0,0,0,1,2,0,0,0,0,3,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,807,"        return getClass(loader, className, initialize );",0,0,0,1,2,1,8,0,0,8,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,836,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",2,0,0,1,2,0,8,2,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,2,0,0,1,2,0,0,8,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,8,0,0,8,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,4,1,0,2,4,0,18,0,0,23,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,4,0,0,1,3,0,0,2,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,0,8,0,0,9,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,847,                continue;,4,1,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,851,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",2,0,0,1,2,0,8,0,0,11,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,854,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,853,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,856,                return candidateMethod;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,860,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,0,0,2,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,874,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,0,0,2,0,4,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,3,8,0,4,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",4,1,0,3,7,0,4,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,878,"                className = className.substring(0, className.length() - 2);",2,1,1,2,4,0,12,0,0,25,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,4,0,0,5,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,6,1,0,1,2,0,6,2,0,15,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,10,1,0,1,3,0,2,0,0,14,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,6,0,0,6,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,885,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,3,6,0,10,0,0,12,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,10,3,0,1,4,0,4,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,1,8,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,4,0,1,3,6,0,2,2,0,17,33,1,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,8,4,0,3,6,2,20,2,0,35,58,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,943,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,10,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,956,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,8,0,0,8,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,4,1,0,0,0,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,0,0,0,0,0,1,8,0,0,8,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,987,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,6,0,0,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1001,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,8,0,0,8,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,2,0,0,0,0,0,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1027,                dim++;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,6,1,0,1,2,0,4,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1030,            if (dim < 1) {,2,1,0,1,3,0,14,0,0,18,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,6,0,0,0,0,1,0,0,0,6,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,4,1,0,0,1,0,4,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1040,                    if (className.length() > 0) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",2,0,0,2,4,0,8,0,0,11,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,2,4,0,4,0,0,5,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1048,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,4,0,0,4,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,144,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",4,1,0,2,4,1,4,0,0,10,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,178,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,225,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,6,1,0,2,6,0,8,2,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,235,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,236,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",4,2,1,0,1,0,0,2,0,14,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,241,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,242,            } else {,2,0,0,0,2,0,0,0,0,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,293,        return items;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,312,            return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,4,1,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,330,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,6,0,0,8,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,375,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,378,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,391,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,6,1,0,0,0,1,0,0,0,7,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,410,        return array.clone();,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,440,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,442,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,2,0,1,1,3,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,6,0,0,0,0,1,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,462,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,463,            return EMPTY_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,465,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,6,1,0,1,3,0,8,0,0,16,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,486,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,502,        if (array == null) {,12,3,0,1,3,0,14,0,0,30,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,503,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,2,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,12,3,0,1,3,0,0,0,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,6,0,0,0,0,1,0,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,524,        if (array == null) {,6,3,0,1,3,0,0,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,526,        } else if (array.length == 0) {,10,2,0,1,4,0,0,0,0,12,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,2,0,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,546,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,548,            return EMPTY_SHORT_ARRAY;,8,1,0,0,0,1,0,0,0,10,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,4,1,1,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,567,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,569,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,6,2,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,587,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,588,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,589,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,4,0,1,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,609,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,632,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,651,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,653,            return EMPTY_BOOLEAN_ARRAY;,6,4,0,0,0,1,8,0,0,20,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,655,        return array;,10,2,1,0,0,1,0,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,4,0,1,0,0,1,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,692,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,714,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,715,        }else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,4,0,0,0,0,1,26,2,0,32,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,718,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,734,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,4,3,0,0,0,1,4,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,755,        if (array == null) {,2,0,1,1,3,0,0,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,756,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,758,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,776,        if (array == null) {,4,1,0,1,3,0,6,0,0,14,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,778,        } else if (array.length == 0) {,8,6,0,1,4,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,781,        return array;,6,1,0,0,0,1,10,0,0,18,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,802,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,8,1,0,0,0,1,0,0,0,11,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,820,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,860,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,4,0,0,1,3,0,0,2,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",2,0,0,4,8,1,6,4,0,13,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,4,0,0,0,0,1,0,4,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,875,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,901,        if (startIndexInclusive < 0) {,6,1,0,1,3,1,0,0,0,8,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,902,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,2,0,10,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,908,        if (newSize <= 0) {,4,1,0,1,3,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,909,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,12,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,914,        return subarray;,2,0,0,0,0,1,4,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,937,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,943,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,944,            endIndexExclusive = array.length;,8,1,0,0,0,0,2,0,0,12,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,946,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,948,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,951,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,4,1,0,1,3,0,10,0,0,15,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,979,        if (startIndexInclusive < 0) {,6,4,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,980,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,983,            endIndexExclusive = array.length;,8,0,0,0,0,0,0,0,0,9,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,985,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,986,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,12,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,4,1,0,1,3,0,4,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1018,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1019,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,4,1,0,1,3,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,4,0,0,0,0,1,8,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,24,0,0,24,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1055,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1058,            startIndexInclusive = 0;,10,0,1,0,0,0,0,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1060,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1061,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1063,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1064,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,4,2,0,0,0,1,8,0,0,14,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1070,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1093,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1100,            endIndexExclusive = array.length;,12,0,0,0,0,0,4,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,6,0,0,1,3,0,0,0,0,7,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,6,0,0,0,0,1,4,10,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,2,0,1,2,4,0,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1132,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,6,1,0,0,0,0,0,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1138,        if (endIndexExclusive > array.length) {,8,1,1,1,3,0,0,0,0,14,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1141,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1146,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1148,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1175,            startIndexInclusive = 0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1178,            endIndexExclusive = array.length;,6,0,0,0,0,0,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1187,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,14,6,0,1,3,0,0,4,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,4,1,1,0,0,1,10,0,0,20,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1209,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1225,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,18,7,0,1,3,0,4,2,0,32,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1243,                return false;,4,1,0,0,0,1,6,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1245,        return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,4,0,0,0,0,2,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1279,                return false;,4,1,1,0,0,1,14,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1281,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,20,8,0,1,3,0,0,0,0,29,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1315,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1333,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1335,        return true;,4,2,0,0,0,1,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1351,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,0,0,0,0,0,1,6,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1381,        return Array.getLength(array);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1394,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",16,2,0,1,2,0,0,2,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,4,1,0,1,3,1,0,8,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1413,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1418,        while (j > i) {,6,1,0,1,3,0,0,0,0,7,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1421,            array[i] = tmp;,10,2,0,1,2,0,0,0,0,13,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,2,0,0,0,0,0,0,0,0,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },6,1,0,0,1,0,2,0,0,9,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,10,1,0,1,3,0,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1439,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1442,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1443,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,4,0,0,0,0,0,0,0,0,5,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1448,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1459,            return;,4,0,0,0,0,1,0,0,0,5,7,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,2,0,0,0,0,0,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1464,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1465,            tmp = array[j];,2,0,1,1,2,0,2,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1466,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1467,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1468,            j--;,4,0,0,0,0,0,2,2,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },8,1,0,0,1,0,0,0,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1482,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1485,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,6,1,0,1,3,0,0,0,0,8,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1488,            tmp = array[j];,6,3,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1489,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,6,1,0,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,6,0,0,0,0,0,10,2,0,19,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1494,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,0,1,0,1,3,0,4,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1505,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1507,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,8,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1512,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },6,1,0,0,1,0,0,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1528,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,2,0,1,2,4,0,0,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1536,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1550,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,2,0,0,0,0,1,0,0,0,2,7,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1553,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,6,1,0,1,3,0,6,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1558,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1559,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1560,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1561,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1573,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1574,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1580,            tmp = array[j];,4,0,1,1,2,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1581,            array[j] = array[i];,6,1,1,2,4,0,10,0,0,26,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1583,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,2,0,0,0,0,0,0,0,0,2,4,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,26,7,0,1,3,0,8,0,0,44,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1597,            return;,4,0,0,0,0,1,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1599,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1600,        int j = array.length - 1;,4,1,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1603,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1604,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1605,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1606,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1609,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,4,0,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1651,        if (objectToFind == null) {,4,1,0,1,3,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1652,            for (int i = startIndex; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1658,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1660,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1697,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1699,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,4,0,1,0,0,1,0,2,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,14,1,1,1,4,0,0,2,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1702,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1704,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,10,2,1,1,3,0,0,0,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,4,1,1,2,5,0,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,12,2,0,1,3,0,0,0,0,15,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1712,                if (objectToFind.equals(array[i])) {,4,1,1,3,7,0,4,0,0,13,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1713,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1717,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1764,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1768,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1770,        for (int i = startIndex; i < array.length; i++) {,18,1,0,1,3,0,0,4,0,24,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1771,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1807,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1808,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1810,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1811,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,14,2,0,1,4,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,6,1,0,0,0,1,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1871,            startIndex = 0;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1873,        for (int i = startIndex; i < array.length; i++) {,2,0,1,1,3,1,0,0,0,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,6,2,1,2,5,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,2,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1911,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1913,        if (startIndex < 0) {,8,4,0,1,3,0,4,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1914,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,8,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1918,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,4,0,0,0,0,1,6,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1970,        if (array == null) {,2,1,1,1,3,0,4,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1973,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1974,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1977,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",8,0,0,1,2,1,24,0,0,33,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2016,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2018,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2026,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2056,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2076,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2078,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2083,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,8,1,0,0,0,1,0,0,0,10,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,8,1,1,0,0,1,0,2,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2128,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2130,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2133,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,4,0,0,1,3,0,0,2,0,6,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,0,0,1,1,3,0,4,0,0,13,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,4,2,1,2,5,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,4,0,0,0,0,1,0,0,0,4,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2192,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2229,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,10,1,1,1,3,0,0,0,0,17,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2233,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,1,0,1,2,1,0,0,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,10,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2283,"        return indexOf(array, valueToFind, 0, tolerance);",4,0,0,1,2,1,8,0,0,13,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2301,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2304,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2305,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,6,3,1,2,5,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2309,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2312,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2340,        double max = valueToFind + tolerance;,6,1,1,0,0,0,2,0,0,18,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,4,0,0,21,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,2,0,0,0,0,1,0,0,0,4,9,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",10,0,0,1,2,2,8,0,0,19,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2395,        if (ArrayUtils.isEmpty(array)) {,2,0,1,2,5,1,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2396,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2398,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2400,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2401,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2403,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2405,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2408,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,6,1,0,2,5,0,0,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,8,2,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2437,        double min = valueToFind - tolerance;,2,0,0,0,0,0,0,2,0,5,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,2,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2440,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,0,0,0,15,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,1,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,1,0,1,2,1,10,0,0,11,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,2,0,1,1,3,0,6,2,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2514,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2519,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",6,1,0,1,2,1,16,0,0,23,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,6,3,0,1,3,0,0,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2555,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2556,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,8,1,0,0,0,0,0,2,0,12,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2560,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2564,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",6,1,0,1,2,1,0,0,0,7,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2616,            startIndex = 0;,0,0,0,0,0,0,0,2,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2618,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2620,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2623,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,4,2,0,8,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,0,0,1,0,0,1,4,0,0,13,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2662,            startIndex = array.length - 1;,10,1,0,0,0,0,10,0,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2664,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,4,0,0,4,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2700,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,6,0,0,2,4,1,6,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2707,            result[i] = array[i].charValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2709,        return result;,6,2,0,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2727,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2728,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2729,            Character b = array[i];,2,0,1,1,2,0,0,2,0,8,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,4,1,1,3,6,0,4,0,0,15,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,10,3,0,2,4,1,0,4,0,18,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2750,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,2,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2769,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2775,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,0,0,0,1,4,0,0,2,0,3,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2793,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,2,1,0,2,4,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2798,            result[i] = (b == null ? valueForNull : b.longValue());,6,2,1,3,6,0,4,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,4,1,0,2,4,0,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2821,        return result;,2,0,1,0,0,1,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2841,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2842,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2843,            result[i] = array[i].intValue();,2,0,1,3,6,0,2,0,0,13,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2845,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2858,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2860,        } else if (array.length == 0) {,6,1,0,1,4,0,0,2,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,2,1,0,0,0,1,8,0,0,11,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2865,            Integer b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,0,0,0,3,6,0,0,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,2,0,0,0,0,1,8,0,0,11,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2880,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,0,0,0,1,4,0,6,0,0,6,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,4,0,1,0,0,1,0,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,16,2,0,1,3,0,8,0,0,27,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2904,        if (array == null) {,8,1,0,1,3,0,0,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2906,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2909,        final short[] result = new short[array.length];,6,0,0,2,4,1,10,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2910,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2911,            result[i] = array[i].shortValue();,0,0,0,3,6,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,8,0,0,0,0,1,8,0,0,16,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2926,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2927,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,4,1,1,1,4,0,0,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,0,0,0,2,4,0,0,0,0,1,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,0,0,0,1,2,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2936,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2948,        if (array == null) {,4,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2950,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2955,            result[i] = Short.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2957,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2972,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,2,2,0,0,0,1,10,0,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,8,0,0,2,4,1,4,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2978,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2979,            result[i] = array[i].byteValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2994,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2995,            return null;,10,1,0,0,0,1,6,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2997,            return EMPTY_BYTE_ARRAY;,8,1,0,0,0,1,0,0,0,10,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3000,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,4,0,0,1,2,0,6,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3021,        final Byte[] result = new Byte[array.length];,10,1,0,2,4,1,0,4,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3023,            result[i] = Byte.valueOf(array[i]);,6,1,1,3,6,0,8,0,0,27,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3025,        return result;,4,0,1,0,0,1,4,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,2,1,0,1,3,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,6,1,1,1,4,0,0,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,4,1,0,0,0,1,8,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3045,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3046,        for (int i = 0; i < array.length; i++) {,16,2,0,1,3,1,0,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,8,3,0,1,3,0,12,0,0,24,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,4,3,0,0,0,1,4,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3064,        } else if (array.length == 0) {,8,3,0,1,4,0,4,0,0,16,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3065,            return EMPTY_DOUBLE_ARRAY;,8,1,0,0,0,1,0,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,6,2,1,3,6,0,4,0,0,17,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,2,0,0,1,3,1,4,2,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3085,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3093,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3109,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3115,            result[i] = array[i].floatValue();,6,1,0,3,6,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3117,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3131,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3132,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3137,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,8,1,1,3,6,0,12,2,0,28,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3152,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3153,            return null;,2,1,0,0,0,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,6,0,0,2,4,1,0,4,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3161,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3182,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3183,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,6,3,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3200,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,6,3,0,2,4,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3204,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,2,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3205,            Boolean b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,4,1,1,3,6,0,4,0,0,14,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,2,0,0,0,0,1,4,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,14,2,1,1,4,0,28,0,0,48,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3225,        final Boolean[] result = new Boolean[array.length];,8,0,0,2,4,1,0,4,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3226,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,14,4,1,3,6,0,8,0,0,37,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3241,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3244,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3255,        if (array == null || array.length == 0) {,4,0,0,1,3,0,4,2,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3256,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3258,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3269,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3270,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3272,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3284,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3286,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,10,3,0,1,3,0,0,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3298,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3300,        return false;,0,0,0,0,0,1,0,2,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,10,9,0,1,3,0,22,0,0,43,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3312,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3314,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3325,        if (array == null || array.length == 0) {,10,4,1,1,3,0,2,0,0,21,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3328,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3339,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3340,            return true;,4,0,0,0,0,1,0,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3342,        return false;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,8,6,0,0,0,1,4,0,0,19,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,8,3,0,1,2,1,4,2,0,18,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3379,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,0,0,0,1,2,1,8,0,0,9,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,6,3,0,1,2,1,8,0,0,17,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,6,7,1,1,2,1,0,0,0,21,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3434,        return (array != null && array.length != 0);,10,3,0,1,2,1,6,2,0,21,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3445,        return (array != null && array.length != 0);,6,1,0,1,2,1,0,0,0,7,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3483,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,4,0,0,1,2,1,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,4,2,0,1,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,8,3,0,1,2,1,4,0,0,15,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",12,1,0,4,8,0,10,4,0,27,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",8,2,0,1,2,0,8,0,0,18,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3506,        },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3494,        } catch (ArrayStoreException ase) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,2,0,0,2,5,0,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",6,2,0,3,6,0,8,2,0,20,108,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3505,"            throw ase; // No, so rethrow original",0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3529,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3531,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,8,0,0,17,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,0,0,1,2,0,4,0,0,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3558,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,4,2,0,1,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,0,1,2,0,8,0,0,19,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3586,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3587,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3589,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,2,0,1,2,0,0,0,0,10,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3618,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3620,        short[] joinedArray = new short[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,4,0,0,1,2,1,4,0,0,9,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,4,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,12,2,0,2,4,0,0,0,0,14,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,2,1,0,1,4,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,20,2,0,2,4,0,0,0,0,23,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,8,2,0,20,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,2,0,0,1,2,1,10,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,4,0,0,2,4,0,0,0,0,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,1,1,2,0,12,0,0,24,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,10,1,1,0,0,1,0,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,2,0,0,1,2,0,4,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,0,0,2,0,4,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",8,0,0,4,8,1,8,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",6,0,0,4,8,0,4,0,0,10,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,10,4,1,0,0,1,8,0,0,32,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",2,0,0,4,8,0,4,0,0,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,2,0,0,0,0,1,0,0,0,3,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,6,0,0,1,3,0,0,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",4,1,0,3,6,0,10,2,0,17,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,2,0,0,2,4,0,6,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,14,3,0,1,4,1,0,0,0,18,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",12,1,0,4,8,1,10,4,0,28,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0,0,0,4,8,1,0,0,0,13,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",4,0,0,4,8,1,12,0,0,16,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",6,1,0,4,8,1,12,0,0,19,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",12,1,0,4,8,1,12,0,0,26,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",12,1,0,4,8,1,12,0,0,26,73,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",6,0,0,4,8,1,16,0,0,22,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",0,0,0,1,2,0,6,0,0,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",2,0,0,1,2,0,6,2,0,10,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",4,1,0,1,2,0,0,0,0,5,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,18,5,0,1,3,0,6,2,0,33,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,0,1,1,2,0,0,0,0,5,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",4,1,0,1,2,0,6,2,0,13,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,1,2,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",10,2,0,1,2,0,10,0,0,23,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",4,0,0,4,8,1,8,4,0,16,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,8,2,0,1,3,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",6,3,1,1,2,1,20,0,0,35,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,2,0,1,1,2,1,0,0,0,7,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,2,0,1,1,2,2,4,0,0,9,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",10,1,0,1,2,0,6,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,2,1,0,1,2,1,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",14,2,0,1,2,0,12,4,0,34,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,16,2,0,1,2,1,4,0,0,24,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",0,3,0,1,2,0,16,0,0,21,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,16,0,0,16,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",6,1,0,1,2,0,0,2,0,11,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",2,1,0,1,2,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",6,4,0,1,2,0,26,0,0,37,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,2,0,0,1,2,4,6,4,0,15,50,1,135.2,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,1,2,1,0,0,0,4,50,4,112.66667,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,0,4,0,0,4,36,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,0,4,0,0,4,43,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,0,4,0,0,4,37,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },8,1,1,0,1,0,0,0,0,14,1,6,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,0,0,1,2,1,4,4,0,21,108,1,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,0,0,0,0,0,0,0,0,0,0,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,0,0,0,0,0,0,0,0,0,0,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,2,1,0,1,2,0,0,0,0,3,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,1,0,1,2,1,6,0,0,10,51,3,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",8,1,0,2,5,0,4,0,0,15,27,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,12,2,0,2,4,3,8,0,0,26,45,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,10,2,0,1,3,0,0,0,0,14,18,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,4,2,0,1,3,0,0,0,0,7,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,0,0,0,0,0,0,0,0,0,0,11,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,4,0,0,0,0,0,4,0,0,10,11,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,1,4,4,0,20,47,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,12,2,0,0,1,0,8,0,0,22,15,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,4,1,0,1,3,3,0,4,0,12,18,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,1,45,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,1,1,3,0,10,0,0,12,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,0,0,0,4,26,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,4,0,2,0,9,27,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,10,2,0,17,31,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,0,0,0,1,2,1,0,0,0,4,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,31,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,6,0,0,1,4,0,6,2,0,14,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,2,0,4,66,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,2,0,0,0,0,4,10,4,0,20,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,6,4,0,12,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,2,0,0,1,2,4,6,0,0,12,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,4,1,0,0,0,1,4,0,0,11,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,16,0,0,2,4,0,35,6,0,62,33,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,0,0,0,0,0,0,0,0,0,0,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,4,1,0,0,0,0,0,0,0,6,23,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,6,1,0,0,0,0,0,0,0,8,28,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,4,0,0,8,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,2,0,10,38,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,0,0,0,3,7,0,0,0,0,10,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,3,0,0,0,0,8,0,0,15,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,4,1,0,1,3,0,0,0,0,5,14,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,6,1,0,1,3,0,4,0,0,12,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,6,0,0,25,61,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,2,0,0,3,7,0,0,0,0,2,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,0,0,0,0,0,0,0,0,0,0,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,8,0,0,0,0,0,4,6,0,20,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,0,0,2,6,0,0,0,0,8,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,2,0,0,0,0,1,0,2,0,4,13,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,4,4,1,3,8,2,0,2,0,22,48,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,0,0,0,1,3,0,0,0,0,4,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,4,1,0,1,3,0,0,0,0,6,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,10,2,0,0,0,0,0,0,0,15,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,6,1,0,3,8,0,4,0,0,12,48,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,4,1,0,1,3,0,0,0,0,7,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,2,1,0,0,0,0,2,0,0,7,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,3,2,2,0,10,4,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,0,0,0,0,0,1,0,0,0,1,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',2,0,0,1,3,0,0,0,0,2,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,10,2,1,0,0,4,2,2,0,25,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,14,0,0,23,71,3,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,3,6,4,0,18,64,1,0.00319,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,3,0,4,0,11,65,1,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,0,2,0,9,58,1,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,8,3,0,2,4,3,0,0,0,15,61,1,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,12,0,0,12,58,7,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,8,2,0,12,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",2,0,0,3,6,0,6,2,0,10,88,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",2,1,1,3,6,0,4,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,12,0,0,0,0,1,0,2,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,8,5,0,1,3,0,8,0,0,21,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,8,1,0,1,3,3,0,4,0,16,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,2,0,0,0,0,0,0,2,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,2,0,0,1,3,2,0,2,0,6,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,3,6,1,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",2,0,0,4,8,0,8,4,0,14,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",4,0,0,1,2,0,12,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,470,            return null;,0,0,0,0,0,1,6,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,473,            startIndexInclusive = 0;,2,0,0,0,0,0,6,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,476,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,479,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,484,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,16,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,508,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,512,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,515,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,4,0,0,0,0,0,4,0,0,11,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,4,1,0,1,3,0,10,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,519,            return EMPTY_INT_ARRAY;,2,0,0,0,0,4,0,0,0,5,23,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,523,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,12,2,0,0,0,1,2,0,0,17,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,4,0,0,0,0,3,0,4,0,11,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,16,0,0,0,0,0,2,0,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,556,        int newSize = endIndexExclusive - startIndexInclusive;,2,1,0,0,0,0,0,0,0,3,54,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,6,0,0,1,3,0,4,0,0,14,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,562,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,1,1,2,0,0,4,0,8,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,592,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,596,        if (newSize <= 0) {,2,0,0,1,3,0,4,0,0,6,19,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,6,0,0,0,0,7,4,8,0,26,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,601,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,0,2,0,5,67,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,0,1,0,1,3,0,4,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,6,2,0,0,0,0,0,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,10,0,0,0,0,0,0,0,0,12,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,634,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,635,        if (newSize <= 0) {,10,1,0,1,3,0,4,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,636,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,639,        byte[] subarray = new byte[newSize];,6,1,1,2,4,0,20,0,0,29,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,641,        return subarray;,2,1,0,0,0,1,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,665,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,668,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,671,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,673,        int newSize = endIndexExclusive - startIndexInclusive;,10,1,0,0,0,0,0,0,0,12,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,675,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,679,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,704,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,6,3,0,2,4,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,718,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,743,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,745,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,746,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,8,0,0,0,0,0,0,0,0,9,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,752,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,753,            return EMPTY_BOOLEAN_ARRAY;,4,3,0,0,0,1,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,757,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,8,1,1,0,0,1,16,0,0,31,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,775,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,778,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,796,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,798,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,814,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,832,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,834,        return true;,2,3,0,0,0,1,8,0,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,7,0,1,3,0,0,0,0,17,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,852,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,865,        if ((array1 == null && array2 != null && array2.length > 0) ||,6,3,0,1,3,0,8,0,0,18,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,16,1,0,1,3,0,0,0,0,18,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,904,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,0,0,0,0,0,1,4,0,0,5,12,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,919,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,2,0,0,16,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,10,1,1,0,0,1,10,0,0,26,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,924,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,8,3,0,0,0,1,0,0,0,12,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,8,3,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,966,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,983,        if (array == null) {,8,1,0,1,3,3,0,4,0,16,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,10,2,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,989,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,990,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,991,            array[j] = array[i];,6,3,1,2,4,0,0,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,992,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,993,            j--;,2,0,0,0,0,0,4,0,0,8,4,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,996,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1007,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1009,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1013,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1014,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,8,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1019,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1029,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1030,            return;,2,1,0,0,0,1,0,0,0,3,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1033,        int j = array.length - 1;,2,1,0,0,0,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,14,2,0,1,3,1,0,4,0,21,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,2,0,0,0,0,0,6,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1040,            i++;,4,1,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1042,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1052,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1053,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1058,        while (j > i) {,6,3,0,1,3,0,4,0,0,14,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1059,            tmp = array[j];,4,0,0,1,2,0,0,4,0,8,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1060,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1061,            array[i] = tmp;,8,0,1,1,2,0,4,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1062,            j--;,4,0,0,0,0,0,6,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,6,1,0,0,0,0,14,2,0,24,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1065,    },2,0,0,0,1,0,8,0,0,11,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1075,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1076,            return;,0,0,0,0,0,1,10,0,0,10,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1078,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1079,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1081,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1082,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1084,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1088,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1098,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1099,            return;,2,0,0,0,0,1,12,0,0,14,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1106,            array[j] = array[i];,2,1,1,2,4,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1107,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1109,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },2,0,0,0,1,0,6,2,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,2,1,0,1,3,0,6,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1122,            return;,2,0,0,0,0,1,4,0,0,6,7,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1124,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1131,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1132,            i++;,6,1,0,0,0,0,0,0,0,8,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1134,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1144,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1148,        int j = array.length - 1;,8,2,0,0,0,0,0,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1150,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,4,0,1,1,2,0,0,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1152,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1153,            array[i] = tmp;,8,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,8,4,0,1,3,0,4,2,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1177,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1180,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1198,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1216,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1217,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,4,1,0,1,3,0,0,0,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,2,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,12,1,0,1,3,0,8,2,0,25,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1223,            for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,8,2,0,24,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1224,                if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1231,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1235,        return INDEX_NOT_FOUND;,6,0,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,1,0,1,2,1,10,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1268,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1270,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1271,            return INDEX_NOT_FOUND;,16,1,0,0,0,1,4,0,0,22,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,0,1,2,5,0,0,0,0,9,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1281,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,11,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1301,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1317,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,10,7,0,1,3,0,0,0,0,17,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1341,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1342,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,2,1,0,1,3,0,10,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,10,2,0,0,0,1,0,0,0,12,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1383,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1386,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,6,0,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1404,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1420,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1438,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1439,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1441,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,2,1,0,0,0,1,0,0,0,3,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1463,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1481,        if (array == null) {,2,1,0,1,3,0,4,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1484,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1485,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1486,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,4,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,8,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1491,                return i;,6,2,0,0,0,1,4,0,0,12,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1494,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1541,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,6,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1544,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,4,1,0,0,0,0,0,0,0,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1547,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1548,            if (valueToFind == array[i]) {,12,1,0,2,5,0,0,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1549,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1552,        return INDEX_NOT_FOUND;,8,2,0,0,0,1,0,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1566,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",6,0,0,1,2,1,6,0,0,13,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1584,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1587,        if (startIndex < 0) {,2,1,0,1,3,0,6,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1588,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,12,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,12,1,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,18,2,1,2,5,0,10,2,0,37,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1594,                return i;,2,0,1,0,0,1,0,0,0,11,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1597,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1610,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1627,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,12,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1654,                return i;,4,0,1,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1691,        if (array == null) {,2,0,0,1,3,0,0,2,0,4,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,6,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1697,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1699,        for (int i = startIndex; i >= 0; i--) {,12,1,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1700,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1704,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1718,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1734,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1755,        if (startIndex < 0) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,2,0,0,0,0,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,0,0,0,0,0,1,14,0,0,14,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,5,23,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1800,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1804,            if (valueToFind == array[i]) {,12,1,1,2,5,0,0,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1805,                return i;,2,0,0,0,0,1,0,2,0,5,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1837,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,6,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1854,"        return indexOf(array, valueToFind, 0, tolerance);",2,0,0,1,2,1,20,0,0,22,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1872,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,4,49,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1880,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1904,        if (ArrayUtils.isEmpty(array)) {,4,1,0,2,5,0,6,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1907,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,8,1,0,0,0,0,6,0,0,16,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1911,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1913,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1914,                return i;,2,1,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1948,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,0,0,1,2,1,8,0,0,12,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1966,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,8,4,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1969,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1972,            startIndex = array.length - 1;,12,2,0,0,0,0,4,0,0,20,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,8,2,1,1,3,0,0,0,0,15,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1975,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,6,1,0,0,0,1,6,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2000,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2003,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2009,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2012,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,2,0,1,2,1,10,0,0,14,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2045,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",2,1,0,1,2,1,8,0,0,11,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2082,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2086,            if (valueToFind == array[i]) {,2,2,1,2,5,0,6,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2090,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,10,0,0,11,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,1,2,1,8,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2123,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2125,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2126,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,8,2,1,1,4,0,8,0,0,28,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2131,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2148,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2164,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2194,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2209,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2227,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2231,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,6,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,8,2,0,1,4,0,0,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2235,        for (int i = startIndex; i >= 0; i--) {,12,1,0,1,3,0,6,2,0,23,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,4,1,1,0,0,1,0,0,0,9,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2272,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2294,            return null;,0,0,0,0,0,1,14,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2295,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,8,1,0,0,0,1,6,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2298,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2299,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,2,0,1,1,2,0,0,2,0,8,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2303,        return result;,10,1,0,0,0,1,12,0,0,24,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2317,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2318,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2321,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,2,0,1,3,6,0,12,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2340,            return null;,6,1,0,0,0,1,0,0,0,8,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,0,0,0,1,4,0,12,0,0,12,31,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2345,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2346,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2363,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2366,        final long[] result = new long[array.length];,2,0,0,2,4,0,0,2,0,5,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2369,            result[i] = (b == null ? valueForNull : b.longValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2386,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,8,0,1,1,3,0,0,0,0,12,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2390,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2392,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2407,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2408,            return null;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2410,            return EMPTY_INT_ARRAY;,8,1,0,0,0,1,0,0,0,9,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,14,1,0,2,4,1,0,0,0,17,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,0,0,1,3,6,0,2,0,0,11,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2431,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2432,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,10,1,0,2,4,1,0,0,0,12,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,4,1,1,1,2,0,4,2,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,8,1,1,3,6,0,10,2,0,26,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2452,            return null;,2,0,0,0,0,1,0,4,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2476,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2481,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,2,1,0,3,6,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2484,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2497,        if (array == null) {,6,2,0,1,3,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2498,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2499,        } else if (array.length == 0) {,6,1,0,1,4,0,0,4,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2500,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,0,0,0,2,4,0,6,0,0,6,47,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2505,            result[i] = (b == null ? valueForNull : b.shortValue());,14,2,1,3,6,0,4,0,0,26,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2507,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2519,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2520,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2521,        } else if (array.length == 0) {,4,0,1,1,4,0,4,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2522,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2524,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2525,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,8,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2526,            result[i] = Short.valueOf(array[i]);,0,0,0,3,6,0,6,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2528,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2543,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2544,            return null;,10,4,0,0,0,1,0,0,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2545,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2546,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2548,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2549,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2550,            result[i] = array[i].byteValue();,4,1,1,3,6,0,2,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2552,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2565,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2566,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2567,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2568,            return EMPTY_BYTE_ARRAY;,14,1,0,0,0,1,0,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2570,        final byte[] result = new byte[array.length];,14,2,0,2,4,1,0,0,0,18,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2571,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2572,            Byte b = array[i];,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2573,            result[i] = (b == null ? valueForNull : b.byteValue());,6,1,0,3,6,0,0,0,0,7,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2575,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2587,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2588,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2589,        } else if (array.length == 0) {,6,1,0,1,4,0,4,2,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2590,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2592,        final Byte[] result = new Byte[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2593,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,2,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2594,            result[i] = Byte.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2596,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2611,        if (array == null) {,14,4,0,1,3,0,0,0,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2612,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2613,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2614,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2616,        final double[] result = new double[array.length];,10,0,0,2,4,1,0,0,0,11,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2617,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2618,            result[i] = array[i].doubleValue();,0,0,1,3,6,0,2,0,0,11,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2620,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2633,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2634,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2635,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2636,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2638,        final double[] result = new double[array.length];,14,1,0,2,4,1,0,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2639,        for (int i = 0; i < array.length; i++) {,24,5,0,1,3,0,0,0,0,30,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2640,            Double b = array[i];,4,0,1,1,2,0,6,2,0,16,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2641,            result[i] = (b == null ? valueForNull : b.doubleValue());,4,1,1,3,6,0,4,0,0,14,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2643,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2655,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2656,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2657,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2658,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2660,        final Double[] result = new Double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2661,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2662,            result[i] = Double.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2664,        return result;,6,0,0,0,0,1,0,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2679,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2680,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2681,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2682,            return EMPTY_FLOAT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2684,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2685,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2686,            result[i] = array[i].floatValue();,4,1,1,3,6,0,2,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2688,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2701,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2702,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2703,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2704,            return EMPTY_FLOAT_ARRAY;,12,2,0,0,0,1,10,0,0,25,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2706,        final float[] result = new float[array.length];,10,0,0,2,4,1,6,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2707,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2708,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2709,            result[i] = (b == null ? valueForNull : b.floatValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2711,        return result;,4,1,1,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2723,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2724,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2725,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2726,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2728,        final Float[] result = new Float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2729,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2730,            result[i] = Float.valueOf(array[i]);,2,0,1,3,6,1,10,0,0,22,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2732,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2747,        if (array == null) {,10,2,0,1,3,0,0,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2748,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2749,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2750,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2752,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2753,        for (int i = 0; i < array.length; i++) {,18,2,0,1,3,0,0,0,0,21,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2754,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2756,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2769,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2770,            return null;,0,1,0,0,0,1,4,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2771,        } else if (array.length == 0) {,20,3,0,1,4,0,0,0,0,24,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2772,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2774,        final boolean[] result = new boolean[array.length];,4,0,0,2,4,0,0,0,0,4,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2775,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,17,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2776,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2777,            result[i] = (b == null ? valueForNull : b.booleanValue());,0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2779,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2791,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2792,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2793,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2794,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2796,        final Boolean[] result = new Boolean[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2797,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2798,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,0,0,0,3,6,0,0,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2800,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2812,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2813,            return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2815,        return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2826,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2827,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2829,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2840,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2841,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2843,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2854,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2855,            return true;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2857,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2868,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2869,            return true;,4,1,0,0,0,1,10,0,0,15,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2871,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2882,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2883,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2885,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2896,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2897,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2899,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2910,        if (array == null || array.length == 0) {,12,6,0,1,3,0,0,0,0,18,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2911,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2913,        return false;,2,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2924,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2925,            return true;,6,3,0,0,0,1,16,0,0,26,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2927,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2955,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2957,            return clone(array1);,2,0,0,1,2,1,10,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2985,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2986,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2987,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2988,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2990,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2991,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2992,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,0,1,2,0,8,0,0,18,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2993,        return joinedArray;,4,0,0,0,0,1,4,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3014,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3015,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3016,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3017,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3019,        char[] joinedArray = new char[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3020,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3021,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,0,1,2,0,8,0,0,19,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3022,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3043,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3044,            return clone(array2);,2,1,0,1,2,1,14,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3045,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3046,            return clone(array1);,4,1,0,1,2,1,0,2,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3048,        byte[] joinedArray = new byte[array1.length + array2.length];,12,1,0,2,4,0,0,0,0,13,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3049,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3050,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,0,0,1,2,0,0,0,0,2,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3051,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3072,        if (array1 == null) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3073,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3074,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3075,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3077,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,4,0,0,15,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3078,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3079,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,1,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3080,        return joinedArray;,8,2,0,0,0,1,4,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3101,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3102,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3103,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3104,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3106,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,22,0,0,33,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3107,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3108,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,16,2,0,26,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3109,        return joinedArray;,4,0,0,0,0,1,4,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3130,        if (array1 == null) {,2,0,0,1,3,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3131,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3132,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3133,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3135,        long[] joinedArray = new long[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3136,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3137,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,0,1,2,0,12,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3138,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3159,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3160,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3161,        } else if (array2 == null) {,4,2,0,1,4,0,4,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3162,            return clone(array1);,0,0,0,1,2,1,10,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3164,        float[] joinedArray = new float[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3165,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3166,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3167,        return joinedArray;,4,0,0,0,0,1,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3188,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3189,            return clone(array2);,2,0,0,1,2,1,0,0,0,2,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3190,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3191,            return clone(array1);,4,0,0,1,2,1,12,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3193,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3194,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3195,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,0,1,2,0,12,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3196,        return joinedArray;,2,1,0,0,0,1,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3225,        Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);,6,2,0,3,6,0,8,4,0,20,105,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3226,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",4,1,0,4,8,0,6,4,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3227,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,8,0,0,8,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3228,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3253,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",4,1,0,4,8,0,0,0,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3254,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,12,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3255,        return newArray;,6,0,0,0,0,1,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3280,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",8,0,0,4,8,0,4,0,0,12,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3281,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3282,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3307,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",6,0,0,4,8,0,4,0,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3308,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3309,        return newArray;,8,3,0,0,0,1,0,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3334,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",8,0,0,4,8,0,8,0,0,16,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3335,        newArray[newArray.length - 1] = element;,16,2,1,1,2,0,8,0,0,29,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3336,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3361,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3362,        newArray[newArray.length - 1] = element;,10,3,1,1,2,0,6,0,0,24,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3363,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3388,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",0,0,0,4,8,0,0,0,0,12,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3389,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3390,        return newArray;,6,1,0,0,0,1,10,0,0,17,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3415,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3416,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3417,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3442,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3443,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3444,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3457,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3458,            int arrayLength = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3459,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3460,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,10,0,0,10,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3461,            return newArray;,4,0,0,0,0,1,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3463,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3496,        Class<?> clss = null;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3497,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3498,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,6,0,0,6,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3499,        } else if (element != null) {,2,1,0,1,4,0,6,0,0,9,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3500,            clss = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3502,            return (T[]) new Object[] { null };,0,0,0,4,8,1,0,0,0,13,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3504,"        return (T[]) add(array, index, element, clss);",0,0,0,3,6,1,10,2,0,12,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3535,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",6,0,0,4,8,1,12,0,0,18,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3567,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3598,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",0,0,0,4,8,1,6,0,0,7,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3629,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3660,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0,0,0,4,8,1,0,0,0,13,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3691,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3722,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",6,0,0,4,8,1,16,0,0,22,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3753,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",0,0,0,4,8,1,0,0,0,13,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3768,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3769,            if (index != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3770,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3772,"            Object joinedArray = Array.newInstance(clss, 1);",0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3773,"            Array.set(joinedArray, 0, element);",0,0,0,1,2,0,8,0,0,8,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3774,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3776,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3777,        if (index > length || index < 0) {,6,3,0,1,3,0,4,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3778,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3780,"        Object result = Array.newInstance(clss, length + 1);",10,2,0,1,2,0,6,2,0,20,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3781,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3782,"        Array.set(result, index, element);",0,0,0,1,2,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3783,        if (index < length) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3784,"            System.arraycopy(array, index, result, index + 1, length - index);",6,2,0,1,2,0,10,0,0,18,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3786,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3819,"        return (T[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3848,"        int index = indexOf(array, element);",10,1,0,1,2,0,8,0,0,19,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3849,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3850,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3852,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3884,"        return (boolean[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3913,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3914,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3915,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3917,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3949,"        return (byte[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3978,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3979,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3980,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,3982,"        return remove(array, index);",0,0,0,1,2,1,14,0,0,15,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4014,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4043,"        int index = indexOf(array, element);",8,3,0,1,2,0,10,0,0,21,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4044,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4045,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4047,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4079,"        return (double[]) remove((Object) array, index);",4,0,0,4,8,1,4,2,0,12,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4108,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4109,        if (index == INDEX_NOT_FOUND) {,10,4,0,1,3,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4110,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4112,"        return remove(array, index);",14,4,0,1,2,1,12,0,0,31,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4144,"        return (float[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4173,"        int index = indexOf(array, element);",6,0,0,1,2,0,10,2,0,18,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4174,        if (index == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,8,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4175,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4177,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4209,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4238,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4239,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4240,            return clone(array);,2,0,0,1,2,1,8,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4242,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4274,"        return (long[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4303,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4304,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4305,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4307,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4339,"        return (short[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4368,"        int index = indexOf(array, element);",8,1,0,1,2,0,6,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4369,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4370,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4372,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4397,        int length = getLength(array);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4398,        if (index < 0 || index >= length) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4399,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4402,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",4,1,0,3,6,0,10,2,0,17,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4403,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4404,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4405,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",6,2,0,1,2,0,10,0,0,18,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,4408,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,1,6,0,0,7,44,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },2,0,0,0,1,0,0,0,0,2,1,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,4,2,0,3,6,3,6,2,0,19,40,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,4,1,0,1,3,0,6,2,0,13,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,10,1,0,1,3,0,0,0,0,11,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,5,64,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,12,0,0,16,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,2,0,1,1,2,3,0,0,0,11,36,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,0,3,0,0,0,0,12,0,0,15,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,2,1,0,1,3,0,0,0,0,3,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",0,0,0,2,4,0,0,0,0,6,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,4,0,0,2,4,0,0,4,0,8,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,0,2,4,0,0,0,0,3,54,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,4,0,0,0,0,3,0,0,0,9,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,4,1,0,0,0,3,16,4,0,31,15,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,2,1,1,3,0,4,0,0,20,40,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,2,0,0,1,3,0,0,2,0,4,47,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,10,0,0,0,0,6,14,4,0,39,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,8,0,0,10,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,4,2,0,6,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,4,0,0,5,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,4,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",4,1,0,1,2,1,4,0,0,10,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,8,2,0,1,3,0,0,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,6,0,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",6,0,0,1,2,0,0,2,0,8,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,0,0,4,9,0,0,0,0,3,72,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,2,0,0,0,0,0,6,0,0,8,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,0,2,0,4,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,4,2,0,2,6,0,4,6,0,18,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,4,0,0,0,0,4,2,2,0,12,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,541,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,6,4,0,5,11,3,10,2,0,27,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,2,0,0,0,0,0,0,0,0,3,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",14,2,0,1,2,1,6,2,0,27,29,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,1,2,1,8,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,603,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,2,1,1,1,3,0,0,0,0,11,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,605,"            newArr[i] = strip(strs[i], stripChars);",2,0,0,3,6,0,0,0,0,4,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,6,3,0,0,0,1,4,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,627,        if(input == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,628,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,630,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,637,"                Class normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,3,0,4,0,9,84,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,640,"                Class normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0,0,0,1,2,0,0,0,0,3,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,643,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",2,0,0,1,2,0,6,0,0,9,115,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,646,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,649,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,0,0,0,9,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,652,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0,0,0,2,4,0,0,0,0,6,109,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,653,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,654,            } catch(ClassNotFoundException cnfe) {,2,0,0,1,4,0,0,2,0,4,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,655,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",8,0,0,1,2,0,0,0,0,9,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,656,            } catch(NoSuchMethodException nsme) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,657,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",0,0,0,1,2,0,10,0,0,10,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,658,            } catch(NoSuchFieldException nsfe) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,659,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",8,1,0,1,2,0,10,0,0,19,93,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,660,            } catch(IllegalAccessException iae) {,2,0,0,1,4,3,2,2,0,10,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,661,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",2,0,1,1,2,0,2,2,0,15,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,662,            } catch(IllegalArgumentException iae) {,2,0,0,1,4,0,0,2,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,663,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,96,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,664,            } catch(java.lang.reflect.InvocationTargetException ite) {,0,0,0,1,4,0,0,0,0,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,665,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",0,0,0,1,2,0,0,0,0,3,97,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,666,            } catch(SecurityException se) {,4,0,0,1,4,0,0,2,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,667,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",2,0,0,1,2,0,0,0,0,2,88,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,670,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,0,0,6,107,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,697,        return str1 == null ? str2 == null : str1.equals(str2);,4,1,0,1,2,1,0,0,0,5,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,722,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,2,0,0,1,2,1,12,0,0,15,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,747,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,748,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,750,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,779,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,780,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,782,"        return str.indexOf(searchChar, startPos);",4,0,0,1,2,4,2,2,0,12,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,808,        if (str == null || searchStr == null) {,4,0,0,1,3,0,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,809,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,811,        return str.indexOf(searchStr);,6,1,0,1,2,1,0,0,0,8,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,842,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,843,            return INDEX_NOT_FOUND;,4,0,0,0,0,2,0,2,0,7,23,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,845,        if (searchStr.length() == 0) {,8,3,0,2,5,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,846,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,848,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,849,        int index = INDEX_NOT_FOUND;,4,0,0,0,0,0,0,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,851,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,852,            if (index < 0) {,6,1,0,1,3,0,0,0,0,8,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,853,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,855,            found++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,856,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,857,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,892,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,893,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,896,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,897,            return str.length();,2,0,0,1,2,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,899,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,924,        if (isEmpty(str)) {,0,0,1,2,5,0,16,0,0,18,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,925,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,927,        return str.lastIndexOf(searchChar);,0,3,1,1,2,1,0,0,0,13,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,958,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,959,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,961,"        return str.lastIndexOf(searchChar, startPos);",2,0,0,1,2,1,0,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,987,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,988,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,990,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1022,        if (str == null || searchStr == null) {,4,3,0,1,3,0,8,0,0,15,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1023,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1025,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1050,        if (isEmpty(str)) {,2,0,0,2,5,0,8,2,0,12,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1051,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1053,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1078,        if (str == null || searchStr == null) {,2,0,0,1,3,0,0,0,0,2,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1079,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1081,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1108,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1109,            return false;,6,1,0,0,0,1,4,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1111,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1112,        int max = str.length() - len;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1113,        for (int i = 0; i <= max; i++) {,14,5,0,1,3,0,8,0,0,30,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1114,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1115,                return true;,0,0,0,0,0,1,2,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1118,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1146,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1147,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1149,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1150,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1151,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,4,0,0,4,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1152,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1153,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1157,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1183,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1184,            return -1;,12,1,0,0,0,1,0,0,0,15,10,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1186,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1215,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1216,            return false;,6,1,0,0,0,1,8,0,0,15,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1218,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1219,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1220,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1221,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1222,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1226,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1257,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1258,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1260,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1288,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1289,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1291,        outer : for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,0,4,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1292,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1293,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1294,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1295,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1298,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1300,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1326,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1327,            return -1;,8,1,0,0,0,1,0,0,0,10,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1329,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1330,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1331,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1334,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1362,        if ((valid == null) || (str == null)) {,4,3,0,3,7,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1363,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1365,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1366,            return true;,2,0,0,0,0,2,0,0,0,4,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1368,        if (valid.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1369,            return false;,0,0,0,0,0,1,0,2,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1371,"        return indexOfAnyBut(str, valid) == -1;",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1397,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1398,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1400,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1428,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1429,            return true;,2,0,0,0,0,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1431,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1432,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1433,        for (int i = 0; i < strSize; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1434,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1435,            for (int j = 0; j < validSize; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1436,                if (invalidChars[j] == ch) {,6,1,1,2,5,0,0,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1437,                    return false;,2,1,0,0,0,1,0,2,0,6,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1441,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1467,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1468,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1470,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1502,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1503,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1505,        int sz = searchStrs.length;,8,1,0,0,0,0,0,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1508,        int ret = Integer.MAX_VALUE;,8,0,1,0,0,0,12,2,0,26,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1510,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1511,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1512,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1513,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1514,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1516,            tmp = str.indexOf(search);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1517,            if (tmp == -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1518,                continue;,2,0,0,0,0,0,0,2,0,4,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1521,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1522,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1526,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,8,1,0,1,2,1,0,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1555,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1556,            return -1;,2,0,0,0,0,1,0,2,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1558,        int sz = searchStrs.length;,8,0,0,0,0,0,0,2,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1559,        int ret = -1;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1560,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1561,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1562,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1563,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1564,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1566,            tmp = str.lastIndexOf(search);,2,1,0,1,2,0,8,0,0,11,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1567,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1568,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1571,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1601,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1602,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1606,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1607,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1610,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1611,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1613,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1614,            return EMPTY;,4,0,1,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1617,        return str.substring(start);,4,0,0,1,2,1,6,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1656,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1657,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1661,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1662,            end = str.length() + end; // remember end is negative,4,0,0,1,2,0,0,0,0,4,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1664,        if (start < 0) {,4,1,0,1,3,0,4,0,0,9,16,3,0.0,0,0
