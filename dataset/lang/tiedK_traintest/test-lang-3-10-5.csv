dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,2,0,1,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,0,0,0,1,2,1,2,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,5,1,0,0,4,3,0,0,0,4,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,1,0,0,1,2,0,2,0,1,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",3,0,0,1,8,2,2,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",3,0,0,1,8,2,2,0,1,6,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",3,0,0,1,8,2,2,0,1,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",3,0,0,1,8,2,2,0,1,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",3,0,0,1,8,2,2,0,1,6,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",3,0,0,1,8,2,2,0,1,6,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",2,1,0,1,6,0,5,1,0,6,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,0,2,0,5,0,0,2,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,1,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,1,0,0,1,4,0,3,0,1,5,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,1,1,0,1,4,2,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,1,0,0,1,2,0,2,0,1,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0,0,0,1,2,2,0,1,2,5,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",1,0,0,1,8,1,5,2,2,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",2,0,0,1,8,2,6,0,1,6,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",2,0,0,1,8,2,6,0,1,6,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",2,0,0,1,8,2,6,0,1,6,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",2,0,0,1,8,2,6,0,1,6,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",2,0,0,1,8,2,6,0,1,6,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",2,0,0,1,8,2,6,0,1,6,74,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",1,1,0,0,2,2,0,1,3,6,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",1,0,0,0,2,0,3,1,0,4,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",0,0,0,0,2,0,4,0,0,2,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,1,0,0,1,2,1,3,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,3,3,0,1,3,1,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",2,1,0,0,2,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,0,2,0,5,0,0,2,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",3,2,0,0,2,0,5,0,0,4,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",1,0,0,1,8,1,2,2,1,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",1,0,0,1,8,2,2,1,1,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",1,0,0,0,2,1,3,0,1,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,2,1,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",0,0,0,0,2,1,3,0,1,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,1,0,0,1,2,1,2,0,1,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,3,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",2,1,0,0,2,2,0,1,3,6,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",2,1,0,1,6,0,5,1,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,0,2,0,5,0,0,2,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,2,2,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",3,2,0,0,2,0,5,0,0,4,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,0,0,0,1,2,1,3,0,0,4,50,5,135.2,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,0,2,1,2,0,3,4,50,4,112.66667,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",3,0,0,0,2,1,0,0,1,4,29,3,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,1,2,0,0,4,36,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,1,2,0,0,4,43,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,1,2,0,0,4,37,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",5,0,0,0,2,2,0,1,1,5,108,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,2,0,0,0,0,1,0,0,1,3,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,2,0,0,0,0,1,0,0,1,3,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,2,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,1,1,0,1,3,1,0,0,0,5,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,1,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,0,2,1,3,0,0,3,51,5,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",0,0,0,2,5,1,2,0,1,5,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,1,0,0,1,2,1,2,0,1,6,30,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,1,0,0,1,3,1,0,0,0,4,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,3,0,0,4,26,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,3,0,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,3,0,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,1,0,0,1,2,2,0,1,1,6,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,3,0,0,4,25,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,3,1,0,2,5,2,2,0,1,7,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,40,6,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,1,3,0,1,2,1,2,0,0,6,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,2,0,1,2,5,72,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,1,0,0,1,4,1,0,1,0,5,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,66,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,1,0,0,1,4,1,0,1,0,5,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,2,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,3,0,0,0,0,1,0,0,0,2,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,1,0,0,0,0,1,0,0,1,3,23,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,1,0,0,0,0,1,0,0,1,3,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,1,0,0,0,0,1,0,0,1,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,1,0,0,0,0,1,0,0,1,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,1,4,1,0,0,1,7,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,2,2,0,1,3,1,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,1,7,1,0,0,2,7,53,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,2,1,0,0,0,1,0,0,0,3,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,2,1,0,1,3,1,0,0,0,5,14,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,4,1,0,1,3,1,0,0,1,6,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,4,1,1,7,1,0,0,2,6,38,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,1,2,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,1,0,0,1,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,2,0,0,0,0,1,0,0,0,2,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,1,0,0,1,6,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,1,0,0,0,0,0,0,0,2,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,1,1,1,6,2,0,0,1,6,29,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,2,1,0,1,3,1,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,0,0,0,0,0,1,0,0,1,2,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,1,0,0,0,0,0,0,0,2,2,19,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,8,2,0,0,2,6,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,1,0,0,1,3,1,0,0,0,4,13,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,1,0,0,1,3,1,0,0,1,5,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,1,0,0,0,0,0,0,0,2,2,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,1,0,0,0,0,0,0,0,2,2,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,1,8,2,0,0,2,6,48,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,1,0,0,1,3,1,0,0,1,5,18,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,0,1,2,13,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,1,0,0,0,0,0,0,0,2,2,19,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,2,2,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,1,2,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,3,1,0,1,3,1,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,1,7,1,0,0,2,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,1,1,0,0,1,1,0,0,1,5,15,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,1,0,0,0,0,1,0,0,0,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',0,2,1,0,3,1,0,0,1,5,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,1,1,0,1,3,1,0,0,0,5,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,1,0,0,0,2,19,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,0,4,6,0,0,3,4,55,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,0,4,4,0,2,3,5,65,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,0,4,6,0,0,3,4,64,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,0,4,4,0,2,3,5,71,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,0,4,6,0,0,3,4,61,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,0,4,4,0,2,3,5,68,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,0,4,6,0,0,3,4,67,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,0,4,4,0,2,3,5,74,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,0,4,4,0,2,3,5,80,2,0.00319,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,0,0,0,1,2,1,0,0,1,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,0,4,1,2,0,2,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,1,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",3,0,0,1,6,2,3,1,1,7,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,1,6,2,4,1,1,6,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",3,1,0,2,6,3,0,6,2,7,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,1,0,1,0,2,0,0,1,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",3,0,0,0,3,2,0,0,0,3,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",6,0,0,0,2,0,0,0,0,2,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,1,6,0,6,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,1,0,0,1,6,3,0,1,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,2,0,0,1,6,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,2,1,0,1,3,1,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",0,0,1,0,6,0,2,0,0,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",1,1,0,0,1,2,0,1,3,6,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,1,0,0,1,4,0,3,1,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,1,6,1,3,1,0,5,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,444,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",1,0,0,1,8,0,4,2,0,5,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,445,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,446,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,469,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,470,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,472,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,473,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,475,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,476,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,478,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,479,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,480,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,483,        long[] subarray = new long[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,484,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,485,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,508,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,509,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,511,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,512,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,514,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,515,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,517,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,518,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,519,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,522,        int[] subarray = new int[newSize];,1,0,1,0,4,3,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,523,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,524,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,547,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,548,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,550,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,551,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,553,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,554,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,556,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,557,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,558,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,561,        short[] subarray = new short[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,562,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,563,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,586,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,587,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,589,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,590,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,592,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,593,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,595,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,596,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,597,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,600,        char[] subarray = new char[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,601,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,602,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,625,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,626,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,628,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,629,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,631,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,632,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,634,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,635,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,636,            return EMPTY_BYTE_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,639,        byte[] subarray = new byte[newSize];,1,0,1,0,4,3,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,640,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,641,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,664,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,665,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,667,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,668,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,670,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,671,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,673,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,674,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,675,            return EMPTY_DOUBLE_ARRAY;,1,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,678,        double[] subarray = new double[newSize];,1,0,1,0,4,3,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,679,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,680,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,703,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,704,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,706,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,707,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,709,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,710,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,712,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,713,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,714,            return EMPTY_FLOAT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,717,        float[] subarray = new float[newSize];,1,0,1,0,4,3,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,718,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,719,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,742,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,743,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,745,        if (startIndexInclusive < 0) {,1,1,0,1,3,1,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,746,            startIndexInclusive = 0;,1,0,0,0,0,0,0,0,1,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,748,        if (endIndexExclusive > array.length) {,3,1,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,749,            endIndexExclusive = array.length;,3,0,0,0,0,0,0,0,1,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,751,        int newSize = endIndexExclusive - startIndexInclusive;,3,1,0,0,0,1,0,0,0,3,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,752,        if (newSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,753,            return EMPTY_BOOLEAN_ARRAY;,1,0,0,0,0,1,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,756,        boolean[] subarray = new boolean[newSize];,1,0,1,0,4,3,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,757,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,0,2,0,6,0,0,2,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,758,        return subarray;,1,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,775,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,778,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,780,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,793,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,796,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,798,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,811,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,814,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,816,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,829,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,832,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,834,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,847,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,850,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,852,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,865,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,868,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,870,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,883,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,886,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,888,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,901,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,904,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,906,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,919,        if ((array1 == null && array2 != null && array2.length > 0) ||,4,6,0,1,3,1,0,0,0,5,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,922,                return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,924,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,949,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,950,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,952,        return Array.getLength(array);,0,0,0,1,2,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,965,        if (array1 == null || array2 == null) {,2,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,966,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,2,0,1,2,5,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,968,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,2,10,1,7,0,0,4,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,983,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,984,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,986,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,987,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,989,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,990,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,991,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,992,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,993,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,994,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,996,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1006,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1007,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1009,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1010,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1012,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1013,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1014,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1015,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1016,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1017,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1019,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1029,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1030,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1032,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1033,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1035,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1036,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1037,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1038,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1039,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1040,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1042,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1052,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1053,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1055,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1056,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1058,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1059,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1060,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1061,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1062,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1063,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1065,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1075,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1076,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1078,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1079,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1081,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1082,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1083,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1084,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1085,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1086,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1088,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1098,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1099,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1101,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1102,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1104,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1105,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1106,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1107,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1108,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1109,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1111,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1121,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1122,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1124,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1125,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1127,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1128,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1129,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1130,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1131,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1132,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1134,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1144,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1145,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1147,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1148,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1150,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1151,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1152,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1153,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1154,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1155,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1157,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1167,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1168,            return;,0,0,0,0,0,1,0,0,1,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1170,        int i = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1171,        int j = array.length - 1;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1173,        while (j > i) {,2,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1174,            tmp = array[j];,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1175,            array[j] = array[i];,0,0,1,0,4,0,0,0,1,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1176,            array[i] = tmp;,1,0,1,0,2,0,0,0,1,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1177,            j--;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1178,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1180,    },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1198,"        return indexOf(array, objectToFind, 0);",0,0,0,0,2,1,3,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1216,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1217,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1219,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1220,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1222,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1223,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1224,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1225,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1228,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1229,            for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1230,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1231,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1235,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1249,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1267,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1268,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1270,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1271,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1272,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1273,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1275,        if (objectToFind == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1276,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1277,                if (array[i] == null) {,0,1,1,1,5,1,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1278,                    return i;,1,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1281,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,2,10,2,5,0,0,4,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1282,            for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1283,                if (objectToFind.equals(array[i])) {,0,0,1,2,7,1,2,0,0,5,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1284,                    return i;,1,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1288,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1301,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1317,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1335,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1336,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1338,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1339,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1341,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1342,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1343,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1346,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1378,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1379,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1381,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1382,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1383,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1384,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1386,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1387,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1388,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1391,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1404,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1420,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1438,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1439,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1441,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1442,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1444,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1445,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1446,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1449,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1463,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1481,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1482,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1484,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1485,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1486,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1487,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1489,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1490,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1491,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1494,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1507,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1523,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1541,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1542,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1544,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1545,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1547,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1548,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1549,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1552,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1566,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1584,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1585,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1587,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1588,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1589,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1590,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1592,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1593,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1594,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1597,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1610,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1627,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1646,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1647,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1649,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1650,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1652,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1653,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1654,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1657,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1672,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1691,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1692,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1694,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1695,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1696,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1697,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1699,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1700,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1701,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1704,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1718,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1734,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1752,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1753,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1755,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1756,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1758,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1759,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1760,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1763,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1777,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1795,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1796,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1798,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1799,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1800,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1801,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1803,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1804,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1805,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1808,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1821,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1837,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1854,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,0,2,1,4,0,1,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1872,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1873,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1875,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1876,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1878,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1879,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1880,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1883,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1904,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1905,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1907,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1908,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1910,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1911,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1912,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1913,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1914,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1917,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1931,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1948,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",2,0,0,0,2,1,4,0,1,5,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1966,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1967,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1969,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1970,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1971,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1972,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1974,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1975,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1976,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,1979,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2000,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2001,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2003,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2004,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2005,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2006,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2008,        double min = valueToFind - tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2009,        double max = valueToFind + tolerance;,3,1,0,0,0,1,0,0,0,3,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2010,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2011,            if (array[i] >= min && array[i] <= max) {,2,3,1,1,7,1,0,0,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2012,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2015,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2028,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2045,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",1,1,0,0,2,1,4,0,1,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2061,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2079,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2080,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2082,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2083,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2085,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2086,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2087,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2090,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2104,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2122,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2123,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2125,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2126,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2127,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2128,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2130,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2131,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2132,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2135,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2148,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2164,"        return indexOf(array, valueToFind, 0);",0,0,0,0,2,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2183,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2184,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2186,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2187,            startIndex = 0;,1,0,0,0,0,0,0,0,1,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2189,        for (int i = startIndex; i < array.length; i++) {,6,1,0,1,3,2,0,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2190,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2191,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2194,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2209,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,0,2,1,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2227,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,1,3,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2228,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2230,        if (startIndex < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2231,            return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2232,        } else if (startIndex >= array.length) {,3,1,0,1,4,2,0,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2233,            startIndex = array.length - 1;,3,1,0,0,0,0,0,0,1,3,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2235,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,2,0,0,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2236,            if (valueToFind == array[i]) {,1,1,1,1,5,1,0,0,0,6,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2237,                return i;,1,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2240,        return INDEX_NOT_FOUND;,1,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2253,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",1,1,0,0,2,1,3,0,1,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2271,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2272,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2273,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2274,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2276,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2277,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2278,            result[i] = array[i].charValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2280,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2293,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2294,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2295,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2296,            return EMPTY_CHAR_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2298,        final char[] result = new char[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2299,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2300,            Character b = array[i];,1,0,1,0,2,0,0,1,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2301,            result[i] = (b == null ? valueForNull : b.charValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2303,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2315,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2316,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2317,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2318,            return EMPTY_CHARACTER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2320,        final Character[] result = new Character[array.length];,3,0,0,0,4,2,0,2,1,5,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2321,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2322,            result[i] = Character.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2324,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2339,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2340,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2341,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2342,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2344,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2345,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2346,            result[i] = array[i].longValue();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2348,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2361,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2362,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2363,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2364,            return EMPTY_LONG_ARRAY;,1,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2366,        final long[] result = new long[array.length];,3,0,0,0,4,4,0,0,1,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2367,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2368,            Long b = array[i];,1,0,1,0,2,0,0,1,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2369,            result[i] = (b == null ? valueForNull : b.longValue());,2,1,1,2,6,0,2,0,1,7,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2371,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2383,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2384,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2385,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2386,            return EMPTY_LONG_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2388,        final Long[] result = new Long[array.length];,3,0,0,0,4,2,0,2,1,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2389,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2390,            result[i] = Long.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2392,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2407,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2408,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2409,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2410,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2412,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2413,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2414,            result[i] = array[i].intValue();,0,0,1,1,6,0,1,0,1,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2416,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2429,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2430,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2431,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2432,            return EMPTY_INT_ARRAY;,1,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2434,        final int[] result = new int[array.length];,3,0,0,0,4,4,0,0,1,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2435,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2436,            Integer b = array[i];,1,0,1,0,2,0,0,1,0,4,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2437,            result[i] = (b == null ? valueForNull : b.intValue());,2,1,1,2,6,0,2,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2439,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2451,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2452,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2453,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2454,            return EMPTY_INTEGER_OBJECT_ARRAY;,1,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2456,        final Integer[] result = new Integer[array.length];,3,0,0,0,4,2,0,2,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2457,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2458,            result[i] = Integer.valueOf(array[i]);,0,0,1,1,6,0,2,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2460,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2475,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2476,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2477,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2478,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2480,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2481,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2482,            result[i] = array[i].shortValue();,0,0,1,1,6,0,1,0,1,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2484,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2497,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2498,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2499,        } else if (array.length == 0) {,2,1,0,1,4,2,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2500,            return EMPTY_SHORT_ARRAY;,1,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2502,        final short[] result = new short[array.length];,3,0,0,0,4,4,0,0,1,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2503,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2504,            Short b = array[i];,1,0,1,0,2,0,0,1,0,4,19,6,0.0,0,0
