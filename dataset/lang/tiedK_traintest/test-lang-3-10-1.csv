dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2934,                start = ++i;,8,0,0,0,0,0,0,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2935,                continue;,2,0,0,0,0,0,0,0,0,3,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2938,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2939,            i++;,2,0,0,0,0,0,8,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2941,        if (match || preserveAllTokens && lastMatch) {,12,3,0,1,3,0,0,0,0,17,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2942,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2944,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",2,0,0,1,2,1,6,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3021,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3043,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3044,            return null;,4,0,0,0,0,1,0,0,0,5,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3047,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3048,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,12,1,0,0,0,0,4,2,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3052,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3053,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3054,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,0,0,0,1,3,0,4,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3057,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,10,1,0,3,7,0,0,0,0,12,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3059,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3060,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3061,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3062,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,14,3,0,0,0,0,6,0,0,25,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3065,"                        list.add(str.substring(start, i));",2,0,0,2,4,0,12,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3066,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3069,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3071,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,16,1,0,0,0,0,4,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,4,1,1,2,6,0,4,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3077,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3078,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3079,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,4,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,0,1,0,0,0,0,8,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3082,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3083,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3087,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3089,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3090,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3094,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3096,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3098,            while (i < len) {,2,0,0,1,3,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3099,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3100,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3103,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3104,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3106,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3110,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,6,0,0,0,0,0,0,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3114,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,6,2,0,1,3,0,0,0,0,8,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3118,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3120,        return list.toArray(new String[list.size()]);,6,0,0,3,6,1,8,2,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3143,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3171,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3189,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3190,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3192,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,2,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3195,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3196,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3197,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3198,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3199,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,14,2,0,1,3,0,0,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3202,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3204,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,8,4,0,0,0,0,0,0,0,12,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3207,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3208,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3210,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3211,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,10,2,0,23,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,0,1,0,0,0,0,4,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,10,4,0,0,0,0,2,4,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,4,3,0,3,6,1,8,2,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3271,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3305,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3306,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,8,1,1,0,0,0,0,0,0,11,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3309,        if (noOfItems <= 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,2,0,0,0,0,1,0,8,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3313,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3315,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,8,1,0,1,3,0,0,2,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3317,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3319,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3320,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3323,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3350,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3351,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3353,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3384,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3385,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,12,2,0,1,3,1,4,4,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3393,        int noOfItems = endIndex - startIndex;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,0,0,0,1,3,0,10,0,0,10,21,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3395,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3398,        StringBuilder buf = new StringBuilder(noOfItems * 16);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3400,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,4,1,0,1,3,0,12,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3405,                buf.append(array[i]);,2,0,0,2,4,0,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3408,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3428,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3429,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3431,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,2,0,0,0,0,1,6,0,0,8,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,2,0,0,1,2,0,20,2,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3435,        if (!iterator.hasNext()) {,0,0,0,2,5,0,8,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3436,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3441,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3445,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3446,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3447,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3449,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3451,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3453,        return buf.toString();,0,0,0,1,2,1,4,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,0,0,0,1,3,0,4,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3473,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3475,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3476,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3478,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3479,        if (!iterator.hasNext()) {,0,0,0,2,5,0,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3480,            return ObjectUtils.toString(first);,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",12,2,0,1,2,0,0,0,0,15,85,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3485,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3486,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3489,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,0,0,0,1,2,0,14,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3493,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3494,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3495,                buf.append(obj);,0,0,0,1,2,0,14,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3497,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3498,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,4,2,0,1,3,0,0,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3517,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,8,4,0,1,3,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,5,2,0,0,0,1,8,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3540,"        return join(iterable.iterator(), separator);",2,0,0,2,4,1,12,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3560,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3561,            return str;,10,1,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3563,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3565,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3566,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3567,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3568,                chs[count++] = str.charAt(i);,6,3,1,2,4,0,6,0,0,27,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3572,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3605,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3607,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,2,0,0,2,4,1,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3640,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3642,"        if (startsWithIgnoreCase(str, remove)) {",4,0,0,2,5,0,6,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,2,1,1,2,4,1,8,0,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3673,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3676,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3677,"            return str.substring(0, str.length() - remove.length());",12,2,1,3,6,1,12,0,0,34,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3679,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3710,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",4,3,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3715,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3742,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,1,14,0,0,22,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3743,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3745,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3768,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,2,2,0,3,7,0,10,0,0,14,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3769,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3771,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3772,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3773,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3774,            if (chars[i] != remove) {,6,2,1,2,5,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3775,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3778,"        return new String(chars, 0, pos);",4,3,0,1,2,1,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3807,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3834,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3866,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3867,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3871,        if (end == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3874,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3875,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,8,1,0,0,0,1,0,8,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3877,        increase *= max < 0 ? 16 : max > 64 ? 64 : max;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3878,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3880,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,0,0,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,6,1,1,0,0,0,2,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3882,            if (--max == 0) {,2,0,1,1,3,0,4,0,0,10,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3883,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",16,1,0,1,2,1,8,4,0,32,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3887,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3888,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3931,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,0,0,0,9,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3982,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",2,0,0,1,2,1,10,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,6,8,0,1,3,0,8,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,2,2,0,0,0,1,6,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4045,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4046,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +",2,1,0,0,1,0,0,2,0,6,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4050,        int searchLength = searchList.length;,0,0,0,0,0,0,8,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,6,1,0,0,0,0,0,0,0,7,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4054,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,4,1,1,2,4,0,0,0,0,7,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,4,1,0,0,0,0,0,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4066,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4071,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4072,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4074,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4076,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,4,1,1,1,3,0,0,0,0,10,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4080,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,12,3,0,1,3,1,4,4,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4083,                    textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4092,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4098,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4101,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4102,            if (searchList[i] == null || replacementList[i] == null) {,0,3,1,3,7,0,0,0,0,11,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4103,                continue;,0,0,0,0,0,0,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4106,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4107,                increase += 3 * greater; // assume 3 matches,6,1,0,0,0,0,6,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4111,"        increase = Math.min(increase, text.length() / 5);",10,1,0,2,4,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4115,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4118,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,2,0,1,2,4,0,10,2,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4126,            tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,2,4,1,2,5,0,0,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4132,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4134,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4137,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4138,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4141,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,10,2,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4149,        int textLength = text.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,2,0,0,1,3,0,0,0,0,3,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4151,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,4,0,0,1,2,0,12,2,0,18,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4154,        if (!repeat) {,2,0,0,1,3,0,4,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4155,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",4,1,0,1,2,2,14,0,0,20,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4184,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4185,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4187,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4227,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,4,0,0,4,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4228,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,6,2,0,1,3,0,2,0,0,10,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4231,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,8,1,0,0,0,0,0,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4234,        int replaceCharsLength = replaceChars.length();,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4236,        StringBuilder buf = new StringBuilder(strLength);,8,1,0,1,2,0,0,4,0,13,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4237,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,6,1,0,1,2,0,6,4,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4239,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,1,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4241,                modified = true;,12,1,0,0,0,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4242,                if (index < replaceCharsLength) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4243,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4246,                buf.append(ch);,2,0,0,1,2,0,6,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4249,        if (modified) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4250,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4252,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,2,0,0,1,3,0,4,2,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,10,1,0,0,0,1,0,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4290,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4293,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4294,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,10,1,0,0,0,0,0,0,0,14,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,2,0,0,1,3,0,0,0,0,2,14,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,6,1,0,0,0,0,0,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4303,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4304,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4306,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4307,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,8,1,0,0,0,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4309,            end = temp;,0,0,0,0,0,0,6,0,0,6,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4311,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4346,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4347,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4350,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4352,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4358,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4359,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4361,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,6,0,0,0,0,0,0,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4366,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4368,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",8,0,1,1,2,1,18,0,0,35,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4430,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4432,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4433,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4434,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4436,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4437,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4438,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4439,        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4442,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4471,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4472,            return null;,0,0,0,0,0,1,10,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4474,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,10,0,0,0,0,1,8,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,14,1,0,1,2,0,12,2,0,29,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4478,        if (repeat == 1 || inputLength == 0) {,2,0,0,1,3,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4481,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4482,"            return repeat(str.charAt(0), repeat);",2,0,0,2,4,2,8,8,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4486,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4488,"                return repeat(str.charAt(0), repeat);",0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4490,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,1,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4491,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4492,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4493,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4494,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4495,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,6,1,1,1,2,1,0,2,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,4,0,0,1,2,0,0,4,0,8,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4500,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4503,                return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4528,        if(str == null || separator == null) {,6,3,0,1,3,0,0,2,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4529,"            return repeat(str, repeat);",8,1,0,1,2,1,18,2,0,29,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",10,1,0,1,2,0,4,2,0,18,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4533,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4560,        char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,2,0,1,1,2,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,2,1,0,1,2,1,2,2,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4587,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,16,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4612,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,4,2,1,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4617,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4622,"        return str.concat(repeat(padChar, pads));",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4649,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4652,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4653,"            padStr = "" "";",0,0,0,0,0,0,6,0,0,6,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4655,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4656,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4658,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4661,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4662,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4665,        if (pads == padLen) {,12,1,0,1,3,0,8,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4666,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4668,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,6,2,0,2,4,0,0,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,8,1,0,2,4,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4672,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,2,0,0,2,4,0,0,4,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4675,            return str.concat(new String(padding));,2,0,0,2,4,1,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4699,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4725,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4727,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4728,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4731,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4732,"            return leftPad(str, size, String.valueOf(padChar));",8,0,0,2,4,2,12,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4734,"        return repeat(padChar, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4761,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4762,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4764,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4767,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4769,        int pads = size - strLen;,6,2,0,0,0,0,12,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4770,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4771,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4773,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",2,0,1,2,4,1,10,0,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4777,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4778,            return padStr.concat(str);,2,0,0,1,2,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4779,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4780,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4783,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4784,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,8,0,0,18,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4785,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4787,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4803,        return cs == null ? 0 : cs.length();,8,4,0,1,2,1,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4832,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,10,6,0,1,3,0,0,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4861,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4863,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4864,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4865,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4866,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4869,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4900,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,12,4,0,0,0,1,0,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4903,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4904,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4906,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4908,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4909,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",8,3,0,1,2,0,6,0,0,18,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4912,"        str = rightPad(str, size, padStr);",2,0,0,1,2,0,8,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,4,1,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4938,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4939,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4941,        return str.toUpperCase();,0,0,1,1,2,1,8,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4962,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4964,        return str.toUpperCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4988,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,6,3,0,1,2,1,0,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5010,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5011,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5013,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5039,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),4,1,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5069,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5070,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5072,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5106,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,2,0,1,1,2,0,0,0,0,6,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5114,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,2,4,0,6,0,0,11,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,2,0,0,2,4,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,2,4,0,6,0,0,11,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5122,        return new String(buffer);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5148,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5152,        int idx = 0;,6,1,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5153,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {",10,2,0,3,7,0,10,0,0,23,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5154,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5155,            idx += sub.length();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,2,0,0,0,0,1,6,2,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5186,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,4,0,0,3,7,0,0,0,0,5,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5189,                return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5192,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5219,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,2,1,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,4,9,0,16,0,0,21,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5224,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5254,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5257,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5258,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,2,0,3,7,0,18,0,0,21,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5259,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5262,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5288,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5289,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5291,        int sz = cs.length();,4,0,0,1,2,0,12,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,4,1,0,4,9,0,10,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5294,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5297,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5327,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5328,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5330,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5331,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5332,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5333,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5364,            return false;,2,1,1,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5368,            if (Character.isDigit(cs.charAt(i)) == false) {,2,3,1,3,7,0,0,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5369,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5372,        return true;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,2,0,0,1,3,0,4,0,0,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5401,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,4,1,0,1,2,0,24,0,0,29,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,0,0,4,9,0,0,0,0,13,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5406,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5409,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,4,1,0,1,3,0,0,2,0,9,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,10,1,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5436,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5437,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,4,1,0,3,7,0,4,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5439,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5442,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,6,2,0,2,5,0,4,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5466,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5468,        int sz = cs.length();,4,1,0,1,2,0,14,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5469,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5470,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5471,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5474,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5497,        if (cs == null || isEmpty(cs)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5498,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5500,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5501,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5503,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5506,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,10,1,1,0,0,1,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5549,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5593,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5616,        return new StringBuilder(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,6,2,0,1,3,0,10,0,0,19,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,2,0,0,0,0,1,10,4,0,16,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5645,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,12,2,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5646,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5684,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5723,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,2,0,0,0,0,1,0,2,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5729,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,10,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5730,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,4,0,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5735,        if (str.length() - offset < maxWidth - 3) {,4,3,0,2,5,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5736,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",2,0,0,0,0,1,0,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5739,        if (offset <= 4) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5740,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5743,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5745,        if (offset + maxWidth - 3 < str.length()) {,4,3,0,2,5,0,10,2,0,19,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5746,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,4,3,0,3,6,1,8,0,0,15,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,3,7,0,16,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5782,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5785,        if (length >= str.length() || length < middle.length()+2) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,4,1,0,1,2,0,4,0,0,9,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5790,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,0,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5791,        int endOffset = str.length()-targetSting/2;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5794,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5795,        builder.append(middle);,0,0,0,1,2,0,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5796,        builder.append(str.substring(endOffset));,0,0,0,2,4,0,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5798,        return builder.toString();,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5829,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5830,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5832,        if (str2 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5836,        if (at == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5837,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5839,        return str2.substring(at);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5869,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5871,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5872,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5875,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5877,                break;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5880,        if (i < cs2.length() || i < cs1.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,4,0,1,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,0,4,1,0,0,1,0,0,0,12,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5919,        if (css == null || css.length <= 1) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5920,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5922,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5923,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5924,        int arrayLen = css.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5925,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5926,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5931,        for (int i = 0; i < arrayLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5932,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5933,                anyStringNull = true;,4,0,1,0,0,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5934,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5936,                allStringsNull = false;,4,0,0,0,0,0,8,0,0,12,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5937,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5938,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",2,1,1,3,6,0,22,0,0,31,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5943,        if (allStringsNull || longestStrLen == 0 && !anyStringNull) {,0,0,0,1,3,0,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5944,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5948,        if (shortestStrLen == 0) {,4,2,0,1,3,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5949,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5953,        int firstDiff = -1;,2,0,0,0,0,0,4,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5954,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0,0,0,1,3,0,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5955,            char comparisonChar = css[0].charAt(stringPos);,0,1,0,2,4,0,8,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5956,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5957,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,4,1,1,3,7,0,12,0,0,22,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5958,                    firstDiff = stringPos;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5959,                    break;,4,1,0,0,0,0,0,0,0,5,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5962,            if (firstDiff != -1) {,2,1,0,1,3,0,6,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5963,                break;,12,2,0,0,0,0,4,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5967,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5971,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5973,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6010,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6011,            return EMPTY;,2,0,0,0,0,1,14,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6013,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6014,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6016,            if (strs[0] == null) {,6,2,1,2,5,0,4,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6017,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6019,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6020,        } else if (smallestIndexOfDiff == 0) {,4,1,0,1,4,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6022,            return EMPTY;,0,0,0,0,0,1,10,0,0,10,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6025,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6068,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6069,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6089,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6090,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6092,        if (n == 0) {,2,0,0,1,3,0,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6093,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6094,        } else if (m == 0) {,2,1,0,1,4,0,10,0,0,13,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6095,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6098,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6100,            CharSequence tmp = s;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6101,            s = t;,10,1,1,0,0,0,0,0,0,19,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6102,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6103,            n = m;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6104,            m = t.length();,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6107,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6108,"        int d[] = new int[n + 1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6119,        for (i = 0; i <= n; i++) {,0,0,0,1,3,0,0,0,0,1,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6120,            p[i] = i;,2,1,0,1,2,0,6,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6123,        for (j = 1; j <= m; j++) {,2,1,0,1,3,0,0,0,0,3,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6124,            t_j = t.charAt(j - 1);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6125,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6127,            for (i = 1; i <= n; i++) {,8,1,0,1,3,0,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6128,                cost = s.charAt(i - 1) == t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6130,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",6,5,1,6,12,0,8,0,0,32,67,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6134,            _d = p;,6,0,0,0,0,0,0,0,0,7,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6135,            p = d;,10,0,0,0,0,0,4,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6136,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6141,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6177,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6178,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6180,        if (threshold < 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6181,"            throw new IllegalArgumentException(""Threshold must not be negative"");",0,0,0,1,2,0,0,2,0,3,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6228,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6229,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6232,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6233,            return m <= threshold ? m : -1;,6,1,0,0,0,1,0,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6234,        } else if (m == 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6235,            return n <= threshold ? n : -1;,8,1,0,0,0,1,0,0,0,11,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6238,        if (n > m) {,8,3,0,1,3,0,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6240,            CharSequence tmp = s;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6241,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6242,            t = tmp;,6,0,0,0,0,0,0,0,0,7,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6243,            n = m;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6244,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6247,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally",10,5,0,2,4,0,4,2,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6248,"        int d[] = new int[n + 1]; // cost array, horizontally",16,2,0,2,4,0,0,0,0,20,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6252,"        int boundary = Math.min(n, threshold) + 1;",2,1,0,1,2,0,8,0,0,11,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6253,        for (int i = 0; i < boundary; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6254,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6258,"        Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6259,"        Arrays.fill(d, Integer.MAX_VALUE);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6262,        for (int j = 1; j <= m; j++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6263,            char t_j = t.charAt(j - 1); // jth character of t,8,3,1,1,2,0,8,0,0,27,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6264,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6267,"            int min = Math.max(1, j - threshold);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6268,"            int max = Math.min(n, j + threshold);",6,1,0,1,2,0,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6271,            if (min > max) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6272,                return -1;,10,1,0,0,0,1,0,0,0,13,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6276,            if (min > 1) {,2,1,0,1,3,0,6,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6277,                d[min - 1] = Integer.MAX_VALUE;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6281,            for (int i = min; i <= max; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6282,                if (s.charAt(i - 1) == t_j) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6284,                    d[i] = p[i - 1];,0,0,0,2,4,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6287,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",4,3,1,6,12,0,8,0,0,28,56,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6292,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6293,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6294,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6299,        if (p[n] <= threshold) {,2,1,1,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6300,            return p[n];,14,1,1,1,2,2,16,2,0,44,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6302,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6332,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6358,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,8,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6373,        if (str == null || prefix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6374,            return str == null && prefix == null;,4,3,0,0,0,1,0,0,0,7,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6376,        if (prefix.length() > str.length()) {,2,1,0,3,7,0,16,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6377,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6379,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,14,0,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6402,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6403,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6405,        for (CharSequence searchString : searchStrings) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6406,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6407,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6410,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6440,"        return endsWith(str, suffix, false);",4,3,0,1,2,1,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6467,"        return endsWith(str, suffix, true);",6,3,0,1,2,1,8,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6482,        if (str == null || suffix == null) {,6,4,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6483,            return str == null && suffix == null;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6485,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6486,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6488,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6489,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,16,0,0,16,95,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6534,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6535,            return null;,14,1,1,0,0,1,4,0,0,25,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6537,"        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll("" "");",0,0,0,3,6,1,10,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6559,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,2,0,0,3,7,0,0,0,0,2,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6560,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6562,        for (CharSequence searchString : searchStrings) {,4,0,0,1,3,0,0,2,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6563,"            if (StringUtils.endsWith(string, searchString)) {",8,1,0,2,5,0,8,0,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6564,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6567,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6585,"        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);",8,1,0,2,4,1,0,4,0,15,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,6,1,0,0,0,1,0,0,0,7,22,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,        if (type instanceof Class<?>) {,4,1,0,1,3,0,0,2,0,8,31,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);",0,0,0,2,4,1,0,0,0,7,69,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,        if (type instanceof ParameterizedType) {,0,0,0,1,3,0,0,0,0,4,40,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);",0,0,0,2,4,1,0,0,0,7,78,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {",0,0,0,2,5,0,0,0,0,7,34,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,        if (cls.isPrimitive()) {,0,0,0,2,5,0,4,0,0,4,24,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",0,0,0,1,2,0,0,0,0,3,112,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,2,2,0,3,7,0,10,0,0,14,64,4,1.33333,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,11,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",6,1,0,1,2,0,6,2,0,15,78,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,0,2,0,7,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,1,0,1,2,3,2,2,0,13,92,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,2,0,0,0,0,3,0,2,0,7,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",0,0,0,1,2,0,0,0,0,3,74,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,1,0,1,2,6,4,4,0,22,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,4,0,14,76,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,108,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,16,2,0,24,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",0,0,0,1,2,0,0,0,0,3,66,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",4,0,0,1,2,3,2,2,0,12,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,4,0,0,1,2,3,8,2,0,18,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,8,2,0,16,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",6,0,0,1,2,3,2,4,0,16,78,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,0,0,1,2,3,2,0,0,10,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,3,2,0,0,8,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",2,1,0,2,4,3,4,0,0,12,97,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,4,0,0,5,72,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,12,1,0,0,0,3,0,0,0,16,111,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",0,0,0,1,2,0,0,0,0,3,110,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",4,1,0,1,2,3,2,0,0,12,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",0,0,0,1,2,0,0,0,0,3,96,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",2,0,0,1,2,3,4,0,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,1,2,1,6,0,0,6,69,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",2,0,0,1,2,1,10,0,0,12,69,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,            return System.getProperty(property);,0,0,0,1,2,1,6,0,0,6,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,6,0,0,6,67,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,0,0,0,4,41,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,2,0,1,2,4,1,0,4,0,8,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },6,1,0,0,1,0,0,0,0,7,1,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",4,0,0,1,2,0,0,0,0,5,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,4,0,0,8,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",4,0,0,1,2,0,0,0,0,6,22,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,public enum JavaVersion {,2,0,0,0,1,1,0,0,0,3,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,8,2,0,0,0,1,0,0,0,10,43,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",6,0,0,2,5,0,4,0,0,12,24,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {",2,0,0,2,6,0,8,0,0,12,31,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,            return JAVA_1_7;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,0,0,0,0,0,0,0,0,0,0,56,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,0,0,0,0,0,0,0,0,0,0,62,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,    public static final CharSequenceTranslator ESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,8,0,0,0,0,6,0,4,0,18,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,0,0,0,0,0,0,0,0,0,0,58,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,6,0,0,0,0,3,0,2,0,11,59,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,57,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,0,0,0,1,2,0,0,0,0,3,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,        return ESCAPE_HTML4.translate(input);,0,0,0,1,2,1,0,0,0,4,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,        if (input == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,8,6,0,2,4,0,4,4,0,22,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);",0,0,0,1,2,0,12,0,0,12,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,            return writer.toString();,0,0,0,1,2,1,8,0,0,8,25,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
