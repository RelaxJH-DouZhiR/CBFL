dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,1,0,0,1,2,1,2,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,3,0,0,0,0,1,0,0,0,2,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,4,1,0,1,3,2,0,0,1,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,1,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,2,3,0,1,3,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,1,0,0,1,2,0,3,0,1,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,4,1,0,1,2,1,0,0,1,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,2,3,0,2,7,1,0,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,1,0,0,0,0,1,0,0,1,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,1,0,1,0,2,0,0,1,0,4,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,1,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,1,0,0,1,2,0,3,0,1,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,2,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,1,1,0,2,5,1,2,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,2,1,0,1,2,0,2,0,1,6,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,2,1,0,1,2,0,2,0,1,6,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,1,1,0,2,5,1,2,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,1,0,0,1,2,0,2,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",0,0,0,0,2,1,4,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,1,1,0,2,5,1,2,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,2,3,0,2,5,1,2,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,2,0,2,7,1,2,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",2,1,0,0,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,0,1,0,2,5,1,2,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,1,0,0,1,2,1,3,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,2,7,1,4,0,2,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,0,2,1,3,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,1,0,0,1,2,1,3,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,4,0,3,9,1,4,0,1,7,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,1,1,0,2,4,1,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,3,5,0,1,3,1,0,0,0,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,1,0,0,1,2,1,3,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,1,1,0,1,3,1,0,0,1,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",2,1,0,1,4,1,5,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,1,1,0,1,3,1,0,0,1,6,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",1,1,0,1,4,1,5,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,1,3,0,2,7,1,4,0,2,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,1,0,0,1,2,1,2,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,1,0,0,1,2,1,2,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,3,2,0,2,5,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",1,0,0,0,2,1,4,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,2,0,0,0,0,0,0,0,1,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",1,0,0,0,2,1,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,0,4,0,6,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,3,1,0,0,0,0,0,0,1,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,0,0,0,2,5,1,2,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,2,10,2,4,2,0,5,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",0,0,0,0,2,1,4,0,1,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,0,2,1,4,0,1,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,0,2,1,3,0,2,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,0,2,1,3,0,3,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,0,2,1,3,0,3,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,0,2,1,4,0,2,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,0,2,1,3,0,3,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,0,2,1,4,0,2,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,1,2,0,3,9,1,3,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,0,2,1,4,0,1,4,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,1,0,0,1,2,1,2,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,1,0,0,1,2,1,0,2,1,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,1,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",1,0,0,0,2,0,4,0,1,4,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,1,1,0,1,3,1,0,0,1,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,2,1,0,1,3,1,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,2,0,0,0,0,0,0,0,1,2,10,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",0,0,0,0,4,0,6,0,0,2,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,1,0,0,1,3,1,0,0,0,4,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,1,0,0,0,0,0,0,0,1,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,2,1,0,1,3,1,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,1,2,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,3,0,0,3,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,3,1,0,0,0,0,0,0,1,3,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,0,0,0,2,4,0,5,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,2,10,2,4,2,0,5,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,0,2,1,2,0,3,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,0,2,1,3,0,2,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,1,1,0,2,5,1,3,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,1,0,0,0,0,0,0,0,2,2,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,2,0,0,0,0,0,0,0,2,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,1,0,0,0,0,0,0,0,1,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,0,2,1,3,0,3,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,0,2,1,4,0,2,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,1,0,0,0,0,1,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",2,0,0,0,0,1,0,0,0,2,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,1,0,0,0,0,0,0,0,2,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,1,0,0,0,0,0,0,0,1,2,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,2,2,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,1,0,0,1,2,1,2,0,0,5,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,1,1,0,2,5,1,3,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,2,1,0,1,3,1,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,1,5,0,0,5,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,2,1,0,1,3,1,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,1,0,0,0,0,0,0,0,2,2,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,2,1,0,1,3,1,0,0,1,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,2,0,0,0,0,0,0,0,1,2,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,1,0,0,0,0,0,0,0,2,2,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,2,0,0,0,0,0,0,0,2,2,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,1,0,0,0,0,0,0,0,2,2,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,1,0,0,0,0,0,0,0,2,2,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,1,0,0,0,0,0,0,0,1,2,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,3,2,0,2,5,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,0,4,0,6,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,0,2,1,2,0,2,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,0,2,1,2,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,1,0,0,1,2,1,0,2,1,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,1,0,1,1,4,1,2,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,6,2,0,1,3,2,0,0,1,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,1,0,1,1,4,1,2,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,2,1,0,1,3,1,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,7,4,0,1,3,1,0,0,0,5,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,2,1,0,0,0,1,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,2,1,0,1,3,1,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",4,1,0,0,4,1,2,1,1,7,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,2,0,0,0,0,0,0,0,1,2,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",4,1,0,0,4,1,2,1,1,7,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,2,0,0,0,0,0,0,0,1,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,2,0,0,0,0,0,0,0,1,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",5,1,0,0,4,1,2,1,1,7,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,2,10,2,4,2,0,5,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,0,2,1,2,0,1,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,0,2,0,1,7,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",2,0,0,0,2,1,3,0,1,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,1,1,0,1,3,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,2,0,0,0,0,0,0,0,1,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,3,1,0,1,2,1,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),1,2,1,2,11,0,2,0,1,7,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,1,0,2,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,2,1,0,1,3,1,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,1,5,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,0,0,1,1,4,0,2,0,0,4,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,1,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,0,0,2,5,1,2,0,1,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,3,0,0,4,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",1,0,0,1,2,2,0,2,1,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,1,2,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,1,1,0,1,3,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,0,0,0,1,2,0,3,0,0,3,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,1,0,0,1,2,0,2,1,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,3,0,0,3,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,1,1,0,1,3,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,1,4,1,4,0,1,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,0,2,1,3,0,1,4,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,1,0,1,0,4,3,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,1,0,1,1,4,0,3,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,1,3,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,4,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,0,5,1,3,0,1,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,1,6,1,6,0,0,5,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,2,7,1,4,0,2,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",0,0,0,0,2,1,4,0,2,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,2,7,1,5,0,2,6,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,1,1,1,1,5,1,0,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,1,0,1,0,4,0,0,0,2,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",2,0,0,0,2,2,0,1,1,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,0,0,0,2,1,4,0,1,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,0,2,1,4,0,2,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,2,4,0,2,7,1,4,0,2,7,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",1,0,0,0,2,1,4,0,0,4,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,1,0,0,1,2,1,2,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,2,1,0,1,2,1,2,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,3,1,0,1,2,0,0,0,1,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,4,2,0,2,4,0,0,0,1,5,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,1,1,0,1,3,1,0,0,1,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,1,6,0,8,0,0,3,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,3,1,0,0,0,0,0,0,1,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,1,1,0,1,3,1,0,0,1,6,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",1,0,0,0,2,0,4,0,1,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,5,0,0,3,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,0,2,1,4,0,2,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,4,1,0,0,0,1,0,0,0,3,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,0,2,1,5,0,2,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,2,8,0,1,3,1,2,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,1,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",2,1,0,1,2,2,0,1,3,7,92,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,3,0,0,0,0,1,0,0,0,2,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,3,0,0,0,0,1,0,0,0,2,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,2,1,0,1,3,1,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,1,0,0,1,2,0,1,2,5,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,1,0,1,0,4,3,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,1,0,0,0,0,1,0,0,1,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,1,0,1,1,4,0,2,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,1,1,0,1,3,1,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,2,1,0,0,0,0,0,0,1,3,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",1,1,0,1,4,0,5,0,1,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,1,1,0,1,3,1,0,0,1,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,5,1,0,1,3,2,0,0,1,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,0,0,1,1,4,0,2,0,0,4,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,2,1,1,1,4,0,1,0,1,7,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,1,0,0,0,0,0,0,0,2,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,4,1,0,1,3,2,0,0,1,6,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",1,0,1,0,4,0,3,0,1,5,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,2,0,0,0,0,0,0,0,1,2,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,5,1,0,1,3,2,0,0,1,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,1,0,0,1,2,0,2,1,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,1,0,0,1,3,1,0,0,1,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,1,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",1,1,0,0,2,1,5,0,1,6,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,0,2,1,4,0,0,3,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,2,7,1,4,0,2,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,2,0,0,0,0,0,0,0,1,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,1,0,0,0,0,1,0,0,1,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,1,0,0,1,2,1,2,0,0,5,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,4,1,0,1,3,2,0,0,1,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,1,0,0,1,2,1,3,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,1,0,0,1,2,1,3,0,0,5,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,1,1,0,1,3,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,1,0,0,0,0,0,0,0,2,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,2,1,0,1,3,1,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,5,0,0,3,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,3,0,0,3,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,1,0,0,1,3,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),2,3,0,2,6,2,4,1,1,8,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,1,1,0,1,3,1,0,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,2,0,0,0,0,0,0,0,1,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,1,0,0,1,2,1,2,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,1,1,0,1,3,1,0,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,2,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,2,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,2,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,0,0,0,0,1,0,0,0,2,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,2,0,0,0,0,0,0,0,1,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,0,0,0,0,0,0,0,1,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),3,4,0,2,4,2,2,1,1,8,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,1,2,0,1,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,6,3,0,1,3,1,0,0,0,5,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,3,1,0,1,4,2,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,1,2,0,2,5,1,2,0,1,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,0,0,0,2,5,1,3,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,1,0,1,6,1,6,0,0,5,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,0,0,2,1,2,0,2,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,1,1,0,2,6,0,6,1,0,6,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,0,0,0,2,5,1,3,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",0,1,0,1,6,1,6,0,0,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,1,0,0,1,2,1,3,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,1,2,0,2,7,1,4,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,1,1,0,1,4,2,0,0,1,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,3,0,0,4,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,1,1,0,2,4,1,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,1,0,0,1,2,1,3,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,1,1,0,1,3,1,0,0,1,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",1,1,0,1,4,1,4,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,2,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",1,0,0,0,2,0,3,1,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",1,1,0,0,2,1,2,0,0,5,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,1,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,1,0,0,1,2,1,3,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,3,1,0,1,3,1,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,3,2,0,2,5,1,2,0,0,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,1,0,0,0,0,0,0,0,1,2,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,1,0,0,0,0,0,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",0,0,0,0,2,1,3,0,0,3,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,3,0,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,1,0,0,1,2,1,2,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,2,3,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,1,4,1,4,0,1,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,3,1,0,0,0,1,0,0,0,3,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,1,0,0,1,3,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,4,2,0,1,3,2,0,0,1,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,1,0,1,0,2,0,0,0,1,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,1,0,0,1,2,1,2,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,1,0,1,0,4,3,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",5,3,0,0,3,2,0,0,2,5,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,1,0,1,0,2,0,0,0,1,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,2,1,1,0,2,0,0,0,1,5,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,1,0,0,1,2,2,0,1,1,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,2,0,0,1,2,1,0,2,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,4,1,0,1,3,2,0,0,1,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,3,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,2,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,1,1,0,1,3,1,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",1,1,0,1,2,2,0,1,2,7,79,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,1,0,1,0,4,4,0,0,1,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,1,0,1,0,2,0,0,0,1,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,1,0,0,1,2,2,0,1,1,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,0,4,1,5,0,1,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",0,0,0,0,4,1,5,0,0,3,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,1,0,0,2,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,1,0,1,2,1,2,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,2,1,0,1,3,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,1,4,1,6,0,1,5,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,1,4,1,5,0,1,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,1,0,0,1,2,1,2,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,1,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,1,4,1,5,0,1,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,2,1,0,1,3,1,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,3,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,2,1,0,1,4,2,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,1,4,1,5,0,0,4,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,1,0,1,0,4,3,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,1,0,0,1,4,1,2,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,4,1,0,1,3,2,0,0,1,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,2,1,1,0,4,0,0,0,1,5,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,1,0,0,1,4,2,2,1,1,7,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,1,1,0,1,2,1,2,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,0,0,2,1,3,0,2,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",3,2,0,0,2,0,3,0,2,5,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",1,0,0,0,2,0,4,0,2,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,2,3,0,1,3,1,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,0,0,0,2,5,1,2,0,1,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",1,0,0,0,0,0,0,0,2,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,1,0,0,1,2,1,2,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,3,1,0,0,0,1,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",3,2,0,0,2,0,3,0,2,5,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",1,0,0,0,2,0,4,0,2,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,1,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,0,0,0,1,2,1,3,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,2,0,1,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),1,0,0,1,2,2,0,1,1,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,0,0,0,1,2,1,2,0,1,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,2,3,0,3,7,1,2,0,1,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,2,0,0,1,2,1,0,2,1,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,2,0,0,1,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,1,0,0,1,2,0,3,0,1,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,1,0,0,1,2,0,3,0,1,5,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,2,3,0,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,1,0,0,1,2,0,3,0,1,5,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,3,0,0,3,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,0,0,0,1,2,1,2,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,0,0,0,1,2,1,3,0,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,2,7,1,4,0,2,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",1,1,0,0,7,1,4,0,2,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,1,0,0,0,0,0,0,0,1,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,1,0,0,1,2,0,2,0,1,5,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,1,5,0,1,6,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,4,13,1,8,0,2,6,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,0,0,0,0,0,1,0,0,1,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,1,0,0,1,2,1,2,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,2,0,0,1,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,1,5,0,1,6,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,0,0,1,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,3,1,0,0,0,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,2,0,0,1,2,1,3,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,1,0,0,1,6,2,2,1,1,7,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",1,0,0,0,4,0,3,1,1,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,0,2,1,3,0,1,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",1,0,0,0,4,0,3,1,1,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,3,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,1,1,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",0,0,0,0,2,1,2,0,2,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,0,2,1,3,0,1,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,0,2,1,3,0,1,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,2,0,1,2,5,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,1,1,0,2,5,1,2,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,1,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,1,0,0,1,2,0,2,0,1,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,2,2,0,1,4,0,2,0,1,6,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,1,1,0,1,3,1,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",1,2,0,0,2,1,2,0,1,6,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,2,0,1,2,5,82,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,2,3,0,3,9,1,2,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",1,2,0,1,4,1,4,0,2,7,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",1,3,0,2,6,1,4,0,1,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,1,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,1,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",1,0,0,0,2,1,3,0,1,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,1,1,0,1,3,1,0,0,1,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,0,0,0,1,2,1,3,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,2,1,0,1,3,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,2,3,0,1,3,1,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,4,3,0,2,7,1,4,0,2,7,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,2,7,1,6,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,2,3,0,2,7,1,4,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,1,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,1,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,1,0,0,0,0,1,0,0,1,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,3,0,0,0,0,1,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,4,1,0,1,3,2,0,0,1,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,1,0,0,0,0,0,0,0,2,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,1,0,0,0,0,0,0,0,1,2,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,1,0,0,0,0,0,0,0,2,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",1,0,1,1,6,0,4,0,1,6,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",1,0,1,1,6,0,4,0,1,6,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,3,3,0,2,5,1,0,0,1,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,1,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,1,1,0,1,3,1,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,1,0,0,0,0,1,0,0,1,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,4,1,0,1,3,2,0,0,1,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,1,0,1,1,4,1,2,0,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,1,0,1,3,2,0,0,1,6,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,1,1,1,2,7,1,2,0,0,7,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,2,0,0,0,0,0,0,0,1,2,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,1,1,0,1,3,1,0,0,1,6,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,3,3,0,1,3,1,0,0,1,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,1,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,1,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,3,3,0,1,3,1,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,1,0,0,1,2,1,2,0,1,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,1,1,0,1,3,1,0,0,1,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,1,1,1,5,1,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,0,0,1,0,2,1,0,0,0,3,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,1,1,0,1,4,2,0,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,1,0,0,0,0,1,0,0,0,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,0,4,1,2,0,0,4,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,2,3,0,1,3,1,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,2,0,1,2,5,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,1,0,0,1,2,1,2,0,0,5,34,5,0.0,0,0
